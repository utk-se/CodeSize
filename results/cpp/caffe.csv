File, Function, Total Width, Leading Space(s), Leading Tab(s)
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"swap_endian( uint32_t val)",63, 4, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"read_image( std :: ifstream * image_file , std :: ifstream * label_file , uint32_t index , uint32_t rows , uint32_t cols , char * pixels , char * label)",70, 0, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"convert_dataset( const char * image_filename , const char * label_filename , const char * db_filename)",77, 0, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"main( int argc , char ** argv)",81, 4, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"main( int argc , char ** argv)",76, 2, 0
repos/cpp/caffe/examples/cifar10/convert_cifar_data.cpp,"read_image( std :: ifstream * file , int * label , char * buffer)",65, 0, 0
repos/cpp/caffe/examples/cifar10/convert_cifar_data.cpp,"convert_dataset( const string & input_folder , const string & output_folder , const string & db_type)",78, 0, 0
repos/cpp/caffe/examples/cifar10/convert_cifar_data.cpp,"main( int argc , char ** argv)",81, 4, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"swap_endian( uint32_t val)",63, 4, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"convert_dataset( const char * image_filename , const char * label_filename , const char * db_path , const string & db_backend)",77, 0, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"main( int argc , char ** argv)",76, 8, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"main( int argc , char ** argv)",62, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Classifier( const string & model_file , const string & trained_file , const string & mean_file , const string & label_file)",81, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"PairCompare( const std :: pair<float,int> & lhs , const std :: pair<float,int> & rhs)",60, 24, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Argmax( const std :: vector<float> & v , int N)",81, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Classify( const cv :: Mat & img , int N)",74, 0, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::SetMean( const string & mean_file)",77, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Predict( const cv :: Mat & img)",71, 23, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::WrapInputLayer( std :: vector<cv::Mat> * input_channels)",72, 0, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Preprocess( const cv :: Mat & img , std :: vector<cv::Mat> * input_channels)",74, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"main( int argc , char ** argv)",75, 4, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"main( int argc , char ** argv)",74, 2, 0
repos/cpp/caffe/tools/upgrade_net_proto_text.cpp,"main( int argc , char ** argv)",78, 2, 0
repos/cpp/caffe/tools/upgrade_net_proto_binary.cpp,"main( int argc , char ** argv)",79, 8, 0
repos/cpp/caffe/tools/extract_features.cpp,"main( int argc , char ** argv)",60, 0, 0
repos/cpp/caffe/tools/extract_features.cpp,"feature_extraction_pipeline( int argc , char ** argv)",81, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"GetBrewFunction( const caffe :: string & name)",76, 4, 0
repos/cpp/caffe/tools/caffe.cpp,"get_gpus( vector<int> * gpus)",61, 4, 0
repos/cpp/caffe/tools/caffe.cpp,"get_phase_from_flags( caffe :: Phase default_value)",64, 0, 0
repos/cpp/caffe/tools/caffe.cpp,"get_stages_from_flags()",60, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"device_query()",46, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"GetRequestedAction( const std :: string & flag_value)",79, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"train()",80, 6, 0
repos/cpp/caffe/tools/caffe.cpp,"test()",78, 4, 0
repos/cpp/caffe/tools/caffe.cpp,"time()",78, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"main( int argc , char ** argv)",64, 4, 0
repos/cpp/caffe/tools/convert_imageset.cpp,"main( int argc , char ** argv)",81, 4, 0
repos/cpp/caffe/tools/upgrade_solver_proto_text.cpp,"main( int argc , char ** argv)",78, 2, 0
repos/cpp/caffe/tools/compute_image_mean.cpp,"main( int argc , char ** argv)",79, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::set_mode_cpu()",53, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::set_mode_gpu()",53, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::InitLog()",43, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::InitLogLevel( int level)",31, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::InitLogLevelPipe( int level , bool stderr)",48, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Log( const string & s)",28, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::set_random_seed( unsigned int seed)",74, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::CheckFile( const string & filename)",67, 6, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::CheckContiguousArray( PyArrayObject * arr , string name , int channels , int height , int width)",70, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_Init( string network_file , int phase , const int level , const bp :: object & stages , const bp :: object & weights)",70, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_Init_Load( string param_file , string pretrained_param_file , int phase)",78, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_Save( const Net<Dtype> & net , string filename)",56, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_SaveHDF5( const Net<Dtype> & net , string filename)",60, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_LoadHDF5( Net<Dtype> * net , string filename)",54, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_SetInputArrays( Net<Dtype> * net , bp :: object data_obj , bp :: object labels_obj)",76, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::GetSolverFromFile( const string & filename)",59, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NdarrayConverterGenerator::apply<Dtype*>::type::operator ( )( Dtype * data) const",81, 6, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NdarrayConverterGenerator::apply<Dtype*>::type::get_pytype()",39, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NdarrayCallPolicies::postcall( PyObject * pyargs , PyObject * result)",78, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Blob_Reshape( bp :: tuple args , bp :: dict kwargs)",64, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::BlobVec_add_blob( bp :: tuple args , bp :: dict kwargs)",69, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::SolverCallback::SolverCallback( bp :: object on_start , bp :: object on_gradients_ready)",71, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::SolverCallback::on_gradients_ready()",38, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::SolverCallback::on_start()",28, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Solver_add_callback( Solver<Dtype> * solver , bp :: object on_start , bp :: object on_gradients_ready)",81, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Solver_add_nccl( Solver<Dtype> * solver , NCCL<Dtype> * nccl)",43, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::share_weights( Solver<Dtype> * solver , Net<Dtype> * net)",61, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NetCallback::NetCallback( bp :: object run)",54, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NetCallback::run( int layer)",32, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_before_forward( Net<Dtype> * net , bp :: object run)",59, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_after_forward( Net<Dtype> * net , bp :: object run)",58, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_before_backward( Net<Dtype> * net , bp :: object run)",60, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_after_backward( Net<Dtype> * net , bp :: object run)",59, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_add_nccl( Net<Dtype> * net , NCCL<Dtype> * nccl)",34, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NCCL::NCCL( shared_ptr<Solver<Dtype>> solver , const string & uid)",64, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::HasNCCL()",17, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NCCL_New_Uid()",65, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::BOOST_PYTHON_MODULE( _caffe)",81, 8, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mxCHECK( bool expr , const char * msg)",50, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mxERROR( const char * msg)",60, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mxCHECK_FILE_EXIST( const char * file)",45, 4, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mx_mat_to_blob( const mxArray * mx_mat , Blob<float> * blob , WhichMemory data_or_diff)",80, 6, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_to_mx_mat( const Blob<float> * blob , WhichMemory data_or_diff)",81, 4, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"int_vec_to_mx_vec( const vector<int> & int_vec)",69, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"str_vec_to_mx_strcell( const vector<std::string> & str_vec)",76, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"handle_to_ptr( const mxArray * mx_handle)",80, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"create_handle_vec( int ptr_num)",76, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"setup_handle( const T * ptr , int index , mxArray * mx_handle_vec)",80, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"ptr_to_handle( const T * ptr)",48, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"ptr_vec_to_handle_vec( const vector<shared_ptr<T>> & ptr_vec)",79, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"get_solver( MEX_ARGS)",65, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"delete_solver( MEX_ARGS)",66, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_get_attr( MEX_ARGS)",80, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_get_iter( MEX_ARGS)",66, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_restore( MEX_ARGS)",66, 6, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_solve( MEX_ARGS)",66, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_step( MEX_ARGS)",67, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"get_net( MEX_ARGS)",73, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"delete_net( MEX_ARGS)",57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_get_attr( MEX_ARGS)",81, 6, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_forward( MEX_ARGS)",57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_backward( MEX_ARGS)",57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_copy_from( MEX_ARGS)",65, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_reshape( MEX_ARGS)",57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_save( MEX_ARGS)",65, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"layer_get_attr( MEX_ARGS)",70, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"layer_get_type( MEX_ARGS)",63, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_get_shape( MEX_ARGS)",75, 4, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_reshape( MEX_ARGS)",73, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_get_data( MEX_ARGS)",60, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_set_data( MEX_ARGS)",67, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_get_diff( MEX_ARGS)",60, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_set_diff( MEX_ARGS)",67, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"set_mode_cpu( MEX_ARGS)",55, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"set_mode_gpu( MEX_ARGS)",55, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"set_device( MEX_ARGS)",58, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"get_init_key( MEX_ARGS)",55, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"reset( MEX_ARGS)",75, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"read_mean( MEX_ARGS)",71, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"write_mean( MEX_ARGS)",81, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"version( MEX_ARGS)",54, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mexFunction( MEX_ARGS)",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetRandomSeedFromFlag( Int32 random_seed_flag)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetNextRandomSeed( int seed)",64, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestFlagSaver::GTestFlagSaver()",68, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestFlagSaver::~GTestFlagSaver()",68, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CountIf( const Container & c , Predicate predicate)",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForEach( const Container & c , Functor functor)",52, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetElementOr( const std :: vector<E> & v , int i , E default_value)",76, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShuffleRange( internal :: Random * random , int begin , int end , std :: vector<E> * v)",78, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Shuffle( internal :: Random * random , std :: vector<E> * v)",67, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Delete( T * x)",27, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestPropertyKeyIs::TestPropertyKeyIs( const char * key)",46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestPropertyKeyIs::operator ( )( const TestProperty & test_property) const",61, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetterInterface::OsStackTraceGetterInterface()",35, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()",44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetter::OsStackTraceGetter()",48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::elapsed_time() const",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::Passed() const",44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::Failed() const",75, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::GetTestCase( int i) const",63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::GetMutableTestCase( int i)",63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::listeners()",58, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::ad_hoc_test_result() const",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::AddTestInfo( Test :: SetUpTestCaseFunc set_up_tc , Test :: TearDownTestCaseFunc tear_down_tc , TestInfo * test_info)",71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::parameterized_test_registry()",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::set_current_test_case( TestCase * a_current_test_case)",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::set_current_test_info( TestInfo * a_current_test_info)",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::ClearNonAdHocTestResult()",57, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::ClearAdHocTestResult()",33, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::current_test_case() const",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::current_test_info()",63, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::current_test_info() const",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::environments()",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::gtest_trace_stack()",48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::gtest_trace_stack() const",60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::InitDeathTestSubprocessControlInfo()",74, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::internal_run_death_test_flag() const",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::death_test_factory()",53, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::random_seed() const",51, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::random()",50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::catch_exceptions() const",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::set_catch_exceptions( bool value)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetUnitTestImpl()",42, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::AutoHandle()",50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::AutoHandle( HANDLE handle)",58, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::~AutoHandle()",29, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::Get() const",41, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::Reset()",48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::Reset( HANDLE handle)",43, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseNaturalNumber( const :: std :: string & str , Integer * number)",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestResultAccessor::RecordProperty( TestResult * test_result , const TestProperty & property)",61, 29, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestResultAccessor::ClearTestPartResults( TestResult * test_result)",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestResultAccessor::test_part_results( const TestResult & test_result)",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Random::Generate( UInt32 range)",76, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestIsInitialized()",69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SumOverTestCaseList( const std :: vector<TestCase*> & case_list , int(TestCase::*method)() const)",72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCasePassed( const TestCase * test_case)",57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCaseFailed( const TestCase * test_case)",57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldRunTestCase( const TestCase * test_case)",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AssertHelper::AssertHelper( TestPartResult :: Type type , const char * file , int line , const char * message)",63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AssertHelper::~AssertHelper()",32, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AssertHelper::operator =( const Message & message) const",73, 22, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCurrentExecutableName()",66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::GetOutputFormat()",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()",77, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::PatternMatchesString( const char * pattern , const char * str)",73, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::MatchesFilter( const String & name , const char * filter)",78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::FilterMatchesTest( const String & test_case_name , const String & test_name)",81, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::GTestShouldProcessSEH( DWORD exception_code)",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter( TestPartResultArray * result)",68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter( InterceptMode intercept_mode , TestPartResultArray * result)",68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::Init()",71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()",72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::ReportTestPartResult( const TestPartResult & result)",61, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetTestTypeId()",28, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasOneFailure( const char * , const char * , const char * , const TestPartResultArray & results , TestPartResult :: Type type , const string & substr)",78, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SingleFailureChecker::SingleFailureChecker( const TestPartResultArray * results , TestPartResult :: Type type , const string & substr)",45, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SingleFailureChecker::~SingleFailureChecker()",65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter( UnitTestImpl * unit_test)",74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult( const TestPartResult & result)",65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter( UnitTestImpl * unit_test)",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultPerThreadTestPartResultReporter::ReportTestPartResult( const TestPartResult & result)",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter( TestPartResultReporterInterface * reporter)",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()",60, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread( TestPartResultReporterInterface * reporter)",62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::successful_test_case_count() const",55, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::failed_test_case_count() const",51, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::total_test_case_count() const",50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::test_case_to_run_count() const",51, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::successful_test_count() const",77, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::failed_test_count() const",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::disabled_test_count() const",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::total_test_count() const",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::test_to_run_count() const",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop( int skip_count)",68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetTimeInMillis()",76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::ShowCStringQuoted( const char * c_str)",69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CloneString( const char * str , size_t length)",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CloneCString( const char * c_str)",62, 20, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::AnsiToUtf16( const char * ansi)",51, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::Utf16ToAnsi( LPCWSTR utf16_str)",54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CStringEquals( const char * lhs , const char * rhs)",65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamWideCharsToMessage( const wchar_t * wstr , size_t length , Message * msg)",73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Message::operator < <( const :: std :: wstring & wstr)",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Message::operator < <( const :: wstring & wstr)",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionResult::AssertionResult( const AssertionResult & other)",63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionResult::operator !() const",53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionSuccess()",37, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionFailure()",37, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionFailure( const Message & message)",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::EqFailure( const char * expected_expression , const char * actual_expression , const String & expected_value , const String & actual_value , bool ignoring_case)",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetBoolAssertionFailureMessage( const AssertionResult & assertion_result , const char * expression_text , const char * actual_predicate_value , const char * expected_predicate_value)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DoubleNearPredFormat( const char * expr1 , const char * expr2 , const char * abs_error_expr , double val1 , double val2 , double abs_error)",79, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FloatingPointLE( const char * expr1 , const char * expr2 , RawType val1 , RawType val2)",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FloatLE( const char * expr1 , const char * expr2 , float val1 , float val2)",69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::DoubleLE( const char * expr1 , const char * expr2 , double val1 , double val2)",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperEQ( const char * expected_expression , const char * actual_expression , BiggestInt expected , BiggestInt actual)",72, 19, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTREQ( const char * expected_expression , const char * actual_expression , const char * expected , const char * actual)",64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRCASEEQ( const char * expected_expression , const char * actual_expression , const char * expected , const char * actual)",68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRNE( const char * s1_expression , const char * s2_expression , const char * s1 , const char * s2)",76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRCASENE( const char * s1_expression , const char * s2_expression , const char * s1 , const char * s2)",62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringPred( const char * needle , const char * haystack)",65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringPred( const wchar_t * needle , const wchar_t * haystack)",71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringPred( const StringType & needle , const StringType & haystack)",52, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringImpl( bool expected_to_be_substring , const char * needle_expr , const char * haystack_expr , const StringType & needle , const StringType & haystack)",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const char * needle , const char * haystack)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const wchar_t * needle , const wchar_t * haystack)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const char * needle , const char * haystack)",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const wchar_t * needle , const wchar_t * haystack)",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: string & needle , const :: std :: string & haystack)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: string & needle , const :: std :: string & haystack)",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: wstring & needle , const :: std :: wstring & haystack)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: wstring & needle , const :: std :: wstring & haystack)",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HRESULTFailureHelper( const char * expr , const char * expected , long hr)",80, 42, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsHRESULTSuccess( const char * expr , long hr)",73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsHRESULTFailure( const char * expr , long hr)",73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ChopLowBits( UInt32 * bits , int n)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CodePointToUtf8( UInt32 code_point , char * str)",81, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsUtf16SurrogatePair( wchar_t first , wchar_t second)",66, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CreateCodePointFromUtf16SurrogatePair( wchar_t first , wchar_t second)",70, 52, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WideStringToUtf8( const wchar_t * str , int num_chars)",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::ShowWideCString( const wchar_t * wide_c_str)",69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::ShowWideCStringQuoted( const wchar_t * wide_c_str)",70, 24, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::WideCStringEquals( const wchar_t * lhs , const wchar_t * rhs)",75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTREQ( const char * expected_expression , const char * actual_expression , const wchar_t * expected , const wchar_t * actual)",64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRNE( const char * s1_expression , const char * s2_expression , const wchar_t * s1 , const wchar_t * s2)",76, 28, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CaseInsensitiveCStringEquals( const char * lhs , const char * rhs)",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CaseInsensitiveWideCStringEquals( const wchar_t * lhs , const wchar_t * rhs)",68, 46, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::Compare( const String & rhs) const",71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::EndsWith( const char * suffix) const",65, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::EndsWithCaseInsensitive( const char * suffix) const",80, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::Format( const char * format , ...)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StringStreamToString( :: std :: stringstream * ss)",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AppendUserMessage( const String & gtest_msg , const Message & user_msg)",55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::TestResult()",28, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::~TestResult()",28, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::GetTestPartResult( int i) const",67, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::GetTestProperty( int i) const",63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::ClearTestPartResults()",42, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::AddTestPartResult( const TestPartResult & test_part_result)",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::RecordProperty( const TestProperty & test_property)",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::ValidateTestProperty( const TestProperty & test_property)",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::Clear()",30, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::Failed() const",49, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartFatallyFailed( const TestPartResult & result)",66, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::HasFatalFailure() const",65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartNonfatallyFailed( const TestPartResult & result)",69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::HasNonfatalFailure() const",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::total_part_count() const",54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::test_property_count() const",52, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::Test()",56, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::~Test()",28, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::SetUp()",21, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::TearDown()",24, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::RecordProperty( const char * key , const char * value)",69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::RecordProperty( const char * key , int value)",58, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ReportFailureInUnknownLocation( TestPartResult :: Type result_type , const String & message)",76, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::HasSameFixtureClass()",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatSehExceptionMessage( DWORD exception_code , const char * location)",76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatCxxExceptionMessage( const char * description , const char * location)",75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::GoogleTestFailureException::GoogleTestFailureException( const TestPartResult & failure)",78, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HandleSehExceptionsInMethodIfSupported( T * object , Result(T::*method)() , const char * location)",78, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HandleExceptionsInMethodIfSupported( T * object , Result(T::*method)() , const char * location)",79, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::Run()",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::HasFatalFailure()",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::HasNonfatalFailure()",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestInfo::TestInfo( const char * a_test_case_name , const char * a_name , const char * a_type_param , const char * a_value_param , internal :: TypeId fixture_class_id , internal :: TestFactoryBase * factory)",75, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestInfo::~TestInfo()",43, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MakeAndRegisterTestInfo( const char * test_case_name , const char * name , const char * type_param , const char * value_param , TypeId fixture_class_id , SetUpTestCaseFunc set_up_tc , TearDownTestCaseFunc tear_down_tc , TestFactoryBase * factory)",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ReportInvalidTestCaseType( const char * test_case_name , const char * file , int line)",80, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestNameIs::TestNameIs( const char * name)",40, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestNameIs::operator ( )( const TestInfo * test_info) const",81, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::RegisterParameterizedTests()",50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestInfo::Run()",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::successful_test_count() const",47, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::failed_test_count() const",47, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::disabled_test_count() const",49, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::test_to_run_count() const",50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::total_test_count() const",51, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::TestCase( const char * a_name , const char * a_type_param , Test :: SetUpTestCaseFunc set_up_tc , Test :: TearDownTestCaseFunc tear_down_tc)",72, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::~TestCase()",56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::GetTestInfo( int i) const",56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::GetMutableTestInfo( int i)",56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::AddTestInfo( TestInfo * test_info)",67, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::Run()",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::ClearResult()",55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::ShuffleTests( internal :: Random * random)",56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::UnshuffleTests()",54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatCountableNoun( int count , const char * singular_form , const char * plural_form)",77, 34, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatTestCount( int test_count)",59, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatTestCaseCount( int test_case_count)",74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultTypeToString( TestPartResult :: Type type)",76, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintTestPartResultToString( const TestPartResult & test_part_result)",74, 42, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintTestPartResult( const TestPartResult & test_part_result)",74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetColorAttribute( GTestColor color)",65, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetAnsiColorCode( GTestColor color)",49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldUseColor( bool stdout_is_tty)",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ColoredPrintf( GTestColor color , const char * fmt , ...)",76, 26, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintFullTestCommentIfPresent( const TestInfo & test_info)",64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::PrettyUnitTestResultPrinter()",35, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::PrintTestName( const char * test_case , const char * test)",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestProgramStart( const UnitTest &)",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpEnd( const UnitTest &)",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownEnd( const UnitTest &)",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestProgramEnd( const UnitTest &)",66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart( const UnitTest & unit_test , int iteration)",77, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart( const UnitTest &)",60, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart( const TestCase & test_case)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestStart( const TestInfo & test_info)",75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult( const TestPartResult & result)",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestEnd( const TestInfo & test_info)",73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd( const TestCase & test_case)",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart( const UnitTest &)",63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests( const UnitTest & unit_test)",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd( const UnitTest & unit_test , int)",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::TestEventRepeater()",53, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::forwarding_enabled() const",66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::set_forwarding_enabled( bool enable)",77, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::~TestEventRepeater()",50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::Append( TestEventListener * listener)",62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::Release( TestEventListener * listener)",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::OnTestIterationStart( const UnitTest & unit_test , int iteration)",72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::OnTestIterationEnd( const UnitTest & unit_test , int iteration)",73, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::IsNormalizableWhitespace( char c)",49, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter( char c)",53, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute( const char * str)",54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::EscapeXmlText( const char * str)",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter( const char * output_file)",76, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd( const UnitTest & unit_test , int)",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::EscapeXml( const char * str , bool is_attribute)",81, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters( const string & str)",81, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatTimeInMillisAsSeconds( TimeInMillis ms)",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection( :: std :: ostream * stream , const char * data)",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo( :: std :: ostream * stream , const char * test_case_name , const TestInfo & test_info)",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase( FILE * out , const TestCase & test_case)",77, 48, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest( FILE * out , const UnitTest & unit_test)",77, 48, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes( const TestResult & result)",65, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::StreamingListener( const string & host , const string & port)",60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::~StreamingListener()",33, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestProgramStart( const UnitTest &)",61, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestProgramEnd( const UnitTest & unit_test)",71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestIterationStart( const UnitTest & , int iteration)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestIterationEnd( const UnitTest & unit_test , int)",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestCaseStart( const TestCase & test_case)",77, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestCaseEnd( const TestCase & test_case)",80, 24, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestStart( const TestInfo & test_info)",73, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestEnd( const TestInfo & test_info)",76, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestPartResult( const TestPartResult & test_part_result)",73, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::CloseConnection()",79, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::Send( const string & message)",68, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::UrlEncode( const char * str)",81, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::MakeConnection()",81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ScopedTrace::ScopedTrace( const char * file , int line , const Message & message)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ScopedTrace::~ScopedTrace()",44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetter::CurrentStackTrace( int , int)",57, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetter::UponLeavingGTest()",46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::TestEventListeners()",52, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::~TestEventListeners()",64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::Append( TestEventListener * listener)",63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::Release( TestEventListener * listener)",78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::repeater()",72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::SetDefaultResultPrinter( TestEventListener * listener)",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::SetDefaultXmlGenerator( TestEventListener * listener)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::EventForwardingEnabled() const",58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::SuppressEventForwarding()",53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::GetInstance()",75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::successful_test_case_count() const",51, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::failed_test_case_count() const",47, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::total_test_case_count() const",46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::test_case_to_run_count() const",47, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::successful_test_count() const",46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::failed_test_count() const",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::disabled_test_count() const",44, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::total_test_count() const",78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::test_to_run_count() const",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::elapsed_time() const",56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::Passed() const",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::Failed() const",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::GetTestCase( int i) const",53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::GetMutableTestCase( int i)",48, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::listeners()",44, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::AddEnvironment( Environment * env)",58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::AddTestPartResult( TestPartResult :: Type result_type , const char * file_name , int line_number , const internal :: String & message , const internal :: String & os_stack_trace)",81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::RecordPropertyForCurrentTest( const char * key , const char * value)",65, 44, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::Run()",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::original_working_dir() const",53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::current_test_case() const",54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::current_test_info() const",54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::random_seed() const",67, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::parameterized_test_registry()",47, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::UnitTest()",44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::~UnitTest()",24, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::PushGTestTrace( const internal :: TraceInfo & trace)",66, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::PopGTestTrace()",41, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::UnitTestImpl( UnitTest * parent)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::~UnitTestImpl()",57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()",56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ConfigureXmlOutput()",70, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ConfigureStreamingOutput()",73, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::PostFlagParsingInit()",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCaseNameIs::TestCaseNameIs( const String & name)",46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCaseNameIs::operator ( )( const TestCase * test_case) const",79, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::GetTestCase( const char * test_case_name , const char * type_param , Test :: SetUpTestCaseFunc set_up_tc , Test :: TearDownTestCaseFunc tear_down_tc)",79, 36, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SetUpEnvironment( Environment * env)",65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TearDownEnvironment( Environment * env)",71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::RunAllTests()",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WriteToShardStatusFileIfNeeded()",76, 20, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldShard( const char * total_shards_env , const char * shard_index_env , bool in_subprocess_for_death_test)",70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Int32FromEnvOrDie( const char * var , Int32 default_val)",76, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldRunTestOnShard( int total_shards , int shard_index , int test_id)",76, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::FilterTests( ReactionToSharding shard_tests)",74, 51, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ListTestsMatchingFilter()",70, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::set_os_stack_trace_getter( OsStackTraceGetterInterface * getter)",46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::os_stack_trace_getter()",69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::current_test_result()",61, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ShuffleTests()",77, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::UnshuffleTests()",52, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCurrentOsStackTraceExceptTop( UnitTest * , int skip_count)",74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsTrue( bool condition)",50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AlwaysTrue()",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SkipPrefix( const char * prefix , const char ** pstr)",57, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseFlagValue( const char * str , const char * flag , bool def_optional)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseBoolFlag( const char * str , const char * flag , bool * value)",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseInt32Flag( const char * str , const char * flag , Int32 * value)",71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseStringFlag( const char * str , const char * flag , String * value)",73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasGoogleTestFlagPrefix( const char * str)",62, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintColorEncoded( const char * str)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseGoogleTestFlagsOnlyImpl( int * argc , CharType ** argv)",74, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseGoogleTestFlagsOnly( int * argc , char ** argv)",56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseGoogleTestFlagsOnly( int * argc , wchar_t ** argv)",59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::InitGoogleTestImpl( int * argc , CharType ** argv)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::InitGoogleTest( int * argc , char ** argv)",46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::InitGoogleTest( int * argc , wchar_t ** argv)",49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ExitedWithCode::ExitedWithCode( int exit_code)",72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ExitedWithCode::operator ( )( int exit_status) const",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::KilledBySignal::KilledBySignal( int signum)",63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::KilledBySignal::operator ( )( int exit_status) const",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExitSummary( int exit_code)",63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExitedUnsuccessfully( int exit_status)",45, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestThreadWarning( size_t thread_count)",74, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestAbort( const String & message)",76, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetLastErrnoDescription()",61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FailFromInternalError( int fd)",81, 22, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::DeathTest()",67, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::Create( const char * statement , const RE * regex , const char * file , int line , DeathTest ** test)",71, 23, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::LastMessage()",43, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::set_last_death_test_message( const String & message)",69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::DeathTestImpl( const char * a_statement , const RE * a_regex)",60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::~DeathTestImpl()",64, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::statement() const",55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::regex() const",45, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::spawned() const",44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_spawned( bool is_spawned)",63, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::status() const",41, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_status( int a_status)",56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::outcome() const",56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_outcome( DeathTestOutcome an_outcome)",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::read_fd() const",43, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_read_fd( int fd)",46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::write_fd() const",45, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_write_fd( int fd)",48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::Abort( AbortReason reason)",77, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatDeathTestOutput( const :: std :: string & output)",74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::Passed( bool status_ok)",80, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WindowsDeathTest::WindowsDeathTest( const char * a_statement , const RE * a_regex , const char * file , int line)",73, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WindowsDeathTest::Wait()",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WindowsDeathTest::AssumeRole()",77, 44, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForkingDeathTest::set_child_pid( pid_t child_pid)",66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForkingDeathTest::ForkingDeathTest( const char * a_statement , const RE * a_regex)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForkingDeathTest::Wait()",74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::NoExecDeathTest::NoExecDeathTest( const char * a_statement , const RE * a_regex)",64, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::NoExecDeathTest::AssumeRole()",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTest::ExecDeathTest( const char * a_statement , const RE * a_regex , const char * file , int line)",75, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::Arguments()",27, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::~Arguments()",75, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::AddArgument( const char * argument)",60, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::AddArguments( const :: std :: vector<Str> & arguments)",76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::Argv()",24, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetEnviron()",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetEnviron()",47, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTestChildMain( void * child_arg)",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StackLowerThanAddress( const void * ptr)",46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StackGrowsDown()",40, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTestFork( char * const * argv , int close_fd)",75, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTest::AssumeRole()",74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultDeathTestFactory::Create( const char * statement , const RE * regex , const char * file , int line , DeathTest ** test)",81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SplitString( const :: std :: string & str , char delimiter , :: std :: vector<::std::string> * dest)",69, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetStatusFileDescriptor( unsigned int parent_process_id , size_t write_handle_as_size_t , size_t event_handle_as_size_t)",81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseInternalRunDeathTestFlag()",74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsPathSeparator( char c)",66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::GetCurrentDir()",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveExtension( const char * extension) const",72, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::FindLastPathSeparator() const",78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveDirectoryName() const",60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveFileName() const",56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::MakeFileName( const FilePath & directory , const FilePath & base_name , int number , const char * extension)",77, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::ConcatPaths( const FilePath & directory , const FilePath & relative_path)",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::FileOrDirectoryExists() const",60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::DirectoryExists() const",75, 43, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::IsRootDirectory() const",75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::IsAbsolutePath() const",46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::GenerateUniqueFileName( const FilePath & directory , const FilePath & base_name , const char * extension)",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::IsDirectory() const",69, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::CreateDirectoriesRecursively() const",79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::CreateFolder() const",80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveTrailingPathSeparator() const",68, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::Normalize()",55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetThreadCount()",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetThreadCount()",73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::~RE()",68, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::FullMatch( const char * str , const RE & re)",59, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::PartialMatch( const char * str , const RE & re)",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::Init( const char * regex)",76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsInSet( char ch , const char * str)",48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiDigit( char ch)",62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiPunct( char ch)",60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsRepeat( char ch)",54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiWhiteSpace( char ch)",71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiWordChar( char ch)",65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsValidEscape( char c)",57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AtomMatchesChar( bool escaped , char pattern_char , char ch)",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatRegexSyntaxError( const char * regex , int index)",81, 10, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ValidateRegex( const char * regex)",79, 22, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MatchRepetitionAndRegexAtHead( bool escaped , char c , char repeat , const char * regex , const char * str)",76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MatchRegexAtHead( const char * regex , const char * str)",71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MatchRegexAnywhere( const char * regex , const char * str)",62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::~RE()",42, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::FullMatch( const char * str , const RE & re)",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::PartialMatch( const char * str , const RE & re)",63, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::Init( const char * regex)",72, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatFileLocation( const char * file , int line)",74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatCompilerIndependentFileLocation( const char * file , int line)",68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestLog::GTestLog( GTestLogSeverity severity , const char * file , int line)",74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestLog::~GTestLog()",34, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::CapturedStream( int fd)",78, 44, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::~CapturedStream()",31, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::GetCapturedString()",61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::GetFileSize( FILE * file)",49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::ReadEntireFile( FILE * file)",79, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CaptureStream( int fd , const char * stream_name , CapturedStream ** stream)",79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCapturedStream( CapturedStream ** captured_stream)",66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CaptureStdout()",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CaptureStderr()",62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCapturedStdout()",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCapturedStderr()",77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetArgvs()",60, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::posix::Abort()",44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FlagToEnvVar( const char * flag)",61, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseInt32( const Message & src_text , const char * str , Int32 * value)",74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::BoolFromGTestEnv( const char * flag , bool default_value)",67, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Int32FromGTestEnv( const char * flag , Int32 default_value)",67, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StringFromGTestEnv( const char * flag , const char * default_value)",78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintByteSegmentInObjectTo( const unsigned char * obj_bytes , size_t start , size_t count , ostream * os)",78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintBytesInObjectToImpl( const unsigned char * obj_bytes , size_t count , ostream * os)",79, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal2::PrintBytesInObjectTo( const unsigned char * obj_bytes , size_t count , ostream * os)",72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsPrintableAscii( wchar_t c)",42, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintAsCharLiteralTo( Char c , ostream * os)",70, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintAsWideStringLiteralTo( wchar_t c , ostream * os)",71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintAsNarrowStringLiteralTo( char c , ostream * os)",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintCharAndCodeTo( Char c , ostream * os)",72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( unsigned char c , :: std :: ostream * os)",52, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( signed char c , :: std :: ostream * os)",50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( wchar_t wc , ostream * os)",40, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintCharsAsStringTo( const char * begin , size_t len , ostream * os)",81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UniversalPrintArray( const char * begin , size_t len , ostream * os)",71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintWideCharsAsStringTo( const wchar_t * begin , size_t len , ostream * os)",81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( const char * s , ostream * os)",61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( const wchar_t * s , ostream * os)",61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintStringTo( const :: string & s , ostream * os)",53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintStringTo( const :: std :: string & s , ostream * os)",58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintWideStringTo( const :: wstring & s , ostream * os)",58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintWideStringTo( const :: std :: wstring & s , ostream * os)",63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResult::ExtractSummary( const char * message)",80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::operator < <( std :: ostream & os , const TestPartResult & result)",77, 10, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultArray::Append( const TestPartResult & result)",65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultArray::GetTestPartResult( int index) const",80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultArray::size() const",42, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()",72, 25, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()",64, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasNewFatalFailureHelper::ReportTestPartResult( const TestPartResult & result)",53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SkipSpaces( const char * str)",49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TypedTestCasePState::VerifyRegisteredTestNames( const char * file , int line , const char * registered_tests)",69, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SetActionFunction( ActionCallback func)",61, 0, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::GetRequestedAction()",63, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Solver( const SolverParameter & param)",59, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Solver( const string & param_file)",59, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Init( const SolverParameter & param)",80, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::LoadNetWeights( shared_ptr<Net<Dtype>> net , const std :: string & model_list)",64, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::InitTrainNet()",81, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::InitTestNets()",81, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Step( int iters)",81, 8, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Solve( const char * resume_file)",80, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::TestAll()",66, 7, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Test( const int test_net_id)",80, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Snapshot()",58, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::CheckSnapshotWritePermissions()",81, 8, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SnapshotFilename( const string & extension)",72, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SnapshotToBinaryProto()",71, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SnapshotToHDF5()",63, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Restore( const char * state_file)",74, 6, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::UpdateSmoothedLoss( Dtype loss , int start_iter , int average_loss)",67, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::apply_buffers( const vector<Blob<Dtype>*> & blobs , Dtype * buffer , size_t total_size , Op op)",81, 19, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::total_size( const vector<Blob<Dtype>*> & params)",75, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Params<Dtype>::Params( shared_ptr<Solver<Dtype>> root_solver)",70, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::GPUParams<Dtype>::GPUParams( shared_ptr<Solver<Dtype>> root_solver , int device)",80, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::GPUParams<Dtype>::~GPUParams()",33, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::GPUParams<Dtype>::Configure( Solver<Dtype> * solver) const",64, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::getDevice()",38, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::NCCL( shared_ptr<Solver<Dtype>> solver)",53, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::NCCL( shared_ptr<Solver<Dtype>> solver , const string & uid)",77, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::Init()",76, 4, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::~NCCL()",46, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::barrier()",41, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::set_barrier( boost :: barrier * value)",55, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::InitSingleProcess( vector<NCCL<Dtype>*> * nccls)",81, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::new_uid()",77, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::Broadcast()",55, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::run( int layer)",79, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::on_gradients_ready()",77, 6, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Worker::Worker( shared_ptr<Solver<Dtype>> rank0 , int device , boost :: barrier * barrier , vector<NCCL<Dtype>*> * nccls , const char * restore)",72, 18, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Worker::~Worker()",23, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Worker::InternalThreadEntry()",78, 4, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::Run( const vector<int> & gpus , const char * restore)",70, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Net( const NetParameter & param)",45, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Net( const string & param_file , Phase phase , const int level , const vector<string> * stages)",55, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Init( const NetParameter & in_param)",81, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::FilterNet( const NetParameter & param , NetParameter * param_filtered)",79, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::StateMeetsRule( const NetState & state , const NetStateRule & rule , const string & layer_name)",74, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::AppendTop( const NetParameter & param , const int layer_id , const int top_id , set<string> * available_blobs , map<string,int> * blob_name_to_idx)",81, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::AppendBottom( const NetParameter & param , const int layer_id , const int bottom_id , set<string> * available_blobs , map<string,int> * blob_name_to_idx)",80, 15, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::AppendParam( const NetParameter & param , const int layer_id , const int param_id)",81, 12, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardFromTo( int start , int end)",75, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardFrom( int start)",51, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardTo( int end)",39, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Forward( Dtype * loss)",63, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Forward( const vector<Blob<Dtype>*> & bottom , Dtype * loss)",69, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardFromTo( int start , int end)",68, 10, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardDebugInfo( const int layer_id)",75, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardDebugInfo( const int layer_id)",81, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::UpdateDebugInfo( const int param_id)",81, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ShareTrainedLayersWith( const Net * other)",79, 10, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardFrom( int start)",43, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardTo( int end)",43, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Backward()",78, 15, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Reshape()",56, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFrom( const NetParameter & param)",81, 12, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFrom( const string & trained_filename)",73, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFromBinaryProto( const string & trained_filename)",62, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFromHDF5( const string & trained_filename)",78, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ToProto( NetParameter * param , bool write_diff) const",71, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ToHDF5( const string & filename , bool write_diff) const",76, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Update()",55, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ClearParamDiffs()",58, 6, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ShareWeights()",55, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::has_blob( const string & blob_name) const",71, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::blob_by_name( const string & blob_name) const",66, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::has_layer( const string & layer_name) const",74, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::layer_by_name( const string & layer_name) const",70, 4, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::~InternalThread()",36, 0, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::is_started() const",42, 0, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::must_stop()",55, 2, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::StartInternalThread()",80, 4, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::entry( int device , Caffe :: Brew mode , int rand_seed , int solver_count , int solver_rank , bool multiprocess)",72, 0, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::StopInternalThread()",54, 6, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Reshape( const int num , const int channels , const int height , const int width)",79, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Reshape( const vector<int> & shape)",75, 6, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Reshape( const BlobShape & shape)",52, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ReshapeLike( const Blob<Dtype> & other)",58, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Blob( const int num , const int channels , const int height , const int width)",71, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Blob( const vector<int> & shape)",58, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::gpu_shape() const",46, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::cpu_data() const",45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::set_cpu_data( Dtype * data)",46, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::gpu_data() const",45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::set_gpu_data( Dtype * data)",46, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::cpu_diff() const",45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::gpu_diff() const",45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_cpu_data()",57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_gpu_data()",57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_cpu_diff()",57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_gpu_diff()",57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ShareData( const Blob & other)",49, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ShareDiff( const Blob & other)",49, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::Update()",67, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::Update()",58, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Update()",64, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::asum_data() const",65, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::asum_data() const",47, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::asum_data() const",72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::asum_diff() const",65, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::asum_diff() const",47, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::asum_diff() const",72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::sumsq_data() const",66, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::sumsq_data() const",48, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::sumsq_data() const",72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::sumsq_diff() const",66, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::sumsq_diff() const",48, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::sumsq_diff() const",72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::scale_data( unsigned int scale_factor)",77, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::scale_data( int scale_factor)",59, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::scale_data( Dtype scale_factor)",72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::scale_diff( unsigned int scale_factor)",77, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::scale_diff( int scale_factor)",59, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::scale_diff( Dtype scale_factor)",72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ShapeEquals( const BlobProto & other)",81, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::CopyFrom( const Blob & source , bool copy_diff , bool reshape)",79, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::FromProto( const BlobProto & proto , bool reshape)",69, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<double>::ToProto( BlobProto * proto , bool write_diff) const",70, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<float>::ToProto( BlobProto * proto , bool write_diff) const",69, 0, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetConvolutionLayer( const LayerParameter & param)",79, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetDeconvolutionLayer( const LayerParameter & param)",81, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetPoolingLayer( const LayerParameter & param)",79, 8, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetLRNLayer( const LayerParameter & param)",76, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetReLULayer( const LayerParameter & param)",72, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetSigmoidLayer( const LayerParameter & param)",75, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetSoftmaxLayer( const LayerParameter & param)",75, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetTanHLayer( const LayerParameter & param)",72, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetPythonLayer( const LayerParameter & param)",81, 4, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::Get()",41, 4, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::cluster_seedgen( void)",68, 14, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::GlobalInit( int * pargc , char ** * pargv)",55, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::Caffe()",66, 6, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::~Caffe()",20, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::set_random_seed( const unsigned int seed)",55, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::SetDevice( const int device_id)",45, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::DeviceQuery()",28, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::CheckDevice( const int device_id)",47, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::FindDevice( const int start_id)",44, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator()",61, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator( unsigned int seed)",74, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::rng()",45, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG()",52, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG( unsigned int seed)",73, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::operator =( const RNG & other)",54, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::generator()",48, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::Caffe()",80, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::~Caffe()",67, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::set_random_seed( const unsigned int seed)",72, 4, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::SetDevice( const int device_id)",79, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::DeviceQuery()",78, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::CheckDevice( const int device_id)",79, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::FindDevice( const int start_id)",77, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator()",61, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator( unsigned int seed)",74, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::rng()",45, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG()",52, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG( unsigned int seed)",73, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::operator =( const RNG & other)",54, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::generator()",48, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::cublasGetErrorString( cublasStatus_t error)",57, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::curandGetErrorString( curandStatus_t error)",57, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::DataTransformer( const TransformationParameter & param , Phase phase)",78, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const Datum & datum , Dtype * transformed_data)",80, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const Datum & datum , Blob<Dtype> * transformed_blob)",77, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const vector<Datum> & datum_vector , Blob<Dtype> * transformed_blob)",80, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const vector<cv::Mat> & mat_vector , Blob<Dtype> * transformed_blob)",75, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const cv :: Mat & cv_img , Blob<Dtype> * transformed_blob)",81, 10, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( Blob<Dtype> * input_blob , Blob<Dtype> * transformed_blob)",80, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const Datum & datum)",77, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const vector<Datum> & datum_vector)",60, 2, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const cv :: Mat & cv_img)",76, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const vector<cv::Mat> & mat_vector)",61, 2, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InitRand()",52, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Rand( int n)",53, 6, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::SyncedMemory()",78, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::SyncedMemory( size_t size)",78, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::~SyncedMemory()",51, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::to_cpu()",64, 6, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::to_gpu()",49, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::cpu_data()",39, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::set_cpu_data( void * data)",51, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::gpu_data()",39, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::set_gpu_data( void * data)",46, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::mutable_cpu_data()",41, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::mutable_gpu_data()",41, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::async_gpu_push( const cudaStream_t & stream)",71, 2, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::check_device()",65, 4, 0
repos/cpp/caffe/src/caffe/solvers/adadelta_solver.cpp,"caffe::AdaDeltaSolver<Dtype>::AdaDeltaPreSolve()",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/adadelta_solver.cpp,"caffe::AdaDeltaSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",79, 8, 0
repos/cpp/caffe/src/caffe/solvers/adagrad_solver.cpp,"caffe::AdaGradSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::GetLearningRate()",76, 4, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::PreSolve()",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::ClipGradients()",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::ApplyUpdate()",78, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::Normalize( int param_id)",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::Regularize( int param_id)",78, 8, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::SnapshotSolverState( const string & model_filename)",75, 0, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::SnapshotSolverStateToBinaryProto( const string & model_filename)",79, 4, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::SnapshotSolverStateToHDF5( const string & model_filename)",80, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::RestoreSolverStateFromBinaryProto( const string & state_file)",79, 4, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::RestoreSolverStateFromHDF5( const string & state_file)",78, 0, 0
repos/cpp/caffe/src/caffe/solvers/nesterov_solver.cpp,"caffe::NesterovSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",75, 0, 0
repos/cpp/caffe/src/caffe/solvers/rmsprop_solver.cpp,"caffe::RMSPropSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",79, 8, 0
repos/cpp/caffe/src/caffe/solvers/adam_solver.cpp,"caffe::AdamSolver<Dtype>::AdamPreSolve()",75, 2, 0
repos/cpp/caffe/src/caffe/solvers/adam_solver.cpp,"caffe::AdamSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",79, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemm<float>( const CBLAS_TRANSPOSE TransA , const CBLAS_TRANSPOSE TransB , const int M , const int N , const int K , const float alpha , const float * A , const float * B , const float beta , float * C)",73, 4, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemm<double>( const CBLAS_TRANSPOSE TransA , const CBLAS_TRANSPOSE TransB , const int M , const int N , const int K , const double alpha , const double * A , const double * B , const double beta , double * C)",77, 4, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemv<float>( const CBLAS_TRANSPOSE TransA , const int M , const int N , const float alpha , const float * A , const float * x , const float beta , float * y)",75, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemv<double>( const CBLAS_TRANSPOSE TransA , const int M , const int N , const double alpha , const double * A , const double * x , const double beta , double * y)",75, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_axpy<float>( const int N , const float alpha , const float * X , float * Y)",71, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_axpy<double>( const int N , const double alpha , const double * X , double * Y)",74, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_set( const int N , const Dtype alpha , Dtype * Y)",62, 4, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add_scalar( const int N , const float alpha , float * Y)",66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add_scalar( const int N , const double alpha , double * Y)",68, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_copy( const int N , const Dtype * X , Dtype * Y)",74, 6, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_scal<float>( const int N , const float alpha , float * X)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_scal<double>( const int N , const double alpha , double * X)",70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_axpby<float>( const int N , const float alpha , const float * X , const float beta , float * Y)",76, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_axpby<double>( const int N , const double alpha , const double * X , const double beta , double * Y)",79, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add<float>( const int n , const float * a , const float * b , float * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add<double>( const int n , const double * a , const double * b , double * y)",70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sub<float>( const int n , const float * a , const float * b , float * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sub<double>( const int n , const double * a , const double * b , double * y)",70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_mul<float>( const int n , const float * a , const float * b , float * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_mul<double>( const int n , const double * a , const double * b , double * y)",70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_div<float>( const int n , const float * a , const float * b , float * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_div<double>( const int n , const double * a , const double * b , double * y)",70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_powx<float>( const int n , const float * a , const float b , float * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_powx<double>( const int n , const double * a , const double b , double * y)",70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqr<float>( const int n , const float * a , float * y)",63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqr<double>( const int n , const double * a , double * y)",66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqrt<float>( const int n , const float * a , float * y)",64, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqrt<double>( const int n , const double * a , double * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_exp<float>( const int n , const float * a , float * y)",63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_exp<double>( const int n , const double * a , double * y)",66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_log<float>( const int n , const float * a , float * y)",63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_log<double>( const int n , const double * a , double * y)",66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_abs<float>( const int n , const float * a , float * y)",63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_abs<double>( const int n , const double * a , double * y)",66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_rand()",32, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_nextafter( const Dtype b)",45, 6, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_uniform( const int n , const Dtype a , const Dtype b , Dtype * r)",80, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_gaussian( const int n , const Dtype a , const Dtype sigma , Dtype * r)",78, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_bernoulli( const int n , const Dtype p , int * r)",81, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_bernoulli( const int n , const Dtype p , unsigned int * r)",81, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_strided_dot<float>( const int n , const float * x , const int incx , const float * y , const int incy)",80, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_strided_dot<double>( const int n , const double * x , const int incx , const double * y , const int incy)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_dot( const int n , const Dtype * x , const Dtype * y)",67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_asum<float>( const int n , const float * x)",59, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_asum<double>( const int n , const double * x)",62, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_scale<float>( const int n , const float alpha , const float * x , float * y)",76, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_scale<double>( const int n , const double alpha , const double * x , double * y)",79, 0, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_nd_dataset_helper( hid_t file_id , const char * dataset_name_ , int min_dim , int max_dim , Blob<Dtype> * blob , bool reshape)",80, 6, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_nd_dataset<float>( hid_t file_id , const char * dataset_name_ , int min_dim , int max_dim , Blob<float> * blob , bool reshape)",78, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_nd_dataset<double>( hid_t file_id , const char * dataset_name_ , int min_dim , int max_dim , Blob<double> * blob , bool reshape)",78, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_nd_dataset<float>( const hid_t file_id , const string & dataset_name , const Blob<float> & blob , bool write_diff)",78, 4, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_nd_dataset<double>( hid_t file_id , const string & dataset_name , const Blob<double> & blob , bool write_diff)",75, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_string( hid_t loc_id , const string & dataset_name)",78, 4, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_string( hid_t loc_id , const string & dataset_name , const string & s)",70, 4, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_int( hid_t loc_id , const string & dataset_name)",76, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_int( hid_t loc_id , const string & dataset_name , int i)",70, 0, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_get_num_links( hid_t loc_id)",61, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_get_name_by_idx( hid_t loc_id , int idx)",78, 6, 0
repos/cpp/caffe/src/caffe/util/db.cpp,"caffe::db::GetDB( DataParameter :: DB backend)",46, 4, 0
repos/cpp/caffe/src/caffe/util/db.cpp,"caffe::db::GetDB( const string & backend)",44, 2, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::is_a_ge_zero_and_a_lt_b( int a , int b)",62, 2, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::im2col_cpu( const Dtype * data_im , const int channels , const int height , const int width , const int kernel_h , const int kernel_w , const int pad_h , const int pad_w , const int stride_h , const int stride_w , const int dilation_h , const int dilation_w , Dtype * data_col)",79, 4, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::im2col_nd_core_cpu( const Dtype * data_input , const bool im2col , const int num_spatial_axes , const int * im_shape , const int * col_shape , const int * kernel_shape , const int * pad , const int * stride , const int * dilation , Dtype * data_output)",79, 6, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::im2col_nd_cpu( const Dtype * data_im , const int num_spatial_axes , const int * im_shape , const int * col_shape , const int * kernel_shape , const int * pad , const int * stride , const int * dilation , Dtype * data_col)",78, 2, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::col2im_cpu( const Dtype * data_col , const int channels , const int height , const int width , const int kernel_h , const int kernel_w , const int pad_h , const int pad_w , const int stride_h , const int stride_w , const int dilation_h , const int dilation_w , Dtype * data_im)",79, 4, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::col2im_nd_cpu( const Dtype * data_col , const int num_spatial_axes , const int * im_shape , const int * col_shape , const int * kernel_shape , const int * pad , const int * stride , const int * dilation , Dtype * data_im)",79, 2, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"handle_signal( int signal)",35, 2, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"HookupHandler()",71, 6, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"UnhookHandler()",58, 8, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"GotSIGINT()",30, 4, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"GotSIGHUP()",30, 4, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::SignalHandler( SolverAction :: Enum SIGINT_action , SolverAction :: Enum SIGHUP_action)",64, 29, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::~SignalHandler()",34, 0, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::CheckForSignals() const",60, 0, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::GetActionFunction()",61, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadProtoFromTextFile( const char * filename , Message * proto)",68, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::WriteProtoToTextFile( const Message & proto , const char * filename)",72, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadProtoFromBinaryFile( const char * filename , Message * proto)",69, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::WriteProtoToBinaryFile( const Message & proto , const char * filename)",74, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename , const int height , const int width , const bool is_color)",64, 4, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename , const int height , const int width)",58, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename , const bool is_color)",53, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename)",51, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::matchExt( const std :: string & fn , std :: string en)",66, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToDatum( const string & filename , const int label , const int height , const int width , const bool is_color , const std :: string & encoding , Datum * datum)",72, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadFileToDatum( const string & filename , const int label , Datum * datum)",64, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatumToCVMatNative( const Datum & datum)",72, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatumToCVMat( const Datum & datum , bool is_color)",72, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatumNative( Datum * datum)",57, 4, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatum( Datum * datum , bool is_color)",61, 4, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::CVMatToDatum( const cv :: Mat & cv_img , Datum * datum)",77, 2, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDB::Open( const string & source , Mode mode)",81, 4, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDB::NewCursor()",66, 2, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDB::NewTransaction()",42, 0, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDBTransaction::Put( const string & key , const string & value)",68, 0, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDBTransaction::Commit()",68, 4, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDBTransaction::DoubleMapSize()",76, 2, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::InsertSplits( const NetParameter & param , NetParameter * param_split)",81, 12, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::ConfigureSplitLayer( const string & layer_name , const string & blob_name , const int blob_idx , const int split_count , const float loss_weight , LayerParameter * split_layer_param)",80, 2, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::SplitLayerName( const string & layer_name , const string & blob_name , const int blob_idx)",73, 0, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::SplitBlobName( const string & layer_name , const string & blob_name , const int blob_idx , const int split_idx)",72, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsUpgrade( const NetParameter & net_param)",78, 2, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetAsNeeded( const string & param_file , NetParameter * param)",81, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::ReadNetParamsFromTextFileOrDie( const string & param_file , NetParameter * param)",62, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::ReadNetParamsFromBinaryFileOrDie( const string & param_file , NetParameter * param)",64, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsV0ToV1Upgrade( const NetParameter & net_param)",60, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsV1ToV2Upgrade( const NetParameter & net_param)",60, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0Net( const NetParameter & v0_net_param_padding_layers , NetParameter * net_param)",77, 51, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0PaddingLayers( const NetParameter & param , NetParameter * param_upgraded_pad)",80, 8, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0LayerParameter( const V1LayerParameter & v0_layer_connection , V1LayerParameter * layer_param)",81, 8, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0LayerType( const string & type)",68, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsDataUpgrade( const NetParameter & net_param)",81, 6, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetDataTransformation( NetParameter * net_param)",73, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV1Net( const NetParameter & v1_net_param , NetParameter * net_param)",79, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV1LayerParameter( const V1LayerParameter & v1_layer_param , LayerParameter * layer_param)",76, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV1LayerType( const V1LayerParameter_LayerType type)",72, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsInputUpgrade( const NetParameter & net_param)",59, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetInput( NetParameter * net_param)",78, 2, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsBatchNormUpgrade( const NetParameter & net_param)",74, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetBatchNorm( NetParameter * net_param)",75, 6, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::SolverNeedsTypeUpgrade( const SolverParameter & solver_param)",67, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeSolverType( SolverParameter * solver_param)",80, 6, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeSolverAsNeeded( const string & param_file , SolverParameter * param)",80, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeSnapshotPrefixProperty( const string & param_file , SolverParameter * param)",79, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::ReadSolverParamsFromTextFileOrDie( const string & param_file , SolverParameter * param)",65, 0, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::BlockingQueue()",34, 0, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::push( const T & t)",49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::try_pop( T * t)",49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::pop( const string & log_on_wait)",53, 0, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::try_peek( T * t)",49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::peek()",49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::size() const",49, 2, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Timer()",38, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::~Timer()",46, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Start()",68, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Stop()",67, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::MicroSeconds()",75, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::MilliSeconds()",75, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Seconds()",33, 2, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Init()",48, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::CPUTimer()",40, 2, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::Start()",72, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::Stop()",71, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::MilliSeconds()",72, 32, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::MicroSeconds()",72, 32, 0
repos/cpp/caffe/src/caffe/util/db_leveldb.cpp,"caffe::db::LevelDB::Open( const string & source , Mode mode)",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::ThresholdLayerTest::ThresholdLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::ThresholdLayerTest::~ThresholdLayerTest()",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::TYPED_TEST( ThresholdLayerTest , TestSetup)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::TYPED_TEST( ThresholdLayerTest , Test)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::TYPED_TEST( ThresholdLayerTest , Test2)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TEST_F( InternalThreadTest , TestStartAndExit)",47, 0, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TestThreadA::InternalThreadEntry()",45, 4, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TestThreadB::InternalThreadEntry()",45, 4, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TEST_F( InternalThreadTest , TestRandomSeed)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerConstructor)",50, 0, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerStart)",46, 2, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerStop)",47, 2, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerMilliSeconds)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerSeconds)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::InnerProductLayerTest::InnerProductLayerTest()",59, 8, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::InnerProductLayerTest::~InnerProductLayerTest()",37, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestSetUp)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestSetUpTransposeFalse)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestSetUpTransposeTrue)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestForward)",71, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestForwardTranspose)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestForwardNoBatch)",71, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestGradient)",72, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestGradientTranspose)",72, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestBackwardTranspose)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::ArgMaxLayerTest::ArgMaxLayerTest()",55, 6, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::ArgMaxLayerTest::~ArgMaxLayerTest()",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetup)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupMaxVal)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupAxis)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupAxisNegativeIndexing)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupAxisMaxVal)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPU)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUMaxVal)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUTopK)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUMaxValTopK)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUAxis)",71, 10, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUAxisTopK)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUAxisMaxValTopK)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::RNNLayerTest::RNNLayerTest()",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::RNNLayerTest::ReshapeBlobs( int num_timesteps , int num_instances)",62, 4, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestSetUp)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestForward)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradientNonZeroCont)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradientNonZeroContBufferSize2)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradientNonZeroContBufferSize2WithStaticInput)",78, 0, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::MaxPoolingDropoutTest::MaxPoolingDropoutTest()",41, 6, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::MaxPoolingDropoutTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::MaxPoolingDropoutTest::~MaxPoolingDropoutTest()",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::TYPED_TEST( MaxPoolingDropoutTest , TestSetup)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::TYPED_TEST( MaxPoolingDropoutTest , TestForward)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::TYPED_TEST( MaxPoolingDropoutTest , TestBackward)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::ImageDataLayerTest::ImageDataLayerTest()",46, 8, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::ImageDataLayerTest::SetUp()",79, 4, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::ImageDataLayerTest::~ImageDataLayerTest()",34, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestRead)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestResize)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestReshape)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestShuffle)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestSpace)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayerTest::MultinomialLogisticLossLayerTest()",72, 6, 0
repos/cpp/caffe/src/caffe/test/test_multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayerTest::~MultinomialLogisticLossLayerTest()",48, 2, 0
repos/cpp/caffe/src/caffe/test/test_multinomial_logistic_loss_layer.cpp,"caffe::TYPED_TEST( MultinomialLogisticLossLayerTest , TestGradientCPU)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::PaddingLayerUpgradeTest::RunPaddingUpgradeTest( const string & input_param_string , const string & output_param_string)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( PaddingLayerUpgradeTest , TestSimple)",74, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( PaddingLayerUpgradeTest , TestTwoTops)",74, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( PaddingLayerUpgradeTest , TestImageNet)",74, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::NetUpgradeTest::RunV0UpgradeTest( const string & input_param_string , const string & output_param_string)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::NetUpgradeTest::RunV1UpgradeTest( const string & input_param_string , const string & output_param_string)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestSimple)",75, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestAllParams)",75, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestImageNet)",75, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestUpgradeV1LayerType)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::SolverTypeUpgradeTest::RunSolverTypeUpgradeTest( const string & input_param_string , const string & output_param_string)",78, 4, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( SolverTypeUpgradeTest , TestSimple)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::MathFunctionsTest::MathFunctionsTest()",41, 6, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::MathFunctionsTest::SetUp()",49, 4, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::MathFunctionsTest::~MathFunctionsTest()",33, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestNothing)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestAsum)",56, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestSign)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestSgnbit)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestFabs)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestScale)",81, 51, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestCopy)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestAsum)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestSign)",69, 28, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestSgnbit)",69, 28, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestFabs)",69, 28, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestScale)",81, 51, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestCopy)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestInitialization)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestAllocationCPUGPU)",49, 0, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestAllocationCPU)",46, 0, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestAllocationGPU)",46, 0, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestCPUWrite)",53, 4, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestGPURead)",53, 4, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestGPUWrite)",59, 4, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::EuclideanLossLayerTest::EuclideanLossLayerTest()",58, 8, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::EuclideanLossLayerTest::~EuclideanLossLayerTest()",38, 2, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::EuclideanLossLayerTest::TestForward()",78, 4, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::TYPED_TEST( EuclideanLossLayerTest , TestForward)",50, 0, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::TYPED_TEST( EuclideanLossLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::ReshapeLayerTest::ReshapeLayerTest()",49, 4, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::ReshapeLayerTest::~ReshapeLayerTest()",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestFlattenOutputSizes)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestFlattenValues)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestCopyDimensions)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInferenceOfUnspecified)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInferenceOfUnspecifiedWithStartAxis)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInsertSingletonAxesStart)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInsertSingletonAxesMiddle)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInsertSingletonAxesEnd)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestFlattenMiddle)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestForward)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestForwardAfterReshape)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestGradient)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::DataLayerTest()",44, 6, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::SetUp()",46, 4, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::Fill( const bool unique_pixels , DataParameter_DB backend)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestRead()",71, 10, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestSkip()",73, 10, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReshape( DataParameter_DB backend)",79, 6, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReadCrop( Phase phase)",81, 12, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReadCropTrainSequenceSeeded()",69, 14, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReadCropTrainSequenceUnseeded()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::~DataLayerTest()",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadLevelDB)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestSkipLevelDB)",47, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReshapeLevelDB)",48, 0, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainLevelDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceSeededLevelDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceUnseededLevelDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTestLevelDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadLMDB)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestSkipLMDB)",44, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReshapeLMDB)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainLMDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceSeededLMDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceUnseededLMDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTestLMDB)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::SplitLayerTest::SplitLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::SplitLayerTest::~SplitLayerTest()",30, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TYPED_TEST( SplitLayerTest , TestSetup)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TYPED_TEST( SplitLayerTest , Test)",63, 4, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TYPED_TEST( SplitLayerTest , TestGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::SplitLayerInsertionTest::RunInsertionTest( const string & input_param_string , const string & output_param_string)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertion1)",52, 0, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertion2)",52, 0, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertionImageNet)",75, 6, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertionWithInPlace)",62, 0, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestLossInsertion)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestInsertion)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestInsertionTwoTop)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestWithInPlace)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_protobuf.cpp,"caffe::TEST_F( ProtoTest , TestSerialization)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_solver.cpp,"caffe::SolverTest::InitSolverFromProtoString( const string & proto)",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_solver.cpp,"caffe::TYPED_TEST( SolverTest , TestInitTrainTestNets)",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::GradientBasedSolverTest()",67, 6, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::~GradientBasedSolverTest()",31, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::InitSolverFromProtoString( const string & proto)",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::RunLeastSquaresSolver( const Dtype learning_rate , const Dtype weight_decay , const Dtype momentum , const int num_iters , const int iter_size = 1 , const int devices = 1 , const bool snapshot = false , const char * from_snapshot = NULL)",75, 6, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::ComputeLeastSquaresUpdate( const Dtype learning_rate , const Dtype weight_decay , const Dtype momentum , const int num_iters , vector<shared_ptr<Blob<Dtype>>> * updated_params)",80, 8, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::CheckLeastSquaresUpdate( const vector<shared_ptr<Blob<Dtype>>> & updated_params)",81, 10, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::CheckAccumulation( const Dtype kLearningRate , const Dtype kWeightDecay , const Dtype kMomentum , const int kNumIters , const int kIterSize)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::TestLeastSquaresUpdate( const Dtype learning_rate = 1 . 0 , const Dtype weight_decay = 0 . 0 , const Dtype momentum = 0 . 0 , const int iter_to_check = 0)",79, 6, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::TestSnapshot( const Dtype learning_rate = 1 . 0 , const Dtype weight_decay = 0 . 0 , const Dtype momentum = 0 . 0 , const int num_iters = 1)",80, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::SGDSolverTest::InitSolver( const SolverParameter & param)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdate)",52, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateLROneHundredth)",66, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithWeightDecay)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithWeightDecayMultiIter)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithMomentum)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithMomentumMultiIter)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverything)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverythingShare)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestSnapshot)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestSnapshotShare)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::AdaGradSolverTest::InitSolver( const SolverParameter & param)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdate)",63, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateLROneHundredth)",77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateWithWeightDecay)",78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateWithEverything)",77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateWithEverythingShare)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestSnapshot)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestSnapshotShare)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::NesterovSolverTest::InitSolver( const SolverParameter & param)",59, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdate)",65, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateLROneHundredth)",79, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithWeightDecay)",80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithWeightDecayMultiIter)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithMomentum)",77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestLeastSquaresUpdateWithMomentumMultiIter)",78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithEverything)",79, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithEverythingShare)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",81, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestSnapshot)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestSnapshotShare)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::AdaDeltaSolverTest::InitSolver( const SolverParameter & param)",59, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdate)",65, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithWeightDecay)",80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithHalfMomentum)",81, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithMomentum)",77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestLeastSquaresUpdateWithMomentumMultiIter)",78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithEverything)",79, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithEverythingShare)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",81, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestSnapshot)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestSnapshotShare)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::AdamSolverTest::InitSolver( const SolverParameter & param)",59, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdate)",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdateWithWeightDecay)",72, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdateWithEverything)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdateWithEverythingShare)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestSnapshot)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestSnapshotShare)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::RMSPropSolverTest::InitSolver( const SolverParameter & param)",62, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithWeightDecay)",78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithRmsDecay)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithEverything)",77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithEverythingShare)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestSnapshot)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestSnapshotShare)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::PowerLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::~PowerLayerTest()",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::TestForward( Dtype power , Dtype scale , Dtype shift)",73, 6, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::TestBackward( Dtype power , Dtype scale , Dtype shift)",71, 4, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPower)",43, 2, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerGradient)",48, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerGradientShiftZero)",57, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerZero)",44, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerZeroGradient)",52, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerOne)",43, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerOneGradient)",51, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerTwo)",43, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerTwoGradient)",51, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerTwoScaleHalfGradient)",60, 0, 0
repos/cpp/caffe/src/caffe/test/test_caffe_main.cpp,"main( int argc , char ** argv)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::NeuronLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::~NeuronLayerTest()",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestDropoutForward( const float dropout_ratio)",80, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestExpForward( const float base , const float scale , const float shift)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestExpGradient( const float base , const float scale , const float shift)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestPReLU( PReLULayer<Dtype> * layer)",79, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::LogBottomInit()",70, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestLogForward( const float base , const float scale , const float shift)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestLogGradient( const float base , const float scale , const float shift)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestAbsVal)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestAbsGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestClip)",63, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestClipGradient)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLU)",68, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLUGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLUWithNegativeSlope)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLUGradientWithNegativeSlope)",65, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELU)",73, 6, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELUasReLU)",68, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELUGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELUasReLUGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSigmoid)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSigmoidGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwish)",80, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishWithBeta)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishAsLinear)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishWithBetaGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishAsLinearGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestTanH)",68, 13, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestTanHGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayer)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradient)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerWithShift)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientWithShift)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2)",49, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2)",52, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2Shift1)",55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2Shift1)",58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2Scale3)",55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2Scale3)",58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2Shift1Scale3)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2Shift1Scale3)",64, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayer)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradient)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2)",49, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2)",52, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2Shift1)",55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2Shift1)",58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2Scale3)",55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2Scale3)",58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2Shift1Scale3)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2Shift1Scale3)",64, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutHalf)",47, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutThreeQuarters)",56, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutTestPhase)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutGradientTest)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestBNLL)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestBNLLGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUParam)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUForward)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUForwardChannelShared)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUGradientChannelShared)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUConsistencyReLU)",80, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUInPlace)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::CuDNNNeuronLayerTest::CuDNNNeuronLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::CuDNNNeuronLayerTest::~CuDNNNeuronLayerTest()",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUCuDNN)",68, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUGradientCuDNN)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUWithNegativeSlopeCuDNN)",67, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUGradientWithNegativeSlopeCuDNN)",75, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestSigmoidCuDNN)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestSigmoidGradientCuDNN)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestTanHCuDNN)",68, 13, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestTanHGradientCuDNN)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::MVNLayerTest::MVNLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::MVNLayerTest::~MVNLayerTest()",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestForward)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestForwardMeanOnly)",62, 6, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestForwardAcrossChannels)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestGradientMeanOnly)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestGradientAcrossChannels)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::SPPLayerTest::SPPLayerTest()",43, 8, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::SPPLayerTest::SetUp()",50, 4, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::SPPLayerTest::~SPPLayerTest()",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestSetup)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestEqualOutputDims)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestEqualOutputDims2)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestForwardBackward)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestCublasHandlerGPU)",46, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestBrewMode)",40, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestRandSeedCPU)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestRandSeedGPU)",69, 8, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::BatchReindexLayerTest()",49, 8, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::SetUp()",62, 4, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::~BatchReindexLayerTest()",37, 2, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::TestForward()",71, 10, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::TYPED_TEST( BatchReindexLayerTest , TestForward)",49, 0, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::TYPED_TEST( BatchReindexLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayerTest::ContrastiveLossLayerTest()",79, 4, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayerTest::~ContrastiveLossLayerTest()",40, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestForward)",73, 6, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestForwardLegacy)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestGradientLegacy)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TileLayerTest::TileLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TileLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TileLayerTest::~TileLayerTest()",29, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestTrivialSetup)",76, 4, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestSetup)",76, 4, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestForwardNum)",69, 11, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestForwardChannels)",69, 11, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestTrivialGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestGradientNum)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestGradientChannels)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::ConstantFillerTest::ConstantFillerTest()",61, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::ConstantFillerTest::test_params( const vector<int> & shape)",55, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::ConstantFillerTest::~ConstantFillerTest()",50, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill)",43, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill1D)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill2D)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill5D)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::UniformFillerTest::UniformFillerTest()",60, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::UniformFillerTest::test_params( const vector<int> & shape)",55, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::UniformFillerTest::~UniformFillerTest()",49, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill)",42, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill1D)",44, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill2D)",44, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill5D)",44, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::PositiveUnitballFillerTest::PositiveUnitballFillerTest()",69, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::PositiveUnitballFillerTest::test_params( const vector<int> & shape)",55, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::PositiveUnitballFillerTest::~PositiveUnitballFillerTest()",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill)",51, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill1D)",53, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill2D)",53, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill5D)",53, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::GaussianFillerTest()",61, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::test_params( const vector<int> & shape , const Dtype tolerance = Dtype(5) , const int repetitions = 100)",71, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::test_params_iter( const vector<int> & shape , const Dtype tolerance)",80, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::~GaussianFillerTest()",50, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill1D)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill2D)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill5D)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::XavierFillerTest()",34, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::test_params( FillerParameter_VarianceNorm variance_norm , Dtype n , const vector<int> & shape , const int repetitions = 100)",72, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::test_params_iter( FillerParameter_VarianceNorm variance_norm , Dtype n)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::~XavierFillerTest()",48, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFillFanIn)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFillFanOut)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFillAverage)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFill1D)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFill2D)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFill5D)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::MSRAFillerTest()",34, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::test_params( FillerParameter_VarianceNorm variance_norm , Dtype n , const vector<int> & shape , const int repetitions = 100)",72, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::test_params_iter( FillerParameter_VarianceNorm variance_norm , Dtype n)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::~MSRAFillerTest()",46, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFillFanIn)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFillFanOut)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFillAverage)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFill1D)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFill2D)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFill5D)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::BilinearFillerTest::BilinearFillerTest()",32, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::BilinearFillerTest::test_params( const vector<int> & shape)",78, 8, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::BilinearFillerTest::~BilinearFillerTest()",50, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( BilinearFillerTest , TestFillOdd)",46, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( BilinearFillerTest , TestFillEven)",47, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobSimpleTest::BlobSimpleTest()",56, 8, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobSimpleTest::~BlobSimpleTest()",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestInitialization)",51, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestPointersCPUGPU)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestReshape)",42, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestReshapeZero)",46, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestLegacyBlobProtoShapeEquals)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobMathTest::BlobMathTest()",44, 6, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobMathTest::~BlobMathTest()",44, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobMathTest , TestSumOfSquares)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobMathTest , TestAsum)",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobMathTest , TestScaleData)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_util_blas.cpp,"caffe::TYPED_TEST( GemmTest , TestGemmCPUGPU)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_util_blas.cpp,"caffe::TYPED_TEST( GemmTest , TestGemvCPUGPU)",68, 4, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::tanh_naive( double x)",64, 4, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::TanHLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::~TanHLayerTest()",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::TestForward( Dtype filler_std)",71, 8, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::TestBackward( Dtype filler_std)",65, 4, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TYPED_TEST( TanHLayerTest , TestTanH)",38, 0, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TYPED_TEST( TanHLayerTest , TestTanHOverflow)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TYPED_TEST( TanHLayerTest , TestTanHGradient)",46, 0, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::StochasticPoolingLayerTest::StochasticPoolingLayerTest()",41, 6, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::StochasticPoolingLayerTest::SetUp()",47, 4, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::StochasticPoolingLayerTest::~StochasticPoolingLayerTest()",43, 4, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( CPUStochasticPoolingLayerTest , TestSetup)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( GPUStochasticPoolingLayerTest , TestStochastic)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( GPUStochasticPoolingLayerTest , TestStochasticTestPhase)",78, 10, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( GPUStochasticPoolingLayerTest , TestGradient)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_solver_factory.cpp,"caffe::SolverFactoryTest::simple_solver_param()",58, 8, 0
repos/cpp/caffe/src/caffe/test/test_solver_factory.cpp,"caffe::TYPED_TEST( SolverFactoryTest , TestCreateSolver)",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::HDF5DataLayerTest::HDF5DataLayerTest()",47, 8, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::HDF5DataLayerTest::SetUp()",70, 4, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::HDF5DataLayerTest::~HDF5DataLayerTest()",33, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::TYPED_TEST( HDF5DataLayerTest , TestRead)",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::TYPED_TEST( HDF5DataLayerTest , TestSkip)",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::ScaleLayerTest::ScaleLayerTest()",62, 4, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::ScaleLayerTest::~ScaleLayerTest()",37, 4, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardEltwise)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardEltwiseInPlace)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestBackwardEltwiseInPlace)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardEltwiseWithParam)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastBegin)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddle)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddleInPlace)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestBackwardBroadcastMiddleInPlace)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddleWithParam)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddleWithParamAndBias)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastEnd)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardScale)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardScaleAxis2)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientEltwise)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientEltwiseWithParam)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastBegin)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastMiddle)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastMiddleWithParam)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastEnd)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientScale)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientScaleAndBias)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientScaleAxis2)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_layer_factory.cpp,"caffe::TYPED_TEST( LayerFactoryTest , TestCreateLayer)",73, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::SoftmaxWithLossLayerTest::SoftmaxWithLossLayerTest()",72, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::SoftmaxWithLossLayerTest::~SoftmaxWithLossLayerTest()",40, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestForwardIgnoreLabel)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestGradientIgnoreLabel)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestGradientUnnormalized)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::EmbedLayerTest::EmbedLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::EmbedLayerTest::~EmbedLayerTest()",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestSetUp)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestForward)",78, 4, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestForwardWithBias)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestGradient)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestGradientWithBias)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::DummyDataLayerTest::DummyDataLayerTest()",42, 8, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::DummyDataLayerTest::SetUp()",42, 4, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::DummyDataLayerTest::~DummyDataLayerTest()",34, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::TYPED_TEST( DummyDataLayerTest , TestOneTopConstant)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::TYPED_TEST( DummyDataLayerTest , TestTwoTopConstant)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::TYPED_TEST( DummyDataLayerTest , TestThreeTopConstantGaussianConstant)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::SigmoidCrossEntropyLossLayerTest()",63, 4, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::~SigmoidCrossEntropyLossLayerTest()",48, 2, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::SigmoidCrossEntropyLossReference( const int count , const int num , const Dtype * input , const Dtype * target)",79, 6, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::TestForward()",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::TYPED_TEST( SigmoidCrossEntropyLossLayerTest , TestSigmoidCrossEntropyLoss)",76, 0, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::TYPED_TEST( SigmoidCrossEntropyLossLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::TYPED_TEST( SigmoidCrossEntropyLossLayerTest , TestIgnoreGradient)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::BatchNormLayerTest::BatchNormLayerTest()",53, 8, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::BatchNormLayerTest::~BatchNormLayerTest()",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::TYPED_TEST( BatchNormLayerTest , TestForward)",64, 4, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::TYPED_TEST( BatchNormLayerTest , TestForwardInplace)",59, 12, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::TYPED_TEST( BatchNormLayerTest , TestGradient)",68, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::DeconvolutionLayerTest::DeconvolutionLayerTest()",53, 8, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::DeconvolutionLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::DeconvolutionLayerTest::~DeconvolutionLayerTest()",38, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestSetup)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestSimpleDeconvolution)",69, 10, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestGradient)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestNDAgainst2D)",74, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestGradient3D)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::CuDNNDeconvolutionLayerTest::CuDNNDeconvolutionLayerTest()",53, 8, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::CuDNNDeconvolutionLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::CuDNNDeconvolutionLayerTest::~CuDNNDeconvolutionLayerTest()",43, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestSetup)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestSimpleCuDNNDeconvolution)",72, 0, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestGradient)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestNDAgainst2D)",74, 4, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::MemoryDataLayerTest::MemoryDataLayerTest()",40, 6, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::MemoryDataLayerTest::SetUp()",72, 4, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::MemoryDataLayerTest::~MemoryDataLayerTest()",35, 2, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , TestSetup)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , TestForward)",76, 14, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , AddDatumVectorDefaultTransform)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , AddMatVectorDefaultTransform)",81, 12, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , TestSetBatchSize)",81, 12, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::FilterLayerTest::FilterLayerTest()",60, 8, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::FilterLayerTest::SetUp()",78, 4, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::FilterLayerTest::~FilterLayerTest()",34, 4, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::TYPED_TEST( FilterLayerTest , TestReshape)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::TYPED_TEST( FilterLayerTest , TestForward)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::TYPED_TEST( FilterLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::DBTest::DBTest()",71, 6, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::DBTest::SetUp()",59, 4, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::DBTest::~DBTest()",24, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestGetDB)",56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestNext)",56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestSeekToFirst)",56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestKeyValue)",56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestWrite)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::ConcatLayerTest::ConcatLayerTest()",53, 6, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::ConcatLayerTest::SetUp()",59, 4, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::ConcatLayerTest::~ConcatLayerTest()",50, 4, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestSetupNum)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestSetupChannels)",76, 6, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestSetupChannelsNegativeIndexing)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestForwardTrivial)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestForwardNum)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestForwardChannels)",65, 4, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientTrivial)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientNum)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientChannels)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientChannelsBottomOneOnly)",65, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::ReductionLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::~ReductionLayerTest()",34, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::TestForward( ReductionParameter_ReductionOp op , float coeff = 1 , int axis = 0)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::TestGradient( ReductionParameter_ReductionOp op , float coeff = 1 , int axis = 0)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSetUp)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSetUpWithAxis1)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSetUpWithAxis2)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSum)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeff)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeffAxis1)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumGradient)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeffGradient)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeffAxis1Gradient)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMean)",45, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeff)",48, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeffAxis1)",53, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanGradient)",51, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeffGradient)",56, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeffGradientAxis1)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSum)",45, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeff)",50, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeffAxis1)",55, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumGradient)",53, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeffGradient)",58, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeffAxis1Gradient)",63, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquares)",51, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeff)",56, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeffAxis1)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresGradient)",59, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeffGradient)",64, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeffAxis1Gradient)",69, 0, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::Im2colLayerTest::Im2colLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::Im2colLayerTest::~Im2colLayerTest()",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestSetup)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestForward)",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestDilatedGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestGradientForceND)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestDilatedGradientForceND)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestRect)",71, 8, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestRectGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::FillDatum( const int label , const int channels , const int height , const int width , const bool unique_pixels , Datum * datum)",70, 0, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::DataTransformTest::DataTransformTest()",23, 6, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::DataTransformTest::NumSequenceMatches( const TransformationParameter transform_param , const Datum & datum , Phase phase)",80, 8, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestEmptyTransform)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestEmptyTransformUniquePixels)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropSize)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropTrain)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropTest)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMirrorTrain)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMirrorTest)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropMirrorTrain)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropMirrorTest)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMeanValue)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMeanValues)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMeanFile)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::InfogainLossLayerTest::InfogainLossLayerTest()",60, 8, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::InfogainLossLayerTest::~InfogainLossLayerTest()",37, 2, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::TYPED_TEST( InfogainLossLayerTest , TestInfogainLoss)",81, 8, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::TYPED_TEST( InfogainLossLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::BiasLayerTest::BiasLayerTest()",62, 4, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::BiasLayerTest::~BiasLayerTest()",37, 4, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardEltwise)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardEltwiseInPlace)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestBackwardEltwiseInPlace)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardEltwiseWithParam)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastBegin)",75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastMiddle)",75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastMiddleInPlace)",75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestBackwardBroadcastMiddleInPlace)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastMiddleWithParam)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastEnd)",75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBias)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBiasAxis2)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientEltwise)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientEltwiseWithParam)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastBegin)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastMiddle)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastMiddleWithParam)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastEnd)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBias)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBiasAxis2)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::HDF5OutputLayerTest::HDF5OutputLayerTest()",63, 6, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::HDF5OutputLayerTest::~HDF5OutputLayerTest()",35, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::HDF5OutputLayerTest<TypeParam>::CheckBlobEqual( const Blob<Dtype> & b1 , const Blob<Dtype> & b2)",77, 52, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::TYPED_TEST( HDF5OutputLayerTest , TestForward)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::SliceLayerTest()",52, 6, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::ReduceBottomBlobSize()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::~SliceLayerTest()",45, 4, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSetupNum)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSetupChannels)",72, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestTrivialSlice)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSliceAcrossNum)",65, 10, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSliceAcrossChannels)",76, 10, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestGradientTrivial)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestGradientAcrossNum)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestGradientAcrossChannels)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::HingeLossLayerTest::HingeLossLayerTest()",72, 6, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::HingeLossLayerTest::~HingeLossLayerTest()",34, 2, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::TYPED_TEST( HingeLossLayerTest , TestGradientL1)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::TYPED_TEST( HingeLossLayerTest , TestGradientL2)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::ReadImageToDatumReference( const string & filename , const int label , const int height , const int width , const bool is_color , Datum * datum)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatum)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumReference)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumReferenceResized)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumContent)",61, 10, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumContentGray)",79, 6, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumResized)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumResizedSquare)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumGray)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumResizedGray)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMat)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatResized)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatResizedSquare)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatGray)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatResizedGray)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestCVMatToDatum)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestCVMatToDatumContent)",59, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestCVMatToDatumReference)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadFileToDatum)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatum)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMat)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatContent)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumNative)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatNative)",58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumNativeGray)",67, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatNativeGray)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatContentNative)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_platform.cpp,"caffe::TEST_F( PlatformTest , TestInitialization)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::LSTMLayerTest::LSTMLayerTest()",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::LSTMLayerTest::ReshapeBlobs( int num_timesteps , int num_instances)",72, 4, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestSetUp)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestForward)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestLSTMUnitSetUp)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestLSTMUnitGradient)",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestLSTMUnitGradientNonZeroCont)",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradientNonZeroCont)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradientNonZeroContBufferSize2)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradientNonZeroContBufferSize2WithStaticInput)",79, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RandomNumberGeneratorTest()",77, 5, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::SetUp()",41, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const Dtype * const seqs , const int sample_size)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const Dtype * const seqs)",47, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const int * const seqs , const int sample_size)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const int * const seqs)",45, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::mean_bound( const Dtype std , const int sample_size)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::mean_bound( const Dtype std)",42, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngGaussianFill( const Dtype mu , const Dtype sigma , void * cpu_data)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngGaussianChecks( const Dtype mu , const Dtype sigma , const void * cpu_data , const Dtype sparse_p = 0)",75, 25, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformFill( const Dtype lower , const Dtype upper , void * cpu_data)",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformChecks( const Dtype lower , const Dtype upper , const void * cpu_data , const Dtype sparse_p = 0)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngBernoulliFill( const Dtype p , void * cpu_data)",57, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngBernoulliChecks( const Dtype p , const void * cpu_data)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngGaussianFillGPU( const Dtype mu , const Dtype sigma , void * gpu_data)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformFillGPU( const Dtype lower , const Dtype upper , void * gpu_data)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformIntFillGPU( void * gpu_data)",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussian)",57, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussian2)",58, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniform)",56, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniform2)",57, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngBernoulli)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngBernoulli2)",62, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianTimesGaussian)",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformTimesUniform)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianTimesBernoulli)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformTimesBernoulli)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngBernoulliTimesBernoulli)",72, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianGPU)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussian2GPU)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformGPU)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniform2GPU)",60, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformIntGPU)",74, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianTimesGaussianGPU)",73, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformTimesUniformGPU)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::SoftmaxLayerTest::SoftmaxLayerTest()",52, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::SoftmaxLayerTest::~SoftmaxLayerTest()",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( SoftmaxLayerTest , TestForward)",68, 14, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( SoftmaxLayerTest , TestGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayerTest::CuDNNSoftmaxLayerTest()",52, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayerTest::~CuDNNSoftmaxLayerTest()",78, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( CuDNNSoftmaxLayerTest , TestForwardCuDNN)",68, 14, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( CuDNNSoftmaxLayerTest , TestGradientCuDNN)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::NetTest()",29, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitNetFromProtoString( const string & proto)",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitNetFromProtoFileWithState( const string & proto , Phase phase = caffe :: TRAIN , const int level = 0 , const vector<string> * stages = NULL)",73, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::CopyNetBlobs( const bool copy_diff , vector<shared_ptr<Blob<Dtype>>> * blobs_copy)",72, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::CopyNetParams( const bool copy_diff , vector<shared_ptr<Blob<Dtype>>> * params_copy)",74, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitTinyNet( const bool force_backward = false , const bool accuracy_layer = false)",64, 27, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitTinyNetEuclidean( const bool force_backward = false)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitTrickyNet( Dtype * loss_weight = NULL)",70, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitUnsharedWeightsNet( const Dtype * loss_weight = NULL , const Dtype * midnet_loss_weight = NULL , const bool force_backward = false , const bool bias_term = false , const Dtype blobs_lr_w1 = 1 , const Dtype blobs_lr_b1 = 2 , const Dtype blobs_lr_w2 = 1 , const Dtype blobs_lr_b2 = 2)",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitSharedWeightsNet()",45, 8, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitDiffDataUnsharedWeightsNet()",50, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitDiffDataSharedWeightsNet()",48, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitReshapableNet()",56, 8, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitSkipPropNet( bool test_skip_true)",54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitForcePropNet( bool test_force_true)",56, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitAllInOneNet( Phase phase = caffe :: TRAIN , const int level = 0 , const vector<string> * stages = NULL)",66, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestHasBlob)",53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestGetBlob)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestHasLayer)",54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestGetLayerByName)",81, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackward)",54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackwardForce)",54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackwardEuclideanForce)",60, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackwardTricky)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestLossWeight)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestLossWeightMidNet)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestComboLossWeight)",78, 8, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBackwardWithAccuracyLayer)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestUnsharedWeightsDataNet)",50, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsDataNet)",48, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestUnsharedWeightsDiffNet)",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsDiffNet)",71, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsUpdate)",80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsResume)",78, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestParamPropagateDown)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestFromTo)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::FilterNetTest::RunFilterNetTest( const string & input_param_string , const string & filtered_param_string)",79, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestNoFilter)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterLeNetTrainTest)",77, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByStage)",53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByStage2)",53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByStage)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByStage2)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByMultipleStage)",63, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMultipleStage)",53, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMultipleStage2)",63, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByNotStage)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByNotStage)",53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByMinLevel)",53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByMaxLevel)",53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMinLevel)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMinLevel2)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMaxLevel)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMaxLevel2)",52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInOutByIncludeMultiRule)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByIncludeMultiRule)",64, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInOutByExcludeMultiRule)",65, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestReshape)",80, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSkipPropagateDown)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestForcePropagateDown)",79, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestAllInOneNetTrain)",61, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestAllInOneNetVal)",61, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestAllInOneNetDeploy)",61, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::PoolingLayerTest()",45, 8, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::~PoolingLayerTest()",32, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::TestForwardSquare()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::TestForwardRectHigh()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::TestForwardRectWide()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestSetup)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestSetupPadded)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestSetupGlobalPooling)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardMax)",47, 0, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardMaxTopMask)",55, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientMax)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardMaxPadded)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientMaxTopMask)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardAve)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientAve)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientAvePadded)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::CuDNNPoolingLayerTest()",45, 8, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::~CuDNNPoolingLayerTest()",37, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::TestForwardSquare()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::TestForwardRectHigh()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::TestForwardRectWide()",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestSetupCuDNN)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestSetupPaddedCuDNN)",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestForwardMaxCuDNN)",57, 0, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestGradientMaxCuDNN)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestForwardMaxPaddedCuDNN)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestForwardAveCuDNN)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestGradientAveCuDNN)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestGradientAvePaddedCuDNN)",77, 6, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::EltwiseLayerTest::EltwiseLayerTest()",53, 6, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::EltwiseLayerTest::~EltwiseLayerTest()",32, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSetUp)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestProd)",76, 4, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSum)",76, 4, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSumCoeff)",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestStableProdGradient)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestUnstableProdGradient)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSumGradient)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSumCoeffGradient)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestMax)",77, 14, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestMaxGradient)",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::FlattenLayerTest::FlattenLayerTest()",51, 6, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::FlattenLayerTest::~FlattenLayerTest()",73, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetup)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetupWithAxis)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetupWithEndAxis)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetupWithStartAndEndAxis)",61, 0, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestForward)",74, 8, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestGradient)",63, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::caffe_conv( const Blob<Dtype> * in , ConvolutionParameter * conv_param , const vector<shared_ptr<Blob<Dtype>>> & weights , Blob<Dtype> * out)",81, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::ConvolutionLayerTest()",53, 8, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::~ConvolutionLayerTest()",36, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::MakeReferenceTop( Blob<Dtype> * top)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSetup)",61, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSimpleConvolution)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestDilatedConvolution)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , Test0DConvolution)",76, 17, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSimple3DConvolution)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestDilated3DConvolution)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , Test1x1Convolution)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSimpleConvolutionGroup)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSobelConvolution)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestNDAgainst2D)",74, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestGradient)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestDilatedGradient)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestGradient3D)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , Test1x1Gradient)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestGradientGroup)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::CuDNNConvolutionLayerTest()",53, 8, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::~CuDNNConvolutionLayerTest()",41, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::MakeReferenceTop( Blob<Dtype> * top)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSetupCuDNN)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSimpleConvolutionCuDNN)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSimpleConvolutionGroupCuDNN)",73, 0, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSobelConvolutionCuDNN)",75, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestGradientCuDNN)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestGradientGroupCuDNN)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::AccuracyLayerTest::AccuracyLayerTest()",60, 4, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::AccuracyLayerTest::FillBottoms()",67, 4, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::AccuracyLayerTest::~AccuracyLayerTest()",33, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestSetup)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestSetupTopK)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestSetupOutputPerClass)",70, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForward)",72, 8, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardWithSpatialAxes)",81, 14, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardIgnoreLabel)",80, 6, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardTopK)",78, 10, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardPerClass)",75, 9, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardPerClassWithIgnoreLabel)",80, 6, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest::LRNLayerTest()",41, 8, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest::~LRNLayerTest()",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest<TypeParam>::ReferenceLRNForward( const Blob<Dtype> & blob_bottom , const LayerParameter & layer_param , Blob<Dtype> * blob_top)",71, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestSetupAcrossChannels)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestForwardAcrossChannels)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestForwardAcrossChannelsLargeRegion)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestGradientAcrossChannels)",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestGradientAcrossChannelsLargeRegion)",69, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestSetupWithinChannel)",60, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestForwardWithinChannel)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestGradientWithinChannel)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest::CuDNNLRNLayerTest()",41, 8, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest::~CuDNNLRNLayerTest()",74, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest<TypeParam>::ReferenceLRNForward( const Blob<TypeParam> & blob_bottom , const LayerParameter & layer_param , Blob<TypeParam> * blob_top)",75, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestForwardAcrossChannelsCuDNN)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestForwardAcrossChannelsLargeRegionCuDNN)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestGradientAcrossChannelsCuDNN)",68, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestForwardWithinChannel)",77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestGradientWithinChannel)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestGradientAcrossChannelsLargeRegionCuDNN)",76, 0, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::CropLayerTest::CropLayerTest()",53, 6, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::CropLayerTest::SetUp()",48, 4, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::CropLayerTest::~CropLayerTest()",50, 4, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestSetupShapeAll)",74, 4, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestSetupShapeDefault)",76, 6, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestSetupShapeNegativeIndexing)",76, 6, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestDimensionsCheck)",76, 2, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropAll)",66, 8, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropAllOffset)",66, 8, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropHW)",66, 8, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCrop5D)",69, 10, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropAllGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropHWGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCrop5DGradient)",66, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_conv_layer.cpp,"caffe::CuDNNConvolutionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_conv_layer.cpp,"caffe::CuDNNConvolutionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/cudnn_conv_layer.cpp,"caffe::CuDNNConvolutionLayer<Dtype>::~CuDNNConvolutionLayer()",69, 2, 0
repos/cpp/caffe/src/caffe/layers/log_layer.cpp,"caffe::LogLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 6, 0
repos/cpp/caffe/src/caffe/layers/log_layer.cpp,"caffe::LogLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",70, 0, 0
repos/cpp/caffe/src/caffe/layers/log_layer.cpp,"caffe::LogLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::check_batch_reindex( int initial_num , int final_num , const Dtype * ridx_data)",77, 51, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 0, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/tile_layer.cpp,"caffe::TileLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/tile_layer.cpp,"caffe::TileLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/tile_layer.cpp,"caffe::TileLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/reshape_layer.cpp,"caffe::ReshapeLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/reshape_layer.cpp,"caffe::ReshapeLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 8, 0
repos/cpp/caffe/src/caffe/layers/cudnn_sigmoid_layer.cpp,"caffe::CuDNNSigmoidLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_sigmoid_layer.cpp,"caffe::CuDNNSigmoidLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_sigmoid_layer.cpp,"caffe::CuDNNSigmoidLayer<Dtype>::~CuDNNSigmoidLayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_layer.cpp,"caffe::SoftmaxLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/softmax_layer.cpp,"caffe::SoftmaxLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",77, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_layer.cpp,"caffe::SoftmaxLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",81, 8, 0
repos/cpp/caffe/src/caffe/layers/mvn_layer.cpp,"caffe::MVNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 4, 0
repos/cpp/caffe/src/caffe/layers/mvn_layer.cpp,"caffe::MVNLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 2, 0
repos/cpp/caffe/src/caffe/layers/mvn_layer.cpp,"caffe::MVNLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",74, 4, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::crop_copy( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top , const int * offsets , vector<int> indices , int cur_dim , const Dtype * src_data , Dtype * dest_data , bool is_forward)",77, 4, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 6, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",70, 0, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/flatten_layer.cpp,"caffe::FlattenLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 2, 0
repos/cpp/caffe/src/caffe/layers/flatten_layer.cpp,"caffe::FlattenLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/flatten_layer.cpp,"caffe::FlattenLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/hinge_loss_layer.cpp,"caffe::HingeLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 0, 0
repos/cpp/caffe/src/caffe/layers/hinge_loss_layer.cpp,"caffe::HingeLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/threshold_layer.cpp,"caffe::ThresholdLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/threshold_layer.cpp,"caffe::ThresholdLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 0, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 6, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Reset()",79, 2, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/silence_layer.cpp,"caffe::SilenceLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/clip_layer.cpp,"caffe::ClipLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/clip_layer.cpp,"caffe::ClipLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",69, 0, 0
repos/cpp/caffe/src/caffe/layers/multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",73, 4, 0
repos/cpp/caffe/src/caffe/layers/bnll_layer.cpp,"caffe::BNLLLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/bnll_layer.cpp,"caffe::BNLLLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",70, 6, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_layer.cpp,"caffe::sigmoid( Dtype x)",36, 2, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_layer.cpp,"caffe::SigmoidLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_layer.cpp,"caffe::SigmoidLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BaseDataLayer<Dtype>::BaseDataLayer( const LayerParameter & param)",65, 0, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BaseDataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::BasePrefetchingDataLayer( const LayerParameter & param)",64, 6, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::InternalThreadEntry()",75, 4, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/split_layer.cpp,"caffe::SplitLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/split_layer.cpp,"caffe::SplitLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/split_layer.cpp,"caffe::SplitLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::~ImageDataLayer<Dtype>()",50, 0, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 0, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::ShuffleImages()",62, 6, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::load_batch( Batch<Dtype> * batch)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/argmax_layer.cpp,"caffe::ArgMaxLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 2, 0
repos/cpp/caffe/src/caffe/layers/argmax_layer.cpp,"caffe::ArgMaxLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",69, 0, 0
repos/cpp/caffe/src/caffe/layers/argmax_layer.cpp,"caffe::ArgMaxLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 8, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::RecurrentInputBlobNames( vector<string> * names) const",78, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::RecurrentOutputBlobNames( vector<string> * names) const",79, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::RecurrentInputShapes( vector<BlobShape> * shapes) const",79, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::OutputBlobNames( vector<string> * names) const",70, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::FillUnrolledNet( NetParameter * net_param) const",80, 4, 0
repos/cpp/caffe/src/caffe/layers/euclidean_loss_layer.cpp,"caffe::EuclideanLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 2, 0
repos/cpp/caffe/src/caffe/layers/euclidean_loss_layer.cpp,"caffe::EuclideanLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 0, 0
repos/cpp/caffe/src/caffe/layers/euclidean_loss_layer.cpp,"caffe::EuclideanLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 0, 0
repos/cpp/caffe/src/caffe/layers/dummy_data_layer.cpp,"caffe::DummyDataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/dummy_data_layer.cpp,"caffe::DummyDataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 0, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",77, 2, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 0, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",77, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_tanh_layer.cpp,"caffe::CuDNNTanHLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_tanh_layer.cpp,"caffe::CuDNNTanHLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_tanh_layer.cpp,"caffe::CuDNNTanHLayer<Dtype>::~CuDNNTanHLayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/relu_layer.cpp,"caffe::ReLULayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 2, 0
repos/cpp/caffe/src/caffe/layers/relu_layer.cpp,"caffe::ReLULayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",77, 4, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",68, 0, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 0, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",70, 0, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::~HDF5DataLayer<Dtype>()",50, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::LoadHDF5FileData( const char * filename)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::Skip()",67, 14, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::Next()",79, 6, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/absval_layer.cpp,"caffe::AbsValLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/absval_layer.cpp,"caffe::AbsValLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/absval_layer.cpp,"caffe::AbsValLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::get_normalizer( LossParameter_NormalizationMode normalization_mode , int valid_count)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_pooling_layer.cpp,"caffe::CuDNNPoolingLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_pooling_layer.cpp,"caffe::CuDNNPoolingLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_pooling_layer.cpp,"caffe::CuDNNPoolingLayer<Dtype>::~CuDNNPoolingLayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::~HDF5OutputLayer<Dtype>()",71, 4, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::SaveBlobs()",70, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",77, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",67, 2, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",70, 0, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::CrossChannelForward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::WithinChannelForward( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::CrossChannelBackward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::WithinChannelBackward( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/neuron_layer.cpp,"caffe::NeuronLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",69, 0, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::get_normalizer( LossParameter_NormalizationMode normalization_mode , int valid_count)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 8, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",73, 4, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 8, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/cudnn_relu_layer.cpp,"caffe::CuDNNReLULayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_relu_layer.cpp,"caffe::CuDNNReLULayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_relu_layer.cpp,"caffe::CuDNNReLULayer<Dtype>::~CuDNNReLULayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 6, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/conv_layer.cpp,"caffe::ConvolutionLayer<Dtype>::compute_output_shape()",81, 4, 0
repos/cpp/caffe/src/caffe/layers/conv_layer.cpp,"caffe::ConvolutionLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 0, 0
repos/cpp/caffe/src/caffe/layers/conv_layer.cpp,"caffe::ConvolutionLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::GetPoolingParam( const int pyramid_level , const int bottom_h , const int bottom_w , const SPPParameter spp_param)",78, 6, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",77, 6, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",70, 0, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/tanh_layer.cpp,"caffe::TanHLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/tanh_layer.cpp,"caffe::TanHLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",69, 0, 0
repos/cpp/caffe/src/caffe/layers/contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 2, 0
repos/cpp/caffe/src/caffe/layers/contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 8, 0
repos/cpp/caffe/src/caffe/layers/contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 0, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 2, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 4, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 0, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 2, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/loss_layer.cpp,"caffe::LossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/loss_layer.cpp,"caffe::LossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/elu_layer.cpp,"caffe::ELULayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 8, 0
repos/cpp/caffe/src/caffe/layers/elu_layer.cpp,"caffe::ELULayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",68, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_deconv_layer.cpp,"caffe::CuDNNDeconvolutionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_deconv_layer.cpp,"caffe::CuDNNDeconvolutionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/cudnn_deconv_layer.cpp,"caffe::CuDNNDeconvolutionLayer<Dtype>::~CuDNNDeconvolutionLayer()",69, 2, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::sigmoid( Dtype x)",32, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::tanh( Dtype x)",36, 2, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::LSTMUnitLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::LSTMUnitLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::LSTMUnitLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 0, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::AddDatumVector( const vector<Datum> & datum_vector)",81, 0, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::AddMatVector( const vector<cv::Mat> & mat_vector , const vector<int> & labels)",77, 0, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::Reset( Dtype * data , Dtype * labels , int n)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::set_batch_size( int new_size)",71, 6, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 6, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::get_normalizer( LossParameter_NormalizationMode normalization_mode , int valid_count)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::sum_rows_of_H( const Blob<Dtype> * H)",69, 0, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",77, 0, 0
repos/cpp/caffe/src/caffe/layers/deconv_layer.cpp,"caffe::DeconvolutionLayer<Dtype>::compute_output_shape()",81, 4, 0
repos/cpp/caffe/src/caffe/layers/deconv_layer.cpp,"caffe::DeconvolutionLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 0, 0
repos/cpp/caffe/src/caffe/layers/deconv_layer.cpp,"caffe::DeconvolutionLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 2, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 4, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/cudnn_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayer<Dtype>::~CuDNNSoftmaxLayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 0, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 4, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::DataLayer( const LayerParameter & param)",57, 0, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::~DataLayer()",33, 0, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::Skip()",67, 14, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::Next()",54, 8, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::load_batch( Batch<Dtype> * batch)",78, 6, 0
repos/cpp/caffe/src/caffe/layers/exp_layer.cpp,"caffe::ExpLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 2, 0
repos/cpp/caffe/src/caffe/layers/exp_layer.cpp,"caffe::ExpLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",70, 0, 0
repos/cpp/caffe/src/caffe/layers/exp_layer.cpp,"caffe::ExpLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 4, 0
repos/cpp/caffe/src/caffe/layers/accuracy_layer.cpp,"caffe::AccuracyLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 2, 0
repos/cpp/caffe/src/caffe/layers/accuracy_layer.cpp,"caffe::AccuracyLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 6, 0
repos/cpp/caffe/src/caffe/layers/accuracy_layer.cpp,"caffe::AccuracyLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::RecurrentInputBlobNames( vector<string> * names) const",77, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::RecurrentOutputBlobNames( vector<string> * names) const",78, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::RecurrentInputShapes( vector<BlobShape> * shapes) const",78, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::OutputBlobNames( vector<string> * names) const",69, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::FillUnrolledNet( NetParameter * net_param) const",78, 2, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::~WindowDataLayer<Dtype>()",52, 0, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 2, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::PrefetchRand()",62, 6, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::load_batch( Batch<Dtype> * batch)",81, 12, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lcn_layer.cpp,"caffe::CuDNNLCNLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lcn_layer.cpp,"caffe::CuDNNLCNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lcn_layer.cpp,"caffe::CuDNNLCNLayer<Dtype>::~CuDNNLCNLayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/input_layer.cpp,"caffe::InputLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 6, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",68, 0, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 6, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 8, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 2, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 4, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",68, 0, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",75, 2, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",77, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lrn_layer.cpp,"caffe::CuDNNLRNLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lrn_layer.cpp,"caffe::CuDNNLRNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",76, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lrn_layer.cpp,"caffe::CuDNNLRNLayer<Dtype>::~CuDNNLRNLayer()",59, 2, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 8, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 2, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",77, 6, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",80, 6, 0
repos/cpp/caffe/src/caffe/layers/power_layer.cpp,"caffe::PowerLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 0, 0
repos/cpp/caffe/src/caffe/layers/power_layer.cpp,"caffe::PowerLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",72, 0, 0
repos/cpp/caffe/src/caffe/layers/power_layer.cpp,"caffe::PowerLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",79, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",81, 0, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",78, 0, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_cpu_gemm( const Dtype * input , const Dtype * weights , Dtype * output , bool skip_im2col)",77, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_cpu_bias( Dtype * output , const Dtype * bias)",73, 6, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_cpu_gemm( const Dtype * output , const Dtype * weights , Dtype * input)",78, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::weight_cpu_gemm( const Dtype * input , const Dtype * output , Dtype * weights)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_cpu_bias( Dtype * bias , const Dtype * input)",73, 2, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_gpu_gemm( const Dtype * input , const Dtype * weights , Dtype * output , bool skip_im2col)",77, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_gpu_bias( Dtype * output , const Dtype * bias)",73, 6, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_gpu_gemm( const Dtype * output , const Dtype * weights , Dtype * input)",78, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::weight_gpu_gemm( const Dtype * input , const Dtype * output , Dtype * weights)",81, 4, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_gpu_bias( Dtype * bias , const Dtype * input)",73, 2, 0
