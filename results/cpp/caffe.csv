File, Function, Length, Total Width, Leading Space(s), Leading Tab(s)
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"swap_endian( uint32_t val)",4, 63, 4, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"read_image( std :: ifstream * image_file , std :: ifstream * label_file , uint32_t index , uint32_t rows , uint32_t cols , char * pixels , char * label)",8, 70, 0, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"convert_dataset( const char * image_filename , const char * label_filename , const char * db_filename)",72, 77, 0, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"main( int argc , char ** argv)",16, 81, 4, 0
repos/cpp/caffe/examples/siamese/convert_mnist_siamese_data.cpp,"main( int argc , char ** argv)",3, 76, 2, 0
repos/cpp/caffe/examples/cifar10/convert_cifar_data.cpp,"read_image( std :: ifstream * file , int * label , char * buffer)",7, 65, 0, 0
repos/cpp/caffe/examples/cifar10/convert_cifar_data.cpp,"convert_dataset( const string & input_folder , const string & output_folder , const string & db_type)",53, 78, 0, 0
repos/cpp/caffe/examples/cifar10/convert_cifar_data.cpp,"main( int argc , char ** argv)",18, 81, 4, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"swap_endian( uint32_t val)",4, 63, 4, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"convert_dataset( const char * image_filename , const char * label_filename , const char * db_path , const string & db_backend)",69, 77, 0, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"main( int argc , char ** argv)",29, 76, 8, 0
repos/cpp/caffe/examples/mnist/convert_mnist_data.cpp,"main( int argc , char ** argv)",4, 62, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Classifier( const string & model_file , const string & trained_file , const string & mean_file , const string & label_file)",37, 81, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"PairCompare( const std :: pair<float,int> & lhs , const std :: pair<float,int> & rhs)",4, 60, 24, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Argmax( const std :: vector<float> & v , int N)",11, 81, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Classify( const cv :: Mat & img , int N)",13, 74, 0, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::SetMean( const string & mean_file)",29, 77, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Predict( const cv :: Mat & img)",20, 71, 23, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::WrapInputLayer( std :: vector<cv::Mat> * input_channels)",12, 72, 0, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"Classifier::Preprocess( const cv :: Mat & img , std :: vector<cv::Mat> * input_channels)",39, 74, 2, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"main( int argc , char ** argv)",32, 75, 4, 0
repos/cpp/caffe/examples/cpp_classification/classification.cpp,"main( int argc , char ** argv)",3, 74, 2, 0
repos/cpp/caffe/tools/upgrade_net_proto_text.cpp,"main( int argc , char ** argv)",34, 78, 2, 0
repos/cpp/caffe/tools/upgrade_net_proto_binary.cpp,"main( int argc , char ** argv)",33, 79, 8, 0
repos/cpp/caffe/tools/extract_features.cpp,"main( int argc , char ** argv)",4, 60, 0, 0
repos/cpp/caffe/tools/extract_features.cpp,"feature_extraction_pipeline( int argc , char ** argv)",153, 81, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"GetBrewFunction( const caffe :: string & name)",13, 76, 4, 0
repos/cpp/caffe/tools/caffe.cpp,"get_gpus( vector<int> * gpus)",21, 61, 4, 0
repos/cpp/caffe/tools/caffe.cpp,"get_phase_from_flags( caffe :: Phase default_value)",10, 64, 0, 0
repos/cpp/caffe/tools/caffe.cpp,"get_stages_from_flags()",5, 60, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"device_query()",10, 46, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"GetRequestedAction( const std :: string & flag_value)",13, 79, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"train()",87, 80, 6, 0
repos/cpp/caffe/tools/caffe.cpp,"test()",69, 78, 4, 0
repos/cpp/caffe/tools/caffe.cpp,"time()",88, 78, 2, 0
repos/cpp/caffe/tools/caffe.cpp,"main( int argc , char ** argv)",30, 64, 4, 0
repos/cpp/caffe/tools/convert_imageset.cpp,"main( int argc , char ** argv)",114, 81, 4, 0
repos/cpp/caffe/tools/upgrade_solver_proto_text.cpp,"main( int argc , char ** argv)",34, 78, 2, 0
repos/cpp/caffe/tools/compute_image_mean.cpp,"main( int argc , char ** argv)",102, 79, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::set_mode_cpu()",1, 53, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::set_mode_gpu()",1, 53, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::InitLog()",4, 43, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::InitLogLevel( int level)",4, 31, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::InitLogLevelPipe( int level , bool stderr)",5, 48, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Log( const string & s)",3, 28, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::set_random_seed( unsigned int seed)",1, 74, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::CheckFile( const string & filename)",8, 67, 6, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::CheckContiguousArray( PyArrayObject * arr , string name , int channels , int height , int width)",21, 70, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_Init( string network_file , int phase , const int level , const bp :: object & stages , const bp :: object & weights)",26, 70, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_Init_Load( string param_file , string pretrained_param_file , int phase)",15, 78, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_Save( const Net<Dtype> & net , string filename)",5, 56, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_SaveHDF5( const Net<Dtype> & net , string filename)",3, 60, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_LoadHDF5( Net<Dtype> * net , string filename)",3, 54, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_SetInputArrays( Net<Dtype> * net , bp :: object data_obj , bp :: object labels_obj)",31, 76, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::GetSolverFromFile( const string & filename)",5, 59, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NdarrayConverterGenerator::apply<Dtype*>::type::operator ( )( Dtype * data) const",4, 81, 6, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NdarrayConverterGenerator::apply<Dtype*>::type::get_pytype()",3, 39, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NdarrayCallPolicies::postcall( PyObject * pyargs , PyObject * result)",18, 78, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Blob_Reshape( bp :: tuple args , bp :: dict kwargs)",13, 64, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::BlobVec_add_blob( bp :: tuple args , bp :: dict kwargs)",14, 69, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::SolverCallback::SolverCallback( bp :: object on_start , bp :: object on_gradients_ready)",2, 71, 4, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::SolverCallback::on_gradients_ready()",3, 38, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::SolverCallback::on_start()",3, 28, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Solver_add_callback( Solver<Dtype> * solver , bp :: object on_start , bp :: object on_gradients_ready)",4, 81, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Solver_add_nccl( Solver<Dtype> * solver , NCCL<Dtype> * nccl)",9, 43, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::share_weights( Solver<Dtype> * solver , Net<Dtype> * net)",3, 61, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NetCallback::NetCallback( bp :: object run)",1, 54, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NetCallback::run( int layer)",3, 32, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_before_forward( Net<Dtype> * net , bp :: object run)",3, 59, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_after_forward( Net<Dtype> * net , bp :: object run)",3, 58, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_before_backward( Net<Dtype> * net , bp :: object run)",3, 60, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_after_backward( Net<Dtype> * net , bp :: object run)",3, 59, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::Net_add_nccl( Net<Dtype> * net , NCCL<Dtype> * nccl)",9, 34, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NCCL::NCCL( shared_ptr<Solver<Dtype>> solver , const string & uid)",1, 64, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::HasNCCL()",7, 17, 0, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::NCCL_New_Uid()",18, 65, 2, 0
repos/cpp/caffe/python/caffe/_caffe.cpp,"caffe::BOOST_PYTHON_MODULE( _caffe)",200, 81, 8, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mxCHECK( bool expr , const char * msg)",5, 50, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mxERROR( const char * msg)",1, 60, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mxCHECK_FILE_EXIST( const char * file)",10, 45, 4, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mx_mat_to_blob( const mxArray * mx_mat , Blob<float> * blob , WhichMemory data_or_diff)",20, 80, 6, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_to_mx_mat( const Blob<float> * blob , WhichMemory data_or_diff)",29, 81, 4, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"int_vec_to_mx_vec( const vector<int> & int_vec)",8, 69, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"str_vec_to_mx_strcell( const vector<std::string> & str_vec)",7, 76, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"handle_to_ptr( const mxArray * mx_handle)",9, 80, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"create_handle_vec( int ptr_num)",5, 76, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"setup_handle( const T * ptr , int index , mxArray * mx_handle_vec)",7, 80, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"ptr_to_handle( const T * ptr)",5, 48, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"ptr_vec_to_handle_vec( const vector<shared_ptr<T>> & ptr_vec)",7, 79, 0, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"get_solver( MEX_ARGS)",13, 65, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"delete_solver( MEX_ARGS)",9, 66, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_get_attr( MEX_ARGS)",14, 80, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_get_iter( MEX_ARGS)",6, 66, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_restore( MEX_ARGS)",9, 66, 6, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_solve( MEX_ARGS)",6, 66, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"solver_step( MEX_ARGS)",7, 67, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"get_net( MEX_ARGS)",20, 73, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"delete_net( MEX_ARGS)",9, 57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_get_attr( MEX_ARGS)",23, 81, 6, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_forward( MEX_ARGS)",6, 57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_backward( MEX_ARGS)",6, 57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_copy_from( MEX_ARGS)",9, 65, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_reshape( MEX_ARGS)",6, 57, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"net_save( MEX_ARGS)",10, 65, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"layer_get_attr( MEX_ARGS)",12, 70, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"layer_get_type( MEX_ARGS)",6, 63, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_get_shape( MEX_ARGS)",13, 75, 4, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_reshape( MEX_ARGS)",14, 73, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_get_data( MEX_ARGS)",6, 60, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_set_data( MEX_ARGS)",6, 67, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_get_diff( MEX_ARGS)",6, 60, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"blob_set_diff( MEX_ARGS)",6, 67, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"set_mode_cpu( MEX_ARGS)",4, 55, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"set_mode_gpu( MEX_ARGS)",4, 55, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"set_device( MEX_ARGS)",6, 58, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"get_init_key( MEX_ARGS)",4, 55, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"reset( MEX_ARGS)",10, 75, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"read_mean( MEX_ARGS)",13, 71, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"write_mean( MEX_ARGS)",21, 81, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"version( MEX_ARGS)",5, 54, 2, 0
repos/cpp/caffe/matlab/+caffe/private/caffe_.cpp,"mexFunction( MEX_ARGS)",21, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest_main.cc,"main( int argc , char ** argv)",6, 54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetRandomSeedFromFlag( Int32 random_seed_flag)",12, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetNextRandomSeed( int seed)",7, 64, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestFlagSaver::GTestFlagSaver()",19, 68, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestFlagSaver::~GTestFlagSaver()",19, 68, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CountIf( const Container & c , Predicate predicate)",10, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForEach( const Container & c , Functor functor)",3, 52, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetElementOr( const std :: vector<E> & v , int i , E default_value)",3, 76, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShuffleRange( internal :: Random * random , int begin , int end , std :: vector<E> * v)",18, 78, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Shuffle( internal :: Random * random , std :: vector<E> * v)",3, 67, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Delete( T * x)",3, 27, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestPropertyKeyIs::TestPropertyKeyIs( const char * key)",2, 46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestPropertyKeyIs::operator ( )( const TestProperty & test_property) const",3, 61, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetterInterface::OsStackTraceGetterInterface()",1, 35, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()",1, 44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetter::OsStackTraceGetter()",1, 48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::elapsed_time() const",1, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::Passed() const",1, 44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::Failed() const",3, 75, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::GetTestCase( int i) const",4, 63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::GetMutableTestCase( int i)",4, 63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::listeners()",1, 58, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::ad_hoc_test_result() const",1, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::AddTestInfo( Test :: SetUpTestCaseFunc set_up_tc , Test :: TearDownTestCaseFunc tear_down_tc , TestInfo * test_info)",21, 71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::parameterized_test_registry()",3, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::set_current_test_case( TestCase * a_current_test_case)",3, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::set_current_test_info( TestInfo * a_current_test_info)",3, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::ClearNonAdHocTestResult()",3, 57, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::ClearAdHocTestResult()",3, 33, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::current_test_case() const",1, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::current_test_info()",1, 63, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::current_test_info() const",1, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::environments()",1, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::gtest_trace_stack()",3, 48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::gtest_trace_stack() const",3, 60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::InitDeathTestSubprocessControlInfo()",3, 74, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::internal_run_death_test_flag() const",3, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::death_test_factory()",3, 53, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::random_seed() const",1, 51, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::random()",1, 50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::catch_exceptions() const",1, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTEST_API_UnitTestImpl::set_catch_exceptions( bool value)",1, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetUnitTestImpl()",3, 42, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::AutoHandle()",1, 50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::AutoHandle( HANDLE handle)",1, 58, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::~AutoHandle()",1, 29, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::Get() const",1, 41, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::Reset()",1, 48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AutoHandle::Reset( HANDLE handle)",7, 43, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseNaturalNumber( const :: std :: string & str , Integer * number)",39, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestResultAccessor::RecordProperty( TestResult * test_result , const TestProperty & property)",4, 61, 29, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestResultAccessor::ClearTestPartResults( TestResult * test_result)",3, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestResultAccessor::test_part_results( const TestResult & test_result)",4, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Random::Generate( UInt32 range)",15, 76, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestIsInitialized()",1, 69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SumOverTestCaseList( const std :: vector<TestCase*> & case_list , int(TestCase::*method)() const)",8, 72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCasePassed( const TestCase * test_case)",3, 57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCaseFailed( const TestCase * test_case)",3, 57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldRunTestCase( const TestCase * test_case)",3, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AssertHelper::AssertHelper( TestPartResult :: Type type , const char * file , int line , const char * message)",6, 63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AssertHelper::~AssertHelper()",3, 32, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AssertHelper::operator =( const Message & message) const",9, 73, 22, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCurrentExecutableName()",11, 66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::GetOutputFormat()",9, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()",30, 77, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::PatternMatchesString( const char * pattern , const char * str)",16, 73, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::MatchesFilter( const String & name , const char * filter)",19, 78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::FilterMatchesTest( const String & test_case_name , const String & test_name)",29, 81, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestOptions::GTestShouldProcessSEH( DWORD exception_code)",22, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter( TestPartResultArray * result)",6, 68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter( InterceptMode intercept_mode , TestPartResultArray * result)",6, 68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::Init()",10, 71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()",8, 72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ScopedFakeTestPartResultReporter::ReportTestPartResult( const TestPartResult & result)",4, 61, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetTestTypeId()",3, 28, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasOneFailure( const char * , const char * , const char * , const TestPartResultArray & results , TestPartResult :: Type type , const string & substr)",35, 78, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SingleFailureChecker::SingleFailureChecker( const TestPartResultArray * results , TestPartResult :: Type type , const string & substr)",7, 45, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SingleFailureChecker::~SingleFailureChecker()",3, 65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter( UnitTestImpl * unit_test)",2, 74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult( const TestPartResult & result)",5, 65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter( UnitTestImpl * unit_test)",2, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultPerThreadTestPartResultReporter::ReportTestPartResult( const TestPartResult & result)",4, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()",4, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter( TestPartResultReporterInterface * reporter)",5, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()",3, 60, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread( TestPartResultReporterInterface * reporter)",4, 62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::successful_test_case_count() const",3, 55, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::failed_test_case_count() const",3, 51, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::total_test_case_count() const",3, 50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::test_case_to_run_count() const",3, 51, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::successful_test_count() const",3, 77, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::failed_test_count() const",3, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::disabled_test_count() const",3, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::total_test_count() const",3, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::test_to_run_count() const",3, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop( int skip_count)",4, 68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetTimeInMillis()",50, 76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::ShowCStringQuoted( const char * c_str)",3, 69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CloneString( const char * str , size_t length)",10, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CloneCString( const char * c_str)",4, 62, 20, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::AnsiToUtf16( const char * ansi)",12, 51, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::Utf16ToAnsi( LPCWSTR utf16_str)",11, 54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CStringEquals( const char * lhs , const char * rhs)",7, 65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamWideCharsToMessage( const wchar_t * wstr , size_t length , Message * msg)",18, 73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Message::operator < <( const :: std :: wstring & wstr)",4, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Message::operator < <( const :: wstring & wstr)",4, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionResult::AssertionResult( const AssertionResult & other)",6, 63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionResult::operator !() const",6, 53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionSuccess()",3, 37, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionFailure()",3, 37, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::AssertionFailure( const Message & message)",3, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::EqFailure( const char * expected_expression , const char * actual_expression , const String & expected_value , const String & actual_value , bool ignoring_case)",21, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetBoolAssertionFailureMessage( const AssertionResult & assertion_result , const char * expression_text , const char * actual_predicate_value , const char * expected_predicate_value)",13, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DoubleNearPredFormat( const char * expr1 , const char * expr2 , const char * abs_error_expr , double val1 , double val2 , double abs_error)",18, 79, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FloatingPointLE( const char * expr1 , const char * expr2 , RawType val1 , RawType val2)",32, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FloatLE( const char * expr1 , const char * expr2 , float val1 , float val2)",4, 69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::DoubleLE( const char * expr1 , const char * expr2 , double val1 , double val2)",4, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperEQ( const char * expected_expression , const char * actual_expression , BiggestInt expected , BiggestInt actual)",14, 72, 19, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTREQ( const char * expected_expression , const char * actual_expression , const char * expected , const char * actual)",14, 64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRCASEEQ( const char * expected_expression , const char * actual_expression , const char * expected , const char * actual)",14, 68, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRNE( const char * s1_expression , const char * s2_expression , const char * s1 , const char * s2)",12, 76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRCASENE( const char * s1_expression , const char * s2_expression , const char * s1 , const char * s2)",13, 62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringPred( const char * needle , const char * haystack)",6, 65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringPred( const wchar_t * needle , const wchar_t * haystack)",6, 71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringPred( const StringType & needle , const StringType & haystack)",4, 52, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstringImpl( bool expected_to_be_substring , const char * needle_expr , const char * haystack_expr , const StringType & needle , const StringType & haystack)",16, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const char * needle , const char * haystack)",5, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const wchar_t * needle , const wchar_t * haystack)",5, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const char * needle , const char * haystack)",5, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const wchar_t * needle , const wchar_t * haystack)",5, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: string & needle , const :: std :: string & haystack)",5, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: string & needle , const :: std :: string & haystack)",5, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: wstring & needle , const :: std :: wstring & haystack)",5, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::IsNotSubstring( const char * needle_expr , const char * haystack_expr , const :: std :: wstring & needle , const :: std :: wstring & haystack)",5, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HRESULTFailureHelper( const char * expr , const char * expected , long hr)",38, 80, 42, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsHRESULTSuccess( const char * expr , long hr)",6, 73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsHRESULTFailure( const char * expr , long hr)",6, 73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ChopLowBits( UInt32 * bits , int n)",5, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CodePointToUtf8( UInt32 code_point , char * str)",32, 81, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsUtf16SurrogatePair( wchar_t first , wchar_t second)",4, 66, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CreateCodePointFromUtf16SurrogatePair( wchar_t first , wchar_t second)",9, 70, 52, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WideStringToUtf8( const wchar_t * str , int num_chars)",23, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::ShowWideCString( const wchar_t * wide_c_str)",5, 69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::ShowWideCStringQuoted( const wchar_t * wide_c_str)",6, 70, 24, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::WideCStringEquals( const wchar_t * lhs , const wchar_t * rhs)",7, 75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTREQ( const char * expected_expression , const char * actual_expression , const wchar_t * expected , const wchar_t * actual)",14, 64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CmpHelperSTRNE( const char * s1_expression , const char * s2_expression , const wchar_t * s1 , const wchar_t * s2)",13, 76, 28, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CaseInsensitiveCStringEquals( const char * lhs , const char * rhs)",7, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::CaseInsensitiveWideCStringEquals( const wchar_t * lhs , const wchar_t * rhs)",21, 68, 46, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::Compare( const String & rhs) const",22, 71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::EndsWith( const char * suffix) const",10, 65, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::EndsWithCaseInsensitive( const char * suffix) const",10, 80, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::String::Format( const char * format , ...)",32, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StringStreamToString( :: std :: stringstream * ss)",18, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AppendUserMessage( const String & gtest_msg , const Message & user_msg)",13, 55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::TestResult()",4, 28, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::~TestResult()",2, 28, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::GetTestPartResult( int i) const",5, 67, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::GetTestProperty( int i) const",5, 63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::ClearTestPartResults()",3, 42, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::AddTestPartResult( const TestPartResult & test_part_result)",3, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::RecordProperty( const TestProperty & test_property)",14, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::ValidateTestProperty( const TestProperty & test_property)",12, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::Clear()",6, 30, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::Failed() const",7, 49, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartFatallyFailed( const TestPartResult & result)",3, 66, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::HasFatalFailure() const",3, 65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartNonfatallyFailed( const TestPartResult & result)",3, 69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::HasNonfatalFailure() const",3, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::total_part_count() const",3, 54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestResult::test_property_count() const",3, 52, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::Test()",3, 56, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::~Test()",3, 28, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::SetUp()",2, 21, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::TearDown()",2, 24, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::RecordProperty( const char * key , const char * value)",3, 69, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::RecordProperty( const char * key , int value)",5, 58, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ReportFailureInUnknownLocation( TestPartResult :: Type result_type , const String & message)",11, 76, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::HasSameFixtureClass()",60, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatSehExceptionMessage( DWORD exception_code , const char * location)",8, 76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatCxxExceptionMessage( const char * description , const char * location)",12, 75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::GoogleTestFailureException::GoogleTestFailureException( const TestPartResult & failure)",2, 78, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HandleSehExceptionsInMethodIfSupported( T * object , Result(T::*method)() , const char * location)",22, 78, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HandleExceptionsInMethodIfSupported( T * object , Result(T::*method)() , const char * location)",50, 79, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::Run()",20, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::HasFatalFailure()",3, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::Test::HasNonfatalFailure()",4, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestInfo::TestInfo( const char * a_test_case_name , const char * a_name , const char * a_type_param , const char * a_value_param , internal :: TypeId fixture_class_id , internal :: TestFactoryBase * factory)",16, 75, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestInfo::~TestInfo()",1, 43, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MakeAndRegisterTestInfo( const char * test_case_name , const char * name , const char * type_param , const char * value_param , TypeId fixture_class_id , SetUpTestCaseFunc set_up_tc , TearDownTestCaseFunc tear_down_tc , TestFactoryBase * factory)",14, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ReportInvalidTestCaseType( const char * test_case_name , const char * file , int line)",16, 80, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestNameIs::TestNameIs( const char * name)",2, 40, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestNameIs::operator ( )( const TestInfo * test_info) const",3, 81, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::RegisterParameterizedTests()",8, 50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestInfo::Run()",43, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::successful_test_count() const",3, 47, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::failed_test_count() const",3, 47, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::disabled_test_count() const",3, 49, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::test_to_run_count() const",3, 50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::total_test_count() const",3, 51, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::TestCase( const char * a_name , const char * a_type_param , Test :: SetUpTestCaseFunc set_up_tc , Test :: TearDownTestCaseFunc tear_down_tc)",10, 72, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::~TestCase()",4, 56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::GetTestInfo( int i) const",4, 56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::GetMutableTestInfo( int i)",4, 56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::AddTestInfo( TestInfo * test_info)",4, 67, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::Run()",26, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::ClearResult()",3, 55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::ShuffleTests( internal :: Random * random)",3, 56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestCase::UnshuffleTests()",5, 54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatCountableNoun( int count , const char * singular_form , const char * plural_form)",6, 77, 34, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatTestCount( int test_count)",3, 59, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::FormatTestCaseCount( int test_case_count)",3, 74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultTypeToString( TestPartResult :: Type type)",16, 76, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintTestPartResultToString( const TestPartResult & test_part_result)",8, 74, 42, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintTestPartResult( const TestPartResult & test_part_result)",17, 74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetColorAttribute( GTestColor color)",8, 65, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetAnsiColorCode( GTestColor color)",8, 49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldUseColor( bool stdout_is_tty)",30, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ColoredPrintf( GTestColor color , const char * fmt , ...)",45, 76, 26, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintFullTestCommentIfPresent( const TestInfo & test_info)",16, 64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::PrettyUnitTestResultPrinter()",1, 35, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::PrintTestName( const char * test_case , const char * test)",3, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestProgramStart( const UnitTest &)",1, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpEnd( const UnitTest &)",1, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownEnd( const UnitTest &)",1, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestProgramEnd( const UnitTest &)",1, 66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart( const UnitTest & unit_test , int iteration)",34, 77, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart( const UnitTest &)",6, 60, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart( const TestCase & test_case)",13, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestStart( const TestInfo & test_info)",6, 75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult( const TestPartResult & result)",10, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestEnd( const TestInfo & test_info)",18, 73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd( const TestCase & test_case)",12, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart( const UnitTest &)",6, 63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests( const UnitTest & unit_test)",23, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd( const UnitTest & unit_test , int)",37, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::TestEventRepeater()",1, 53, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::forwarding_enabled() const",1, 66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::set_forwarding_enabled( bool enable)",1, 77, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::~TestEventRepeater()",3, 50, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::Append( TestEventListener * listener)",3, 62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::Release( TestEventListener * listener)",10, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::OnTestIterationStart( const UnitTest & unit_test , int iteration)",8, 72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestEventRepeater::OnTestIterationEnd( const UnitTest & unit_test , int iteration)",8, 73, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::IsNormalizableWhitespace( char c)",3, 49, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter( char c)",3, 53, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute( const char * str)",3, 54, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::EscapeXmlText( const char * str)",1, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter( const char * output_file)",8, 76, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd( const UnitTest & unit_test , int)",29, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::EscapeXml( const char * str , bool is_attribute)",41, 81, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters( const string & str)",9, 81, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatTimeInMillisAsSeconds( TimeInMillis ms)",5, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection( :: std :: ostream * stream , const char * data)",18, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo( :: std :: ostream * stream , const char * test_case_name , const TestInfo & test_info)",46, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase( FILE * out , const TestCase & test_case)",19, 77, 48, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest( FILE * out , const UnitTest & unit_test)",18, 77, 48, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes( const TestResult & result)",10, 65, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::StreamingListener( const string & host , const string & port)",5, 60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::~StreamingListener()",4, 33, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestProgramStart( const UnitTest &)",3, 61, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestProgramEnd( const UnitTest & unit_test)",9, 71, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestIterationStart( const UnitTest & , int iteration)",4, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestIterationEnd( const UnitTest & unit_test , int)",5, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestCaseStart( const TestCase & test_case)",3, 77, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestCaseEnd( const TestCase & test_case)",5, 80, 24, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestStart( const TestInfo & test_info)",3, 73, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestEnd( const TestInfo & test_info)",6, 76, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::OnTestPartResult( const TestPartResult & test_part_result)",9, 73, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::CloseConnection()",7, 79, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::Send( const string & message)",11, 68, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::UrlEncode( const char * str)",18, 81, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StreamingListener::MakeConnection()",40, 81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ScopedTrace::ScopedTrace( const char * file , int line , const Message & message)",8, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ScopedTrace::~ScopedTrace()",3, 44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetter::CurrentStackTrace( int , int)",3, 57, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::OsStackTraceGetter::UponLeavingGTest()",2, 46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::TestEventListeners()",5, 52, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::~TestEventListeners()",1, 64, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::Append( TestEventListener * listener)",3, 63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::Release( TestEventListener * listener)",7, 78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::repeater()",1, 72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::SetDefaultResultPrinter( TestEventListener * listener)",10, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::SetDefaultXmlGenerator( TestEventListener * listener)",10, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::EventForwardingEnabled() const",3, 58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestEventListeners::SuppressEventForwarding()",3, 53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::GetInstance()",20, 75, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::successful_test_case_count() const",3, 51, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::failed_test_case_count() const",3, 47, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::total_test_case_count() const",3, 46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::test_case_to_run_count() const",3, 47, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::successful_test_count() const",3, 46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::failed_test_count() const",1, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::disabled_test_count() const",3, 44, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::total_test_count() const",1, 78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::test_to_run_count() const",1, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::elapsed_time() const",3, 56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::Passed() const",1, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::Failed() const",1, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::GetTestCase( int i) const",3, 53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::GetMutableTestCase( int i)",3, 48, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::listeners()",3, 44, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::AddEnvironment( Environment * env)",8, 58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::AddTestPartResult( TestPartResult :: Type result_type , const char * file_name , int line_number , const internal :: String & message , const internal :: String & os_stack_trace)",60, 81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::RecordPropertyForCurrentTest( const char * key , const char * value)",5, 65, 44, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::Run()",54, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::original_working_dir() const",3, 53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::current_test_case() const",4, 54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::current_test_info() const",4, 54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::random_seed() const",1, 67, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::parameterized_test_registry()",3, 47, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::UnitTest()",3, 44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::~UnitTest()",3, 24, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::PushGTestTrace( const internal :: TraceInfo & trace)",4, 66, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::UnitTest::PopGTestTrace()",4, 41, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::UnitTestImpl( UnitTest * parent)",38, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::~UnitTestImpl()",9, 57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()",4, 56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ConfigureXmlOutput()",11, 70, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ConfigureStreamingOutput()",14, 73, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::PostFlagParsingInit()",25, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCaseNameIs::TestCaseNameIs( const String & name)",2, 46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TestCaseNameIs::operator ( )( const TestCase * test_case) const",3, 79, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::GetTestCase( const char * test_case_name , const char * type_param , Test :: SetUpTestCaseFunc set_up_tc , Test :: TearDownTestCaseFunc tear_down_tc)",34, 79, 36, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SetUpEnvironment( Environment * env)",1, 65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TearDownEnvironment( Environment * env)",1, 71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::RunAllTests()",131, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WriteToShardStatusFileIfNeeded()",15, 76, 20, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldShard( const char * total_shards_env , const char * shard_index_env , bool in_subprocess_for_death_test)",41, 70, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Int32FromEnvOrDie( const char * var , Int32 default_val)",13, 76, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ShouldRunTestOnShard( int total_shards , int shard_index , int test_id)",3, 76, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::FilterTests( ReactionToSharding shard_tests)",52, 74, 51, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ListTestsMatchingFilter()",19, 70, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::set_os_stack_trace_getter( OsStackTraceGetterInterface * getter)",7, 46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::os_stack_trace_getter()",7, 69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::current_test_result()",4, 61, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::ShuffleTests()",13, 77, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UnitTestImpl::UnshuffleTests()",8, 52, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCurrentOsStackTraceExceptTop( UnitTest * , int skip_count)",6, 74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsTrue( bool condition)",1, 50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AlwaysTrue()",9, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SkipPrefix( const char * prefix , const char ** pstr)",8, 57, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseFlagValue( const char * str , const char * flag , bool def_optional)",27, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseBoolFlag( const char * str , const char * flag , bool * value)",11, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseInt32Flag( const char * str , const char * flag , Int32 * value)",11, 71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseStringFlag( const char * str , const char * flag , String * value)",11, 73, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasGoogleTestFlagPrefix( const char * str)",8, 62, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintColorEncoded( const char * str)",33, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseGoogleTestFlagsOnlyImpl( int * argc , CharType ** argv)",67, 74, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseGoogleTestFlagsOnly( int * argc , char ** argv)",3, 56, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseGoogleTestFlagsOnly( int * argc , wchar_t ** argv)",3, 59, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::InitGoogleTestImpl( int * argc , CharType ** argv)",22, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::InitGoogleTest( int * argc , char ** argv)",3, 46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::InitGoogleTest( int * argc , wchar_t ** argv)",3, 49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ExitedWithCode::ExitedWithCode( int exit_code)",2, 72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::ExitedWithCode::operator ( )( int exit_status) const",11, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::KilledBySignal::KilledBySignal( int signum)",2, 63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::KilledBySignal::operator ( )( int exit_status) const",3, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExitSummary( int exit_code)",23, 63, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExitedUnsuccessfully( int exit_status)",3, 45, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestThreadWarning( size_t thread_count)",10, 74, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestAbort( const String & message)",18, 76, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetLastErrnoDescription()",3, 61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FailFromInternalError( int fd)",20, 81, 22, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::DeathTest()",7, 67, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::Create( const char * statement , const RE * regex , const char * file , int line , DeathTest ** test)",5, 71, 23, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::LastMessage()",3, 43, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTest::set_last_death_test_message( const String & message)",3, 69, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::DeathTestImpl( const char * a_statement , const RE * a_regex)",8, 60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::~DeathTestImpl()",1, 64, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::statement() const",1, 55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::regex() const",1, 45, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::spawned() const",1, 44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_spawned( bool is_spawned)",1, 63, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::status() const",1, 41, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_status( int a_status)",1, 56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::outcome() const",1, 56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_outcome( DeathTestOutcome an_outcome)",1, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::read_fd() const",1, 43, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_read_fd( int fd)",1, 46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::write_fd() const",1, 45, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::set_write_fd( int fd)",1, 48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()",40, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::Abort( AbortReason reason)",19, 77, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatDeathTestOutput( const :: std :: string & output)",14, 74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DeathTestImpl::Passed( bool status_ok)",48, 80, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WindowsDeathTest::WindowsDeathTest( const char * a_statement , const RE * a_regex , const char * file , int line)",5, 73, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WindowsDeathTest::Wait()",39, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::WindowsDeathTest::AssumeRole()",91, 77, 44, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForkingDeathTest::set_child_pid( pid_t child_pid)",1, 66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForkingDeathTest::ForkingDeathTest( const char * a_statement , const RE * a_regex)",3, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ForkingDeathTest::Wait()",11, 74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::NoExecDeathTest::NoExecDeathTest( const char * a_statement , const RE * a_regex)",2, 64, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::NoExecDeathTest::AssumeRole()",41, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTest::ExecDeathTest( const char * a_statement , const RE * a_regex , const char * file , int line)",3, 75, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::Arguments()",3, 27, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::~Arguments()",6, 75, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::AddArgument( const char * argument)",3, 60, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::AddArguments( const :: std :: vector<Str> & arguments)",7, 76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Arguments::Argv()",3, 24, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetEnviron()",6, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetEnviron()",1, 47, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTestChildMain( void * child_arg)",29, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StackLowerThanAddress( const void * ptr)",4, 46, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StackGrowsDown()",4, 40, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTestFork( char * const * argv , int close_fd)",33, 75, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ExecDeathTest::AssumeRole()",45, 74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::DefaultDeathTestFactory::Create( const char * statement , const RE * regex , const char * file , int line , DeathTest ** test)",50, 81, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SplitString( const :: std :: string & str , char delimiter , :: std :: vector<::std::string> * dest)",16, 69, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetStatusFileDescriptor( unsigned int parent_process_id , size_t write_handle_as_size_t , size_t event_handle_as_size_t)",60, 81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseInternalRunDeathTestFlag()",45, 74, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsPathSeparator( char c)",7, 66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::GetCurrentDir()",13, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveExtension( const char * extension) const",7, 72, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::FindLastPathSeparator() const",12, 78, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveDirectoryName() const",4, 60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveFileName() const",10, 56, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::MakeFileName( const FilePath & directory , const FilePath & base_name , int number , const char * extension)",12, 77, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::ConcatPaths( const FilePath & directory , const FilePath & relative_path)",8, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::FileOrDirectoryExists() const",11, 60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::DirectoryExists() const",27, 75, 43, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::IsRootDirectory() const",10, 75, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::IsAbsolutePath() const",12, 46, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::GenerateUniqueFileName( const FilePath & directory , const FilePath & base_name , const char * extension)",10, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::IsDirectory() const",4, 69, 9, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::CreateDirectoriesRecursively() const",12, 79, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::CreateFolder() const",17, 80, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::RemoveTrailingPathSeparator() const",5, 68, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FilePath::Normalize()",29, 55, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetThreadCount()",16, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetThreadCount()",5, 73, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::~RE()",11, 68, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::FullMatch( const char * str , const RE & re)",6, 59, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::PartialMatch( const char * str , const RE & re)",6, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::Init( const char * regex)",28, 76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsInSet( char ch , const char * str)",3, 48, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiDigit( char ch)",1, 62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiPunct( char ch)",3, 60, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsRepeat( char ch)",1, 54, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiWhiteSpace( char ch)",1, 71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsAsciiWordChar( char ch)",4, 65, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsValidEscape( char c)",3, 57, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::AtomMatchesChar( bool escaped , char pattern_char , char ch)",20, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatRegexSyntaxError( const char * regex , int index)",4, 81, 10, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ValidateRegex( const char * regex)",55, 79, 22, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MatchRepetitionAndRegexAtHead( bool escaped , char c , char repeat , const char * regex , const char * str)",23, 76, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MatchRegexAtHead( const char * regex , const char * str)",27, 71, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::MatchRegexAnywhere( const char * regex , const char * str)",14, 62, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::~RE()",4, 42, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::FullMatch( const char * str , const RE & re)",3, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::PartialMatch( const char * str , const RE & re)",3, 63, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::RE::Init( const char * regex)",32, 72, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatFileLocation( const char * file , int line)",12, 74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FormatCompilerIndependentFileLocation( const char * file , int line)",9, 68, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestLog::GTestLog( GTestLogSeverity severity , const char * file , int line)",9, 74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GTestLog::~GTestLog()",7, 34, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::CapturedStream( int fd)",29, 78, 44, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::~CapturedStream()",3, 31, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::GetCapturedString()",14, 61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::GetFileSize( FILE * file)",4, 49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CapturedStream::ReadEntireFile( FILE * file)",21, 79, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CaptureStream( int fd , const char * stream_name , CapturedStream ** stream)",7, 79, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCapturedStream( CapturedStream ** captured_stream)",8, 66, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CaptureStdout()",3, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::CaptureStderr()",3, 62, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCapturedStdout()",1, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetCapturedStderr()",1, 77, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::GetArgvs()",1, 60, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::posix::Abort()",4, 44, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::FlagToEnvVar( const char * flag)",11, 61, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::ParseInt32( const Message & src_text , const char * str , Int32 * value)",37, 74, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::BoolFromGTestEnv( const char * flag , bool default_value)",6, 67, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::Int32FromGTestEnv( const char * flag , Int32 default_value)",19, 67, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::StringFromGTestEnv( const char * flag , const char * default_value)",5, 78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintByteSegmentInObjectTo( const unsigned char * obj_bytes , size_t start , size_t count , ostream * os)",17, 78, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::PrintBytesInObjectToImpl( const unsigned char * obj_bytes , size_t count , ostream * os)",22, 79, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal2::PrintBytesInObjectTo( const unsigned char * obj_bytes , size_t count , ostream * os)",4, 72, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::IsPrintableAscii( wchar_t c)",3, 42, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintAsCharLiteralTo( Char c , ostream * os)",43, 70, 8, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintAsWideStringLiteralTo( wchar_t c , ostream * os)",12, 71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintAsNarrowStringLiteralTo( char c , ostream * os)",3, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintCharAndCodeTo( Char c , ostream * os)",24, 72, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( unsigned char c , :: std :: ostream * os)",3, 52, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( signed char c , :: std :: ostream * os)",3, 50, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( wchar_t wc , ostream * os)",3, 40, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintCharsAsStringTo( const char * begin , size_t len , ostream * os)",15, 81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::UniversalPrintArray( const char * begin , size_t len , ostream * os)",3, 71, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintWideCharsAsStringTo( const wchar_t * begin , size_t len , ostream * os)",16, 81, 6, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( const char * s , ostream * os)",8, 61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintTo( const wchar_t * s , ostream * os)",8, 61, 4, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintStringTo( const :: string & s , ostream * os)",3, 53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintStringTo( const :: std :: string & s , ostream * os)",3, 58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintWideStringTo( const :: wstring & s , ostream * os)",3, 58, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::PrintWideStringTo( const :: std :: wstring & s , ostream * os)",3, 63, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResult::ExtractSummary( const char * message)",5, 80, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::operator < <( std :: ostream & os , const TestPartResult & result)",8, 77, 10, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultArray::Append( const TestPartResult & result)",3, 65, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultArray::GetTestPartResult( int index) const",8, 80, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::TestPartResultArray::size() const",3, 42, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()",6, 72, 25, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()",4, 64, 2, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::HasNewFatalFailureHelper::ReportTestPartResult( const TestPartResult & result)",6, 53, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::SkipSpaces( const char * str)",5, 49, 0, 0
repos/cpp/caffe/src/gtest/gtest-all.cpp,"testing::internal::TypedTestCasePState::VerifyRegisteredTestNames( const char * file , int line , const char * registered_tests)",55, 69, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SetActionFunction( ActionCallback func)",3, 61, 0, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::GetRequestedAction()",7, 63, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Solver( const SolverParameter & param)",4, 59, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Solver( const string & param_file)",6, 59, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Init( const SolverParameter & param)",18, 80, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::LoadNetWeights( shared_ptr<Net<Dtype>> net , const std :: string & model_list)",10, 64, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::InitTrainNet()",42, 81, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::InitTestNets()",77, 81, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Step( int iters)",84, 81, 8, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Solve( const char * resume_file)",47, 80, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::TestAll()",7, 66, 7, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Test( const int test_net_id)",73, 80, 4, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Snapshot()",16, 58, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::CheckSnapshotWritePermissions()",16, 81, 8, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SnapshotFilename( const string & extension)",4, 72, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SnapshotToBinaryProto()",8, 71, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::SnapshotToHDF5()",6, 63, 2, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::Restore( const char * state_file)",9, 74, 6, 0
repos/cpp/caffe/src/caffe/solver.cpp,"caffe::Solver<Dtype>::UpdateSmoothedLoss( Dtype loss , int start_iter , int average_loss)",12, 67, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::apply_buffers( const vector<Blob<Dtype>*> & blobs , Dtype * buffer , size_t total_size , Op op)",31, 81, 19, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::total_size( const vector<Blob<Dtype>*> & params)",8, 75, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Params<Dtype>::Params( shared_ptr<Solver<Dtype>> root_solver)",5, 70, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::GPUParams<Dtype>::GPUParams( shared_ptr<Solver<Dtype>> root_solver , int device)",19, 80, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::GPUParams<Dtype>::~GPUParams()",4, 33, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::GPUParams<Dtype>::Configure( Solver<Dtype> * solver) const",6, 64, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::getDevice()",5, 38, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::NCCL( shared_ptr<Solver<Dtype>> solver)",6, 53, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::NCCL( shared_ptr<Solver<Dtype>> solver , const string & uid)",13, 77, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::Init()",5, 76, 4, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::~NCCL()",8, 46, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::barrier()",3, 41, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::set_barrier( boost :: barrier * value)",3, 55, 0, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::InitSingleProcess( vector<NCCL<Dtype>*> * nccls)",11, 81, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::new_uid()",8, 77, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::Broadcast()",11, 55, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::run( int layer)",34, 79, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::on_gradients_ready()",19, 77, 6, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Worker::Worker( shared_ptr<Solver<Dtype>> rank0 , int device , boost :: barrier * barrier , vector<NCCL<Dtype>*> * nccls , const char * restore)",6, 72, 18, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Worker::~Worker()",1, 23, 2, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::Worker::InternalThreadEntry()",49, 78, 4, 0
repos/cpp/caffe/src/caffe/parallel.cpp,"caffe::NCCL<Dtype>::Run( const vector<int> & gpus , const char * restore)",35, 70, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Net( const NetParameter & param)",3, 45, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Net( const string & param_file , Phase phase , const int level , const vector<string> * stages)",14, 55, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Init( const NetParameter & in_param)",213, 81, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::FilterNet( const NetParameter & param , NetParameter * param_filtered)",28, 79, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::StateMeetsRule( const NetState & state , const NetStateRule & rule , const string & layer_name)",64, 74, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::AppendTop( const NetParameter & param , const int layer_id , const int top_id , set<string> * available_blobs , map<string,int> * blob_name_to_idx)",37, 81, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::AppendBottom( const NetParameter & param , const int layer_id , const int bottom_id , set<string> * available_blobs , map<string,int> * blob_name_to_idx)",23, 80, 15, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::AppendParam( const NetParameter & param , const int layer_id , const int param_id)",93, 81, 12, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardFromTo( int start , int end)",17, 75, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardFrom( int start)",3, 51, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardTo( int end)",3, 39, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Forward( Dtype * loss)",8, 63, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Forward( const vector<Blob<Dtype>*> & bottom , Dtype * loss)",10, 69, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardFromTo( int start , int end)",17, 68, 10, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ForwardDebugInfo( const int layer_id)",24, 75, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardDebugInfo( const int layer_id)",25, 81, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::UpdateDebugInfo( const int param_id)",24, 81, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ShareTrainedLayersWith( const Net * other)",30, 79, 10, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardFrom( int start)",3, 43, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::BackwardTo( int end)",3, 43, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Backward()",17, 78, 15, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Reshape()",5, 56, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFrom( const NetParameter & param)",36, 81, 12, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFrom( const string & trained_filename)",7, 73, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFromBinaryProto( const string & trained_filename)",6, 62, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::CopyTrainedLayersFromHDF5( const string & trained_filename)",53, 78, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ToProto( NetParameter * param , bool write_diff) const",10, 71, 0, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ToHDF5( const string & filename , bool write_diff) const",61, 76, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::Update()",5, 55, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ClearParamDiffs()",19, 58, 6, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::ShareWeights()",7, 55, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::has_blob( const string & blob_name) const",3, 71, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::blob_by_name( const string & blob_name) const",11, 66, 4, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::has_layer( const string & layer_name) const",3, 74, 2, 0
repos/cpp/caffe/src/caffe/net.cpp,"caffe::Net<Dtype>::layer_by_name( const string & layer_name) const",11, 70, 4, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::~InternalThread()",3, 36, 0, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::is_started() const",3, 42, 0, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::must_stop()",3, 55, 2, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::StartInternalThread()",20, 80, 4, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::entry( int device , Caffe :: Brew mode , int rand_seed , int solver_count , int solver_rank , bool multiprocess)",13, 72, 0, 0
repos/cpp/caffe/src/caffe/internal_thread.cpp,"caffe::InternalThread::StopInternalThread()",11, 54, 6, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Reshape( const int num , const int channels , const int height , const int width)",9, 79, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Reshape( const vector<int> & shape)",23, 75, 6, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Reshape( const BlobShape & shape)",8, 52, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ReshapeLike( const Blob<Dtype> & other)",3, 58, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Blob( const int num , const int channels , const int height , const int width)",6, 71, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Blob( const vector<int> & shape)",5, 58, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::gpu_shape() const",4, 46, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::cpu_data() const",4, 45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::set_cpu_data( Dtype * data)",10, 46, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::gpu_data() const",4, 45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::set_gpu_data( Dtype * data)",10, 46, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::cpu_diff() const",4, 45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::gpu_diff() const",4, 45, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_cpu_data()",4, 57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_gpu_data()",4, 57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_cpu_diff()",4, 57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::mutable_gpu_diff()",4, 57, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ShareData( const Blob & other)",4, 49, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ShareDiff( const Blob & other)",4, 49, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::Update()",1, 67, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::Update()",1, 58, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::Update()",24, 64, 2, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::asum_data() const",4, 65, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::asum_data() const",4, 47, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::asum_data() const",23, 72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::asum_diff() const",4, 65, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::asum_diff() const",4, 47, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::asum_diff() const",23, 72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::sumsq_data() const",4, 66, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::sumsq_data() const",4, 48, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::sumsq_data() const",25, 72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::sumsq_diff() const",4, 66, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::sumsq_diff() const",4, 48, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::sumsq_diff() const",25, 72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::scale_data( unsigned int scale_factor)",3, 77, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::scale_data( int scale_factor)",3, 59, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::scale_data( Dtype scale_factor)",23, 72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<unsignedint>::scale_diff( unsigned int scale_factor)",3, 77, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<int>::scale_diff( int scale_factor)",3, 59, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::scale_diff( Dtype scale_factor)",23, 72, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::ShapeEquals( const BlobProto & other)",21, 81, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::CopyFrom( const Blob & source , bool copy_diff , bool reshape)",31, 79, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<Dtype>::FromProto( const BlobProto & proto , bool reshape)",49, 69, 4, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<double>::ToProto( BlobProto * proto , bool write_diff) const",18, 70, 0, 0
repos/cpp/caffe/src/caffe/blob.cpp,"caffe::Blob<float>::ToProto( BlobProto * proto , bool write_diff) const",18, 69, 0, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetConvolutionLayer( const LayerParameter & param)",35, 79, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetDeconvolutionLayer( const LayerParameter & param)",34, 81, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetPoolingLayer( const LayerParameter & param)",33, 79, 8, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetLRNLayer( const LayerParameter & param)",33, 76, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetReLULayer( const LayerParameter & param)",19, 72, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetSigmoidLayer( const LayerParameter & param)",19, 75, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetSoftmaxLayer( const LayerParameter & param)",19, 75, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetTanHLayer( const LayerParameter & param)",19, 72, 4, 0
repos/cpp/caffe/src/caffe/layer_factory.cpp,"caffe::GetPythonLayer( const LayerParameter & param)",11, 81, 4, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::Get()",6, 41, 4, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::cluster_seedgen( void)",18, 68, 14, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::GlobalInit( int * pargc , char ** * pargv)",8, 55, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::Caffe()",3, 66, 6, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::~Caffe()",1, 20, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::set_random_seed( const unsigned int seed)",4, 55, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::SetDevice( const int device_id)",3, 45, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::DeviceQuery()",3, 28, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::CheckDevice( const int device_id)",4, 47, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::FindDevice( const int start_id)",4, 44, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator()",1, 61, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator( unsigned int seed)",1, 74, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::rng()",1, 45, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG()",1, 52, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG( unsigned int seed)",1, 73, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::operator =( const RNG & other)",4, 54, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::generator()",3, 48, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::Caffe()",17, 80, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::~Caffe()",6, 67, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::set_random_seed( const unsigned int seed)",17, 72, 4, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::SetDevice( const int device_id)",19, 79, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::DeviceQuery()",34, 78, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::CheckDevice( const int device_id)",20, 79, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::FindDevice( const int start_id)",12, 77, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator()",1, 61, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::Generator( unsigned int seed)",1, 74, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::Generator::rng()",1, 45, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG()",1, 52, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::RNG( unsigned int seed)",1, 73, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::operator =( const RNG & other)",4, 54, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::Caffe::RNG::generator()",3, 48, 2, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::cublasGetErrorString( cublasStatus_t error)",29, 57, 0, 0
repos/cpp/caffe/src/caffe/common.cpp,"caffe::curandGetErrorString( curandStatus_t error)",31, 57, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::DataTransformer( const TransformationParameter & param , Phase phase)",24, 78, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const Datum & datum , Dtype * transformed_data)",86, 80, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const Datum & datum , Blob<Dtype> * transformed_blob)",52, 77, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const vector<Datum> & datum_vector , Blob<Dtype> * transformed_blob)",18, 80, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const vector<cv::Mat> & mat_vector , Blob<Dtype> * transformed_blob)",18, 75, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( const cv :: Mat & cv_img , Blob<Dtype> * transformed_blob)",100, 81, 10, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Transform( Blob<Dtype> * input_blob , Blob<Dtype> * transformed_blob)",111, 80, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const Datum & datum)",34, 77, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const vector<Datum> & datum_vector)",10, 60, 2, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const cv :: Mat & cv_img)",17, 76, 0, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InferBlobShape( const vector<cv::Mat> & mat_vector)",10, 61, 2, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::InitRand()",10, 52, 4, 0
repos/cpp/caffe/src/caffe/data_transformer.cpp,"caffe::DataTransformer<Dtype>::Rand( int n)",7, 53, 6, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::SyncedMemory()",9, 78, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::SyncedMemory( size_t size)",9, 78, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::~SyncedMemory()",12, 51, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::to_cpu()",26, 64, 6, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::to_gpu()",26, 49, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::cpu_data()",5, 39, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::set_cpu_data( void * data)",10, 51, 4, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::gpu_data()",10, 39, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::set_gpu_data( void * data)",14, 46, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::mutable_cpu_data()",6, 41, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::mutable_gpu_data()",11, 41, 0, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::async_gpu_push( const cudaStream_t & stream)",12, 71, 2, 0
repos/cpp/caffe/src/caffe/syncedmem.cpp,"caffe::SyncedMemory::check_device()",14, 65, 4, 0
repos/cpp/caffe/src/caffe/solvers/adadelta_solver.cpp,"caffe::AdaDeltaSolver<Dtype>::AdaDeltaPreSolve()",10, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/adadelta_solver.cpp,"caffe::AdaDeltaSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",82, 79, 8, 0
repos/cpp/caffe/src/caffe/solvers/adagrad_solver.cpp,"caffe::AdaGradSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",51, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::GetLearningRate()",44, 76, 4, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::PreSolve()",13, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::ClipGradients()",19, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::ApplyUpdate()",19, 78, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::Normalize( int param_id)",24, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::Regularize( int param_id)",60, 78, 8, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",31, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::SnapshotSolverState( const string & model_filename)",12, 75, 0, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::SnapshotSolverStateToBinaryProto( const string & model_filename)",17, 79, 4, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::SnapshotSolverStateToHDF5( const string & model_filename)",31, 80, 2, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::RestoreSolverStateFromBinaryProto( const string & state_file)",18, 79, 4, 0
repos/cpp/caffe/src/caffe/solvers/sgd_solver.cpp,"caffe::SGDSolver<Dtype>::RestoreSolverStateFromHDF5( const string & state_file)",28, 78, 0, 0
repos/cpp/caffe/src/caffe/solvers/nesterov_solver.cpp,"caffe::NesterovSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",43, 75, 0, 0
repos/cpp/caffe/src/caffe/solvers/rmsprop_solver.cpp,"caffe::RMSPropSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",52, 79, 8, 0
repos/cpp/caffe/src/caffe/solvers/adam_solver.cpp,"caffe::AdamSolver<Dtype>::AdamPreSolve()",10, 75, 2, 0
repos/cpp/caffe/src/caffe/solvers/adam_solver.cpp,"caffe::AdamSolver<Dtype>::ComputeUpdateValue( int param_id , Dtype rate)",64, 79, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemm<float>( const CBLAS_TRANSPOSE TransA , const CBLAS_TRANSPOSE TransB , const int M , const int N , const int K , const float alpha , const float * A , const float * B , const float beta , float * C)",9, 73, 4, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemm<double>( const CBLAS_TRANSPOSE TransA , const CBLAS_TRANSPOSE TransB , const int M , const int N , const int K , const double alpha , const double * A , const double * B , const double beta , double * C)",9, 77, 4, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemv<float>( const CBLAS_TRANSPOSE TransA , const int M , const int N , const float alpha , const float * A , const float * x , const float beta , float * y)",5, 75, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_gemv<double>( const CBLAS_TRANSPOSE TransA , const int M , const int N , const double alpha , const double * A , const double * x , const double beta , double * y)",5, 75, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_axpy<float>( const int N , const float alpha , const float * X , float * Y)",2, 71, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_axpy<double>( const int N , const double alpha , const double * X , double * Y)",2, 74, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_set( const int N , const Dtype alpha , Dtype * Y)",9, 62, 4, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add_scalar( const int N , const float alpha , float * Y)",5, 66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add_scalar( const int N , const double alpha , double * Y)",5, 68, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_copy( const int N , const Dtype * X , Dtype * Y)",14, 74, 6, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_scal<float>( const int N , const float alpha , float * X)",3, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_scal<double>( const int N , const double alpha , double * X)",3, 70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_axpby<float>( const int N , const float alpha , const float * X , const float beta , float * Y)",4, 76, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_axpby<double>( const int N , const double alpha , const double * X , const double beta , double * Y)",4, 79, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add<float>( const int n , const float * a , const float * b , float * y)",4, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_add<double>( const int n , const double * a , const double * b , double * y)",4, 70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sub<float>( const int n , const float * a , const float * b , float * y)",4, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sub<double>( const int n , const double * a , const double * b , double * y)",4, 70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_mul<float>( const int n , const float * a , const float * b , float * y)",4, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_mul<double>( const int n , const double * a , const double * b , double * y)",4, 70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_div<float>( const int n , const float * a , const float * b , float * y)",4, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_div<double>( const int n , const double * a , const double * b , double * y)",4, 70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_powx<float>( const int n , const float * a , const float b , float * y)",4, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_powx<double>( const int n , const double * a , const double b , double * y)",4, 70, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqr<float>( const int n , const float * a , float * y)",3, 63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqr<double>( const int n , const double * a , double * y)",3, 66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqrt<float>( const int n , const float * a , float * y)",3, 64, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_sqrt<double>( const int n , const double * a , double * y)",3, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_exp<float>( const int n , const float * a , float * y)",3, 63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_exp<double>( const int n , const double * a , double * y)",3, 66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_log<float>( const int n , const float * a , float * y)",3, 63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_log<double>( const int n , const double * a , double * y)",3, 66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_abs<float>( const int n , const float * a , float * y)",3, 63, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_abs<double>( const int n , const double * a , double * y)",3, 66, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_rand()",3, 32, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_nextafter( const Dtype b)",4, 45, 6, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_uniform( const int n , const Dtype a , const Dtype b , Dtype * r)",11, 80, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_gaussian( const int n , const Dtype a , const Dtype sigma , Dtype * r)",12, 78, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_bernoulli( const int n , const Dtype p , int * r)",12, 81, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_rng_bernoulli( const int n , const Dtype p , unsigned int * r)",12, 81, 2, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_strided_dot<float>( const int n , const float * x , const int incx , const float * y , const int incy)",4, 80, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_strided_dot<double>( const int n , const double * x , const int incx , const double * y , const int incy)",4, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_dot( const int n , const Dtype * x , const Dtype * y)",3, 67, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_asum<float>( const int n , const float * x)",3, 59, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_asum<double>( const int n , const double * x)",3, 62, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_scale<float>( const int n , const float alpha , const float * x , float * y)",5, 76, 0, 0
repos/cpp/caffe/src/caffe/util/math_functions.cpp,"caffe::caffe_cpu_scale<double>( const int n , const double alpha , const double * x , double * y)",5, 79, 0, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_nd_dataset_helper( hid_t file_id , const char * dataset_name_ , int min_dim , int max_dim , Blob<Dtype> * blob , bool reshape)",75, 80, 6, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_nd_dataset<float>( hid_t file_id , const char * dataset_name_ , int min_dim , int max_dim , Blob<float> * blob , bool reshape)",8, 78, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_nd_dataset<double>( hid_t file_id , const char * dataset_name_ , int min_dim , int max_dim , Blob<double> * blob , bool reshape)",8, 78, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_nd_dataset<float>( const hid_t file_id , const string & dataset_name , const Blob<float> & blob , bool write_diff)",19, 78, 4, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_nd_dataset<double>( hid_t file_id , const string & dataset_name , const Blob<double> & blob , bool write_diff)",19, 75, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_string( hid_t loc_id , const string & dataset_name)",15, 78, 4, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_string( hid_t loc_id , const string & dataset_name , const string & s)",7, 70, 4, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_load_int( hid_t loc_id , const string & dataset_name)",7, 76, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_save_int( hid_t loc_id , const string & dataset_name , int i)",7, 70, 0, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_get_num_links( hid_t loc_id)",6, 61, 2, 0
repos/cpp/caffe/src/caffe/util/hdf5.cpp,"caffe::hdf5_get_name_by_idx( hid_t loc_id , int idx)",13, 78, 6, 0
repos/cpp/caffe/src/caffe/util/db.cpp,"caffe::db::GetDB( DataParameter :: DB backend)",15, 46, 4, 0
repos/cpp/caffe/src/caffe/util/db.cpp,"caffe::db::GetDB( const string & backend)",14, 44, 2, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::is_a_ge_zero_and_a_lt_b( int a , int b)",3, 62, 2, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::im2col_cpu( const Dtype * data_im , const int channels , const int height , const int width , const int kernel_h , const int kernel_w , const int pad_h , const int pad_w , const int stride_h , const int stride_w , const int dilation_h , const int dilation_w , Dtype * data_col)",37, 79, 4, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::im2col_nd_core_cpu( const Dtype * data_input , const bool im2col , const int num_spatial_axes , const int * im_shape , const int * col_shape , const int * kernel_shape , const int * pad , const int * stride , const int * dilation , Dtype * data_output)",69, 79, 6, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::im2col_nd_cpu( const Dtype * data_im , const int num_spatial_axes , const int * im_shape , const int * col_shape , const int * kernel_shape , const int * pad , const int * stride , const int * dilation , Dtype * data_col)",8, 78, 2, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::col2im_cpu( const Dtype * data_col , const int channels , const int height , const int width , const int kernel_h , const int kernel_w , const int pad_h , const int pad_w , const int stride_h , const int stride_w , const int dilation_h , const int dilation_w , Dtype * data_im)",35, 79, 4, 0
repos/cpp/caffe/src/caffe/util/im2col.cpp,"caffe::col2im_nd_cpu( const Dtype * data_col , const int num_spatial_axes , const int * im_shape , const int * col_shape , const int * kernel_shape , const int * pad , const int * stride , const int * dilation , Dtype * data_im)",8, 79, 2, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"handle_signal( int signal)",10, 35, 2, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"HookupHandler()",21, 71, 6, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"UnhookHandler()",20, 58, 8, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"GotSIGINT()",5, 30, 4, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"GotSIGHUP()",5, 30, 4, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::SignalHandler( SolverAction :: Enum SIGINT_action , SolverAction :: Enum SIGHUP_action)",6, 64, 29, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::~SignalHandler()",3, 34, 0, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::CheckForSignals() const",9, 60, 0, 0
repos/cpp/caffe/src/caffe/util/signal_handler.cpp,"caffe::SignalHandler::GetActionFunction()",3, 61, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadProtoFromTextFile( const char * filename , Message * proto)",9, 68, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::WriteProtoToTextFile( const Message & proto , const char * filename)",7, 72, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadProtoFromBinaryFile( const char * filename , Message * proto)",14, 69, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::WriteProtoToBinaryFile( const Message & proto , const char * filename)",4, 74, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename , const int height , const int width , const bool is_color)",17, 64, 4, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename , const int height , const int width)",4, 58, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename , const bool is_color)",4, 53, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToCVMat( const string & filename)",3, 51, 0, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::matchExt( const std :: string & fn , std :: string en)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadImageToDatum( const string & filename , const int label , const int height , const int width , const bool is_color , const std :: string & encoding , Datum * datum)",24, 72, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::ReadFileToDatum( const string & filename , const int label , Datum * datum)",19, 64, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatumToCVMatNative( const Datum & datum)",11, 72, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatumToCVMat( const Datum & datum , bool is_color)",13, 72, 2, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatumNative( Datum * datum)",9, 57, 4, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::DecodeDatum( Datum * datum , bool is_color)",9, 61, 4, 0
repos/cpp/caffe/src/caffe/util/io.cpp,"caffe::CVMatToDatum( const cv :: Mat & cv_img , Datum * datum)",25, 77, 2, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDB::Open( const string & source , Mode mode)",27, 81, 4, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDB::NewCursor()",8, 66, 2, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDB::NewTransaction()",3, 42, 0, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDBTransaction::Put( const string & key , const string & value)",4, 68, 0, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDBTransaction::Commit()",46, 68, 4, 0
repos/cpp/caffe/src/caffe/util/db_lmdb.cpp,"caffe::db::LMDBTransaction::DoubleMapSize()",7, 76, 2, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::InsertSplits( const NetParameter & param , NetParameter * param_split)",77, 81, 12, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::ConfigureSplitLayer( const string & layer_name , const string & blob_name , const int blob_idx , const int split_count , const float loss_weight , LayerParameter * split_layer_param)",19, 80, 2, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::SplitLayerName( const string & layer_name , const string & blob_name , const int blob_idx)",7, 73, 0, 0
repos/cpp/caffe/src/caffe/util/insert_splits.cpp,"caffe::SplitBlobName( const string & layer_name , const string & blob_name , const int blob_idx , const int split_idx)",7, 72, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsUpgrade( const NetParameter & net_param)",5, 78, 2, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetAsNeeded( const string & param_file , NetParameter * param)",64, 81, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::ReadNetParamsFromTextFileOrDie( const string & param_file , NetParameter * param)",6, 62, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::ReadNetParamsFromBinaryFileOrDie( const string & param_file , NetParameter * param)",6, 64, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsV0ToV1Upgrade( const NetParameter & net_param)",8, 60, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsV1ToV2Upgrade( const NetParameter & net_param)",3, 60, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0Net( const NetParameter & v0_net_param_padding_layers , NetParameter * net_param)",26, 77, 51, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0PaddingLayers( const NetParameter & param , NetParameter * param_upgraded_pad)",58, 80, 8, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0LayerParameter( const V1LayerParameter & v0_layer_connection , V1LayerParameter * layer_param)",351, 81, 8, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV0LayerType( const string & type)",54, 68, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsDataUpgrade( const NetParameter & net_param)",26, 81, 6, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetDataTransformation( NetParameter * net_param)",7, 73, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV1Net( const NetParameter & v1_net_param , NetParameter * net_param)",21, 79, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV1LayerParameter( const V1LayerParameter & v1_layer_param , LayerParameter * layer_param)",184, 76, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeV1LayerType( const V1LayerParameter_LayerType type)",87, 72, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsInputUpgrade( const NetParameter & net_param)",3, 59, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetInput( NetParameter * net_param)",36, 78, 2, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::NetNeedsBatchNormUpgrade( const NetParameter & net_param)",11, 74, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeNetBatchNorm( NetParameter * net_param)",16, 75, 6, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::SolverNeedsTypeUpgrade( const SolverParameter & solver_param)",6, 67, 0, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeSolverType( SolverParameter * solver_param)",36, 80, 6, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeSolverAsNeeded( const string & param_file , SolverParameter * param)",19, 80, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::UpgradeSnapshotPrefixProperty( const string & param_file , SolverParameter * param)",15, 79, 4, 0
repos/cpp/caffe/src/caffe/util/upgrade_proto.cpp,"caffe::ReadSolverParamsFromTextFileOrDie( const string & param_file , SolverParameter * param)",7, 65, 0, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::BlockingQueue()",3, 34, 0, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::push( const T & t)",6, 49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::try_pop( T * t)",11, 49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::pop( const string & log_on_wait)",14, 53, 0, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::try_peek( T * t)",10, 49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::peek()",9, 49, 2, 0
repos/cpp/caffe/src/caffe/util/blocking_queue.cpp,"caffe::BlockingQueue<T>::size() const",4, 49, 2, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Timer()",6, 38, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::~Timer()",10, 46, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Start()",15, 68, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Stop()",14, 67, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::MicroSeconds()",23, 75, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::MilliSeconds()",21, 75, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Seconds()",3, 33, 2, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::Timer::Init()",13, 48, 6, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::CPUTimer()",5, 40, 2, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::Start()",7, 72, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::Stop()",6, 71, 4, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::MilliSeconds()",12, 72, 32, 0
repos/cpp/caffe/src/caffe/util/benchmark.cpp,"caffe::CPUTimer::MicroSeconds()",12, 72, 32, 0
repos/cpp/caffe/src/caffe/util/db_leveldb.cpp,"caffe::db::LevelDB::Open( const string & source , Mode mode)",12, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::ThresholdLayerTest::ThresholdLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::ThresholdLayerTest::~ThresholdLayerTest()",1, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::TYPED_TEST( ThresholdLayerTest , TestSetup)",10, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::TYPED_TEST( ThresholdLayerTest , Test)",21, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_threshold_layer.cpp,"caffe::TYPED_TEST( ThresholdLayerTest , Test2)",25, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TEST_F( InternalThreadTest , TestStartAndExit)",8, 47, 0, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TestThreadA::InternalThreadEntry()",3, 45, 4, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TestThreadB::InternalThreadEntry()",3, 45, 4, 0
repos/cpp/caffe/src/caffe/test/test_internal_thread.cpp,"caffe::TEST_F( InternalThreadTest , TestRandomSeed)",16, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerConstructor)",6, 50, 0, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerStart)",16, 46, 2, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerStop)",16, 47, 2, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerMilliSeconds)",14, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_benchmark.cpp,"caffe::TYPED_TEST( BenchmarkTest , TestTimerSeconds)",14, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::InnerProductLayerTest::InnerProductLayerTest()",10, 59, 8, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::InnerProductLayerTest::~InnerProductLayerTest()",5, 37, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestSetUp)",15, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestSetUpTransposeFalse)",19, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestSetUpTransposeTrue)",19, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestForward)",30, 71, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestForwardTranspose)",65, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestForwardNoBatch)",30, 71, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestGradient)",25, 72, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestGradientTranspose)",26, 72, 4, 0
repos/cpp/caffe/src/caffe/test/test_inner_product_layer.cpp,"caffe::TYPED_TEST( InnerProductLayerTest , TestBackwardTranspose)",95, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::ArgMaxLayerTest::ArgMaxLayerTest()",12, 55, 6, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::ArgMaxLayerTest::~ArgMaxLayerTest()",1, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetup)",7, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupMaxVal)",9, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupAxis)",11, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupAxisNegativeIndexing)",11, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestSetupAxisMaxVal)",12, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPU)",22, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUMaxVal)",25, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUTopK)",29, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUMaxValTopK)",31, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUAxis)",25, 71, 10, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUAxisTopK)",32, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_argmax_layer.cpp,"caffe::TYPED_TEST( ArgMaxLayerTest , TestCPUAxisMaxValTopK)",29, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::RNNLayerTest::RNNLayerTest()",19, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::RNNLayerTest::ReshapeBlobs( int num_timesteps , int num_instances)",14, 62, 4, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestSetUp)",9, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestForward)",84, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradient)",7, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradientNonZeroCont)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradientNonZeroContBufferSize2)",15, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_rnn_layer.cpp,"caffe::TYPED_TEST( RNNLayerTest , TestGradientNonZeroContBufferSize2WithStaticInput)",18, 78, 0, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::MaxPoolingDropoutTest::MaxPoolingDropoutTest()",3, 41, 6, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::MaxPoolingDropoutTest::SetUp()",11, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::MaxPoolingDropoutTest::~MaxPoolingDropoutTest()",1, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::TYPED_TEST( MaxPoolingDropoutTest , TestSetup)",15, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::TYPED_TEST( MaxPoolingDropoutTest , TestForward)",28, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_maxpool_dropout_layers.cpp,"caffe::TYPED_TEST( MaxPoolingDropoutTest , TestBackward)",37, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::ImageDataLayerTest::ImageDataLayerTest()",4, 46, 8, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::ImageDataLayerTest::SetUp()",28, 79, 4, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::ImageDataLayerTest::~ImageDataLayerTest()",4, 34, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestRead)",25, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestResize)",27, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestReshape)",26, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestShuffle)",33, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_image_data_layer.cpp,"caffe::TYPED_TEST( ImageDataLayerTest , TestSpace)",28, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayerTest::MultinomialLogisticLossLayerTest()",16, 72, 6, 0
repos/cpp/caffe/src/caffe/test/test_multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayerTest::~MultinomialLogisticLossLayerTest()",5, 48, 2, 0
repos/cpp/caffe/src/caffe/test/test_multinomial_logistic_loss_layer.cpp,"caffe::TYPED_TEST( MultinomialLogisticLossLayerTest , TestGradientCPU)",8, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::PaddingLayerUpgradeTest::RunPaddingUpgradeTest( const string & input_param_string , const string & output_param_string)",21, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( PaddingLayerUpgradeTest , TestSimple)",147, 74, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( PaddingLayerUpgradeTest , TestTwoTops)",194, 74, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( PaddingLayerUpgradeTest , TestImageNet)",701, 74, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::NetUpgradeTest::RunV0UpgradeTest( const string & input_param_string , const string & output_param_string)",16, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::NetUpgradeTest::RunV1UpgradeTest( const string & input_param_string , const string & output_param_string)",16, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestSimple)",225, 75, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestAllParams)",499, 75, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestImageNet)",1040, 75, 6, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( NetUpgradeTest , TestUpgradeV1LayerType)",34, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::SolverTypeUpgradeTest::RunSolverTypeUpgradeTest( const string & input_param_string , const string & output_param_string)",14, 78, 4, 0
repos/cpp/caffe/src/caffe/test/test_upgrade_proto.cpp,"caffe::TEST_F( SolverTypeUpgradeTest , TestSimple)",45, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::MathFunctionsTest::MathFunctionsTest()",4, 41, 6, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::MathFunctionsTest::SetUp()",10, 49, 4, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::MathFunctionsTest::~MathFunctionsTest()",4, 33, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestNothing)",4, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestAsum)",10, 56, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestSign)",9, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestSgnbit)",9, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestFabs)",9, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestScale)",12, 81, 51, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( CPUMathFunctionsTest , TestCopy)",9, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestAsum)",11, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestSign)",10, 69, 28, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestSgnbit)",10, 69, 28, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestFabs)",10, 69, 28, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestScale)",12, 81, 51, 0
repos/cpp/caffe/src/caffe/test/test_math_functions.cpp,"caffe::TYPED_TEST( GPUMathFunctionsTest , TestCopy)",11, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestInitialization)",8, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestAllocationCPUGPU)",7, 49, 0, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestAllocationCPU)",5, 46, 0, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestAllocationGPU)",5, 46, 0, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestCPUWrite)",16, 53, 4, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestGPURead)",29, 53, 4, 0
repos/cpp/caffe/src/caffe/test/test_syncedmem.cpp,"caffe::TEST_F( SyncedMemoryTest , TestGPUWrite)",20, 59, 4, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::EuclideanLossLayerTest::EuclideanLossLayerTest()",13, 58, 8, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::EuclideanLossLayerTest::~EuclideanLossLayerTest()",5, 38, 2, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::EuclideanLossLayerTest::TestForward()",23, 78, 4, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::TYPED_TEST( EuclideanLossLayerTest , TestForward)",3, 50, 0, 0
repos/cpp/caffe/src/caffe/test/test_euclidean_loss_layer.cpp,"caffe::TYPED_TEST( EuclideanLossLayerTest , TestGradient)",11, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::ReshapeLayerTest::ReshapeLayerTest()",10, 49, 4, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::ReshapeLayerTest::~ReshapeLayerTest()",1, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestFlattenOutputSizes)",16, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestFlattenValues)",18, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestCopyDimensions)",16, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInferenceOfUnspecified)",19, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInferenceOfUnspecifiedWithStartAxis)",18, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInsertSingletonAxesStart)",22, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInsertSingletonAxesMiddle)",22, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestInsertSingletonAxesEnd)",22, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestFlattenMiddle)",16, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestForward)",16, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestForwardAfterReshape)",25, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_reshape_layer.cpp,"caffe::TYPED_TEST( ReshapeLayerTest , TestGradient)",13, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::DataLayerTest()",5, 44, 6, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::SetUp()",7, 46, 4, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::Fill( const bool unique_pixels , DataParameter_DB backend)",26, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestRead()",37, 71, 10, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestSkip()",25, 73, 10, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReshape( DataParameter_DB backend)",64, 79, 6, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReadCrop( Phase phase)",53, 81, 12, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReadCropTrainSequenceSeeded()",54, 69, 14, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::TestReadCropTrainSequenceUnseeded()",56, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::DataLayerTest::~DataLayerTest()",1, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadLevelDB)",5, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestSkipLevelDB)",4, 47, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReshapeLevelDB)",3, 48, 0, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainLevelDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceSeededLevelDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceUnseededLevelDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTestLevelDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadLMDB)",5, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestSkipLMDB)",4, 44, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReshapeLMDB)",3, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainLMDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceSeededLMDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTrainSequenceUnseededLMDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_layer.cpp,"caffe::TYPED_TEST( DataLayerTest , TestReadCropTestLMDB)",5, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::SplitLayerTest::SplitLayerTest()",12, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::SplitLayerTest::~SplitLayerTest()",5, 30, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TYPED_TEST( SplitLayerTest , TestSetup)",14, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TYPED_TEST( SplitLayerTest , Test)",12, 63, 4, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TYPED_TEST( SplitLayerTest , TestGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::SplitLayerInsertionTest::RunInsertionTest( const string & input_param_string , const string & output_param_string)",21, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertion1)",23, 52, 0, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertion2)",36, 52, 0, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertionImageNet)",354, 75, 6, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestNoInsertionWithInPlace)",29, 62, 0, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestLossInsertion)",128, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestInsertion)",94, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestInsertionTwoTop)",105, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_split_layer.cpp,"caffe::TEST_F( SplitLayerInsertionTest , TestWithInPlace)",93, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_protobuf.cpp,"caffe::TEST_F( ProtoTest , TestSerialization)",12, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_solver.cpp,"caffe::SolverTest::InitSolverFromProtoString( const string & proto)",16, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_solver.cpp,"caffe::TYPED_TEST( SolverTest , TestInitTrainTestNets)",62, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::GradientBasedSolverTest()",6, 67, 6, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::~GradientBasedSolverTest()",3, 31, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::InitSolverFromProtoString( const string & proto)",17, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::RunLeastSquaresSolver( const Dtype learning_rate , const Dtype weight_decay , const Dtype momentum , const int num_iters , const int iter_size = 1 , const int devices = 1 , const bool snapshot = false , const char * from_snapshot = NULL)",151, 75, 6, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::ComputeLeastSquaresUpdate( const Dtype learning_rate , const Dtype weight_decay , const Dtype momentum , const int num_iters , vector<shared_ptr<Blob<Dtype>>> * updated_params)",124, 80, 8, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::CheckLeastSquaresUpdate( const vector<shared_ptr<Blob<Dtype>>> & updated_params)",49, 81, 10, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::CheckAccumulation( const Dtype kLearningRate , const Dtype kWeightDecay , const Dtype kMomentum , const int kNumIters , const int kIterSize)",38, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::TestLeastSquaresUpdate( const Dtype learning_rate = 1 . 0 , const Dtype weight_decay = 0 . 0 , const Dtype momentum = 0 . 0 , const int iter_to_check = 0)",52, 79, 6, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::GradientBasedSolverTest::TestSnapshot( const Dtype learning_rate = 1 . 0 , const Dtype weight_decay = 0 . 0 , const Dtype momentum = 0 . 0 , const int num_iters = 1)",73, 80, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::SGDSolverTest::InitSolver( const SolverParameter & param)",3, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdate)",3, 52, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateLROneHundredth)",5, 66, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithWeightDecay)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithWeightDecayMultiIter)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithMomentum)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithMomentumMultiIter)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverything)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverythingShare)",11, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",10, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",11, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestSnapshot)",10, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( SGDSolverTest , TestSnapshotShare)",11, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::AdaGradSolverTest::InitSolver( const SolverParameter & param)",3, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdate)",3, 63, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateLROneHundredth)",5, 77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateWithWeightDecay)",6, 78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateWithEverything)",10, 77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestAdaGradLeastSquaresUpdateWithEverythingShare)",12, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",10, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",11, 80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestSnapshot)",10, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaGradSolverTest , TestSnapshotShare)",11, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::NesterovSolverTest::InitSolver( const SolverParameter & param)",3, 59, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdate)",3, 65, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateLROneHundredth)",5, 79, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithWeightDecay)",6, 80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithWeightDecayMultiIter)",11, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithMomentum)",10, 77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestLeastSquaresUpdateWithMomentumMultiIter)",10, 78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithEverything)",10, 79, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestNesterovLeastSquaresUpdateWithEverythingShare)",12, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",10, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",11, 81, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestSnapshot)",10, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( NesterovSolverTest , TestSnapshotShare)",11, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::AdaDeltaSolverTest::InitSolver( const SolverParameter & param)",3, 59, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdate)",5, 65, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithWeightDecay)",7, 80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithHalfMomentum)",10, 81, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithMomentum)",10, 77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestLeastSquaresUpdateWithMomentumMultiIter)",10, 78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithEverything)",10, 79, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestAdaDeltaLeastSquaresUpdateWithEverythingShare)",12, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",10, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",11, 81, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestSnapshot)",10, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdaDeltaSolverTest , TestSnapshotShare)",11, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::AdamSolverTest::InitSolver( const SolverParameter & param)",8, 59, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdate)",7, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdateWithWeightDecay)",7, 72, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdateWithEverything)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestAdamLeastSquaresUpdateWithEverythingShare)",11, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",10, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",11, 77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestSnapshot)",10, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( AdamSolverTest , TestSnapshotShare)",11, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::RMSPropSolverTest::InitSolver( const SolverParameter & param)",6, 62, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithWeightDecay)",6, 78, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithRmsDecay)",10, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithEverything)",10, 77, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestRMSPropLeastSquaresUpdateWithEverythingShare)",12, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestLeastSquaresUpdateWithEverythingAccum)",10, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestLeastSquaresUpdateWithEverythingAccumShare)",11, 80, 0, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestSnapshot)",10, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_gradient_based_solver.cpp,"caffe::TYPED_TEST( RMSPropSolverTest , TestSnapshotShare)",11, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::PowerLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::~PowerLayerTest()",1, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::TestForward( Dtype power , Dtype scale , Dtype shift)",26, 73, 6, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::PowerLayerTest::TestBackward( Dtype power , Dtype scale , Dtype shift)",20, 71, 4, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPower)",7, 43, 2, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerGradient)",7, 48, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerGradientShiftZero)",7, 57, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerZero)",7, 44, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerZeroGradient)",7, 52, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerOne)",7, 43, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerOneGradient)",7, 51, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerTwo)",7, 43, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerTwoGradient)",7, 51, 0, 0
repos/cpp/caffe/src/caffe/test/test_power_layer.cpp,"caffe::TYPED_TEST( PowerLayerTest , TestPowerTwoScaleHalfGradient)",7, 60, 0, 0
repos/cpp/caffe/src/caffe/test/test_caffe_main.cpp,"main( int argc , char ** argv)",25, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::NeuronLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::~NeuronLayerTest()",1, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestDropoutForward( const float dropout_ratio)",31, 80, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestExpForward( const float base , const float scale , const float shift)",21, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestExpGradient( const float base , const float scale , const float shift)",9, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestPReLU( PReLULayer<Dtype> * layer)",16, 79, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::LogBottomInit()",7, 70, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestLogForward( const float base , const float scale , const float shift)",23, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::NeuronLayerTest::TestLogGradient( const float base , const float scale , const float shift)",10, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestAbsVal)",13, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestAbsGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestClip)",20, 63, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestClipGradient)",38, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLU)",14, 68, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLUGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLUWithNegativeSlope)",19, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestReLUGradientWithNegativeSlope)",10, 65, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELU)",20, 73, 6, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELUasReLU)",16, 68, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELUGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestELUasReLUGradient)",10, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSigmoid)",16, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSigmoidGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwish)",13, 80, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishWithBeta)",16, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishAsLinear)",15, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishWithBetaGradient)",10, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestSwishAsLinearGradient)",10, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestTanH)",22, 68, 13, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestTanHGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayer)",8, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradient)",8, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerWithShift)",9, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientWithShift)",9, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2)",7, 49, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2)",7, 52, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2Shift1)",7, 55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2Shift1)",7, 58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2Scale3)",7, 55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2Scale3)",7, 58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpLayerBase2Shift1Scale3)",7, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestExpGradientBase2Shift1Scale3)",7, 64, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayer)",8, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradient)",8, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2)",7, 49, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2)",7, 52, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2Shift1)",7, 55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2Shift1)",7, 58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2Scale3)",7, 55, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2Scale3)",7, 58, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogLayerBase2Shift1Scale3)",7, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestLogGradientBase2Shift1Scale3)",7, 64, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutHalf)",4, 47, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutThreeQuarters)",4, 56, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutTestPhase)",16, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutGradient)",9, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestDropoutGradientTest)",9, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestBNLL)",14, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestBNLLGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUParam)",11, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUForward)",10, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUForwardChannelShared)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUGradient)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUGradientChannelShared)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUConsistencyReLU)",42, 80, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( NeuronLayerTest , TestPReLUInPlace)",77, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::CuDNNNeuronLayerTest::CuDNNNeuronLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::CuDNNNeuronLayerTest::~CuDNNNeuronLayerTest()",1, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUCuDNN)",13, 68, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUGradientCuDNN)",7, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUWithNegativeSlopeCuDNN)",18, 67, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestReLUGradientWithNegativeSlopeCuDNN)",9, 75, 0, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestSigmoidCuDNN)",15, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestSigmoidGradientCuDNN)",7, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestTanHCuDNN)",21, 68, 13, 0
repos/cpp/caffe/src/caffe/test/test_neuron_layer.cpp,"caffe::TYPED_TEST( CuDNNNeuronLayerTest , TestTanHGradientCuDNN)",7, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::MVNLayerTest::MVNLayerTest()",10, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::MVNLayerTest::~MVNLayerTest()",1, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestForward)",33, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestForwardMeanOnly)",32, 62, 6, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestForwardAcrossChannels)",35, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestGradient)",8, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestGradientMeanOnly)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_mvn_layer.cpp,"caffe::TYPED_TEST( MVNLayerTest , TestGradientAcrossChannels)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::SPPLayerTest::SPPLayerTest()",5, 43, 8, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::SPPLayerTest::SetUp()",14, 50, 4, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::SPPLayerTest::~SPPLayerTest()",1, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestSetup)",16, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestEqualOutputDims)",16, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestEqualOutputDims2)",16, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestForwardBackward)",11, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_spp_layer.cpp,"caffe::TYPED_TEST( SPPLayerTest , TestGradient)",11, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestCublasHandlerGPU)",5, 46, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestBrewMode)",6, 40, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestRandSeedCPU)",14, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_common.cpp,"caffe::TEST_F( CommonTest , TestRandSeedGPU)",14, 69, 8, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::BatchReindexLayerTest()",5, 49, 8, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::SetUp()",25, 62, 4, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::~BatchReindexLayerTest()",5, 37, 2, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::BatchReindexLayerTest::TestForward()",40, 71, 10, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::TYPED_TEST( BatchReindexLayerTest , TestForward)",3, 49, 0, 0
repos/cpp/caffe/src/caffe/test/test_batch_reindex_layer.cpp,"caffe::TYPED_TEST( BatchReindexLayerTest , TestGradient)",8, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayerTest::ContrastiveLossLayerTest()",20, 79, 4, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayerTest::~ContrastiveLossLayerTest()",6, 40, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestForward)",28, 73, 6, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestGradient)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestForwardLegacy)",28, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_contrastive_loss_layer.cpp,"caffe::TYPED_TEST( ContrastiveLossLayerTest , TestGradientLegacy)",13, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TileLayerTest::TileLayerTest()",3, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TileLayerTest::SetUp()",9, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TileLayerTest::~TileLayerTest()",4, 29, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestTrivialSetup)",15, 76, 4, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestSetup)",17, 76, 4, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestForwardNum)",22, 69, 11, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestForwardChannels)",20, 69, 11, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestTrivialGradient)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestGradientNum)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_tile_layer.cpp,"caffe::TYPED_TEST( TileLayerTest , TestGradientChannels)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::ConstantFillerTest::ConstantFillerTest()",6, 61, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::ConstantFillerTest::test_params( const vector<int> & shape)",10, 55, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::ConstantFillerTest::~ConstantFillerTest()",1, 50, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill)",8, 43, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill1D)",4, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill2D)",6, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( ConstantFillerTest , TestFill5D)",9, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::UniformFillerTest::UniformFillerTest()",7, 60, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::UniformFillerTest::test_params( const vector<int> & shape)",11, 55, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::UniformFillerTest::~UniformFillerTest()",1, 49, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill)",8, 42, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill1D)",4, 44, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill2D)",6, 44, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( UniformFillerTest , TestFill5D)",9, 44, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::PositiveUnitballFillerTest::PositiveUnitballFillerTest()",5, 69, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::PositiveUnitballFillerTest::test_params( const vector<int> & shape)",21, 55, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::PositiveUnitballFillerTest::~PositiveUnitballFillerTest()",1, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill)",8, 51, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill1D)",4, 53, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill2D)",6, 53, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( PositiveUnitballFillerTest , TestFill5D)",9, 53, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::GaussianFillerTest()",7, 61, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::test_params( const vector<int> & shape , const Dtype tolerance = Dtype(5) , const int repetitions = 100)",9, 71, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::test_params_iter( const vector<int> & shape , const Dtype tolerance)",24, 80, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::GaussianFillerTest::~GaussianFillerTest()",1, 50, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill)",9, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill1D)",5, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill2D)",7, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( GaussianFillerTest , TestFill5D)",10, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::XavierFillerTest()",4, 34, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::test_params( FillerParameter_VarianceNorm variance_norm , Dtype n , const vector<int> & shape , const int repetitions = 100)",8, 72, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::test_params_iter( FillerParameter_VarianceNorm variance_norm , Dtype n)",20, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::XavierFillerTest::~XavierFillerTest()",1, 48, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFillFanIn)",9, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFillFanOut)",9, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFillAverage)",9, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFill1D)",9, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFill2D)",10, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( XavierFillerTest , TestFill5D)",13, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::MSRAFillerTest()",4, 34, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::test_params( FillerParameter_VarianceNorm variance_norm , Dtype n , const vector<int> & shape , const int repetitions = 100)",8, 72, 6, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::test_params_iter( FillerParameter_VarianceNorm variance_norm , Dtype n)",20, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::MSRAFillerTest::~MSRAFillerTest()",1, 46, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFillFanIn)",9, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFillFanOut)",9, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFillAverage)",9, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFill1D)",9, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFill2D)",10, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( MSRAFillerTest , TestFill5D)",13, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::BilinearFillerTest::BilinearFillerTest()",4, 32, 4, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::BilinearFillerTest::test_params( const vector<int> & shape)",21, 78, 8, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::BilinearFillerTest::~BilinearFillerTest()",1, 50, 2, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( BilinearFillerTest , TestFillOdd)",9, 46, 0, 0
repos/cpp/caffe/src/caffe/test/test_filler.cpp,"caffe::TYPED_TEST( BilinearFillerTest , TestFillEven)",9, 47, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobSimpleTest::BlobSimpleTest()",3, 56, 8, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobSimpleTest::~BlobSimpleTest()",1, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestInitialization)",11, 51, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestPointersCPUGPU)",6, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestReshape)",8, 42, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestReshapeZero)",7, 46, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobSimpleTest , TestLegacyBlobProtoShapeEquals)",52, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobMathTest::BlobMathTest()",3, 44, 6, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::BlobMathTest::~BlobMathTest()",1, 44, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobMathTest , TestSumOfSquares)",54, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobMathTest , TestAsum)",53, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_blob.cpp,"caffe::TYPED_TEST( BlobMathTest , TestScaleData)",61, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_util_blas.cpp,"caffe::TYPED_TEST( GemmTest , TestGemmCPUGPU)",69, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_util_blas.cpp,"caffe::TYPED_TEST( GemmTest , TestGemvCPUGPU)",38, 68, 4, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::tanh_naive( double x)",13, 64, 4, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::TanHLayerTest()",8, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::~TanHLayerTest()",1, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::TestForward( Dtype filler_std)",21, 71, 8, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TanHLayerTest::TestBackward( Dtype filler_std)",12, 65, 4, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TYPED_TEST( TanHLayerTest , TestTanH)",3, 38, 0, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TYPED_TEST( TanHLayerTest , TestTanHOverflow)",4, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_tanh_layer.cpp,"caffe::TYPED_TEST( TanHLayerTest , TestTanHGradient)",3, 46, 0, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::StochasticPoolingLayerTest::StochasticPoolingLayerTest()",3, 41, 6, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::StochasticPoolingLayerTest::SetUp()",12, 47, 4, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::StochasticPoolingLayerTest::~StochasticPoolingLayerTest()",3, 43, 4, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( CPUStochasticPoolingLayerTest , TestSetup)",12, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( GPUStochasticPoolingLayerTest , TestStochastic)",42, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( GPUStochasticPoolingLayerTest , TestStochasticTestPhase)",36, 78, 10, 0
repos/cpp/caffe/src/caffe/test/test_stochastic_pooling.cpp,"caffe::TYPED_TEST( GPUStochasticPoolingLayerTest , TestGradient)",14, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_solver_factory.cpp,"caffe::SolverFactoryTest::simple_solver_param()",13, 58, 8, 0
repos/cpp/caffe/src/caffe/test/test_solver_factory.cpp,"caffe::TYPED_TEST( SolverFactoryTest , TestCreateSolver)",13, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::HDF5DataLayerTest::HDF5DataLayerTest()",5, 47, 8, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::HDF5DataLayerTest::SetUp()",9, 70, 4, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::HDF5DataLayerTest::~HDF5DataLayerTest()",6, 33, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::TYPED_TEST( HDF5DataLayerTest , TestRead)",80, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_hdf5data_layer.cpp,"caffe::TYPED_TEST( HDF5DataLayerTest , TestSkip)",29, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::ScaleLayerTest::ScaleLayerTest()",29, 62, 4, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::ScaleLayerTest::~ScaleLayerTest()",9, 37, 4, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardEltwise)",17, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardEltwiseInPlace)",19, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestBackwardEltwiseInPlace)",45, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardEltwiseWithParam)",19, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastBegin)",22, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddle)",22, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddleInPlace)",24, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestBackwardBroadcastMiddleInPlace)",45, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddleWithParam)",23, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastMiddleWithParamAndBias)",26, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardBroadcastEnd)",22, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardScale)",16, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestForwardScaleAxis2)",17, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientEltwise)",10, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientEltwiseWithParam)",12, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastBegin)",10, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastMiddle)",10, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastMiddleWithParam)",13, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientBroadcastEnd)",10, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientScale)",9, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientScaleAndBias)",12, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_scale_layer.cpp,"caffe::TYPED_TEST( ScaleLayerTest , TestGradientScaleAxis2)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_layer_factory.cpp,"caffe::TYPED_TEST( LayerFactoryTest , TestCreateLayer)",28, 73, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::SoftmaxWithLossLayerTest::SoftmaxWithLossLayerTest()",16, 72, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::SoftmaxWithLossLayerTest::~SoftmaxWithLossLayerTest()",5, 40, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestGradient)",9, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestForwardIgnoreLabel)",22, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestGradientIgnoreLabel)",10, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_with_loss_layer.cpp,"caffe::TYPED_TEST( SoftmaxWithLossLayerTest , TestGradientUnnormalized)",9, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::EmbedLayerTest::EmbedLayerTest()",10, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::EmbedLayerTest::~EmbedLayerTest()",1, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestSetUp)",15, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestForward)",38, 78, 4, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestForwardWithBias)",43, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestGradient)",19, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_embed_layer.cpp,"caffe::TYPED_TEST( EmbedLayerTest , TestGradientWithBias)",20, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::DummyDataLayerTest::DummyDataLayerTest()",4, 42, 8, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::DummyDataLayerTest::SetUp()",7, 42, 4, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::DummyDataLayerTest::~DummyDataLayerTest()",5, 34, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::TYPED_TEST( DummyDataLayerTest , TestOneTopConstant)",28, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::TYPED_TEST( DummyDataLayerTest , TestTwoTopConstant)",37, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_dummy_data_layer.cpp,"caffe::TYPED_TEST( DummyDataLayerTest , TestThreeTopConstantGaussianConstant)",79, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::SigmoidCrossEntropyLossLayerTest()",19, 63, 4, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::~SigmoidCrossEntropyLossLayerTest()",5, 48, 2, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::SigmoidCrossEntropyLossReference( const int count , const int num , const Dtype * input , const Dtype * target)",15, 79, 6, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayerTest::TestForward()",31, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::TYPED_TEST( SigmoidCrossEntropyLossLayerTest , TestSigmoidCrossEntropyLoss)",3, 76, 0, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::TYPED_TEST( SigmoidCrossEntropyLossLayerTest , TestGradient)",11, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp,"caffe::TYPED_TEST( SigmoidCrossEntropyLossLayerTest , TestIgnoreGradient)",27, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::BatchNormLayerTest::BatchNormLayerTest()",10, 53, 8, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::BatchNormLayerTest::~BatchNormLayerTest()",1, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::TYPED_TEST( BatchNormLayerTest , TestForward)",35, 64, 4, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::TYPED_TEST( BatchNormLayerTest , TestForwardInplace)",43, 59, 12, 0
repos/cpp/caffe/src/caffe/test/test_batch_norm_layer.cpp,"caffe::TYPED_TEST( BatchNormLayerTest , TestGradient)",9, 68, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::DeconvolutionLayerTest::DeconvolutionLayerTest()",5, 53, 8, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::DeconvolutionLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::DeconvolutionLayerTest::~DeconvolutionLayerTest()",6, 38, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestSetup)",35, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestSimpleDeconvolution)",47, 69, 10, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestGradient)",17, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestNDAgainst2D)",117, 74, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( DeconvolutionLayerTest , TestGradient3D)",28, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::CuDNNDeconvolutionLayerTest::CuDNNDeconvolutionLayerTest()",5, 53, 8, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::CuDNNDeconvolutionLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::CuDNNDeconvolutionLayerTest::~CuDNNDeconvolutionLayerTest()",6, 43, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestSetup)",35, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestSimpleCuDNNDeconvolution)",47, 72, 0, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestGradient)",17, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_deconvolution_layer.cpp,"caffe::TYPED_TEST( CuDNNDeconvolutionLayerTest , TestNDAgainst2D)",117, 74, 4, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::MemoryDataLayerTest::MemoryDataLayerTest()",5, 40, 6, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::MemoryDataLayerTest::SetUp()",16, 72, 4, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::MemoryDataLayerTest::~MemoryDataLayerTest()",6, 35, 2, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , TestSetup)",21, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , TestForward)",28, 76, 14, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , AddDatumVectorDefaultTransform)",53, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , AddMatVectorDefaultTransform)",45, 81, 12, 0
repos/cpp/caffe/src/caffe/test/test_memory_data_layer.cpp,"caffe::TYPED_TEST( MemoryDataLayerTest , TestSetBatchSize)",79, 81, 12, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::FilterLayerTest::FilterLayerTest()",6, 60, 8, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::FilterLayerTest::SetUp()",22, 78, 4, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::FilterLayerTest::~FilterLayerTest()",7, 34, 4, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::TYPED_TEST( FilterLayerTest , TestReshape)",19, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::TYPED_TEST( FilterLayerTest , TestForward)",27, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_filter_layer.cpp,"caffe::TYPED_TEST( FilterLayerTest , TestGradient)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::DBTest::DBTest()",3, 71, 6, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::DBTest::SetUp()",17, 59, 4, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::DBTest::~DBTest()",1, 24, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestGetDB)",3, 56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestNext)",10, 56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestSeekToFirst)",15, 56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestKeyValue)",23, 56, 2, 0
repos/cpp/caffe/src/caffe/test/test_db.cpp,"caffe::TYPED_TEST( DBTest , TestWrite)",14, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::ConcatLayerTest::ConcatLayerTest()",5, 53, 6, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::ConcatLayerTest::SetUp()",19, 59, 4, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::ConcatLayerTest::~ConcatLayerTest()",4, 50, 4, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestSetupNum)",12, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestSetupChannels)",11, 76, 6, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestSetupChannelsNegativeIndexing)",15, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestForwardTrivial)",12, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestForwardNum)",28, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestForwardChannels)",25, 65, 4, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientTrivial)",9, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientNum)",9, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientChannels)",8, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_concat_layer.cpp,"caffe::TYPED_TEST( ConcatLayerTest , TestGradientChannelsBottomOneOnly)",8, 65, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::ReductionLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::~ReductionLayerTest()",4, 34, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::TestForward( ReductionParameter_ReductionOp op , float coeff = 1 , int axis = 0)",43, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::ReductionLayerTest::TestGradient( ReductionParameter_ReductionOp op , float coeff = 1 , int axis = 0)",13, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSetUp)",8, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSetUpWithAxis1)",10, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSetUpWithAxis2)",11, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSum)",4, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeff)",5, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeffAxis1)",6, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumGradient)",4, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeffGradient)",5, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumCoeffAxis1Gradient)",6, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMean)",5, 45, 2, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeff)",6, 48, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeffAxis1)",7, 53, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanGradient)",5, 51, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeffGradient)",6, 56, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestMeanCoeffGradientAxis1)",7, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSum)",5, 45, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeff)",6, 50, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeffAxis1)",7, 55, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumGradient)",5, 53, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeffGradient)",6, 58, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestAbsSumCoeffAxis1Gradient)",7, 63, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquares)",5, 51, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeff)",6, 56, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeffAxis1)",7, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresGradient)",5, 59, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeffGradient)",6, 64, 0, 0
repos/cpp/caffe/src/caffe/test/test_reduction_layer.cpp,"caffe::TYPED_TEST( ReductionLayerTest , TestSumOfSquaresCoeffAxis1Gradient)",7, 69, 0, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::Im2colLayerTest::Im2colLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::Im2colLayerTest::~Im2colLayerTest()",1, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestSetup)",21, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestForward)",16, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestGradient)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestDilatedGradient)",19, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestGradientForceND)",13, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestDilatedGradientForceND)",20, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestRect)",17, 71, 8, 0
repos/cpp/caffe/src/caffe/test/test_im2col_layer.cpp,"caffe::TYPED_TEST( Im2colLayerTest , TestRectGradient)",13, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::FillDatum( const int label , const int channels , const int height , const int width , const bool unique_pixels , Datum * datum)",13, 70, 0, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::DataTransformTest::DataTransformTest()",3, 23, 6, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::DataTransformTest::NumSequenceMatches( const TransformationParameter transform_param , const Datum & datum , Phase phase)",32, 80, 8, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestEmptyTransform)",22, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestEmptyTransformUniquePixels)",22, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropSize)",26, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropTrain)",16, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropTest)",16, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMirrorTrain)",15, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMirrorTest)",15, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropMirrorTrain)",21, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestCropMirrorTest)",20, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMeanValue)",20, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMeanValues)",23, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_data_transformer.cpp,"caffe::TYPED_TEST( DataTransformTest , TestMeanFile)",36, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::InfogainLossLayerTest::InfogainLossLayerTest()",27, 60, 8, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::InfogainLossLayerTest::~InfogainLossLayerTest()",7, 37, 2, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::TYPED_TEST( InfogainLossLayerTest , TestInfogainLoss)",58, 81, 8, 0
repos/cpp/caffe/src/caffe/test/test_infogain_loss_layer.cpp,"caffe::TYPED_TEST( InfogainLossLayerTest , TestGradient)",11, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::BiasLayerTest::BiasLayerTest()",29, 62, 4, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::BiasLayerTest::~BiasLayerTest()",9, 37, 4, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardEltwise)",17, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardEltwiseInPlace)",19, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestBackwardEltwiseInPlace)",45, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardEltwiseWithParam)",19, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastBegin)",22, 75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastMiddle)",22, 75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastMiddleInPlace)",24, 75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestBackwardBroadcastMiddleInPlace)",45, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastMiddleWithParam)",23, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBroadcastEnd)",22, 75, 22, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBias)",16, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestForwardBiasAxis2)",17, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientEltwise)",10, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientEltwiseWithParam)",12, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastBegin)",10, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastMiddle)",10, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastMiddleWithParam)",13, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBroadcastEnd)",10, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBias)",9, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_bias_layer.cpp,"caffe::TYPED_TEST( BiasLayerTest , TestGradientBiasAxis2)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::HDF5OutputLayerTest::HDF5OutputLayerTest()",10, 63, 6, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::HDF5OutputLayerTest::~HDF5OutputLayerTest()",4, 35, 2, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::HDF5OutputLayerTest<TypeParam>::CheckBlobEqual( const Blob<Dtype> & b1 , const Blob<Dtype> & b2)",16, 77, 52, 0
repos/cpp/caffe/src/caffe/test/test_hdf5_output_layer.cpp,"caffe::TYPED_TEST( HDF5OutputLayerTest , TestForward)",49, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::SliceLayerTest()",5, 52, 6, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::SetUp()",13, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::ReduceBottomBlobSize()",6, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::SliceLayerTest::~SliceLayerTest()",4, 45, 4, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSetupNum)",13, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSetupChannels)",14, 72, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestTrivialSlice)",14, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSliceAcrossNum)",29, 65, 10, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestSliceAcrossChannels)",42, 76, 10, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestGradientTrivial)",11, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestGradientAcrossNum)",11, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_slice_layer.cpp,"caffe::TYPED_TEST( SliceLayerTest , TestGradientAcrossChannels)",12, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::HingeLossLayerTest::HingeLossLayerTest()",17, 72, 6, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::HingeLossLayerTest::~HingeLossLayerTest()",5, 34, 2, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::TYPED_TEST( HingeLossLayerTest , TestGradientL1)",8, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_hinge_loss_layer.cpp,"caffe::TYPED_TEST( HingeLossLayerTest , TestGradientL2)",11, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::ReadImageToDatumReference( const string & filename , const int label , const int height , const int width , const bool is_color , Datum * datum)",44, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatum)",8, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumReference)",17, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumReferenceResized)",17, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumContent)",20, 61, 10, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumContentGray)",18, 79, 6, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumResized)",8, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumResizedSquare)",8, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumGray)",9, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToDatumResizedGray)",9, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMat)",7, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatResized)",7, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatResizedSquare)",7, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatGray)",8, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadImageToCVMatResizedGray)",8, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestCVMatToDatum)",9, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestCVMatToDatumContent)",18, 59, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestCVMatToDatumReference)",18, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestReadFileToDatum)",8, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatum)",19, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMat)",13, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatContent)",19, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumNative)",19, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatNative)",9, 58, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumNativeGray)",19, 67, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatNativeGray)",9, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_io.cpp,"caffe::TEST_F( IOTest , TestDecodeDatumToCVMatContentNative)",19, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_platform.cpp,"caffe::TEST_F( PlatformTest , TestInitialization)",37, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::LSTMLayerTest::LSTMLayerTest()",24, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::LSTMLayerTest::ReshapeBlobs( int num_timesteps , int num_instances)",25, 72, 4, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestSetUp)",9, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestForward)",85, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestLSTMUnitSetUp)",15, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestLSTMUnitGradient)",14, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestLSTMUnitGradientNonZeroCont)",14, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradient)",7, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradientNonZeroCont)",10, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradientNonZeroContBufferSize2)",14, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lstm_layer.cpp,"caffe::TYPED_TEST( LSTMLayerTest , TestGradientNonZeroContBufferSize2WithStaticInput)",18, 79, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RandomNumberGeneratorTest()",8, 77, 5, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::SetUp()",3, 41, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const Dtype * const seqs , const int sample_size)",7, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const Dtype * const seqs)",3, 47, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const int * const seqs , const int sample_size)",7, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::sample_mean( const int * const seqs)",3, 45, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::mean_bound( const Dtype std , const int sample_size)",3, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::mean_bound( const Dtype std)",3, 42, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngGaussianFill( const Dtype mu , const Dtype sigma , void * cpu_data)",4, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngGaussianChecks( const Dtype mu , const Dtype sigma , const void * cpu_data , const Dtype sparse_p = 0)",37, 75, 25, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformFill( const Dtype lower , const Dtype upper , void * cpu_data)",5, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformChecks( const Dtype lower , const Dtype upper , const void * cpu_data , const Dtype sparse_p = 0)",46, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngBernoulliFill( const Dtype p , void * cpu_data)",4, 57, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngBernoulliChecks( const Dtype p , const void * cpu_data)",8, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngGaussianFillGPU( const Dtype mu , const Dtype sigma , void * gpu_data)",4, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformFillGPU( const Dtype lower , const Dtype upper , void * gpu_data)",5, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::RandomNumberGeneratorTest::RngUniformIntFillGPU( void * gpu_data)",4, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussian)",7, 57, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussian2)",7, 58, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniform)",7, 56, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniform2)",7, 57, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngBernoulli)",6, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngBernoulli2)",6, 62, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianTimesGaussian)",24, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformTimesUniform)",26, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianTimesBernoulli)",23, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformTimesBernoulli)",23, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngBernoulliTimesBernoulli)",32, 72, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianGPU)",8, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussian2GPU)",8, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformGPU)",8, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniform2GPU)",8, 60, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformIntGPU)",15, 74, 4, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngGaussianTimesGaussianGPU)",29, 73, 0, 0
repos/cpp/caffe/src/caffe/test/test_random_number_generator.cpp,"caffe::TYPED_TEST( RandomNumberGeneratorTest , TestRngUniformTimesUniformGPU)",29, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::SoftmaxLayerTest::SoftmaxLayerTest()",10, 52, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::SoftmaxLayerTest::~SoftmaxLayerTest()",1, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( SoftmaxLayerTest , TestForward)",33, 68, 14, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( SoftmaxLayerTest , TestGradient)",8, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayerTest::CuDNNSoftmaxLayerTest()",10, 52, 6, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayerTest::~CuDNNSoftmaxLayerTest()",1, 78, 2, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( CuDNNSoftmaxLayerTest , TestForwardCuDNN)",32, 68, 14, 0
repos/cpp/caffe/src/caffe/test/test_softmax_layer.cpp,"caffe::TYPED_TEST( CuDNNSoftmaxLayerTest , TestGradientCuDNN)",7, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::NetTest()",1, 29, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitNetFromProtoString( const string & proto)",5, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitNetFromProtoFileWithState( const string & proto , Phase phase = caffe :: TRAIN , const int level = 0 , const vector<string> * stages = NULL)",10, 73, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::CopyNetBlobs( const bool copy_diff , vector<shared_ptr<Blob<Dtype>>> * blobs_copy)",12, 72, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::CopyNetParams( const bool copy_diff , vector<shared_ptr<Blob<Dtype>>> * params_copy)",12, 74, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitTinyNet( const bool force_backward = false , const bool accuracy_layer = false)",76, 64, 27, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitTinyNetEuclidean( const bool force_backward = false)",59, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitTrickyNet( Dtype * loss_weight = NULL)",86, 70, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitUnsharedWeightsNet( const Dtype * loss_weight = NULL , const Dtype * midnet_loss_weight = NULL , const bool force_backward = false , const bool bias_term = false , const Dtype blobs_lr_w1 = 1 , const Dtype blobs_lr_b1 = 2 , const Dtype blobs_lr_w2 = 1 , const Dtype blobs_lr_b2 = 2)",87, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitSharedWeightsNet()",56, 45, 8, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitDiffDataUnsharedWeightsNet()",61, 50, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitDiffDataSharedWeightsNet()",61, 48, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitReshapableNet()",64, 56, 8, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitSkipPropNet( bool test_skip_true)",98, 54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitForcePropNet( bool test_force_true)",54, 56, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::NetTest::InitAllInOneNet( Phase phase = caffe :: TRAIN , const int level = 0 , const vector<string> * stages = NULL)",55, 66, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestHasBlob)",8, 53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestGetBlob)",8, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestHasLayer)",7, 54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestGetLayerByName)",7, 81, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackward)",12, 54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackwardForce)",13, 54, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackwardEuclideanForce)",13, 60, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBottomNeedBackwardTricky)",17, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestLossWeight)",50, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestLossWeightMidNet)",36, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestComboLossWeight)",128, 78, 8, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestBackwardWithAccuracyLayer)",8, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestUnsharedWeightsDataNet)",7, 50, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsDataNet)",7, 48, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestUnsharedWeightsDiffNet)",16, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsDiffNet)",18, 71, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsUpdate)",80, 80, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSharedWeightsResume)",44, 78, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestParamPropagateDown)",80, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestFromTo)",33, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::FilterNetTest::RunFilterNetTest( const string & input_param_string , const string & filtered_param_string)",18, 79, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestNoFilter)",23, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterLeNetTrainTest)",241, 77, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByStage)",38, 53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByStage2)",38, 53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByStage)",25, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByStage2)",24, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByMultipleStage)",42, 63, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMultipleStage)",27, 53, 0, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMultipleStage2)",26, 63, 6, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByNotStage)",26, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByNotStage)",35, 53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByMinLevel)",38, 53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterOutByMaxLevel)",38, 53, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMinLevel)",24, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMinLevel2)",25, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMaxLevel)",24, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByMaxLevel2)",25, 52, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInOutByIncludeMultiRule)",62, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInByIncludeMultiRule)",32, 64, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TEST_F( FilterNetTest , TestFilterInOutByExcludeMultiRule)",62, 65, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestReshape)",71, 80, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestSkipPropagateDown)",47, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestForcePropagateDown)",46, 79, 2, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestAllInOneNetTrain)",20, 61, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestAllInOneNetVal)",20, 61, 4, 0
repos/cpp/caffe/src/caffe/test/test_net.cpp,"caffe::TYPED_TEST( NetTest , TestAllInOneNetDeploy)",17, 61, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::PoolingLayerTest()",4, 45, 8, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::~PoolingLayerTest()",5, 32, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::TestForwardSquare()",71, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::TestForwardRectHigh()",124, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::PoolingLayerTest::TestForwardRectWide()",126, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestSetup)",13, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestSetupPadded)",15, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestSetupGlobalPooling)",13, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardMax)",5, 47, 0, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardMaxTopMask)",6, 55, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientMax)",18, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardMaxPadded)",44, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientMaxTopMask)",19, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestForwardAve)",31, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientAve)",17, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( PoolingLayerTest , TestGradientAvePadded)",18, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::CuDNNPoolingLayerTest()",4, 45, 8, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::~CuDNNPoolingLayerTest()",5, 37, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::TestForwardSquare()",71, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::TestForwardRectHigh()",124, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::CuDNNPoolingLayerTest::TestForwardRectWide()",126, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestSetupCuDNN)",12, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestSetupPaddedCuDNN)",14, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestForwardMaxCuDNN)",5, 57, 0, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestGradientMaxCuDNN)",18, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestForwardMaxPaddedCuDNN)",43, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestForwardAveCuDNN)",24, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestGradientAveCuDNN)",16, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_pooling_layer.cpp,"caffe::TYPED_TEST( CuDNNPoolingLayerTest , TestGradientAvePaddedCuDNN)",17, 77, 6, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::EltwiseLayerTest::EltwiseLayerTest()",17, 53, 6, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::EltwiseLayerTest::~EltwiseLayerTest()",6, 32, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSetUp)",13, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestProd)",18, 76, 4, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSum)",18, 76, 4, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSumCoeff)",22, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestStableProdGradient)",11, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestUnstableProdGradient)",11, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSumGradient)",10, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestSumCoeffGradient)",13, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestMax)",19, 77, 14, 0
repos/cpp/caffe/src/caffe/test/test_eltwise_layer.cpp,"caffe::TYPED_TEST( EltwiseLayerTest , TestMaxGradient)",10, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::FlattenLayerTest::FlattenLayerTest()",11, 51, 6, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::FlattenLayerTest::~FlattenLayerTest()",1, 73, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetup)",9, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetupWithAxis)",11, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetupWithEndAxis)",11, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestSetupWithStartAndEndAxis)",11, 61, 0, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestForward)",13, 74, 8, 0
repos/cpp/caffe/src/caffe/test/test_flatten_layer.cpp,"caffe::TYPED_TEST( FlattenLayerTest , TestGradient)",8, 63, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::caffe_conv( const Blob<Dtype> * in , ConvolutionParameter * conv_param , const vector<shared_ptr<Blob<Dtype>>> & weights , Blob<Dtype> * out)",118, 81, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::ConvolutionLayerTest()",5, 53, 8, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::~ConvolutionLayerTest()",6, 36, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::ConvolutionLayerTest::MakeReferenceTop( Blob<Dtype> * top)",5, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSetup)",35, 61, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSimpleConvolution)",35, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestDilatedConvolution)",43, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , Test0DConvolution)",37, 76, 17, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSimple3DConvolution)",46, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestDilated3DConvolution)",46, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , Test1x1Convolution)",26, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSimpleConvolutionGroup)",27, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestSobelConvolution)",92, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestNDAgainst2D)",117, 74, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestGradient)",17, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestDilatedGradient)",23, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestGradient3D)",27, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , Test1x1Gradient)",17, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( ConvolutionLayerTest , TestGradientGroup)",16, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::CuDNNConvolutionLayerTest()",5, 53, 8, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::~CuDNNConvolutionLayerTest()",6, 41, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::CuDNNConvolutionLayerTest::MakeReferenceTop( Blob<Dtype> * top)",5, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSetupCuDNN)",36, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSimpleConvolutionCuDNN)",34, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSimpleConvolutionGroupCuDNN)",26, 73, 0, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestSobelConvolutionCuDNN)",92, 75, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestGradientCuDNN)",16, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_convolution_layer.cpp,"caffe::TYPED_TEST( CuDNNConvolutionLayerTest , TestGradientGroupCuDNN)",15, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::AccuracyLayerTest::AccuracyLayerTest()",20, 60, 4, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::AccuracyLayerTest::FillBottoms()",15, 67, 4, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::AccuracyLayerTest::~AccuracyLayerTest()",6, 33, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestSetup)",10, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestSetupTopK)",13, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestSetupOutputPerClass)",14, 70, 2, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForward)",30, 72, 8, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardWithSpatialAxes)",47, 81, 14, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardIgnoreLabel)",42, 80, 6, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardTopK)",35, 78, 10, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardPerClass)",40, 75, 9, 0
repos/cpp/caffe/src/caffe/test/test_accuracy_layer.cpp,"caffe::TYPED_TEST( AccuracyLayerTest , TestForwardPerClassWithIgnoreLabel)",53, 80, 6, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest::LRNLayerTest()",4, 41, 8, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest::~LRNLayerTest()",1, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::LRNLayerTest<TypeParam>::ReferenceLRNForward( const Blob<Dtype> & blob_bottom , const LayerParameter & layer_param , Blob<Dtype> * blob_top)",61, 71, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestSetupAcrossChannels)",10, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestForwardAcrossChannels)",14, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestForwardAcrossChannelsLargeRegion)",15, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestGradientAcrossChannels)",20, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestGradientAcrossChannelsLargeRegion)",21, 69, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestSetupWithinChannel)",13, 60, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestForwardWithinChannel)",17, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( LRNLayerTest , TestGradientWithinChannel)",16, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest::CuDNNLRNLayerTest()",4, 41, 8, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest::SetUp()",10, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest::~CuDNNLRNLayerTest()",1, 74, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::CuDNNLRNLayerTest<TypeParam>::ReferenceLRNForward( const Blob<TypeParam> & blob_bottom , const LayerParameter & layer_param , Blob<TypeParam> * blob_top)",61, 75, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestForwardAcrossChannelsCuDNN)",14, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestForwardAcrossChannelsLargeRegionCuDNN)",15, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestGradientAcrossChannelsCuDNN)",16, 68, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestForwardWithinChannel)",17, 77, 4, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestGradientWithinChannel)",16, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_lrn_layer.cpp,"caffe::TYPED_TEST( CuDNNLRNLayerTest , TestGradientAcrossChannelsLargeRegionCuDNN)",17, 76, 0, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::CropLayerTest::CropLayerTest()",4, 53, 6, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::CropLayerTest::SetUp()",11, 48, 4, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::CropLayerTest::~CropLayerTest()",4, 50, 4, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestSetupShapeAll)",11, 74, 4, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestSetupShapeDefault)",14, 76, 6, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestSetupShapeNegativeIndexing)",15, 76, 6, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestDimensionsCheck)",17, 76, 2, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropAll)",23, 66, 8, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropAllOffset)",27, 66, 8, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropHW)",25, 66, 8, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCrop5D)",50, 69, 10, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropAllGradient)",9, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCropHWGradient)",11, 66, 2, 0
repos/cpp/caffe/src/caffe/test/test_crop_layer.cpp,"caffe::TYPED_TEST( CropLayerTest , TestCrop5DGradient)",19, 66, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_conv_layer.cpp,"caffe::CuDNNConvolutionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_conv_layer.cpp,"caffe::CuDNNConvolutionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",142, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/cudnn_conv_layer.cpp,"caffe::CuDNNConvolutionLayer<Dtype>::~CuDNNConvolutionLayer()",30, 69, 2, 0
repos/cpp/caffe/src/caffe/layers/log_layer.cpp,"caffe::LogLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",23, 78, 6, 0
repos/cpp/caffe/src/caffe/layers/log_layer.cpp,"caffe::LogLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",21, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/log_layer.cpp,"caffe::LogLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",20, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::check_batch_reindex( int initial_num , int final_num , const Dtype * ridx_data)",10, 77, 51, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",17, 79, 0, 0
repos/cpp/caffe/src/caffe/layers/batch_reindex_layer.cpp,"caffe::BatchReindexLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",18, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/tile_layer.cpp,"caffe::TileLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",13, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/tile_layer.cpp,"caffe::TileLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",12, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/tile_layer.cpp,"caffe::TileLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",15, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/reshape_layer.cpp,"caffe::ReshapeLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",22, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/reshape_layer.cpp,"caffe::ReshapeLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",60, 81, 8, 0
repos/cpp/caffe/src/caffe/layers/cudnn_sigmoid_layer.cpp,"caffe::CuDNNSigmoidLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",11, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_sigmoid_layer.cpp,"caffe::CuDNNSigmoidLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_sigmoid_layer.cpp,"caffe::CuDNNSigmoidLayer<Dtype>::~CuDNNSigmoidLayer()",8, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_layer.cpp,"caffe::SoftmaxLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/softmax_layer.cpp,"caffe::SoftmaxLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",34, 77, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_layer.cpp,"caffe::SoftmaxLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",24, 81, 8, 0
repos/cpp/caffe/src/caffe/layers/mvn_layer.cpp,"caffe::MVNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",20, 76, 4, 0
repos/cpp/caffe/src/caffe/layers/mvn_layer.cpp,"caffe::MVNLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",41, 78, 2, 0
repos/cpp/caffe/src/caffe/layers/mvn_layer.cpp,"caffe::MVNLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",51, 74, 4, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",18, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",43, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::crop_copy( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top , const int * offsets , vector<int> indices , int cur_dim , const Dtype * src_data , Dtype * dest_data , bool is_forward)",39, 77, 4, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",8, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/crop_layer.cpp,"caffe::CropLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",12, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",19, 79, 6, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",14, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",53, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/eltwise_layer.cpp,"caffe::EltwiseLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",52, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/flatten_layer.cpp,"caffe::FlattenLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",20, 72, 2, 0
repos/cpp/caffe/src/caffe/layers/flatten_layer.cpp,"caffe::FlattenLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",4, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/flatten_layer.cpp,"caffe::FlattenLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",4, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/hinge_loss_layer.cpp,"caffe::HingeLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",31, 76, 0, 0
repos/cpp/caffe/src/caffe/layers/hinge_loss_layer.cpp,"caffe::HingeLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",31, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/threshold_layer.cpp,"caffe::ThresholdLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",5, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/threshold_layer.cpp,"caffe::ThresholdLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 76, 0, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",167, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",52, 79, 6, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Reset()",7, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",30, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/recurrent_layer.cpp,"caffe::RecurrentLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",11, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/silence_layer.cpp,"caffe::SilenceLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",9, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/clip_layer.cpp,"caffe::ClipLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",13, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/clip_layer.cpp,"caffe::ClipLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",18, 69, 0, 0
repos/cpp/caffe/src/caffe/layers/multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",7, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/multinomial_logistic_loss_layer.cpp,"caffe::MultinomialLogisticLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",23, 73, 4, 0
repos/cpp/caffe/src/caffe/layers/bnll_layer.cpp,"caffe::BNLLLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",11, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/bnll_layer.cpp,"caffe::BNLLLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",15, 70, 6, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_layer.cpp,"caffe::sigmoid( Dtype x)",3, 36, 2, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_layer.cpp,"caffe::SigmoidLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_layer.cpp,"caffe::SigmoidLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",14, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BaseDataLayer<Dtype>::BaseDataLayer( const LayerParameter & param)",4, 65, 0, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BaseDataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",13, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::BasePrefetchingDataLayer( const LayerParameter & param)",10, 64, 6, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",29, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::InternalThreadEntry()",32, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/base_data_layer.cpp,"caffe::BasePrefetchingDataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/split_layer.cpp,"caffe::SplitLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/split_layer.cpp,"caffe::SplitLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",6, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/split_layer.cpp,"caffe::SplitLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",16, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::~ImageDataLayer<Dtype>()",3, 50, 0, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",74, 79, 0, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::ShuffleImages()",5, 62, 6, 0
repos/cpp/caffe/src/caffe/layers/image_data_layer.cpp,"caffe::ImageDataLayer<Dtype>::load_batch( Batch<Dtype> * batch)",64, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/argmax_layer.cpp,"caffe::ArgMaxLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",20, 75, 2, 0
repos/cpp/caffe/src/caffe/layers/argmax_layer.cpp,"caffe::ArgMaxLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",20, 69, 0, 0
repos/cpp/caffe/src/caffe/layers/argmax_layer.cpp,"caffe::ArgMaxLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",42, 80, 8, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::RecurrentInputBlobNames( vector<string> * names) const",5, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::RecurrentOutputBlobNames( vector<string> * names) const",5, 79, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::RecurrentInputShapes( vector<BlobShape> * shapes) const",11, 79, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::OutputBlobNames( vector<string> * names) const",4, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_layer.cpp,"caffe::LSTMLayer<Dtype>::FillUnrolledNet( NetParameter * net_param) const",193, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/euclidean_loss_layer.cpp,"caffe::EuclideanLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",7, 73, 2, 0
repos/cpp/caffe/src/caffe/layers/euclidean_loss_layer.cpp,"caffe::EuclideanLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",12, 80, 0, 0
repos/cpp/caffe/src/caffe/layers/euclidean_loss_layer.cpp,"caffe::EuclideanLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",15, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/dummy_data_layer.cpp,"caffe::DummyDataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",90, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/dummy_data_layer.cpp,"caffe::DummyDataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 76, 0, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",46, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",24, 77, 2, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",14, 79, 0, 0
repos/cpp/caffe/src/caffe/layers/inner_product_layer.cpp,"caffe::InnerProductLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",42, 77, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_tanh_layer.cpp,"caffe::CuDNNTanHLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_tanh_layer.cpp,"caffe::CuDNNTanHLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_tanh_layer.cpp,"caffe::CuDNNTanHLayer<Dtype>::~CuDNNTanHLayer()",8, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/relu_layer.cpp,"caffe::ReLULayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",11, 75, 2, 0
repos/cpp/caffe/src/caffe/layers/relu_layer.cpp,"caffe::ReLULayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",15, 77, 4, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",37, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",14, 68, 0, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",19, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/embed_layer.cpp,"caffe::EmbedLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",25, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 73, 0, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",7, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",16, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/dropout_layer.cpp,"caffe::DropoutLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",17, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::~HDF5DataLayer<Dtype>()",1, 50, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::LoadHDF5FileData( const char * filename)",44, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",54, 78, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::Skip()",8, 67, 14, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::Next()",21, 79, 6, 0
repos/cpp/caffe/src/caffe/layers/hdf5_data_layer.cpp,"caffe::HDF5DataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",16, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/absval_layer.cpp,"caffe::AbsValLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",6, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/absval_layer.cpp,"caffe::AbsValLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",6, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/absval_layer.cpp,"caffe::AbsValLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",11, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",26, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",18, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::get_normalizer( LossParameter_NormalizationMode normalization_mode , int valid_count)",28, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",27, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/softmax_loss_layer.cpp,"caffe::SoftmaxWithLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",32, 80, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_pooling_layer.cpp,"caffe::CuDNNPoolingLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",12, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_pooling_layer.cpp,"caffe::CuDNNPoolingLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",8, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_pooling_layer.cpp,"caffe::CuDNNPoolingLayer<Dtype>::~CuDNNPoolingLayer()",9, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",8, 76, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::~HDF5OutputLayer<Dtype>()",6, 71, 4, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::SaveBlobs()",9, 70, 2, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",19, 77, 0, 0
repos/cpp/caffe/src/caffe/layers/hdf5_output_layer.cpp,"caffe::HDF5OutputLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",4, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",58, 79, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",22, 67, 2, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",13, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::CrossChannelForward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",45, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::WithinChannelForward( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",8, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",13, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::CrossChannelBackward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",53, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/lrn_layer.cpp,"caffe::LRNLayer<Dtype>::WithinChannelBackward( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",13, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",5, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",43, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",16, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/filter_layer.cpp,"caffe::FilterLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",38, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/neuron_layer.cpp,"caffe::NeuronLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",4, 69, 0, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",24, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::get_normalizer( LossParameter_NormalizationMode normalization_mode , int valid_count)",28, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",23, 80, 8, 0
repos/cpp/caffe/src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp,"caffe::SigmoidCrossEntropyLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",28, 73, 4, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",96, 80, 8, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",22, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",29, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/im2col_layer.cpp,"caffe::Im2colLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",23, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/cudnn_relu_layer.cpp,"caffe::CuDNNReLULayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_relu_layer.cpp,"caffe::CuDNNReLULayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_relu_layer.cpp,"caffe::CuDNNReLULayer<Dtype>::~CuDNNReLULayer()",9, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",64, 76, 6, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",57, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",100, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/pooling_layer.cpp,"caffe::PoolingLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",78, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/conv_layer.cpp,"caffe::ConvolutionLayer<Dtype>::compute_output_shape()",15, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/conv_layer.cpp,"caffe::ConvolutionLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",16, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/conv_layer.cpp,"caffe::ConvolutionLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",31, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::GetPoolingParam( const int pyramid_level , const int bottom_h , const int bottom_w , const SPPParameter spp_param)",46, 78, 6, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",79, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",40, 77, 6, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/spp_layer.cpp,"caffe::SPPLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",19, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/tanh_layer.cpp,"caffe::TanHLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/tanh_layer.cpp,"caffe::TanHLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",15, 69, 0, 0
repos/cpp/caffe/src/caffe/layers/contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",19, 73, 2, 0
repos/cpp/caffe/src/caffe/layers/contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",32, 76, 8, 0
repos/cpp/caffe/src/caffe/layers/contrastive_loss_layer.cpp,"caffe::ContrastiveLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",47, 80, 0, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",6, 75, 2, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",38, 76, 4, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",18, 73, 0, 0
repos/cpp/caffe/src/caffe/layers/concat_layer.cpp,"caffe::ConcatLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",19, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",40, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",33, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",80, 78, 2, 0
repos/cpp/caffe/src/caffe/layers/batch_norm_layer.cpp,"caffe::BatchNormLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",74, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/loss_layer.cpp,"caffe::LossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",7, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/loss_layer.cpp,"caffe::LossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",7, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/elu_layer.cpp,"caffe::ELULayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",11, 72, 8, 0
repos/cpp/caffe/src/caffe/layers/elu_layer.cpp,"caffe::ELULayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",16, 68, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_deconv_layer.cpp,"caffe::CuDNNDeconvolutionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",73, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_deconv_layer.cpp,"caffe::CuDNNDeconvolutionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",198, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/cudnn_deconv_layer.cpp,"caffe::CuDNNDeconvolutionLayer<Dtype>::~CuDNNDeconvolutionLayer()",30, 69, 2, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::sigmoid( Dtype x)",3, 32, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::tanh( Dtype x)",3, 36, 2, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::LSTMUnitLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",18, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::LSTMUnitLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",29, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/lstm_unit_layer.cpp,"caffe::LSTMUnitLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",50, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",20, 80, 0, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::AddDatumVector( const vector<Datum> & datum_vector)",21, 81, 0, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::AddMatVector( const vector<cv::Mat> & mat_vector , const vector<int> & labels)",22, 77, 0, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::Reset( Dtype * data , Dtype * labels , int n)",14, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::set_batch_size( int new_size)",7, 71, 6, 0
repos/cpp/caffe/src/caffe/layers/memory_data_layer.cpp,"caffe::MemoryDataLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",11, 78, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",37, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",32, 78, 6, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::get_normalizer( LossParameter_NormalizationMode normalization_mode , int valid_count)",28, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::sum_rows_of_H( const Blob<Dtype> * H)",12, 69, 0, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",37, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/infogain_loss_layer.cpp,"caffe::InfogainLossLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",52, 77, 0, 0
repos/cpp/caffe/src/caffe/layers/deconv_layer.cpp,"caffe::DeconvolutionLayer<Dtype>::compute_output_shape()",15, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/deconv_layer.cpp,"caffe::DeconvolutionLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",16, 80, 0, 0
repos/cpp/caffe/src/caffe/layers/deconv_layer.cpp,"caffe::DeconvolutionLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",33, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 72, 2, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",54, 74, 4, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",19, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/slice_layer.cpp,"caffe::SliceLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",19, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/cudnn_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_softmax_layer.cpp,"caffe::CuDNNSoftmaxLayer<Dtype>::~CuDNNSoftmaxLayer()",8, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",4, 75, 0, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",25, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",33, 75, 4, 0
repos/cpp/caffe/src/caffe/layers/reduction_layer.cpp,"caffe::ReductionLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",44, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::DataLayer( const LayerParameter & param)",7, 57, 0, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::~DataLayer()",3, 33, 0, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",29, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::Skip()",8, 67, 14, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::Next()",9, 54, 8, 0
repos/cpp/caffe/src/caffe/layers/data_layer.cpp,"caffe::DataLayer<Dtype>::load_batch( Batch<Dtype> * batch)",50, 78, 6, 0
repos/cpp/caffe/src/caffe/layers/exp_layer.cpp,"caffe::ExpLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",20, 74, 2, 0
repos/cpp/caffe/src/caffe/layers/exp_layer.cpp,"caffe::ExpLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 70, 0, 0
repos/cpp/caffe/src/caffe/layers/exp_layer.cpp,"caffe::ExpLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",12, 78, 4, 0
repos/cpp/caffe/src/caffe/layers/accuracy_layer.cpp,"caffe::AccuracyLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 73, 2, 0
repos/cpp/caffe/src/caffe/layers/accuracy_layer.cpp,"caffe::AccuracyLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",23, 81, 6, 0
repos/cpp/caffe/src/caffe/layers/accuracy_layer.cpp,"caffe::AccuracyLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",51, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::RecurrentInputBlobNames( vector<string> * names) const",4, 77, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::RecurrentOutputBlobNames( vector<string> * names) const",4, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::RecurrentInputShapes( vector<BlobShape> * shapes) const",8, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::OutputBlobNames( vector<string> * names) const",4, 69, 0, 0
repos/cpp/caffe/src/caffe/layers/rnn_layer.cpp,"caffe::RNNLayer<Dtype>::FillUnrolledNet( NetParameter * net_param) const",190, 78, 2, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::~WindowDataLayer<Dtype>()",3, 52, 0, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::DataLayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",181, 81, 2, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::PrefetchRand()",6, 62, 6, 0
repos/cpp/caffe/src/caffe/layers/window_data_layer.cpp,"caffe::WindowDataLayer<Dtype>::load_batch( Batch<Dtype> * batch)",243, 81, 12, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lcn_layer.cpp,"caffe::CuDNNLCNLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",18, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lcn_layer.cpp,"caffe::CuDNNLCNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",24, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lcn_layer.cpp,"caffe::CuDNNLCNLayer<Dtype>::~CuDNNLCNLayer()",14, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/input_layer.cpp,"caffe::InputLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",15, 73, 6, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",6, 68, 0, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",12, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/swish_layer.cpp,"caffe::SwishLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",17, 78, 6, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",62, 80, 8, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",39, 80, 2, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",26, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/scale_layer.cpp,"caffe::ScaleLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",74, 80, 4, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",41, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",10, 68, 0, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",23, 75, 2, 0
repos/cpp/caffe/src/caffe/layers/prelu_layer.cpp,"caffe::PReLULayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",40, 77, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lrn_layer.cpp,"caffe::CuDNNLRNLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",17, 74, 0, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lrn_layer.cpp,"caffe::CuDNNLRNLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",9, 76, 2, 0
repos/cpp/caffe/src/caffe/layers/cudnn_lrn_layer.cpp,"caffe::CuDNNLRNLayer<Dtype>::~CuDNNLRNLayer()",10, 59, 2, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",28, 80, 8, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",30, 79, 2, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",16, 77, 6, 0
repos/cpp/caffe/src/caffe/layers/bias_layer.cpp,"caffe::BiasLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",23, 80, 6, 0
repos/cpp/caffe/src/caffe/layers/power_layer.cpp,"caffe::PowerLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",8, 71, 0, 0
repos/cpp/caffe/src/caffe/layers/power_layer.cpp,"caffe::PowerLayer<Dtype>::Forward_cpu( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",22, 72, 0, 0
repos/cpp/caffe/src/caffe/layers/power_layer.cpp,"caffe::PowerLayer<Dtype>::Backward_cpu( const vector<Blob<Dtype>*> & top , const vector<bool> & propagate_down , const vector<Blob<Dtype>*> & bottom)",50, 79, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::LayerSetUp( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",171, 81, 0, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::Reshape( const vector<Blob<Dtype>*> & bottom , const vector<Blob<Dtype>*> & top)",71, 78, 0, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_cpu_gemm( const Dtype * input , const Dtype * weights , Dtype * output , bool skip_im2col)",16, 77, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_cpu_bias( Dtype * output , const Dtype * bias)",6, 73, 6, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_cpu_gemm( const Dtype * output , const Dtype * weights , Dtype * input)",16, 78, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::weight_cpu_gemm( const Dtype * input , const Dtype * output , Dtype * weights)",14, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_cpu_bias( Dtype * bias , const Dtype * input)",5, 73, 2, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_gpu_gemm( const Dtype * input , const Dtype * weights , Dtype * output , bool skip_im2col)",16, 77, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::forward_gpu_bias( Dtype * output , const Dtype * bias)",6, 73, 6, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_gpu_gemm( const Dtype * output , const Dtype * weights , Dtype * input)",16, 78, 8, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::weight_gpu_gemm( const Dtype * input , const Dtype * output , Dtype * weights)",14, 81, 4, 0
repos/cpp/caffe/src/caffe/layers/base_conv_layer.cpp,"caffe::BaseConvolutionLayer<Dtype>::backward_gpu_bias( Dtype * bias , const Dtype * input)",5, 73, 2, 0
