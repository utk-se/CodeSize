File, Function, Length, Total Width, Leading Space(s), Leading Tab(s)
repos/cpp/tesseract/sw.cpp,"build( Solution & s)",168, 109, 8, 0
repos/cpp/tesseract/sw.cpp,"check( Checker & c)",32, 52, 8, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::UnicharcompressTest::LoadUnicharset( const std :: string & unicharset_name)",27, 80, 8, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::UnicharcompressTest::SerializeAndUndo()",9, 48, 4, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::UnicharcompressTest::IsCJKLang( const std :: string & lang)",4, 70, 4, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::UnicharcompressTest::IsIndicLang( const std :: string & lang)",7, 79, 4, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::UnicharcompressTest::ExpectCorrect( const std :: string & lang)",55, 77, 4, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::UnicharcompressTest::CheckCodeExtensions( const RecodedCharID & code , const std :: vector<RecodedCharID> & times_seen)",24, 77, 4, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesChinese)",8, 43, 0, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesJapanese)",5, 44, 0, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesKorean)",5, 42, 0, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesKannada)",7, 43, 0, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesMarathi)",5, 43, 0, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesEnglish)",5, 43, 0, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , DoesLigaturesWithDoubles)",17, 75, 2, 0
repos/cpp/tesseract/unittest/unicharcompress_test.cc,"tesseract::TEST_F( UnicharcompressTest , GetEncodingAsString)",20, 80, 2, 0
repos/cpp/tesseract/unittest/validate_khmer_test.cc,"tesseract::TEST( ValidateKhmerTest , GoodKhmerWords)",10, 73, 2, 0
repos/cpp/tesseract/unittest/validate_khmer_test.cc,"tesseract::TEST( ValidateKhmerTest , BadKhmerWords)",18, 74, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , BasicTest)",20, 78, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , ColorTest)",9, 70, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , BidiTest)",10, 80, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , Test2D)",12, 80, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , TestAdam)",9, 70, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , SpeedTest)",8, 76, 6, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , DeterminismTest)",33, 75, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , SoftmaxBaselineTest)",16, 76, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , SoftmaxTest)",9, 69, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , EncodedSoftmaxTest)",9, 73, 2, 0
repos/cpp/tesseract/unittest/lstm_test.cc,"tesseract::TEST_F( LSTMTrainerTest , TestLayerAccess)",31, 78, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::RecodeBeamTest()",1, 45, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::~RecodeBeamTest()",1, 42, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::LoadUnicharset( const std :: string & unicharset_name)",30, 81, 4, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::LoadDict( const std :: string & lang)",10, 58, 4, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::ExpectCorrect( const GENERIC_2D_ARRAY<float> & output , const GenericVector<int> & transcription)",10, 72, 6, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::ExpectCorrect( const GENERIC_2D_ARRAY<float> & output , const std :: string & truth_utf8 , Dict * dict , PointerVector<WERD_RES> * words)",88, 83, 8, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::GenerateRandomPaddedOutputs( const GenericVector<int> & unichar_ids , int padding)",36, 77, 10, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::EncodeUTF8( const char * utf8_str , float score , int start_t , TRand * random , GENERIC_2D_ARRAY<float> * outputs)",38, 80, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"RecodeBeamTest::GenerateSyntheticOutputs( const char * chars1 [ ] , const float scores1 [ ] , const char * chars2 [ ] , const float scores2 [ ] , TRand * random)",41, 78, 6, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DoesChinese)",19, 74, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DoesJapanese)",11, 74, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DoesKorean)",11, 74, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DoesKannada)",11, 74, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DoesMarathi)",11, 74, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DoesEnglish)",11, 74, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DISABLED_EngDictionary)",13, 75, 2, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DISABLED_ChiDictionary)",29, 79, 4, 0
repos/cpp/tesseract/unittest/recodebeam_test.cc,"TEST_F( RecodeBeamTest , DISABLED_MultiCodeSequences)",14, 73, 6, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TabVectorTest::SetUp()",1, 36, 2, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TabVectorTest::TearDown()",1, 21, 2, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TabVectorTest::MakeSimpleTabVector( int x1 , int y1 , int x2 , int y2)",5, 61, 2, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , SetStartEndPointsMatch)",13, 71, 2, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XAtY45DegreeSlopeInRangeExact)",7, 55, 0, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XAtYVerticalInRangeExact)",8, 50, 0, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XAtYHorizontal)",8, 62, 2, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XAtYRoundingSimple)",11, 44, 0, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XAtYLargeNumbers)",8, 79, 2, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XAtYHorizontalInRangeExact)",7, 52, 0, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , VOverlapInRangeSimple)",7, 47, 0, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , VOverlapOutOfRange)",5, 44, 0, 0
repos/cpp/tesseract/unittest/tabvector_test.cc,"TEST_F( TabVectorTest , XYFlip)",8, 40, 2, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::TestDataNameToPath( const string & name)",3, 66, 4, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::TessdataPath()",3, 58, 4, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::PageSegModeTest()",1, 44, 2, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::~PageSegModeTest()",1, 48, 2, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::SetImage( const char * filename)",6, 77, 4, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::VerifyRectText( tesseract :: PageSegMode mode , const char * str , int left , int top , int width , int height)",10, 78, 2, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"PageSegModeTest::NotRectText( tesseract :: PageSegMode mode , const char * str , int left , int top , int width , int height)",8, 75, 2, 0
repos/cpp/tesseract/unittest/pagesegmode_test.cc,"TEST_F( PageSegModeTest , WordTest)",19, 81, 2, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , AddsJoinerToTerminalVirama)",8, 78, 2, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , OnlyOneDependentVowel)",8, 74, 2, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , OnlyOneVowelModifier)",21, 74, 2, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , VowelModifierMustBeLast)",14, 81, 34, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , MatrasFollowConsonantsNotVowels)",13, 81, 34, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , SubGraphemes)",12, 76, 34, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , Nukta)",12, 79, 2, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , SinhalaRakaransaya)",20, 81, 34, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , SinhalaYansaya)",20, 81, 34, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , SinhalaRepaya)",14, 83, 2, 0
repos/cpp/tesseract/unittest/validate_indic_test.cc,"tesseract::TEST( ValidateIndicTest , SinhalaSpecials)",23, 84, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"CommandlineflagsTest::TestParser( int argc , const char ** const_argv)",3, 55, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"CommandlineflagsTest::TestParser( const char * usage , int argc , const char ** const_argv)",5, 75, 4, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , RemoveFlags)",13, 81, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , PrintUsageAndExit)",6, 69, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , ExitsWithErrorOnInvalidFlag)",5, 79, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , ParseIntegerFlags)",18, 75, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , ParseDoubleFlags)",15, 75, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , ParseStringFlags)",16, 73, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , ParseBoolFlags)",26, 76, 2, 0
repos/cpp/tesseract/unittest/commandlineflags_test.cc,"TEST_F( CommandlineflagsTest , ParseOldFlags)",6, 46, 0, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::TestDataNameToPath( const std :: string & name)",3, 60, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::TessdataPath()",1, 54, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::OutputNameToPath( const std :: string & name)",3, 58, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::ApplyBoxTest()",1, 41, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::~ApplyBoxTest()",1, 45, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::SetImage( const char * filename)",13, 89, 4, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"ApplyBoxTest::VerifyBoxesAndText( const char * imagefile , const char * truth_str , const char * target_box_file , bool line_mode)",42, 81, 10, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"TEST_F( ApplyBoxTest , TimesCharLevel)",4, 80, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"TEST_F( ApplyBoxTest , ItalicCharLevel)",4, 78, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"TEST_F( ApplyBoxTest , TimesLineLevel)",4, 62, 2, 0
repos/cpp/tesseract/unittest/applybox_test.cc,"TEST_F( ApplyBoxTest , ItalLineLevel)",4, 81, 2, 0
repos/cpp/tesseract/unittest/stats_test.cc,"STATSTest::SetUp()",5, 51, 4, 0
repos/cpp/tesseract/unittest/stats_test.cc,"STATSTest::TearDown()",1, 21, 2, 0
repos/cpp/tesseract/unittest/stats_test.cc,"TEST_F( STATSTest , BasicStats)",5, 39, 2, 0
repos/cpp/tesseract/unittest/stats_test.cc,"TEST_F( STATSTest , TopNModes)",14, 63, 2, 0
repos/cpp/tesseract/unittest/lstm_squashed_test.cc,"tesseract::TEST_F( LSTMTrainerTest , TestSquashed)",12, 79, 2, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::IntSimdMatrixTest::InitRandom( int no , int ni)",9, 69, 8, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::IntSimdMatrixTest::RandomVector( int size , const IntSimdMatrix & matrix)",8, 76, 2, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::IntSimdMatrixTest::RandomScales( int size)",7, 49, 2, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::IntSimdMatrixTest::ExpectEqualResults( const IntSimdMatrix & matrix)",27, 83, 10, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::TEST_F( IntSimdMatrixTest , C)",4, 61, 2, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::TEST_F( IntSimdMatrixTest , SSE)",13, 55, 2, 0
repos/cpp/tesseract/unittest/intsimdmatrix_test.cc,"tesseract::TEST_F( IntSimdMatrixTest , AVX2)",13, 56, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"LLSQTest::SetUp()",1, 18, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"LLSQTest::TearDown()",1, 21, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"LLSQTest::ExpectCorrectLine( const LLSQ & llsq , double m , double c , double rms , double pearson , double tolerance)",7, 75, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"LLSQTest::PtsMean( const std :: vector<FCOORD> & pts)",7, 58, 4, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"LLSQTest::VerifyRmsOrth( const std :: vector<FCOORD> & pts , const FCOORD & orth)",15, 75, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"LLSQTest::ExpectCorrectVector( const LLSQ & llsq , FCOORD correct_mean_pt , FCOORD correct_vector , float tolerance)",9, 69, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"TEST_F( LLSQTest , BasicLines)",21, 77, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"TEST_F( LLSQTest , Vectors)",11, 75, 2, 0
repos/cpp/tesseract/unittest/linlsq_test.cc,"TEST_F( LLSQTest , RmsOrthWorksAsIntended)",12, 43, 0, 0
repos/cpp/tesseract/unittest/fileio_test.cc,"TEST( FileTest , JoinPath)",5, 57, 2, 0
repos/cpp/tesseract/unittest/fileio_test.cc,"TEST( OutputBufferTest , WriteString)",14, 64, 4, 0
repos/cpp/tesseract/unittest/fileio_test.cc,"TEST( InputBufferTest , Read)",16, 81, 2, 0
repos/cpp/tesseract/unittest/indexmapbidi_test.cc,"IndexMapBiDiTest::OutputNameToPath( const std :: string & name)",3, 58, 2, 0
repos/cpp/tesseract/unittest/indexmapbidi_test.cc,"IndexMapBiDiTest::ComputePrimes( IndexMapBiDi * map)",13, 78, 8, 0
repos/cpp/tesseract/unittest/indexmapbidi_test.cc,"IndexMapBiDiTest::TestPrimes( const IndexMap & map)",17, 74, 4, 0
repos/cpp/tesseract/unittest/indexmapbidi_test.cc,"TEST_F( IndexMapBiDiTest , Primes)",25, 56, 2, 0
repos/cpp/tesseract/unittest/indexmapbidi_test.cc,"TEST_F( IndexMapBiDiTest , ManyToOne)",19, 62, 2, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"TestableColPartition::SetColumnRange( int first , int last)",4, 45, 2, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"ColPartitionTest::SetUp()",1, 18, 2, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"ColPartitionTest::TearDown()",1, 21, 2, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"TEST_F( ColPartitionTest , IsInSameColumnAsReflexive)",8, 54, 0, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"TEST_F( ColPartitionTest , IsInSameColumnAsBorders)",13, 52, 0, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"TEST_F( ColPartitionTest , IsInSameColumnAsSuperset)",8, 53, 0, 0
repos/cpp/tesseract/unittest/colpartition_test.cc,"TEST_F( ColPartitionTest , IsInSameColumnAsPartialOverlap)",8, 59, 0, 0
repos/cpp/tesseract/unittest/qrsequence_test.cc,"TestableQRSequenceGenerator::TestableQRSequenceGenerator( const int & N)",1, 81, 2, 0
repos/cpp/tesseract/unittest/qrsequence_test.cc,"TEST( QRSequenceGenerator , GetBinaryReversedInteger)",7, 72, 4, 0
repos/cpp/tesseract/unittest/qrsequence_test.cc,"TEST_P( QRSequenceGeneratorTest , GeneratesValidSequence)",18, 82, 2, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"LigatureTableTest::SetUpTestCase()",4, 69, 4, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"LigatureTableTest::SetUp()",1, 54, 2, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , DoesFillLigatureTables)",4, 56, 2, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , DoesAddLigatures)",4, 80, 15, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , DoesAddLigaturesWithSupportedFont)",6, 78, 15, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , DoesNotAddLigaturesWithUnsupportedFont)",6, 78, 15, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , DoesRemoveLigatures)",4, 71, 15, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , TestCustomLigatures)",14, 80, 17, 0
repos/cpp/tesseract/unittest/ligature_table_test.cc,"TEST_F( LigatureTableTest , TestRemovesCustomLigatures)",13, 80, 17, 0
repos/cpp/tesseract/unittest/lstm_recode_test.cc,"tesseract::TEST_F( LSTMTrainerTest , RecodeTestKorBase)",9, 84, 15, 0
repos/cpp/tesseract/unittest/lstm_recode_test.cc,"tesseract::TEST_F( LSTMTrainerTest , RecodeTestKor)",8, 83, 15, 0
repos/cpp/tesseract/unittest/lstm_recode_test.cc,"tesseract::TEST_F( LSTMTrainerTest , EncodeDecodeBothTestKor)",3, 57, 2, 0
repos/cpp/tesseract/unittest/denorm_test.cc,"DENORMTest::SetUp()",1, 18, 2, 0
repos/cpp/tesseract/unittest/denorm_test.cc,"DENORMTest::TearDown()",1, 21, 2, 0
repos/cpp/tesseract/unittest/denorm_test.cc,"DENORMTest::ExpectCorrectTransform( const DENORM & denorm , const TPOINT & src , const TPOINT & result , bool local)",18, 71, 2, 0
repos/cpp/tesseract/unittest/denorm_test.cc,"TEST_F( DENORMTest , NoRotations)",13, 85, 2, 0
repos/cpp/tesseract/unittest/denorm_test.cc,"TEST_F( DENORMTest , WithRotations)",15, 83, 2, 0
repos/cpp/tesseract/unittest/denorm_test.cc,"TEST_F( DENORMTest , Multiple)",17, 85, 2, 0
repos/cpp/tesseract/unittest/validator_test.cc,"tesseract::TestableValidator::TestableMostFrequentViramaScript( const std :: vector<char32> & utf32)",4, 56, 2, 0
repos/cpp/tesseract/unittest/validator_test.cc,"tesseract::TEST( ValidatorTest , MostFrequentViramaScript)",24, 75, 12, 0
repos/cpp/tesseract/unittest/validator_test.cc,"tesseract::TEST( ValidatorTest , Idempotency)",19, 75, 6, 0
repos/cpp/tesseract/unittest/networkio_test.cc,"NetworkioTest::SetupArray( int ysize , int xsize , int start)",10, 78, 2, 0
repos/cpp/tesseract/unittest/networkio_test.cc,"NetworkioTest::SetupNetworkIO( NetworkIO * nio)",21, 75, 6, 0
repos/cpp/tesseract/unittest/networkio_test.cc,"TEST_F( NetworkioTest , InitWithZeroFill)",33, 65, 2, 0
repos/cpp/tesseract/unittest/networkio_test.cc,"TEST_F( NetworkioTest , CopyWithYReversal)",30, 71, 6, 0
repos/cpp/tesseract/unittest/networkio_test.cc,"TEST_F( NetworkioTest , CopyWithXReversal)",30, 71, 6, 0
repos/cpp/tesseract/unittest/networkio_test.cc,"TEST_F( NetworkioTest , CopyWithXYTranspose)",30, 71, 6, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"QuickTest::SetUp()",1, 56, 2, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"QuickTest::TearDown()",6, 61, 8, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"LangLoader( const char * lang , const char * tessdatadir)",6, 77, 2, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , afr)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , amh)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ara)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , asm)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , aze)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , aze_cyrl)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , bel)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ben)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , bod)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , bos)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , bre)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , bul)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , cat)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ceb)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ces)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , chi_sim)",1, 69, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , chi_sim_vert)",1, 79, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , chi_tra)",1, 69, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , chi_tra_vert)",1, 79, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , chr)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , cos)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , cym)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , dan)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , deu)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , div)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , dzo)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ell)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , eng)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , enm)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , epo)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , est)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , eus)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , fao)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , fas)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , fil)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , fin)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , fra)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , frk)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , frm)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , fry)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , gla)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , gle)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , glg)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , grc)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , guj)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , hat)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , heb)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , hin)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , hrv)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , hun)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , hye)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , iku)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ind)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , isl)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ita)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ita_old)",1, 69, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , jav)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , jpn)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , jpn_vert)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kan)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kat)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kat_old)",1, 69, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kaz)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , khm)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kir)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kor)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , kor_vert)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , lao)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , lat)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , lav)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , lit)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ltz)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mal)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mar)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mkd)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mlt)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mon)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mri)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , msa)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , mya)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , nep)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , nld)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , nor)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , oci)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ori)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , osd)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , pan)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , pol)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , por)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , pus)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , que)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ron)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , rus)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , san)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , sin)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , slk)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , slv)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , snd)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , spa)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , spa_old)",1, 69, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , sqi)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , srp)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , srp_latn)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , sun)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , swa)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , swe)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , syr)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tam)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tat)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tel)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tgk)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tha)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tir)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ton)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , tur)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , uig)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , ukr)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , urd)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , uzb)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , uzb_cyrl)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , vie)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , yid)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadLanguage , yor)",1, 61, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Arabic)",1, 72, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Armenian)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Bengali)",1, 74, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Canadian_Aboriginal)",3, 56, 2, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Cherokee)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Cyrillic)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Devanagari)",1, 80, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Ethiopic)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Fraktur)",1, 74, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Georgian)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Greek)",1, 70, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Gujarati)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Gurmukhi)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , HanS)",1, 68, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , HanS_vert)",1, 78, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , HanT)",1, 68, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , HanT_vert)",1, 78, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Hangul)",1, 72, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Hangul_vert)",3, 48, 2, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Hebrew)",1, 72, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Japanese)",1, 76, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Japanese_vert)",3, 50, 2, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Kannada)",1, 74, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Khmer)",1, 70, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Lao)",1, 66, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Latin)",1, 70, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Malayalam)",1, 78, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Myanmar)",1, 74, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Oriya)",1, 70, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Sinhala)",1, 74, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Syriac)",1, 72, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Tamil)",1, 70, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Telugu)",1, 72, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Thaana)",1, 72, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Thai)",1, 68, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Tibetan)",1, 74, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_P( LoadScript , Vietnamese)",1, 80, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_F( LoadLang , engFast)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_F( LoadLang , engBest)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_F( LoadLang , engBestInt)",1, 66, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_F( LoadLang , kmrFast)",1, 71, 0, 0
repos/cpp/tesseract/unittest/loadlang_test.cc,"TEST_F( LoadLang , kmrBest)",1, 71, 0, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::HeapTest::PushTestData( GenericHeap<IntKDPair> * heap , KDVector * v)",7, 65, 2, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::HeapTest::VerifyHeapVectorMatch( GenericHeap<IntKDPair> * heap , KDVector * v)",28, 80, 4, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::TEST_F( HeapTest , SortTest)",9, 61, 2, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::TEST_F( HeapTest , MixedTest)",16, 73, 2, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::TEST_F( HeapTest , PopWorstTest)",16, 61, 2, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::TEST_F( HeapTest , RevalueTest)",41, 81, 2, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::ConstRefTest( const DoublePtr & ptr1)",5, 50, 0, 0
repos/cpp/tesseract/unittest/heap_test.cc,"tesseract::TEST_F( HeapTest , DoublePtrTest)",13, 54, 2, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::TestDataNameToPath( const std :: string & name)",3, 60, 2, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::TessdataPath()",3, 45, 4, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::LayoutTest()",1, 39, 2, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::~LayoutTest()",1, 43, 2, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::SetImage( const char * filename , const char * lang)",7, 76, 4, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::VerifyBlockTextOrder( const char * strings [ ] , const PolyBlockType * blocks , ResultIterator * it)",29, 85, 8, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::VerifyRoughBlockOrder( bool right_to_left , ResultIterator * it)",27, 81, 6, 0
repos/cpp/tesseract/unittest/layout_test.cc,"LayoutTest::VerifyTotalContainment( int winding_target , MutableIterator * it)",36, 81, 6, 0
repos/cpp/tesseract/unittest/layout_test.cc,"TEST_F( LayoutTest , UNLV8087_054)",9, 63, 2, 0
repos/cpp/tesseract/unittest/layout_test.cc,"TEST_F( LayoutTest , HebrewOrderingAndSkew)",20, 62, 2, 0
repos/cpp/tesseract/unittest/params_model_test.cc,"ParamsModelTest::TestDataNameToPath( const string & name) const",3, 66, 4, 0
repos/cpp/tesseract/unittest/params_model_test.cc,"ParamsModelTest::OutputNameToPath( const string & name) const",3, 54, 2, 0
repos/cpp/tesseract/unittest/params_model_test.cc,"ParamsModelTest::TestParamsModelRoundTrip( const string & params_model_filename) const",12, 77, 2, 0
repos/cpp/tesseract/unittest/params_model_test.cc,"TEST_F( ParamsModelTest , TestEngParamsModelIO)",3, 48, 0, 0
repos/cpp/tesseract/unittest/unicharset_test.cc,"TEST( UnicharsetTest , Basics)",37, 80, 2, 0
repos/cpp/tesseract/unittest/unicharset_test.cc,"TEST( UnicharsetTest , Multibyte)",48, 76, 2, 0
repos/cpp/tesseract/unittest/unicharset_test.cc,"TEST( UnicharsetTest , MultibyteBigrams)",33, 75, 2, 0
repos/cpp/tesseract/unittest/unicharset_test.cc,"TEST( UnicharsetTest , OldStyle)",10, 78, 2, 0
repos/cpp/tesseract/unittest/lang_model_test.cc,"tesseract::TestDataNameToPath( const std :: string & name)",3, 58, 0, 0
repos/cpp/tesseract/unittest/lang_model_test.cc,"tesseract::TEST( LangModelTest , AddACharacter)",89, 81, 2, 0
repos/cpp/tesseract/unittest/lang_model_test.cc,"tesseract::TEST( LangModelTest , AddACharacterHindi)",89, 87, 2, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::TestDataNameToPath( const string & name)",3, 66, 4, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::TessdataPath()",3, 58, 4, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::OutputNameToPath( const string & name)",3, 52, 4, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::TextlineProjectionTest()",8, 29, 2, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::~TextlineProjectionTest()",6, 38, 2, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::SetImage( const char * filename)",7, 77, 4, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::SetupProjection()",45, 84, 41, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::EvaluateBox( const TBOX & box , bool greater_or_equal , int target_value , const char * text , const char * message)",20, 77, 2, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::EvaluateDistance( const TBOX & box , const TBOX & true_box , const TBOX & false_box , const char * text , const char * message)",18, 81, 8, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TextlineProjectionTest::VerifyBoxes( const char * imagefile , int line_height)",80, 79, 6, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TEST_F( TextlineProjectionTest , Unrotated)",1, 80, 0, 0
repos/cpp/tesseract/unittest/textlineprojection_test.cc,"TEST_F( TextlineProjectionTest , Rotated)",1, 81, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TestableStructuredTable::InjectCellY( int y)",4, 28, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TestableStructuredTable::InjectCellX( int x)",4, 28, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TestableStructuredTable::ExpectCellX( int x_min , int second , int add , int almost_done , int x_max)",9, 81, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TestableStructuredTable::ExpectSortedX()",6, 53, 6, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::SetUp()",6, 62, 4, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::TearDown()",6, 76, 4, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::InsertPartitions()",5, 63, 8, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::InsertPartition( int left , int bottom , int right , int top)",11, 80, 8, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::InsertLines()",9, 74, 4, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::InsertHorizontalLine( int left , int right , int y)",10, 78, 8, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::InsertVerticalLine( int x , int bottom , int top)",10, 78, 8, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"SharedTest::InsertCellsInLines()",5, 54, 8, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TableRecognizerTest::SetUp()",7, 54, 4, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"StructuredTableTest::SetUp()",7, 49, 4, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( TableRecognizerTest , HasSignificantLinesBasicPass)",8, 64, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( TableRecognizerTest , HasSignificantLinesBasicFail)",5, 60, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( TableRecognizerTest , HasSignificantLinesHorizontalOnlyFails)",5, 70, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( TableRecognizerTest , FindLinesBoundingBoxBasic)",10, 57, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( TableRecognizerTest , RecognizeLinedTableBasic)",18, 64, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( TableRecognizerTest , RecognizeWhitespacedTableBasic)",18, 70, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , CountVerticalIntersectionsAll)",14, 61, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , CountHorizontalIntersectionsAll)",11, 63, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , VerifyLinedTableBasicPass)",8, 63, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , VerifyLinedTableHorizontalFail)",9, 63, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , VerifyLinedTableVerticalFail)",9, 63, 2, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , FindWhitespacedColumnsBasic)",7, 59, 0, 0
repos/cpp/tesseract/unittest/tablerecog_test.cc,"TEST_F( StructuredTableTest , FindWhitespacedColumnsSorted)",7, 60, 0, 0
repos/cpp/tesseract/unittest/cleanapi_test.cc,"TEST( CleanNamespaceTess , DummyTest)",1, 68, 0, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TestableTableFinder::ExpectPartition( const TBOX & box)",16, 71, 4, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TestableTableFinder::ExpectPartitionCount( int expected_count)",11, 71, 4, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::SetUp()",8, 54, 4, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::TearDown()",5, 64, 4, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::MakePartition( int x_min , int y_min , int x_max , int y_max)",3, 67, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::MakePartition( int x_min , int y_min , int x_max , int y_max , int first_column , int last_column)",10, 79, 8, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::InsertTextPartition( ColPartition * part)",4, 49, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::InsertLeaderPartition( int x_min , int y_min , int x_max , int y_max)",3, 75, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::InsertLeaderPartition( int x_min , int y_min , int x_max , int y_max , int first_column , int last_column)",11, 80, 53, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TableFinderTest::DeletePartitionListBoxes()",7, 72, 4, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , GapInXProjectionNoGap)",5, 54, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , GapInXProjectionEdgeGap)",7, 54, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , GapInXProjectionExists)",7, 53, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , HasLeaderAdjacentOverlapping)",11, 57, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , HasLeaderAdjacentNoOverlap)",12, 70, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , HasLeaderAdjacentPreservesColumns)",11, 61, 0, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , SplitAndInsertFragmentedPartitionsBasicPass)",39, 74, 2, 0
repos/cpp/tesseract/unittest/tablefind_test.cc,"TEST_F( TableFinderTest , SplitAndInsertFragmentedPartitionsBasicFail)",27, 74, 2, 0
repos/cpp/tesseract/unittest/shapetable_test.cc,"TmpNameToPath( const std :: string & name)",3, 60, 0, 0
repos/cpp/tesseract/unittest/shapetable_test.cc,"Setup352( int font_id , Shape * shape)",5, 50, 0, 0
repos/cpp/tesseract/unittest/shapetable_test.cc,"Expect352( int font_id , const Shape & shape)",12, 62, 2, 0
repos/cpp/tesseract/unittest/shapetable_test.cc,"TEST_F( ShapeTest , BasicTest)",25, 53, 2, 0
repos/cpp/tesseract/unittest/shapetable_test.cc,"TEST_F( ShapeTest , AddShapeTest)",25, 62, 2, 0
repos/cpp/tesseract/unittest/shapetable_test.cc,"TEST_F( ShapeTableTest , FullTest)",45, 77, 4, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"GetCleanedTextResult( tesseract :: TessBaseAPI * tess , Pix * pix)",8, 75, 0, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TesseractTest::TestDataNameToPath( const std :: string & name)",3, 67, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TesseractTest::TessdataPath()",3, 38, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , ArraySizeTest)",6, 59, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , BasicTesseractTest)",14, 74, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , IteratesParagraphsEvenIfNotDetected)",22, 76, 6, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , HOCRWorksWithoutSetInputName)",13, 74, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , HOCRContainsBaseline)",15, 74, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , RickSnyderNotFuckSnyder)",14, 74, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , AdaptToWordStrTest)",40, 79, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , BasicLSTMTest)",14, 73, 2, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , LSTMGeometryTest)",40, 71, 4, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST_F( TesseractTest , InitConfigOnlyTest)",30, 81, 27, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST( TesseractInstanceTest , TestMultipleTessInstances)",39, 79, 4, 0
repos/cpp/tesseract/unittest/baseapi_test.cc,"TEST( TesseractInstanceTest , TestMultipleTessInstanceVariables)",43, 80, 4, 0
repos/cpp/tesseract/unittest/stridemap_test.cc,"StridemapTest::SetupArray( int ysize , int xsize , int start)",10, 78, 2, 0
repos/cpp/tesseract/unittest/stridemap_test.cc,"TEST_F( StridemapTest , Indexing)",62, 81, 4, 0
repos/cpp/tesseract/unittest/stridemap_test.cc,"TEST_F( StridemapTest , Scaling)",76, 81, 4, 0
repos/cpp/tesseract/unittest/nthitem_test.cc,"tesseract::NthItemTest::PushTestData( KDVector * v)",6, 53, 4, 0
repos/cpp/tesseract/unittest/nthitem_test.cc,"tesseract::TEST_F( NthItemTest , GeneralTest)",22, 52, 2, 0
repos/cpp/tesseract/unittest/nthitem_test.cc,"tesseract::TEST_F( NthItemTest , BoringTest)",24, 51, 2, 0
repos/cpp/tesseract/unittest/nthitem_test.cc,"tesseract::TEST_F( NthItemTest , UniqueTest)",10, 50, 2, 0
repos/cpp/tesseract/unittest/nthitem_test.cc,"tesseract::TEST_F( NthItemTest , EqualTest)",13, 58, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"BitVectorTest::OutputNameToPath( const std :: string & name)",3, 58, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"BitVectorTest::ComputePrimes( BitVector * map)",13, 73, 8, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"BitVectorTest::TestPrimes( const BitVector & map)",13, 73, 4, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"BitVectorTest::TestAll( const BitVector & map , bool value)",5, 51, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"BitVectorTest::SetBitPattern( int start_byte , int end_byte , int spacing , BitVector * bv)",9, 81, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"BitVectorTest::ExpectCorrectBits( const BitVector & bv)",21, 76, 8, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"TEST_F( BitVectorTest , Primes)",24, 62, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"TEST_F( BitVectorTest , SetAll)",9, 52, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"TEST_F( BitVectorTest , TestNextSetBit)",7, 51, 2, 0
repos/cpp/tesseract/unittest/bitvector_test.cc,"TEST_F( BitVectorTest , TestNumSetBits)",7, 43, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"StringRendererTest::SetUpTestCase()",10, 68, 4, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"StringRendererTest::DisplayClusterBoxes( Pix * pix)",13, 74, 8, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderToImage)",42, 79, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderToImageWithUnderline)",35, 73, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesHandleNewlineCharacters)",20, 78, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderLigatures)",23, 81, 6, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"FindBoxCharXCoord( const std :: vector<BoxChar*> & boxchars , const std :: string & ch)",7, 68, 0, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , ArabicBoxcharsInLTROrder)",24, 80, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesOutputBoxcharsInReadingOrder)",33, 81, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderVerticalText)",10, 73, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesKeepAllImageBoxes)",22, 77, 6, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesClearBoxes)",15, 73, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesLigatureTextForRendering)",13, 76, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRetainInputLigatureForRendering)",12, 81, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesStripUnrenderableWords)",8, 78, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderWordBoxes)",22, 85, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderWordBoxesFromMultiLineText)",24, 80, 6, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesRenderAllFontsToImage)",17, 78, 8, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DoesNotRenderWordJoiner)",15, 77, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST_F( StringRendererTest , DISABLED_DoesDropUncoveredChars)",18, 81, 2, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertBasicLatinToFullwidthLatinTest , DoesConvertBasicLatin)",16, 76, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertBasicLatinToFullwidthLatinTest , DoesNotConvertFullwidthLatin)",13, 76, 0, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertBasicLatinToFullwidthLatinTest , DoesNotConvertNonLatin)",8, 75, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertBasicLatinToFullwidthLatinTest , DoesNotConvertSpace)",8, 76, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertFullwidthLatinToBasicLatinTest , DoesConvertFullwidthLatin)",16, 76, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertFullwidthLatinToBasicLatinTest , DoesNotConvertBasicLatin)",13, 76, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertFullwidthLatinToBasicLatinTest , DoesNotConvertNonLatin)",8, 75, 12, 0
repos/cpp/tesseract/unittest/stringrenderer_test.cc,"TEST( ConvertFullwidthLatinToBasicLatinTest , DoesNotConvertSpace)",8, 76, 12, 0
repos/cpp/tesseract/unittest/tatweel_test.cc,"TatweelTest::TatweelTest()",16, 72, 4, 0
repos/cpp/tesseract/unittest/tatweel_test.cc,"TatweelTest::TestDataNameToPath( const string & name)",3, 66, 4, 0
repos/cpp/tesseract/unittest/tatweel_test.cc,"TEST_F( TatweelTest , UnicharsetIgnoresTatweel)",7, 75, 2, 0
repos/cpp/tesseract/unittest/tatweel_test.cc,"TEST_F( TatweelTest , DictIgnoresTatweel)",9, 80, 6, 0
repos/cpp/tesseract/unittest/tatweel_test.cc,"TEST_F( TatweelTest , UnicharsetLoadKeepsTatweel)",13, 72, 2, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"QuickTest::SetUp()",1, 56, 2, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"QuickTest::TearDown()",15, 78, 4, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"OCRTester( const char * imgname , const char * groundtruth , const char * tessdatadir , const char * lang)",23, 78, 2, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"TEST_P( MatchGroundTruth , FastPhototestOCR)",4, 72, 2, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"TEST_P( MatchGroundTruth , BestPhototestOCR)",4, 72, 2, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"TEST_P( MatchGroundTruth , TessPhototestOCR)",4, 72, 2, 0
repos/cpp/tesseract/unittest/apiexample_test.cc,"TEST_F( EuroText , FastLatinOCR)",4, 70, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"AsciiToRowInfo( const char * text , int row_number , tesseract :: RowInfo * info)",48, 81, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"MakeAsciiRowInfos( const TextAndModel * row_infos , int n , GenericVector<tesseract::RowInfo> * output)",9, 68, 23, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"EvaluateParagraphDetection( const TextAndModel * correct , int n , const GenericVector<PARA*> & detector_output)",76, 81, 14, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TestParagraphDetection( const TextAndModel * correct , int num_rows)",13, 81, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , ListItemsIdentified)",22, 62, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestSimpleParagraphDetection)",4, 64, 25, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestFewCluesWithCrown)",4, 62, 25, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestCrownParagraphDetection)",3, 80, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsText , TestRealFlushLeftParagraphs)",4, 64, 25, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestSingleFullPageContinuation)",13, 81, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestRightAlignedParagraph)",3, 72, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestTinyParagraphs)",3, 76, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestComplexPage1)",3, 72, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestComplexPage2)",3, 72, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestSubtleCrown)",3, 74, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestStrayLineInBlock)",3, 70, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestUnlvInsurance)",3, 68, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , TestSplitsOutLeaderLines)",3, 78, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , NotDistractedBySourceCode)",4, 63, 25, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , NotOverlyAggressiveWithBlockQuotes)",3, 72, 2, 0
repos/cpp/tesseract/unittest/paragraphs_test.cc,"TEST( ParagraphsTest , IndexPageTest)",3, 78, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"PangoFontInfoTest::SetUpTestCase()",5, 69, 4, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , TestNonDefaultConstructor)",5, 55, 0, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , DoesParseFontDescriptionName)",12, 79, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , DoesParseMissingFonts)",13, 77, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , DoesGetSpacingProperties)",8, 77, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , CanRenderString)",10, 71, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , CanRenderLigature)",9, 77, 6, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , CannotRenderUncoveredString)",4, 72, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , CannotRenderInvalidString)",8, 78, 44, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( PangoFontInfoTest , CanDropUncoveredChars)",19, 57, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"FontUtilsTest::SetUpTestCase()",4, 69, 4, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"FontUtilsTest::CountUnicodeChars( const char * utf8_text , std :: unordered_map<char32,inT64> * ch_map)",10, 78, 4, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , DoesFindAvailableFonts)",9, 79, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , DoesDetectMissingFonts)",11, 80, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , DoesListAvailableFonts)",8, 71, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , DoesFindBestFonts)",18, 71, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , DoesSelectFont)",13, 82, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , DoesFailToSelectFont)",7, 81, 2, 0
repos/cpp/tesseract/unittest/pango_font_info_test.cc,"TEST_F( FontUtilsTest , GetAllRenderableCharacters)",34, 81, 4, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::TfileTest()",1, 17, 2, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::MathData()",1, 55, 4, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::Setup()",7, 74, 6, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::ExpectEq( const MathData & other)",9, 55, 6, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::Serialize( TFile * fp)",8, 81, 6, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::DeSerialize( TFile * fp)",9, 76, 6, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::SerializeBigEndian( TFile * fp)",18, 81, 6, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TfileTest::MathData::DeSerializeBigEndian( TFile * fp)",20, 78, 6, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TEST_F( TfileTest , Serialize)",19, 58, 2, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TEST_F( TfileTest , FGets)",25, 74, 2, 0
repos/cpp/tesseract/unittest/tfile_test.cc,"TEST_F( TfileTest , BigEndian)",18, 71, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TBOXTest::SetUp()",1, 18, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TBOXTest::TearDown()",1, 21, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapInside)",9, 49, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapBoolCorners)",11, 41, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapFractionCorners)",13, 81, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapBoolSides)",11, 37, 0, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapFractionSides)",11, 80, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapBoolSpan)",11, 57, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapFractionSpan)",15, 57, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapOutsideTests)",9, 53, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapXFraction)",13, 59, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapYFraction)",13, 59, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapXFractionZeroSize)",10, 57, 2, 0
repos/cpp/tesseract/unittest/rect_test.cc,"TEST_F( TBOXTest , OverlapYFractionZeroSize)",10, 57, 2, 0
repos/cpp/tesseract/unittest/osd_test.cc,"OSDTester( int expected_deg , const char * imgname , const char * tessdatadir)",23, 81, 0, 0
repos/cpp/tesseract/unittest/osd_test.cc,"TEST_P( OSDTest , MatchOrientationDegrees)",4, 62, 2, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"DawgTest::LoadWordlist( const std :: string & filename , std :: set<std::string> * words) const",15, 87, 2, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"DawgTest::TessBinaryPath( const std :: string & name) const",3, 64, 4, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"DawgTest::OutputNameToPath( const std :: string & name) const",3, 64, 2, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"DawgTest::RunCommand( const std :: string & program , const std :: string & arg1 , const std :: string & arg2 , const std :: string & arg3) const",6, 75, 17, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"DawgTest::TestDawgRoundTrip( const std :: string & unicharset_filename , const std :: string & wordlist_filename) const",16, 81, 8, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"TEST_F( DawgTest , TestDawgConversion)",3, 66, 2, 0
repos/cpp/tesseract/unittest/dawg_test.cc,"TEST_F( DawgTest , TestMatching)",21, 84, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ToVector( const GenericVector<T> & from , std :: vector<T> * to)",4, 66, 0, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ToVector( const GenericVectorEqEq<T> & from , std :: vector<T> * to)",4, 70, 0, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::TestDataNameToPath( const std :: string & name)",3, 60, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::TessdataPath()",3, 45, 4, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::OutputNameToPath( const std :: string & name)",3, 58, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::ResultIteratorTest()",1, 47, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::~ResultIteratorTest()",1, 27, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::SetImage( const char * filename)",10, 77, 4, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::VerifyRebuild( int max_diff , PageIteratorLevel level , PageIterator * it)",55, 83, 4, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::VerifyIteratorText( const std :: string & truth , PageIteratorLevel level , ResultIterator * it)",24, 78, 6, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::VerifyRebuilds( int block_limit , int para_limit , int line_limit , int word_limit , int symbol_limit , PageIterator * it)",8, 76, 22, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::VerifyAllText( const std :: string & truth , ResultIterator * it)",7, 69, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::ExpectTextlineReadingOrder( bool in_ltr_context , StrongScriptDirection * word_dirs , int num_words , int * expected_reading_order , int num_reading_order_entries) const",20, 78, 34, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"ResultIteratorTest::VerifySaneTextlineOrder( bool in_ltr_context , StrongScriptDirection * word_dirs , int num_words) const",34, 73, 4, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , EasyTest)",74, 85, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , ComplexTest)",9, 49, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , GreyTest)",9, 49, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , SmallCapDropCapTest)",50, 84, 10, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , SubSuperTest)",37, 81, 8, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , DualStartTextlineOrderTest)",17, 81, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , LeftwardTextlineOrderTest)",17, 78, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , RightwardTextlineOrderTest)",8, 74, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , TextlineOrderSanityCheck)",17, 72, 2, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , DISABLED_NonNullChoicesTest)",29, 80, 10, 0
repos/cpp/tesseract/unittest/resultiterator_test.cc,"TEST_F( ResultIteratorTest , NonNullConfidencesTest)",33, 80, 10, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"BaseapiThreadTest::SetUpTestCase()",44, 81, 4, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"BaseapiThreadTest::TearDownTestCase()",5, 44, 4, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"BaseapiThreadTest::ResetPool()",4, 45, 4, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"BaseapiThreadTest::WaitForPoolWorkers()",1, 54, 2, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"InitTessInstance( TessBaseAPI * tess , const string & lang)",5, 78, 2, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"GetCleanedText( TessBaseAPI * tess , Pix * pix , string * ocr_text)",7, 69, 0, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"VerifyTextResult( TessBaseAPI * tess , Pix * pix , const string & lang , const string & expected_text)",14, 71, 0, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"TEST_F( BaseapiThreadTest , TestBasicSanity)",10, 55, 4, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"TEST_F( BaseapiThreadTest , TestInit)",9, 81, 4, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"TEST_F( BaseapiThreadTest , TestRecognition)",15, 79, 27, 0
repos/cpp/tesseract/unittest/baseapi_thread_test.cc,"TEST_F( BaseapiThreadTest , TestAll)",9, 79, 27, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , MultipleSyllablesAreNotASingleGrapheme)",13, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , SingleConsonantOK)",10, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , SimpleCV)",10, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , SubscriptConjunct)",16, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , HalfFormJoiner)",16, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , TraditionalConjunctJoiner)",16, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , OpenConjunctNonJoiner)",22, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , ExplicitViramaNonJoiner)",16, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , ThaiGraphemes)",17, 80, 6, 0
repos/cpp/tesseract/unittest/validate_grapheme_test.cc,"tesseract::TEST( ValidateGraphemeTest , NoLonelyJoinersQuote)",15, 80, 6, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::EncodeAsUTF8( const char32 ch32)",4, 51, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , BasicText)",8, 79, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , LigatureText)",14, 79, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , OcrSpecificNormalization)",31, 80, 34, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , DetectsCorrectText)",15, 80, 34, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , DetectsIncorrectText)",14, 77, 4, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , NonIndicTextDoesntBreakIndicRules)",9, 78, 34, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , NoLonelyJoiners)",13, 80, 6, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , NoLonelyJoinersPlus)",13, 80, 6, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , NoLonelyJoinersNonAlpha)",12, 79, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , JoinersStayInArabic)",5, 71, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , DigitOK)",4, 71, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , DandaOK)",6, 71, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , AllScriptsRegtest)",125, 81, 8, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , IsWhitespace)",16, 54, 4, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , SpanUTF8Whitespace)",6, 53, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , SpanUTF8NotWhitespace)",15, 54, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , IsInterchangeValid)",8, 71, 4, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , IsInterchangeValid7BitAscii)",10, 68, 2, 0
repos/cpp/tesseract/unittest/normstrngs_test.cc,"tesseract::TEST( NormstrngsTest , FullwidthToHalfwidth)",19, 74, 4, 0
repos/cpp/tesseract/unittest/progress_test.cc,"QuickTest::SetUp()",1, 56, 2, 0
repos/cpp/tesseract/unittest/progress_test.cc,"QuickTest::TearDown()",6, 61, 8, 0
repos/cpp/tesseract/unittest/progress_test.cc,"ClassicMockProgressSink::ClassicMockProgressSink()",10, 79, 4, 0
repos/cpp/tesseract/unittest/progress_test.cc,"NewMockProgressSink::NewMockProgressSink()",6, 80, 6, 0
repos/cpp/tesseract/unittest/progress_test.cc,"ClassicProgressTester( const char * imgname , const char * tessdatadir , const char * lang)",35, 79, 2, 0
repos/cpp/tesseract/unittest/progress_test.cc,"NewProgressTester( const char * imgname , const char * tessdatadir , const char * lang)",35, 81, 2, 0
repos/cpp/tesseract/unittest/progress_test.cc,"TEST( QuickTest , ClassicProgressReporting)",4, 76, 2, 0
repos/cpp/tesseract/unittest/progress_test.cc,"TEST( QuickTest , NewProgressReporting)",3, 80, 2, 0
repos/cpp/tesseract/unittest/imagedata_test.cc,"ImagedataTest::ImagedataTest()",1, 21, 2, 0
repos/cpp/tesseract/unittest/imagedata_test.cc,"ImagedataTest::MakeFakeDoc( int num_pages , int doc_id , std :: vector<std::string> * page_texts)",25, 82, 27, 0
repos/cpp/tesseract/unittest/imagedata_test.cc,"TEST_F( ImagedataTest , CachesProperly)",31, 84, 8, 0
repos/cpp/tesseract/unittest/imagedata_test.cc,"TEST_F( ImagedataTest , CachesMultiDocs)",35, 80, 2, 0
repos/cpp/tesseract/unittest/scanutils_test.cc,"ScanutilsTest::TestDataNameToPath( const string & name)",3, 66, 4, 0
repos/cpp/tesseract/unittest/scanutils_test.cc,"TEST_F( ScanutilsTest , DoesScanf)",67, 79, 2, 0
repos/cpp/tesseract/unittest/intfeaturemap_test.cc,"IntFeatureMapTest::ExpectContiguous( const GenericVector<int> & v , int start , int end)",5, 75, 2, 0
repos/cpp/tesseract/unittest/intfeaturemap_test.cc,"TEST_F( IntFeatureMapTest , Exhaustive)",81, 81, 4, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::TestableEquationDetect( const char * tessdata , Tesseract * lang_tesseract)",4, 74, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::AddMathDigitBlobs( const int math_blobs , const int digit_blobs , const int total_blobs , ColPartition * part)",21, 70, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::SetPixBinary( Pix * pix)",4, 52, 4, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunIdentifySpecialText( BLOBNBOX * blob , const int height_th)",3, 69, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunEstimateTypeForUnichar( const char * val)",4, 78, 4, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunIsIndented( ColPartitionGrid * part_grid , ColPartition * part)",5, 72, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunIsNearSmallNeighbor( const TBOX & seed_box , const TBOX & part_box)",3, 76, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunCheckSeedBlobsCount( ColPartition * part)",3, 52, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunComputeForegroundDensity( const TBOX & tbox)",3, 56, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunCountAlignment( const GenericVector<int> & sorted_vec , const int val)",3, 79, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunSplitCPHorLite( ColPartition * part , GenericVector<TBOX> * splitted_boxes)",4, 64, 25, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::RunSplitCPHor( ColPartition * part , GenericVector<ColPartition*> * parts_splitted)",4, 69, 21, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TestableEquationDetect::TestComputeCPsSuperBBox( const TBOX & box , ColPartitionGrid * part_grid)",6, 79, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::EquationFinderTest::SetUp()",11, 81, 4, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::EquationFinderTest::TearDown()",4, 34, 4, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::EquationFinderTest::AddPageBlock( Pix * pix , BLOCK_LIST * blocks)",8, 78, 8, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::EquationFinderTest::CreateColParts( const int rows , const int cols , ColPartitionGrid * part_grid , std :: vector<ColPartition*> * all_parts)",16, 79, 8, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::EquationFinderTest::ClearParts( std :: vector<ColPartition*> * all_parts)",6, 59, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::EquationFinderTest::AddBlobIntoPart( const TBOX & tbox , ColPartition * part)",6, 63, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , IdentifySpecialText)",47, 79, 4, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , EstimateTypeForUnichar)",18, 72, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , IsIndented)",60, 79, 6, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , IsNearSmallNeighbor)",28, 67, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , CheckSeedBlobsCount)",37, 78, 6, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , ComputeForegroundDensity)",14, 81, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , CountAlignment)",24, 60, 2, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , ComputeCPsSuperBBox)",50, 79, 6, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , SplitCPHorLite)",34, 78, 6, 0
repos/cpp/tesseract/unittest/equationdetect_test.cc,"tesseract::TEST_F( EquationFinderTest , SplitCPHor)",36, 78, 6, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"safe_strto32( const std :: string & str , int * pResult)",6, 63, 0, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"tesseract::MockClassifier::MockClassifier( ShapeTable * shape_table)",8, 80, 4, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"tesseract::MockClassifier::~MockClassifier()",1, 31, 2, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"tesseract::MockClassifier::ClassifySample( const TrainingSample & sample , Pix * page_pix , int debug , UNICHAR_ID keep_this , GenericVector<ShapeRating> * results)",41, 79, 6, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"tesseract::MockClassifier::GetShapeTable() const",1, 75, 2, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::TestDataNameToPath( const std :: string & name)",3, 60, 2, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::TessdataPath()",3, 31, 2, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::TmpNameToPath( const std :: string & name)",3, 55, 2, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::MasterTrainerTest()",4, 31, 4, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::~MasterTrainerTest()",4, 28, 4, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::LoadMasterTrainer()",18, 74, 8, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"MasterTrainerTest::VerifyIl1()",44, 73, 8, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"TEST_F( MasterTrainerTest , Il1Test)",5, 64, 2, 0
repos/cpp/tesseract/unittest/mastertrainer_test.cc,"TEST_F( MasterTrainerTest , ErrorCounterTest)",40, 79, 2, 0
repos/cpp/tesseract/unittest/lstmtrainer_test.cc,"tesseract::TEST_F( LSTMTrainerTest , EncodesEng)",4, 75, 23, 0
repos/cpp/tesseract/unittest/lstmtrainer_test.cc,"tesseract::TEST_F( LSTMTrainerTest , EncodesKan)",3, 82, 2, 0
repos/cpp/tesseract/unittest/lstmtrainer_test.cc,"tesseract::TEST_F( LSTMTrainerTest , EncodesKor)",4, 55, 23, 0
repos/cpp/tesseract/unittest/lstmtrainer_test.cc,"tesseract::TEST_F( LSTMTrainerTest , MapCoder)",35, 81, 2, 0
repos/cpp/tesseract/unittest/lstmtrainer_test.cc,"tesseract::TEST_F( LSTMTrainerTest , ConvertModel)",34, 84, 2, 0
repos/cpp/tesseract/unittest/validate_myanmar_test.cc,"tesseract::TEST( ValidateMyanmarTest , GoodMyanmarWords)",6, 73, 2, 0
repos/cpp/tesseract/unittest/validate_myanmar_test.cc,"tesseract::TEST( ValidateMyanmarTest , BadMyanmarWords)",26, 80, 6, 0
repos/cpp/tesseract/unittest/unichar_test.cc,"TEST( UnicharTest , Conversion)",12, 75, 2, 0
repos/cpp/tesseract/unittest/unichar_test.cc,"TEST( UnicharTest , InvalidText)",11, 72, 2, 0
repos/cpp/tesseract/unittest/matrix_test.cc,"MatrixTest::MatrixTest()",7, 58, 4, 0
repos/cpp/tesseract/unittest/matrix_test.cc,"TEST_F( MatrixTest , RotatingTranspose_3_1)",17, 68, 2, 0
repos/cpp/tesseract/unittest/matrix_test.cc,"TEST_F( MatrixTest , RotatingTranspose_2_0)",20, 63, 2, 0
repos/cpp/tesseract/unittest/matrix_test.cc,"TEST_F( MatrixTest , RotatingTranspose_1_3)",19, 55, 2, 0
repos/cpp/tesseract/unittest/matrix_test.cc,"TEST_F( MatrixTest , RotatingTranspose_0_2)",18, 65, 2, 0
repos/cpp/tesseract/src/wordrec/wordrec.cpp,"tesseract::Wordrec::Wordrec()",10, 61, 14, 0
repos/cpp/tesseract/src/wordrec/wordrec.cpp,"tesseract::Wordrec::Wordrec()",97, 80, 14, 0
repos/cpp/tesseract/src/wordrec/render.cpp,"display_blob( TBLOB * blob , C_COL color)",12, 53, 4, 0
repos/cpp/tesseract/src/wordrec/render.cpp,"render_blob( void * window , TBLOB * blob , C_COL color)",7, 59, 0, 0
repos/cpp/tesseract/src/wordrec/render.cpp,"render_edgepts( void * window , EDGEPT * edgept , C_COL color)",18, 65, 0, 0
repos/cpp/tesseract/src/wordrec/render.cpp,"render_outline( void * window , TESSLINE * outline , C_COL color)",12, 51, 4, 0
repos/cpp/tesseract/src/wordrec/associate.cpp,"tesseract::AssociateUtils::ComputeStats( int col , int row , const AssociateStats * parent_stats , int parent_path_length , bool fixed_pitch , float max_char_wh_ratio , WERD_RES * word_res , bool debug , AssociateStats * stats)",121, 80, 6, 0
repos/cpp/tesseract/src/wordrec/associate.cpp,"tesseract::AssociateUtils::FixedPitchWidthCost( float norm_width , float right_gap , bool end_pos , float max_char_wh_ratio)",14, 77, 4, 0
repos/cpp/tesseract/src/wordrec/gradechop.cpp,"tesseract::Wordrec::grade_split_length( SPLIT * split)",14, 72, 6, 0
repos/cpp/tesseract/src/wordrec/gradechop.cpp,"tesseract::Wordrec::grade_sharpness( SPLIT * split)",14, 75, 2, 0
repos/cpp/tesseract/src/wordrec/lm_pain_points.cpp,"tesseract::LMPainPoints::Deque( MATRIX_COORD * pp , float * priority)",10, 74, 0, 0
repos/cpp/tesseract/src/wordrec/lm_pain_points.cpp,"tesseract::LMPainPoints::GenerateInitial( WERD_RES * word_res)",19, 82, 4, 0
repos/cpp/tesseract/src/wordrec/lm_pain_points.cpp,"tesseract::LMPainPoints::GenerateFromPath( float rating_cert_scale , ViterbiStateEntry * vse , WERD_RES * word_res)",61, 80, 6, 0
repos/cpp/tesseract/src/wordrec/lm_pain_points.cpp,"tesseract::LMPainPoints::GenerateFromAmbigs( const DANGERR & fixpt , ViterbiStateEntry * vse , WERD_RES * word_res)",15, 75, 2, 0
repos/cpp/tesseract/src/wordrec/lm_pain_points.cpp,"tesseract::LMPainPoints::GeneratePainPoint( int col , int row , LMPainPointsType pp_type , float special_priority , bool ok_to_extend , float max_char_wh_ratio , WERD_RES * word_res)",58, 79, 2, 0
repos/cpp/tesseract/src/wordrec/lm_pain_points.cpp,"tesseract::LMPainPoints::RemapForSplit( int index)",7, 73, 4, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"check_blob( TBLOB * blob)",17, 80, 2, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"any_shared_split_points( const GenericVector<SEAM*> & seams , SEAM * seam)",9, 84, 0, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"preserve_outline( EDGEPT * start)",13, 46, 0, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"preserve_outline_tree( TESSLINE * srcline)",7, 73, 2, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"restore_outline( EDGEPT * start)",23, 48, 0, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"restore_outline_tree( TESSLINE * srcline)",8, 73, 2, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"total_containment( TBLOB * blob1 , TBLOB * blob2)",5, 63, 0, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"CheckSeam( int debug_level , int32_t blob_number , TWERD * word , TBLOB * blob , TBLOB * other_blob , const GenericVector<SEAM*> & seams , SEAM * seam)",27, 89, 2, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::attempt_blob_chop( TWERD * word , TBLOB * blob , int32_t blob_number , bool italic_blob , const GenericVector<SEAM*> & seams)",52, 80, 0, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::chop_numbered_blob( TWERD * word , int32_t blob_number , bool italic_blob , const GenericVector<SEAM*> & seams)",6, 72, 2, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::chop_overlapping_blob( const GenericVector<TBOX> & boxes , bool italic_blob , WERD_RES * word_res , int * blob_number)",41, 77, 4, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::improve_one_blob( const GenericVector<BLOB_CHOICE*> & blob_choices , DANGERR * fixpt , bool split_next_to_fragment , bool italic_blob , WERD_RES * word , int * blob_number)",36, 81, 0, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::chop_one_blob( const GenericVector<TBOX> & boxes , const GenericVector<BLOB_CHOICE*> & blob_choices , WERD_RES * word_res , int * blob_number)",11, 78, 29, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::chop_word_main( WERD_RES * word)",55, 81, 49, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::improve_by_chopping( float rating_cert_scale , WERD_RES * word , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle , LMPainPoints * pain_points , GenericVector<SegSearchPending> * pending)",76, 80, 25, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::select_blob_to_split( const GenericVector<BLOB_CHOICE*> & blob_choices , float rating_ceiling , bool split_next_to_fragment)",80, 82, 12, 0
repos/cpp/tesseract/src/wordrec/chopper.cpp,"tesseract::Wordrec::select_blob_to_split_from_fixpt( DANGERR * fixpt)",12, 63, 0, 0
repos/cpp/tesseract/src/wordrec/outlines.cpp,"tesseract::Wordrec::near_point( EDGEPT * point , EDGEPT * line_pt_0 , EDGEPT * line_pt_1 , EDGEPT ** near_pt)",39, 78, 4, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::program_editup( const char * textbase , TessdataManager * init_classifier , TessdataManager * init_dict)",15, 63, 29, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::end_recog()",5, 27, 0, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::program_editdown( int32_t elasped_time)",6, 55, 0, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::set_pass1()",5, 72, 2, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::set_pass2()",5, 72, 2, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::cc_recog( WERD_RES * word)",7, 61, 2, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::dict_word( const WERD_CHOICE & word)",3, 50, 0, 0
repos/cpp/tesseract/src/wordrec/tface.cpp,"tesseract::Wordrec::call_matcher( TBLOB * tessblob)",13, 73, 2, 0
repos/cpp/tesseract/src/wordrec/findseam.cpp,"tesseract::Wordrec::add_seam_to_queue( float new_priority , SEAM * new_seam , SeamQueue * seams)",24, 74, 6, 0
repos/cpp/tesseract/src/wordrec/findseam.cpp,"tesseract::Wordrec::choose_best_seam( SeamQueue * seam_queue , const SPLIT * split , PRIORITY priority , SEAM ** seam_result , TBLOB * blob , SeamPile * seam_pile)",84, 81, 4, 0
repos/cpp/tesseract/src/wordrec/findseam.cpp,"tesseract::Wordrec::combine_seam( const SeamPile & seam_pile , const SEAM * seam , SeamQueue * seam_queue)",12, 76, 4, 0
repos/cpp/tesseract/src/wordrec/findseam.cpp,"tesseract::Wordrec::pick_good_seam( TBLOB * blob)",72, 83, 4, 0
repos/cpp/tesseract/src/wordrec/findseam.cpp,"tesseract::Wordrec::try_point_pairs( EDGEPT * points [ MAX_NUM_POINTS ] , int16_t num_points , SeamQueue * seam_queue , SeamPile * seam_pile , SEAM ** seam , TBLOB * blob)",26, 79, 8, 0
repos/cpp/tesseract/src/wordrec/findseam.cpp,"tesseract::Wordrec::try_vertical_splits( EDGEPT * points [ MAX_NUM_POINTS ] , int16_t num_points , EDGEPT_CLIST * new_points , SeamQueue * seam_queue , SeamPile * seam_pile , SEAM ** seam , TBLOB * blob)",29, 77, 6, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::DoSegSearch( WERD_RES * word_res)",5, 71, 2, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::SegSearch( WERD_RES * word_res , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle)",90, 81, 4, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::InitialSegSearch( WERD_RES * word_res , LMPainPoints * pain_points , GenericVector<SegSearchPending> * pending , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle)",43, 81, 2, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::UpdateSegSearchNodes( float rating_cert_scale , int starting_col , GenericVector<SegSearchPending> * pending , WERD_RES * word_res , LMPainPoints * pain_points , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle)",67, 81, 10, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::ProcessSegSearchPainPoint( float pain_point_priority , const MATRIX_COORD & pain_point , const char * pain_point_type , GenericVector<SegSearchPending> * pending , WERD_RES * word_res , LMPainPoints * pain_points , BlamerBundle * blamer_bundle)",59, 80, 48, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::ResetNGramSearch( WERD_RES * word_res , BestChoiceBundle * best_choice_bundle , GenericVector<SegSearchPending> * pending)",16, 77, 2, 0
repos/cpp/tesseract/src/wordrec/segsearch.cpp,"tesseract::Wordrec::InitBlamerForSegSearch( WERD_RES * word_res , LMPainPoints * pain_points , BlamerBundle * blamer_bundle , STRING * blamer_debug)",13, 80, 34, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::Print()",9, 69, 4, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::Copy( const ParamsModel & other_model)",6, 57, 0, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::ParseLine( char * line , char ** key , float * val)",18, 70, 9, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::ComputeCost( const float features [ ]) const",8, 63, 0, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::Equivalent( const ParamsModel & that) const",12, 77, 4, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::LoadFromFile( const char * lang , const char * full_path)",10, 51, 4, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::LoadFromFp( const char * lang , TFile * fp)",37, 75, 8, 0
repos/cpp/tesseract/src/wordrec/params_model.cpp,"tesseract::ParamsModel::SaveToFile( const char * full_path) const",21, 78, 4, 0
repos/cpp/tesseract/src/wordrec/lm_consistency.cpp,"tesseract::LMConsistencyInfo::ComputeXheightConsistency( const BLOB_CHOICE * b , bool is_punc)",83, 80, 2, 0
repos/cpp/tesseract/src/wordrec/lm_state.cpp,"tesseract::ViterbiStateEntry::Print( const char * msg) const",34, 77, 4, 0
repos/cpp/tesseract/src/wordrec/lm_state.cpp,"tesseract::LanguageModelState::Clear()",6, 53, 2, 0
repos/cpp/tesseract/src/wordrec/lm_state.cpp,"tesseract::LanguageModelState::Print( const char * msg)",9, 80, 10, 0
repos/cpp/tesseract/src/wordrec/plotedges.cpp,"display_edgepts( LIST outlines)",17, 70, 4, 0
repos/cpp/tesseract/src/wordrec/plotedges.cpp,"draw_blob_edges( TBLOB * blob)",11, 60, 4, 0
repos/cpp/tesseract/src/wordrec/plotedges.cpp,"mark_outline( EDGEPT * edgept)",26, 63, 0, 0
repos/cpp/tesseract/src/wordrec/wordclass.cpp,"tesseract::Wordrec::classify_blob( TBLOB * blob , const char * string , C_COL color , BlamerBundle * blamer_bundle)",28, 75, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::log2( double n)",3, 38, 0, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::LanguageModel( const UnicityTable<FontInfo> * fontinfo_table , Dict * dict)",83, 81, 6, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::~LanguageModel()",1, 69, 0, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::InitForWord( const WERD_CHOICE * prev_word , bool fixed_pitch , float max_char_wh_ratio , float rating_cert_scale)",35, 80, 6, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::ScanParentsForCaseMix( const UNICHARSET & unicharset , LanguageModelState * parent_node)",26, 76, 6, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::HasBetterCaseVariant( const UNICHARSET & unicharset , const BLOB_CHOICE * choice , BLOB_CHOICE_LIST * choices)",19, 71, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::UpdateState( bool just_classified , int curr_col , int curr_row , BLOB_CHOICE_LIST * curr_list , LanguageModelState * parent_node , LMPainPoints * pain_points , WERD_RES * word_res , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle)",123, 80, 6, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::GetTopLowerUpperDigit( BLOB_CHOICE_LIST * curr_list , BLOB_CHOICE ** first_lower , BLOB_CHOICE ** first_upper , BLOB_CHOICE ** first_digit) const",30, 77, 42, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::SetTopParentLowerUpperDigit( LanguageModelState * parent_node) const",71, 78, 4, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::GetNextParentVSE( bool just_classified , bool mixed_alnum , const BLOB_CHOICE * bc , LanguageModelFlagsType blob_choice_flags , const UNICHARSET & unicharset , WERD_RES * word_res , ViterbiStateEntry_IT * vse_it , LanguageModelFlagsType * top_choice_flags) const",60, 81, 4, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::AddViterbiStateEntry( LanguageModelFlagsType top_choice_flags , float denom , bool word_end , int curr_col , int curr_row , BLOB_CHOICE * b , LanguageModelState * curr_state , ViterbiStateEntry * parent_vse , LMPainPoints * pain_points , WERD_RES * word_res , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle)",207, 81, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::GenerateTopChoiceInfo( ViterbiStateEntry * new_vse , const ViterbiStateEntry * parent_vse , LanguageModelState * lms)",15, 79, 42, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::GenerateDawgInfo( bool word_end , int curr_col , int curr_row , const BLOB_CHOICE & b , const ViterbiStateEntry * parent_vse)",91, 83, 4, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::GenerateNgramInfo( const char * unichar , float certainty , float denom , int curr_col , int curr_row , float outline_length , const ViterbiStateEntry * parent_vse)",56, 79, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::ComputeNgramCost( const char * unichar , float certainty , float denom , const char * context , int * unichar_step_len , bool * found_small_prob , float * ngram_cost)",59, 80, 14, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::ComputeDenom( BLOB_CHOICE_LIST * curr_list)",20, 77, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::FillConsistencyInfo( int curr_col , bool word_end , BLOB_CHOICE * b , ViterbiStateEntry * parent_vse , WERD_RES * word_res , LMConsistencyInfo * consistency_info)",183, 82, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::ComputeAdjustedPathCost( ViterbiStateEntry * vse)",41, 83, 4, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::UpdateBestChoice( ViterbiStateEntry * vse , LMPainPoints * pain_points , WERD_RES * word_res , BestChoiceBundle * best_choice_bundle , BlamerBundle * blamer_bundle)",99, 89, 4, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::ExtractFeaturesFromPath( const ViterbiStateEntry & vse , float features [ ])",48, 81, 2, 0
repos/cpp/tesseract/src/wordrec/language_model.cpp,"tesseract::LanguageModel::ConstructWord( ViterbiStateEntry * vse , WERD_RES * word_res , DANGERR * fixpt , BlamerBundle * blamer_bundle , bool * truth_path)",89, 81, 60, 0
repos/cpp/tesseract/src/wordrec/drawfx.cpp,"create_fx_win()",5, 54, 4, 0
repos/cpp/tesseract/src/wordrec/drawfx.cpp,"clear_fx_win()",7, 79, 2, 0
repos/cpp/tesseract/src/wordrec/drawfx.cpp,"create_fxdebug_win()",2, 50, 0, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::point_priority( EDGEPT * point)",3, 66, 2, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::add_point_to_list( PointHeap * point_heap , EDGEPT * point)",11, 72, 0, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::is_inside_angle( EDGEPT * pt)",3, 67, 2, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::angle_change( EDGEPT * point1 , EDGEPT * point2 , EDGEPT * point3)",28, 83, 2, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::pick_close_point( EDGEPT * critical_point , EDGEPT * vertical_point , int * best_dist)",29, 77, 8, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::prioritize_points( TESSLINE * outline , PointHeap * points)",50, 72, 0, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::new_min_point( EDGEPT * local_min , PointHeap * points)",15, 68, 0, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::new_max_point( EDGEPT * local_max , PointHeap * points)",15, 68, 0, 0
repos/cpp/tesseract/src/wordrec/chop.cpp,"tesseract::Wordrec::vertical_projection_point( EDGEPT * split_point , EDGEPT * target_point , EDGEPT ** best_point , EDGEPT_CLIST * new_points)",39, 83, 0, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::Wordrec::classify_piece( const GenericVector<SEAM*> & seams , int16_t start , int16_t end , const char * description , TWERD * word , BlamerBundle * blamer_bundle)",19, 77, 0, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::SortByUnicharID( const void * void1 , const void * void2)",6, 75, 2, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::SortByRating( const void * void1 , const void * void2)",8, 75, 2, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::Wordrec::fill_filtered_fragment_list( BLOB_CHOICE_LIST * choices , int fragment_pos , int num_frag_parts , BLOB_CHOICE_LIST * filtered_choices)",25, 80, 42, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::Wordrec::merge_and_put_fragment_lists( int16_t row , int16_t column , int16_t num_frag_parts , BLOB_CHOICE_LIST * choice_lists , MATRIX * ratings)",130, 81, 6, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::Wordrec::get_fragment_lists( int16_t current_frag , int16_t current_row , int16_t start , int16_t num_frag_parts , int16_t num_blobs , MATRIX * ratings , BLOB_CHOICE_LIST * choice_lists)",24, 76, 0, 0
repos/cpp/tesseract/src/wordrec/pieces.cpp,"tesseract::Wordrec::merge_fragments( MATRIX * ratings , int16_t num_blobs)",28, 74, 10, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"OL_BUCKETS::OL_BUCKETS( ICOORD bleft , ICOORD tright)",9, 52, 2, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"OL_BUCKETS::operator ( )( int16_t x , int16_t y)",5, 78, 2, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"OL_BUCKETS::outline_complexity( C_OUTLINE * outline , int32_t max_count , int16_t depth)",61, 81, 30, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"OL_BUCKETS::count_children( C_OUTLINE * outline , int32_t max_count)",106, 80, 18, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"OL_BUCKETS::extract_children( C_OUTLINE * outline , C_OUTLINE_IT * it)",27, 79, 34, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"extract_edges( Pix * pix , BLOCK * block)",12, 54, 2, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"outlines_to_blobs( BLOCK * block , ICOORD bleft , ICOORD tright , C_OUTLINE_LIST * outlines)",11, 55, 23, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"fill_buckets( C_OUTLINE_LIST * outlines , OL_BUCKETS * buckets)",17, 74, 2, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"empty_buckets( BLOCK * block , OL_BUCKETS * buckets)",32, 74, 4, 0
repos/cpp/tesseract/src/textord/edgblob.cpp,"capture_children( OL_BUCKETS * buckets , C_BLOB_IT * reject_it , C_OUTLINE_IT * blob_it)",23, 75, 47, 0
repos/cpp/tesseract/src/textord/pithsync.cpp,"FPCUTPT::setup( FPCUTPT * cutpts , int16_t array_origin , STATS * projection , int16_t zero_count , int16_t pitch , int16_t x , int16_t offset)",49, 67, 4, 0
repos/cpp/tesseract/src/textord/pithsync.cpp,"FPCUTPT::assign( FPCUTPT * cutpts , int16_t array_origin , int16_t x , bool faking , bool mid_cut , int16_t offset , STATS * projection , float projection_scale , int16_t zero_count , int16_t pitch , int16_t pitch_error)",100, 74, 2, 0
repos/cpp/tesseract/src/textord/pithsync.cpp,"FPCUTPT::assign_cheap( FPCUTPT * cutpts , int16_t array_origin , int16_t x , BOOL8 faking , BOOL8 mid_cut , int16_t offset , STATS * projection , float projection_scale , int16_t zero_count , int16_t pitch , int16_t pitch_error)",82, 74, 27, 0
repos/cpp/tesseract/src/textord/pithsync.cpp,"check_pitch_sync2( BLOBNBOX_IT * blob_it , int16_t blob_count , int16_t pitch , int16_t pitch_error , STATS * projection , int16_t projection_left , int16_t projection_right , float projection_scale , int16_t & occupation_count , FPSEGPT_LIST * seg_list , int16_t start , int16_t end)",187, 97, 2, 0
repos/cpp/tesseract/src/textord/pithsync.cpp,"check_pitch_sync3( int16_t projection_left , int16_t projection_right , int16_t zero_count , int16_t pitch , int16_t pitch_error , STATS * projection , float projection_scale , int16_t & occupation_count , FPSEGPT_LIST * seg_list , int16_t start , int16_t end)",200, 82, 25, 0
repos/cpp/tesseract/src/textord/gap_map.cpp,"GAPMAP::GAPMAP( TO_BLOCK * block)",119, 77, 2, 0
repos/cpp/tesseract/src/textord/gap_map.cpp,"GAPMAP::table_gap( int16_t left , int16_t right)",24, 79, 2, 0
repos/cpp/tesseract/src/textord/sortflts.cpp,"SORTED_FLOATS::add( float value , int32_t key)",17, 59, 2, 0
repos/cpp/tesseract/src/textord/sortflts.cpp,"SORTED_FLOATS::remove( int32_t key)",11, 67, 4, 0
repos/cpp/tesseract/src/textord/sortflts.cpp,"SORTED_FLOATS::operator [ ]( int32_t index)",6, 48, 0, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::CCNonTextDetect::CCNonTextDetect( int gridsize , const ICOORD & bleft , const ICOORD & tright)",10, 74, 2, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::CCNonTextDetect::~CCNonTextDetect()",3, 38, 0, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::CCNonTextDetect::ComputeNonTextMask( bool debug , Pix * photo_map , TO_BLOCK * blob_block)",64, 81, 4, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::CCNonTextDetect::ComputeNoiseDensity( bool debug , Pix * photo_map , BlobGrid * good_grid)",46, 78, 2, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::AttemptBoxExpansion( const TBOX & box , const IntGrid & noise_density , int pad)",24, 79, 0, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::CCNonTextDetect::MarkAndDeleteNonTextBlobs( BLOBNBOX_LIST * blobs , int max_blob_overlaps , ScrollView * win , ScrollView :: Color ok_color , Pix * nontext_mask)",54, 77, 2, 0
repos/cpp/tesseract/src/textord/ccnontextdetect.cpp,"tesseract::CCNonTextDetect::BlobOverlapsTooMuch( BLOBNBOX * blob , int max_overlaps)",19, 78, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::StrokeWidth( int gridsize , const ICOORD & bleft , const ICOORD & tright)",12, 84, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::~StrokeWidth()",16, 50, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::SetNeighboursOnMediumBlobs( TO_BLOCK * block)",9, 77, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindTextlineDirectionAndFixBrokenCJK( PageSegMode pageseg_mode , bool cjk_merge , TO_BLOCK * input_block)",12, 81, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::CollectHorizVertBlobs( BLOBNBOX_LIST * input_blobs , int * num_vertical_blobs , int * num_horizontal_blobs , BLOBNBOX_CLIST * vertical_blobs , BLOBNBOX_CLIST * horizontal_blobs , BLOBNBOX_CLIST * nondescript_blobs)",30, 77, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::TestVerticalTextDirection( double find_vertical_text_ratio , TO_BLOCK * block , BLOBNBOX_CLIST * osd_blobs)",40, 81, 24, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::CorrectForRotation( const FCOORD & rotation , ColPartitionGrid * part_grid)",7, 72, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindLeaderPartitions( TO_BLOCK * block , ColPartitionGrid * part_grid)",17, 78, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::RemoveLineResidue( ColPartition_LIST * big_part_list)",48, 79, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::GradeBlobsIntoPartitions( PageSegMode pageseg_mode , const FCOORD & rerotation , TO_BLOCK * block , Pix * nontext_pix , const DENORM * denorm , bool cjk_script , TextlineProjection * projection , BLOBNBOX_LIST * diacritic_blobs , ColPartitionGrid * part_grid , ColPartition_LIST * big_parts)",47, 80, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::PrintBoxWidths( BLOBNBOX * neighbour)",7, 77, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::HandleClick( int x , int y)",35, 78, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindLeadersAndMarkNoise( TO_BLOCK * block , ColPartition_LIST * leader_parts)",66, 80, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::InsertBlobs( TO_BLOCK * block)",4, 49, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::MarkLeaderNeighbours( const ColPartition * part , LeftOrRight side)",38, 80, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::UpperQuartileCJKSize( int gridsize , BLOBNBOX_LIST * blobs)",12, 79, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FixBrokenCJK( TO_BLOCK * block)",94, 79, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::AcceptableCJKMerge( const TBOX & bbox , const TBOX & nbox , bool debug , int max_size , int max_dist , int * x_gap , int * y_gap)",23, 78, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::AccumulateOverlaps( const BLOBNBOX * not_this , bool debug , int max_size , int max_dist , TBOX * bbox , BLOBNBOX_CLIST * blobs)",83, 80, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindTextlineFlowDirection( PageSegMode pageseg_mode , bool display_if_debugging)",51, 77, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::SetNeighbours( bool leaders , bool activate_line_trap , BLOBNBOX * blob)",14, 79, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindGoodNeighbour( BlobNeighbourDir dir , bool leaders , BLOBNBOX * blob)",157, 113, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::ListNeighbours( const BLOBNBOX * blob , BLOBNBOX_CLIST * neighbours)",10, 72, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::List2ndNeighbours( const BLOBNBOX * blob , BLOBNBOX_CLIST * neighbours)",11, 63, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::List3rdNeighbours( const BLOBNBOX * blob , BLOBNBOX_CLIST * neighbours)",11, 63, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::CountNeighbourGaps( bool debug , BLOBNBOX_CLIST * neighbours , int * pure_h_count , int * pure_v_count)",27, 76, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::SetNeighbourFlows( BLOBNBOX * blob)",38, 77, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::CountNeighbourTypes( BLOBNBOX_CLIST * neighbours , int * pure_h_count , int * pure_v_count)",11, 72, 32, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::SimplifyObviousNeighbours( BLOBNBOX * blob)",35, 79, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::SmoothNeighbourTypes( PageSegMode pageseg_mode , bool reset_all , BLOBNBOX * blob)",34, 81, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindInitialPartitions( PageSegMode pageseg_mode , const FCOORD & rerotation , bool find_problems , TO_BLOCK * block , BLOBNBOX_LIST * diacritic_blobs , ColPartitionGrid * part_grid , ColPartition_LIST * big_parts , FCOORD * skew_angle)",53, 80, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::DetectAndRemoveNoise( int pre_overlap , const TBOX & grid_box , TO_BLOCK * block , ColPartitionGrid * part_grid , BLOBNBOX_LIST * diacritic_blobs)",45, 81, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::MutualUnusedVNeighbour( const BLOBNBOX * blob , BlobNeighbourDir dir)",10, 64, 40, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindVerticalTextChains( ColPartitionGrid * part_grid)",29, 80, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::MutualUnusedHNeighbour( const BLOBNBOX * blob , BlobNeighbourDir dir)",10, 64, 40, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::FindHorizontalTextChains( ColPartitionGrid * part_grid)",27, 80, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::TestDiacritics( ColPartitionGrid * part_grid , TO_BLOCK * block)",70, 81, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::DiacriticBlob( BlobGrid * small_grid , BLOBNBOX * blob)",156, 81, 4, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::DiacriticXGapFilled( BlobGrid * grid , const TBOX & diacritic_box , const TBOX & base_box)",37, 78, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::MergeDiacritics( TO_BLOCK * block , ColPartitionGrid * part_grid)",25, 81, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::RemoveLargeUnusedBlobs( TO_BLOCK * block , ColPartitionGrid * part_grid , ColPartition_LIST * big_parts)",15, 80, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::PartitionRemainingBlobs( PageSegMode pageseg_mode , ColPartitionGrid * part_grid)",33, 74, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::MakePartitionsFromCellList( PageSegMode pageseg_mode , bool combine , ColPartitionGrid * part_grid , BLOBNBOX_CLIST * cell_list)",26, 80, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::CompletePartition( PageSegMode pageseg_mode , ColPartition * part , ColPartitionGrid * part_grid)",18, 72, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::EasyMerges( ColPartitionGrid * part_grid)",5, 74, 6, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::OrientationSearchBox( ColPartition * part , TBOX * box)",10, 72, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::ConfirmEasyMerge( const ColPartition * p1 , const ColPartition * p2)",27, 67, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::NoNoiseInBetween( const TBOX & box1 , const TBOX & box2) const",4, 79, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::DisplayGoodBlobs( const char * window_name , int x , int y)",40, 67, 0, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::DrawDiacriticJoiner( const BLOBNBOX * blob , ScrollView * window)",9, 88, 2, 0
repos/cpp/tesseract/src/textord/strokewidth.cpp,"tesseract::StrokeWidth::DisplayDiacritics( const char * window_name , int x , int y , TO_BLOCK * block)",36, 76, 43, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ColPartition( BlobRegionType blob_type , const ICOORD & vertical)",18, 79, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::FakePartition( const TBOX & box , PolyBlockType block_type , BlobRegionType blob_type , BlobTextFlowType flow)",15, 68, 42, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MakeBigPartition( BLOBNBOX * box , ColPartition_LIST * big_part_list)",16, 81, 45, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::~ColPartition()",12, 69, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MakeLinePartition( BlobRegionType blob_type , const ICOORD & vertical , int left , int bottom , int right , int top)",16, 72, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::AddBox( BLOBNBOX * bbox)",31, 80, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RemoveBox( BLOBNBOX * box)",10, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::BiggestBox()",17, 76, 10, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::BoundsWithoutBox( BLOBNBOX * box)",10, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ClaimBoxes()",13, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::DisownBoxes()",8, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::DisownBoxesNoAssert()",8, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ReleaseNonLeaderBoxes()",14, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::DeleteBoxes()",10, 72, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ReflectInYAxis()",15, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::IsLegal()",26, 67, 14, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MatchingColumns( const ColPartition & other) const",10, 70, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MatchingTextColor( const ColPartition & other) const",20, 75, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MatchingSizes( const ColPartition & other) const",6, 75, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ConfirmNoTabViolation( const ColPartition & other) const",15, 76, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MatchingStrokeWidth( const ColPartition & other , double fractional_tolerance , double constant_tolerance) const",21, 74, 39, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::OKDiacriticMerge( const ColPartition & candidate , bool debug) const",32, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetLeftTab( const TabVector * tab_vector)",10, 61, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetRightTab( const TabVector * tab_vector)",10, 62, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::CopyLeftTab( const ColPartition & src , bool take_box)",11, 73, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::CopyRightTab( const ColPartition & src , bool take_box)",11, 74, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::LeftBlobRule() const",4, 58, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RightBlobRule() const",5, 58, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SpecialBlobsDensity( const BlobSpecialTextType type) const",4, 80, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SpecialBlobsCount( const BlobSpecialTextType type)",14, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetSpecialBlobsDensity( const BlobSpecialTextType type , const float density)",5, 59, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ComputeSpecialBlobsDensity()",17, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::AddPartner( bool upper , ColPartition * partner)",11, 76, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RemovePartner( bool upper , ColPartition * partner)",9, 70, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SingletonPartner( bool upper)",7, 78, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::Absorb( ColPartition * other , WidthCallback * cb)",87, 76, 6, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::OKMergeOverlap( const ColPartition & merge1 , const ColPartition & merge2 , int ok_box_overlap , bool debug)",30, 80, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::OverlapSplitBlob( const TBOX & box)",13, 60, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SplitAtBlob( BLOBNBOX * split_blob)",33, 79, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SplitAt( int split_x)",36, 79, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ComputeLimits()",97, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::CountOverlappingBoxes( const TBOX & box)",10, 62, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetPartitionType( int resolution , ColPartitionSet * columns)",28, 85, 28, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::PartitionType( ColumnSpanningType flow) const",47, 75, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ColumnRange( int resolution , ColPartitionSet * columns , int * first_col , int * last_col)",12, 85, 28, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetColumnGoodness( WidthCallback * cb)",6, 76, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MarkAsLeaderIfMonospaced()",100, 78, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetRegionAndFlowTypesFromProjectionValue( int value)",71, 80, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SetBlobTypes()",12, 68, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::HasGoodBaseline()",64, 79, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::AddToWorkingSet( const ICOORD & bleft , const ICOORD & tright , int resolution , ColPartition_LIST * used_parts , WorkingPartSet_LIST * working_sets)",53, 80, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::LineSpacingBlocks( const ICOORD & bleft , const ICOORD & tright , int resolution , ColPartition_LIST * block_parts , ColPartition_LIST * used_parts , BLOCK_LIST * completed_blocks , TO_BLOCK_LIST * to_blocks)",124, 81, 14, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ClipCoord( const ICOORD & bleft , const ICOORD & tright , ICOORD * pos)",10, 80, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::MoveBlobsToBlock( bool vertical_text , int line_spacing , BLOCK * block , ColPartition_LIST * block_parts , ColPartition_LIST * used_parts)",72, 79, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MakeBlock( const ICOORD & bleft , const ICOORD & tright , ColPartition_LIST * block_parts , ColPartition_LIST * used_parts)",54, 80, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MakeVerticalTextBlock( const ICOORD & bleft , const ICOORD & tright , ColPartition_LIST * block_parts , ColPartition_LIST * used_parts)",23, 81, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::MakeToRow()",22, 69, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ShallowCopy() const",26, 67, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::CopyButDontOwnBlobs()",9, 81, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::BoxColor() const",5, 55, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::Print() const",16, 74, 10, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::PrintColors()",6, 74, 10, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SmoothPartnerRun( int working_set_count)",36, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RefinePartners( PolyBlockType type , bool get_desperate , ColPartitionGrid * grid)",19, 74, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RefinePartnersInternal( bool upper , bool get_desperate , ColPartitionGrid * grid)",23, 78, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RefinePartnersByType( bool upper , ColPartition_CLIST * partners)",48, 72, 40, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RefinePartnerShortcuts( bool upper , ColPartition_CLIST * partners)",40, 80, 6, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RefineTextPartnersByMerge( bool upper , bool desperate , ColPartition_CLIST * partners , ColPartitionGrid * grid)",47, 84, 55, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RefinePartnersByOverlap( bool upper , ColPartition_CLIST * partners)",35, 82, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::ThisPartitionBetter( BLOBNBOX * bbox , const ColPartition & other)",33, 84, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::MedianSpacing( int page_height , ColPartition_IT it)",10, 64, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::IsInSameColumnAs( const ColPartition & part) const",7, 79, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SmoothSpacings( int resolution , int page_height , ColPartition_LIST * parts)",139, 82, 18, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::OKSpacingBlip( int resolution , int median_spacing , ColPartition ** parts)",13, 74, 11, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SpacingEqual( int spacing , int resolution) const",6, 69, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SpacingsEqual( const ColPartition & other , int resolution) const",11, 78, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SummedSpacingOK( const ColPartition & other , int spacing , int resolution) const",13, 72, 35, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::BottomSpacingMargin( int resolution) const",3, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::TopSpacingMargin( int resolution) const",4, 75, 2, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::SizesSimilar( const ColPartition & other) const",4, 67, 0, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::UpdateLeftMargin( const ColPartition & part , int * margin_left , int * margin_right)",19, 68, 29, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::LeftEdgeRun( ColPartition_IT * part_it , ICOORD * start , ICOORD * end)",57, 79, 4, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::UpdateRightMargin( const ColPartition & part , int * margin_left , int * margin_right)",19, 69, 30, 0
repos/cpp/tesseract/src/textord/colpartition.cpp,"tesseract::ColPartition::RightEdgeRun( ColPartition_IT * part_it , ICOORD * start , ICOORD * end)",59, 80, 4, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"fixed_pitch_words( TO_ROW * row , FCOORD rotation)",148, 81, 2, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"add_repeated_word( WERD_IT * rep_it , int16_t & rep_left , int16_t & prev_chop_coord , uint8_t & blanks , float pitch , WERD_IT * word_it)",27, 79, 4, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"split_to_blob( BLOBNBOX * blob , int16_t chop_coord , float pitch_error , C_OUTLINE_LIST * left_coutlines , C_OUTLINE_LIST * right_coutlines)",22, 72, 19, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"fixed_chop_cblob( C_BLOB * blob , int16_t chop_coord , float pitch_error , C_OUTLINE_LIST * left_outlines , C_OUTLINE_LIST * right_outlines)",37, 75, 22, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"fixed_split_coutline( C_OUTLINE * srcline , int16_t chop_coord , float pitch_error , C_OUTLINE_IT * left_it , C_OUTLINE_IT * right_it)",72, 80, 6, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"fixed_chop_coutline( C_OUTLINE * srcline , int16_t chop_coord , float pitch_error , C_OUTLINE_FRAG_LIST * left_frags , C_OUTLINE_FRAG_LIST * right_frags)",110, 78, 0, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"save_chop_cfragment( int16_t head_index , ICOORD head_pos , int16_t tail_index , ICOORD tail_pos , C_OUTLINE * srcline , C_OUTLINE_FRAG_LIST * frags)",32, 75, 25, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"C_OUTLINE_FRAG::C_OUTLINE_FRAG( ICOORD start_pt , ICOORD end_pt , C_OUTLINE * outline , int16_t start_index , int16_t end_index)",30, 70, 0, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"C_OUTLINE_FRAG::C_OUTLINE_FRAG( C_OUTLINE_FRAG * head , int16_t tail_y)",10, 72, 0, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"add_frag_to_list( C_OUTLINE_FRAG * frag , C_OUTLINE_FRAG_LIST * frags)",20, 68, 22, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"close_chopped_cfragments( C_OUTLINE_FRAG_LIST * frags , C_OUTLINE_LIST * children , float pitch_error , C_OUTLINE_IT * dest_it)",52, 80, 30, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"join_chopped_fragments( C_OUTLINE_FRAG * bottom , C_OUTLINE_FRAG * top)",29, 75, 34, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"join_segments( C_OUTLINE_FRAG * bottom , C_OUTLINE_FRAG * top)",30, 71, 2, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"C_OUTLINE_FRAG::close()",25, 71, 2, 0
repos/cpp/tesseract/src/textord/fpchop.cpp,"C_OUTLINE_FRAG::operator =( const C_OUTLINE_FRAG & src)",13, 52, 0, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"create_to_win( ICOORD page_tr)",7, 65, 2, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"close_to_win()",6, 71, 2, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_box_list( ScrollView * win , BLOBNBOX_LIST * list , ScrollView :: Color body_colour)",13, 69, 19, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_to_row( TO_ROW * row , ScrollView :: Color colour , FCOORD rotation)",26, 73, 2, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_parallel_row( TO_ROW * row , float gradient , int32_t left , ScrollView :: Color colour , FCOORD rotation)",31, 73, 2, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"draw_occupation( int32_t xleft , int32_t ybottom , int32_t min_y , int32_t max_y , int32_t occupation [ ] , int32_t thresholds [ ])",36, 93, 5, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"draw_meanlines( TO_BLOCK * block , float gradient , int32_t left , ScrollView :: Color colour , FCOORD rotation)",31, 77, 2, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_word_decisions( ScrollView * win , int16_t pitch , TO_ROW * row)",62, 80, 2, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_fp_cells( ScrollView * win , ScrollView :: Color colour , BLOBNBOX_IT * blob_it , int16_t pitch , int16_t blob_count , STATS * projection , int16_t projection_left , int16_t projection_right , float projection_scale)",36, 91, 4, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_fp_cells2( ScrollView * win , ScrollView :: Color colour , TO_ROW * row , FPSEGPT_LIST * seg_list)",25, 92, 5, 0
repos/cpp/tesseract/src/textord/drawtord.cpp,"plot_row_cells( ScrollView * win , ScrollView :: Color colour , TO_ROW * row , float xshift , ICOORDELT_LIST * cells)",22, 94, 4, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::GridBase::GridBase( int gridsize , const ICOORD & bleft , const ICOORD & tright)",3, 78, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::GridBase::Init( int gridsize , const ICOORD & bleft , const ICOORD & tright)",10, 79, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::GridBase::GridCoords( int x , int y , int * grid_x , int * grid_y) const",5, 74, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::GridBase::ClipGridCoords( int * x , int * y) const",4, 54, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::IntGrid()",3, 21, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::IntGrid( int gridsize , const ICOORD & bleft , const ICOORD & tright)",4, 74, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::~IntGrid()",3, 22, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::Init( int gridsize , const ICOORD & bleft , const ICOORD & tright)",6, 78, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::Clear()",5, 43, 2, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::Rotate( const FCOORD & rotation)",28, 81, 2, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::NeighbourhoodSum() const",19, 65, 2, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::RectMostlyOverThreshold( const TBOX & rect , int threshold) const",18, 79, 0, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::AnyZeroInRect( const TBOX & rect) const",12, 58, 2, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::IntGrid::ThresholdToPix( int threshold) const",16, 76, 14, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::GridReducedPix( const TBOX & box , int gridsize , ICOORD bleft , int * left , int * bottom)",13, 67, 27, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::TraceOutlineOnReducedPix( C_OUTLINE * outline , int gridsize , ICOORD bleft , int * left , int * bottom)",16, 70, 30, 0
repos/cpp/tesseract/src/textord/bbgrid.cpp,"tesseract::TraceBlockOnReducedPix( BLOCK * block , int gridsize , ICOORD bleft , int * left , int * bottom)",30, 72, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::BaselineRow( double line_spacing , TO_ROW * to_row)",10, 65, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::SetupOldLineParameters( TO_ROW * row) const",8, 67, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::Print() const",9, 65, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::BaselineAngle() const",7, 74, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::SpaceBetween( const BaselineRow & other) const",10, 80, 10, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::PerpDisp( const FCOORD & direction) const",5, 74, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::StraightYAtX( double x) const",8, 74, 6, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::FitBaseline( bool use_box_bottoms)",69, 80, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::AdjustBaselineToParallel( int debug , const FCOORD & direction)",12, 73, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::AdjustBaselineToGrid( int debug , const FCOORD & direction , double line_spacing , double line_offset)",53, 79, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::SetupBlobDisplacements( const FCOORD & direction)",49, 80, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::FitConstrainedIfBetter( int debug , const FCOORD & direction , double cheat_allowance , double target_offset)",43, 79, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::PerpDistanceFromBaseline( const FCOORD & pt) const",6, 71, 0, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineRow::ComputeBoundingBox()",8, 62, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::BaselineBlock( int debug_level , bool non_text , TO_BLOCK * block)",11, 79, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::SpacingModelError( double perp_disp , double line_spacing , double line_offset)",7, 79, 0, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::FitBaselinesAndFindSkew( bool use_box_bottoms)",26, 68, 0, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::ParallelizeBaselines( double default_block_skew)",40, 76, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::SetupBlockParameters() const",18, 91, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::PrepareForSplineFitting( ICOORD page_tr , bool remove_noise)",10, 81, 0, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::FitBaselineSplines( bool enable_splines , bool show_final_rows , Textord * textord)",26, 76, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::DrawFinalRows( const ICOORD & page_tr)",24, 79, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::DrawPixSpline( Pix * pix_in)",7, 74, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::ComputeLineSpacing()",26, 78, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::ComputeBaselinePositions( const FCOORD & direction , GenericVector<double> * positions)",12, 81, 45, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::EstimateLineSpacing()",28, 77, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::RefineLineSpacing( const GenericVector<double> & positions)",31, 80, 0, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineBlock::FitLineSpacingModel( const GenericVector<double> & positions , double m_in , double * m_out , double * c_out , int * index_delta)",53, 81, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineDetect::BaselineDetect( int debug_level , const FCOORD & page_skew , TO_BLOCK_LIST * blocks)",18, 78, 4, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineDetect::ComputeStraightBaselines( bool use_box_bottoms)",26, 78, 2, 0
repos/cpp/tesseract/src/textord/baselinedetect.cpp,"tesseract::BaselineDetect::ComputeBaselineSplinesAndXheights( const ICOORD & page_tr , bool enable_splines , bool remove_noise , bool show_final_rows , Textord * textord)",15, 78, 0, 0
repos/cpp/tesseract/src/textord/blobgrid.cpp,"tesseract::BlobGrid::BlobGrid( int gridsize , const ICOORD & bleft , const ICOORD & tright)",3, 79, 2, 0
repos/cpp/tesseract/src/textord/blobgrid.cpp,"tesseract::BlobGrid::InsertBlobList( BLOBNBOX_LIST * blobs)",8, 77, 2, 0
repos/cpp/tesseract/src/textord/textord.cpp,"tesseract::Textord::Textord( CCStruct * ccstruct)",193, 81, 18, 0
repos/cpp/tesseract/src/textord/textord.cpp,"tesseract::Textord::TextordPage( PageSegMode pageseg_mode , const FCOORD & reskew , int width , int height , Pix * binary_pix , Pix * thresholds_pix , Pix * grey_pix , bool use_box_bottoms , BLOBNBOX_LIST * diacritic_blobs , BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",89, 81, 4, 0
repos/cpp/tesseract/src/textord/textord.cpp,"tesseract::Textord::CleanupSingleRowResult( PageSegMode pageseg_mode , PAGE_RES * page_res)",30, 71, 2, 0
repos/cpp/tesseract/src/textord/drawedg.cpp,"create_edges_window( ICOORD page_tr)",7, 106, 2, 0
repos/cpp/tesseract/src/textord/drawedg.cpp,"draw_raw_edge( ScrollView * fd , CRACKEDGE * start , ScrollView :: Color colour)",19, 109, 4, 0
repos/cpp/tesseract/src/textord/pitsync1.cpp,"FPSEGPT::FPSEGPT( FPCUTPT * cutpt)",13, 56, 17, 0
repos/cpp/tesseract/src/textord/pitsync1.cpp,"FPSEGPT::FPSEGPT( int16_t x)",12, 47, 0, 0
repos/cpp/tesseract/src/textord/pitsync1.cpp,"FPSEGPT::FPSEGPT( int16_t x , BOOL8 faking , int16_t offset , int16_t region_index , int16_t pitch , int16_t pitch_error , FPSEGPT_LIST * prev_list)",55, 80, 2, 0
repos/cpp/tesseract/src/textord/pitsync1.cpp,"check_pitch_sync( BLOBNBOX_IT * blob_it , int16_t blob_count , int16_t pitch , int16_t pitch_error , STATS * projection , FPSEGPT_LIST * seg_list)",210, 106, 8, 0
repos/cpp/tesseract/src/textord/pitsync1.cpp,"make_illegal_segment( FPSEGPT_LIST * prev_list , TBOX blob_box , BLOBNBOX_IT blob_it , int16_t region_index , int16_t pitch , int16_t pitch_error , FPSEGPT_LIST * seg_list)",57, 72, 0, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::RemoveUnusedLineSegments( bool horizontal_lines , BLOBNBOX_LIST * line_bblobs , Pix * line_pix)",29, 78, 8, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::SubtractLinesAndResidue( Pix * line_pix , Pix * non_line_pix , int resolution , Pix * src_pix)",15, 70, 0, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::MaxStrokeWidth( Pix * pix)",19, 65, 2, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::NumTouchingIntersections( Box * line_box , Pix * intersection_pix)",10, 76, 0, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::CountPixelsAdjacentToLine( int line_width , Box * line_box , Pix * nonline_pix)",23, 83, 4, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::FilterFalsePositives( int resolution , Pix * nonline_pix , Pix * intersection_pix , Pix * line_pix)",44, 79, 4, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::FindAndRemoveLines( int resolution , bool debug , Pix * pix , int * vertical_x , int * vertical_y , Pix ** pix_music_mask , TabVector_LIST * v_lines , TabVector_LIST * h_lines)",70, 79, 2, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::ConvertBoxaToBlobs( int image_width , int image_height , Boxa ** boxes , C_BLOB_LIST * blobs)",32, 78, 2, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::FindAndRemoveVLines( int resolution , Pix * pix_intersections , int * vertical_x , int * vertical_y , Pix ** pix_vline , Pix * pix_non_vline , Pix * src_pix , TabVector_LIST * vectors)",25, 81, 2, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::FindAndRemoveHLines( int resolution , Pix * pix_intersections , int vertical_x , int vertical_y , Pix ** pix_hline , Pix * pix_non_hline , Pix * src_pix , TabVector_LIST * vectors)",32, 81, 2, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::FindLineVectors( const ICOORD & bleft , const ICOORD & tright , BLOBNBOX_LIST * line_bblobs , int * vertical_x , int * vertical_y , TabVector_LIST * vectors)",46, 78, 6, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::FilterMusic( int resolution , Pix * pix_closed , Pix * pix_vline , Pix * pix_hline , l_int32 * v_empty , l_int32 * h_empty)",69, 80, 8, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::GetLineMasks( int resolution , Pix * src_pix , Pix ** pix_vline , Pix ** pix_non_vline , Pix ** pix_hline , Pix ** pix_non_hline , Pix ** pix_intersections , Pix ** pix_music_mask , Pixa * pixa_display)",137, 82, 4, 0
repos/cpp/tesseract/src/textord/linefind.cpp,"tesseract::LineFinder::GetLineBoxes( bool horizontal_lines , Pix * pix_lines , Pix * pix_intersections , C_BLOB_LIST * line_cblobs , BLOBNBOX_LIST * line_bblobs)",57, 81, 4, 0
repos/cpp/tesseract/src/textord/edgloop.cpp,"complete_edge( CRACKEDGE * start , C_OUTLINE_IT * outline_it)",18, 68, 4, 0
repos/cpp/tesseract/src/textord/edgloop.cpp,"check_path_legal( CRACKEDGE * start)",45, 72, 6, 0
repos/cpp/tesseract/src/textord/edgloop.cpp,"loop_bounding_box( CRACKEDGE * & start , ICOORD & botleft , ICOORD & topright)",41, 68, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::to_spacing( ICOORD page_tr , TO_BLOCK_LIST * blocks)",69, 86, 4, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::block_spacing_stats( TO_BLOCK * block , GAPMAP * gapmap , bool & old_text_ord_proportional , int16_t & block_space_gap_width , int16_t & block_non_space_gap_width)",166, 83, 12, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::row_spacing_stats( TO_ROW * row , GAPMAP * gapmap , int16_t block_idx , int16_t row_idx , int16_t block_space_gap_width , int16_t block_non_space_gap_width)",293, 99, 16, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::old_to_method( TO_ROW * row , STATS * all_gap_stats , STATS * space_gap_stats , STATS * small_gap_stats , int16_t block_space_gap_width , int16_t block_non_space_gap_width)",85, 82, 4, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::isolated_row_stats( TO_ROW * row , GAPMAP * gapmap , STATS * all_gap_stats , bool suspected_table , int16_t block_idx , int16_t row_idx)",115, 79, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::stats_count_under( STATS * stats , int16_t threshold)",8, 70, 0, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::improve_row_threshold( TO_ROW * row , STATS * all_gap_stats)",67, 79, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::make_prop_words( TO_ROW * row , FCOORD rotation)",286, 83, 12, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::make_blob_words( TO_ROW * row , FCOORD rotation)",73, 82, 4, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::make_a_word_break( TO_ROW * row , TBOX blob_box , int16_t prev_gap , TBOX prev_blob_box , int16_t real_current_gap , int16_t within_xht_current_gap , TBOX next_blob_box , int16_t next_gap , uint8_t & blanks , bool & fuzzy_sp , bool & fuzzy_non , bool & prev_gap_was_a_space , bool & break_at_next_gap)",307, 88, 15, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::narrow_blob( TO_ROW * row , TBOX blob_box)",7, 74, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::wide_blob( TO_ROW * row , TBOX blob_box)",14, 76, 6, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::suspected_punct_blob( TO_ROW * row , TBOX box)",13, 60, 0, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::peek_at_next_gap( TO_ROW * row , BLOBNBOX_IT box_it , TBOX & next_blob_box , int16_t & next_gap , int16_t & next_within_xht_gap)",23, 67, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::mark_gap( TBOX blob , int16_t rule , int16_t prev_gap , int16_t prev_blob_width , int16_t current_gap , int16_t next_blob_width , int16_t next_gap)",71, 77, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::find_mean_blob_spacing( WERD * word)",25, 61, 4, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::ignore_big_gap( TO_ROW * row , int32_t row_length , GAPMAP * gapmap , int16_t left , int16_t right)",28, 80, 2, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::reduced_box_next( TO_ROW * row , BLOBNBOX_IT * it)",52, 73, 6, 0
repos/cpp/tesseract/src/textord/tospace.cpp,"tesseract::Textord::reduced_box_for_blob( BLOBNBOX * blob , TO_ROW * row , int16_t * left_above_xht)",53, 80, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ColumnFinder( int gridsize , const ICOORD & bleft , const ICOORD & tright , int resolution , bool cjk_script , double aligned_gap_fraction , TabVector_LIST * vlines , TabVector_LIST * hlines , int vertical_x , int vertical_y)",22, 77, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::~ColumnFinder()",37, 77, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::SetupAndFilterNoise( PageSegMode pageseg_mode , Pix * photo_mask_pix , TO_BLOCK * input_block)",27, 81, 51, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::IsVerticallyAlignedText( double find_vertical_text_ratio , TO_BLOCK * block , BLOBNBOX_CLIST * osd_blobs)",6, 76, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::CorrectOrientation( TO_BLOCK * block , bool vertical_text_lines , int recognition_rotation)",63, 78, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::FindBlocks( PageSegMode pageseg_mode , Pix * scaled_color , int scaled_factor , TO_BLOCK * input_block , Pix * photo_mask_pix , Pix * thresholds_pix , Pix * grey_pix , DebugPixa * pixa_debug , BLOCK_LIST * blocks , BLOBNBOX_LIST * diacritic_blobs , TO_BLOCK_LIST * to_blocks)",209, 83, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::GetDeskewVectors( FCOORD * deskew , FCOORD * reskew)",5, 70, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::SetEquationDetect( EquationDetectBase * detect)",3, 67, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::DisplayBlocks( BLOCK_LIST * blocks)",21, 64, 42, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::DisplayColumnBounds( PartSetVector * sets)",12, 80, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::MakeColumns( bool single_column)",58, 81, 12, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ImproveColumnCandidates( PartSetVector * src_sets , PartSetVector * column_sets)",26, 73, 43, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::PrintColumnCandidates( const char * title)",10, 62, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::AssignColumns( const PartSetVector & part_sets)",100, 80, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::BiggestUnassignedRange( int set_count , const bool * any_columns_possible , int * best_start , int * best_end)",32, 76, 42, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::RangeModalColumnSet( int ** column_set_costs , const int * assigned_costs , int start , int end)",14, 68, 6, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ShrinkRangeToLongestRun( int ** column_set_costs , const int * assigned_costs , const bool * any_columns_possible , int column_set_id , int * best_start , int * best_end)",35, 77, 43, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ExtendRangePastSmallGaps( int ** column_set_costs , const int * assigned_costs , const bool * any_columns_possible , int column_set_id , int step , int end , int * start)",48, 79, 6, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::AssignColumnToRange( int column_set_id , int start , int end , int ** column_set_costs , int * assigned_costs)",9, 78, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ComputeMeanColumnGap( bool any_multi_column)",16, 68, 52, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ReleaseAllBlobsAndDeleteUnused( BLOBNBOX_LIST * blobs)",9, 74, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ReleaseBlobsAndCleanupUnused( TO_BLOCK * block)",7, 67, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::GridSplitPartitions()",89, 80, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::GridMergePartitions()",99, 81, 12, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::InsertRemainingNoise( TO_BLOCK * block)",50, 80, 8, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::BoxFromHLine( const TabVector * hline)",12, 70, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::GridRemoveUnderlinePartitions()",36, 81, 8, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::GridInsertHLinePartitions()",26, 80, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::GridInsertVLinePartitions()",36, 80, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::SetPartitionTypes()",9, 73, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::SmoothPartnerRuns()",30, 68, 6, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::AddToTempPartList( ColPartition * part , ColPartition_CLIST * temp_list)",24, 78, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::EmptyTempPartList( ColPartition_CLIST * temp_list , WorkingPartSet_LIST * work_set)",9, 70, 37, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::TransformToBlocks( BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",48, 78, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ReflectBlobList( BLOBNBOX_LIST * bblobs)",6, 62, 2, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ReflectForRtl( TO_BLOCK * input_block , BLOBNBOX_LIST * bblobs)",12, 81, 0, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::RotateAndExplodeBlobList( const FCOORD & blob_rotation , BLOBNBOX_LIST * bblobs , STATS * widths , STATS * heights)",34, 79, 8, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::RotateAndReskewBlocks( bool input_is_rtl , TO_BLOCK_LIST * blocks)",44, 79, 4, 0
repos/cpp/tesseract/src/textord/colfind.cpp,"tesseract::ColumnFinder::ComputeBlockAndClassifyRotation( BLOCK * block)",40, 77, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::SimpleStats()",1, 50, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::~SimpleStats()",1, 21, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::Clear()",4, 24, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::Add( float value)",4, 30, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::Finish()",4, 33, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::ile( double frac)",11, 63, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::median()",3, 21, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::minimum()",5, 37, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::size() const",3, 27, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"SimpleStats::float_compare( const void * a , const void * b)",5, 59, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::LocalCorrelation()",1, 44, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::~LocalCorrelation()",1, 26, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::Finish()",4, 38, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::Clear()",3, 24, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::Add( float x , float y , int v)",8, 38, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::EstimateYFor( float x , float r)",25, 80, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"LocalCorrelation::float_pair_compare( const void * a , const void * b)",5, 65, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::FPChar()",5, 70, 12, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::Init( BLOBNBOX * blob)",6, 33, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::Merge( const FPChar & next)",9, 49, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::box() const",1, 43, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::set_box( const TBOX & box)",3, 34, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::real_body() const",1, 55, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::is_final() const",1, 43, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::set_final( bool flag)",3, 30, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::alignment() const",3, 39, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::set_alignment( Alignment alignment)",3, 44, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::merge_to_prev() const",3, 31, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::set_merge_to_prev( bool flag)",3, 38, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::delete_flag() const",3, 29, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::set_delete_flag( bool flag)",3, 36, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::max_gap() const",3, 24, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPChar::num_blobs() const",3, 26, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::FPRow()",4, 72, 12, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::~FPRow()",1, 15, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::good_pitches()",3, 33, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::pitch()",3, 19, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::estimated_pitch()",3, 29, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::set_estimated_pitch( float v)",3, 38, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::height()",3, 20, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::height_pitch_ratio()",4, 47, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::gap()",3, 17, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::num_chars()",3, 31, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::character( int i)",3, 29, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::box( int i)",3, 33, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::real_body( int i)",3, 39, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::is_box_modified( int i)",3, 66, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::center_x( int i)",3, 79, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::is_final( int i)",3, 38, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::finalize( int i)",3, 36, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::is_good( int i)",3, 61, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::mark_good( int i)",3, 54, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::mark_bad( int i)",3, 53, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::clear_alignment( int i)",3, 57, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::x_overlap_fraction( const TBOX & box1 , const TBOX & box2)",4, 76, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::mostly_overlap( const TBOX & box1 , const TBOX & box2)",3, 67, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::significant_overlap( const TBOX & box1 , const TBOX & box2)",5, 72, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::box_pitch( const TBOX & ref , const TBOX & box)",3, 75, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::is_good_pitch( float pitch , const TBOX & box1 , const TBOX & box2)",20, 79, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::is_interesting_blob( const BLOBNBOX * blob)",3, 67, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::DeleteChars()",10, 61, 8, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::Init( TO_ROW * row)",29, 77, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::OutputEstimations()",91, 77, 10, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::EstimatePitch( bool pass1)",69, 72, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::DebugOutputResult( int row_index)",16, 75, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::Pass1Analyze()",21, 78, 6, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::Pass2Analyze()",118, 81, 6, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::MergeFragments()",15, 50, 6, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPRow::FinalizeLargeChars()",65, 78, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::~FPAnalyzer()",1, 20, 2, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::Pass1Analyze()",3, 71, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::maybe_fixed_pitch()",5, 74, 8, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::MergeFragments()",3, 73, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::FinalizeLargeChars()",3, 77, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::Pass2Analyze()",9, 48, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::OutputEstimations()",4, 76, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::DebugOutputResult()",4, 77, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::num_rows()",3, 25, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::max_iteration()",5, 71, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::FPAnalyzer( ICOORD page_tr , TO_BLOCK_LIST * port_blocks)",31, 76, 4, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"FPAnalyzer::EstimatePitch( bool pass1)",40, 78, 10, 0
repos/cpp/tesseract/src/textord/cjkpitch.cpp,"compute_fixed_pitch_cjk( ICOORD page_tr , TO_BLOCK_LIST * port_blocks)",37, 80, 4, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::FindImages( Pix * pix , DebugPixa * pixa_debug)",84, 75, 2, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::ConnCompAndRectangularize( Pix * pix , DebugPixa * pixa_debug , Boxa ** boxa , Pixa ** pixa)",39, 79, 2, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::HScanForEdge( uint32_t * data , int wpl , int x_start , int x_end , int min_count , int mid_width , int max_count , int y_end , int y_step , int * y_start)",24, 83, 4, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::VScanForEdge( uint32_t * data , int wpl , int y_start , int y_end , int min_count , int mid_width , int max_count , int x_end , int x_step , int * x_start)",23, 75, 6, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::pixNearlyRectangular( Pix * pix , double min_fraction , double max_fraction , double max_skew_gradient , int * x_start , int * y_start , int * x_end , int * y_end)",61, 79, 37, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::BoundsWithinRect( Pix * pix , int * x_start , int * y_start , int * x_end , int * y_end)",19, 71, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::ColorDistanceFromLine( const uint8_t * line1 , const uint8_t * line2 , const uint8_t * point)",31, 79, 4, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::ComposeRGB( uint32_t r , uint32_t g , uint32_t b)",5, 69, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::ClipToByte( double pixel)",7, 46, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::ComputeRectangleColors( const TBOX & rect , Pix * pix , int factor , Pix * color_map1 , Pix * color_map2 , Pix * rms_map , uint8_t * color1 , uint8_t * color2)",119, 79, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::BlankImageInBetween( const TBOX & box1 , const TBOX & box2 , const TBOX & im_box , const FCOORD & rotation , Pix * pix)",18, 80, 36, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::CountPixelsInRotatedBox( TBOX box , const TBOX & im_box , const FCOORD & rotation , Pix * pix)",18, 75, 39, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::AttemptToShrinkBox( const FCOORD & rotation , const FCOORD & rerotation , const TBOX & im_box , Pix * pix , TBOX * slice)",20, 81, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::CutChunkFromParts( const TBOX & box , const TBOX & im_box , const FCOORD & rotation , const FCOORD & rerotation , Pix * pix , ColPartition_LIST * part_list)",75, 80, 30, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::DivideImageIntoParts( const TBOX & im_box , const FCOORD & rotation , const FCOORD & rerotation , Pix * pix , ColPartitionGridSearch * rectsearch , ColPartition_LIST * part_list)",47, 79, 6, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ExpandImageLeft( const TBOX & box , int left_limit , ColPartitionGrid * part_grid)",33, 80, 10, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ExpandImageRight( const TBOX & box , int right_limit , ColPartitionGrid * part_grid)",32, 78, 10, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ExpandImageBottom( const TBOX & box , int bottom_limit , ColPartitionGrid * part_grid)",32, 78, 10, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ExpandImageTop( const TBOX & box , int top_limit , ColPartitionGrid * part_grid)",32, 78, 10, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ExpandImageDir( BlobNeighbourDir dir , const TBOX & im_box , const TBOX & limit_box , ColPartitionGrid * part_grid , TBOX * expanded_box)",25, 81, 6, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::MaximalImageBoundingBox( ColPartitionGrid * part_grid , TBOX * im_box)",29, 81, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::DeletePartition( ColPartition * part)",14, 73, 4, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ExpandImageIntoParts( const TBOX & max_image_box , ColPartitionGridSearch * rectsearch , ColPartitionGrid * part_grid , ColPartition ** part_ptr)",74, 80, 8, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::IntersectArea( const TBOX & box , ColPartition_LIST * part_list)",12, 74, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::TestWeakIntersectedPart( const TBOX & im_box , ColPartition_LIST * part_list , ColPartition * part)",16, 66, 36, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::EliminateWeakParts( const TBOX & im_box , ColPartitionGrid * part_grid , ColPartition_LIST * big_parts , ColPartition_LIST * part_list)",31, 76, 8, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ScanForOverlappingText( ColPartitionGrid * part_grid , TBOX * box)",22, 77, 0, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::MarkAndDeleteImageParts( const FCOORD & rerotate , ColPartitionGrid * part_grid , ColPartition_LIST * image_parts , Pix * image_pix)",25, 80, 18, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::TransferImagePartsToImageMask( const FCOORD & rerotation , ColPartitionGrid * part_grid , Pix * image_mask)",19, 80, 4, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::DeleteSmallImages( ColPartitionGrid * part_grid)",19, 75, 4, 0
repos/cpp/tesseract/src/textord/imagefind.cpp,"tesseract::ImageFind::FindImagePartitions( Pix * image_pix , const FCOORD & rotation , const FCOORD & rerotation , TO_BLOCK * block , TabFind * tab_grid , DebugPixa * pixa_debug , ColPartitionGrid * part_grid , ColPartition_LIST * big_parts)",64, 79, 36, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"make_single_word( bool one_blob , TO_ROW_LIST * rows , ROW_LIST * real_rows)",38, 79, 0, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"make_words( tesseract :: Textord * textord , ICOORD page_tr , float gradient , BLOCK_LIST * blocks , TO_BLOCK_LIST * port_blocks)",21, 80, 2, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"set_row_spaces( TO_BLOCK * block , FCOORD rotation , bool testing_on)",36, 77, 2, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"row_words( TO_BLOCK * block , TO_ROW * row , int32_t maxwidth , FCOORD rotation , bool testing_on)",159, 80, 2, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"row_words2( TO_BLOCK * block , TO_ROW * row , int32_t maxwidth , FCOORD rotation , bool testing_on)",146, 80, 2, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"make_real_words( tesseract :: Textord * textord , TO_BLOCK * block , FCOORD rotation)",47, 80, 2, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"make_rep_words( TO_ROW * row , TO_BLOCK * block)",23, 78, 2, 0
repos/cpp/tesseract/src/textord/wordseg.cpp,"make_real_word( BLOBNBOX_IT * box_it , int32_t blobcount , bool bol , uint8_t blanks)",42, 66, 21, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::ShiroRekhaSplitter()",10, 43, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::~ShiroRekhaSplitter()",3, 44, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::Clear()",10, 41, 2, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::set_orig_pix( Pix * pix)",6, 50, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::Split( bool split_for_pageseg , DebugPixa * pixa_debug)",88, 81, 2, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::PerformClose( Pix * pix , int xheight_estimate)",3, 72, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::GetXheightForCC( Box * cc_bbox)",41, 80, 2, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::SplitWordShiroRekha( SplitStrategy split_strategy , Pix * pix , int xheight , int word_left , int word_top , Boxa * regions_to_clear)",117, 81, 6, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::RefreshSegmentationWithNewBlobs( C_BLOB_LIST * new_blobs)",44, 80, 31, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::GetBoxForTBOX( const TBOX & tbox) const",4, 74, 2, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::GetModeHeight( Pix * pix)",14, 50, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::ShiroRekhaSplitter::GetShiroRekhaYExtents( Pix * word_pix , int * shirorekha_top , int * shirorekha_bottom , int * shirorekha_ylevel)",25, 81, 2, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::PixelHistogram::GetHistogramMaximum( int * count) const",12, 60, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::PixelHistogram::ConstructVerticalCountHist( Pix * pix)",17, 60, 0, 0
repos/cpp/tesseract/src/textord/devanagari_processing.cpp,"tesseract::PixelHistogram::ConstructHorizontalCountHist( Pix * pix)",12, 62, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::ColPartitionSet( ColPartition_LIST * partitions)",5, 66, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::ColPartitionSet( ColPartition * part)",5, 55, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::GoodColumnCount() const",9, 63, 2, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::GetColumnByIndex( int index)",8, 70, 2, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::ColumnContaining( int x , int y)",9, 64, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::RelinquishParts()",7, 42, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::ImproveColumnCandidate( WidthCallback * cb , PartSetVector * src_sets)",82, 79, 8, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::AddToColumnSetsIfUnique( PartSetVector * column_sets , WidthCallback * cb)",45, 74, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::CompatibleColumns( bool debug , ColPartitionSet * other , WidthCallback * cb)",79, 81, 8, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::UnmatchedWidth( ColPartitionSet * part_set)",22, 80, 6, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::LegalColumnCandidate()",21, 62, 2, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::Copy( bool good_only)",14, 74, 2, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::GetColumnBoxes( int y_bottom , int y_top , ColSegment_LIST * segments)",14, 66, 37, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::DisplayColumnEdges( int y_bottom , int y_top , ScrollView * win)",11, 81, 4, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::SpanningType( int resolution , int left , int right , int height , int y , int left_margin , int right_margin , int * first_col , int * last_col , int * first_spanned_col)",90, 80, 2, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::ChangeWorkColumns( const ICOORD & bleft , const ICOORD & tright , int resolution , ColPartition_LIST * used_parts , WorkingPartSet_LIST * working_set_list)",70, 81, 40, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::AccumulateColumnWidthsAndGaps( int * total_width , int * width_samples , int * total_gap , int * gap_samples)",19, 72, 52, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::Print()",12, 74, 10, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::AddPartition( ColPartition * new_part , ColPartition_IT * it)",9, 59, 0, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::ComputeCoverage()",12, 62, 2, 0
repos/cpp/tesseract/src/textord/colpartitionset.cpp,"tesseract::ColPartitionSet::AddPartitionCoverageAndBox( const ColPartition & part)",14, 77, 0, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"MakeRowFromBlobs( float line_size , BLOBNBOX_IT * blob_it , TO_ROW_IT * row_it)",23, 73, 30, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"MakeRowFromSubBlobs( TO_BLOCK * block , C_BLOB * blob , TO_ROW_IT * row_it)",20, 71, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"make_single_row( ICOORD page_tr , bool allow_sub_blobs , TO_BLOCK * block , TO_BLOCK_LIST * blocks)",31, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"make_rows( ICOORD page_tr , TO_BLOCK_LIST * port_blocks)",20, 80, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"make_initial_textrows( ICOORD page_tr , TO_BLOCK * block , FCOORD rotation , bool testing_on)",33, 97, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"fit_lms_line( TO_ROW * row)",12, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_page_skew( TO_BLOCK_LIST * blocks , float & page_m , float & page_err)",89, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"dot_of_i( BLOBNBOX * dot , BLOBNBOX * i , TO_ROW * row)",82, 75, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"vigorous_noise_removal( TO_BLOCK * block)",45, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"cleanup_rows_making( ICOORD page_tr , TO_BLOCK * block , float gradient , FCOORD rotation , int32_t block_edge , bool testing_on)",47, 75, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"delete_non_dropout_rows( TO_BLOCK * block , float gradient , FCOORD rotation , int32_t block_edge , bool testing_on)",75, 86, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"find_best_dropout_row( TO_ROW * row , int32_t distance , float dist_limit , int32_t line_index , TO_ROW_IT * row_it , bool testing_on)",72, 67, 8, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"deskew_block_coords( TO_BLOCK * block , float gradient)",28, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_line_occupation( TO_BLOCK * block , float gradient , int32_t min_y , int32_t max_y , int32_t * occupation , int32_t * deltas)",46, 78, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_occupation_threshold( int32_t low_window , int32_t high_window , int32_t line_count , int32_t * occupation , int32_t * thresholds)",74, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_dropout_distances( int32_t * occupation , int32_t * thresholds , int32_t line_count)",38, 73, 31, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"expand_rows( ICOORD page_tr , TO_BLOCK * block , float gradient , FCOORD rotation , int32_t block_edge , bool testing_on)",151, 83, 14, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"adjust_row_limits( TO_BLOCK * block)",29, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_row_stats( TO_BLOCK * block , bool testing_on)",79, 70, 6, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"tesseract::Textord::compute_block_xheight( TO_BLOCK * block , float gradient)",103, 80, 31, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"tesseract::Textord::compute_row_xheight( TO_ROW * row , const FCOORD & rotation , float gradient , int block_line_size)",31, 79, 8, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"fill_heights( TO_ROW * row , float gradient , int min_height , int max_height , STATS * heights , STATS * floating_heights)",44, 77, 18, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_xheight_from_modes( STATS * heights , STATS * floating_heights , bool cap_only , int min_height , int max_height , float * xheight , float * ascrise)",83, 76, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_row_descdrop( TO_ROW * row , float gradient , int xheight_blob_count , STATS * asc_heights)",52, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"compute_height_modes( STATS * heights , int32_t min_height , int32_t max_height , int32_t * modes , int32_t maxmodes)",54, 70, 10, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"correct_row_xheight( TO_ROW * row , float xheight , float ascrise , float descdrop)",66, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"CountOverlaps( const TBOX & box , int min_height , BLOBNBOX_LIST * blobs)",13, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"separate_underlines( TO_BLOCK * block , float gradient , FCOORD rotation , bool testing_on)",66, 76, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"pre_associate_blobs( ICOORD page_tr , TO_BLOCK * block , FCOORD rotation , bool testing_on)",79, 95, 6, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"fit_parallel_rows( TO_BLOCK * block , float gradient , FCOORD rotation , int32_t block_edge , bool testing_on)",33, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"fit_parallel_lms( float gradient , TO_ROW * row)",22, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"tesseract::Textord::make_spline_rows( TO_BLOCK * block , float gradient , bool testing_on)",42, 79, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"make_baseline_spline( TO_ROW * row , TO_BLOCK * block)",22, 68, 4, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"segment_baseline( TO_ROW * row , TO_BLOCK * block , int32_t & segments , int32_t * xstarts)",89, 77, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"linear_spline_baseline( TO_ROW * row , TO_BLOCK * block , int32_t & segments , int32_t xstarts [ ])",83, 90, 6, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"assign_blobs_to_rows( TO_BLOCK * block , float * gradient , int pass , bool reject_misses , bool make_new_rows , bool drawing_skew)",193, 80, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"most_overlapping_row( TO_ROW_IT * row_it , TO_ROW * & best_row , float top , float bottom , float rowsize , bool testing_blob)",88, 81, 10, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"blob_x_order( const void * item1 , const void * item2)",15, 76, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"row_y_order( const void * item1 , const void * item2)",15, 71, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"row_spacing_order( const void * item1 , const void * item2)",15, 71, 2, 0
repos/cpp/tesseract/src/textord/makerow.cpp,"mark_repeated_chars( TO_ROW * row)",37, 71, 8, 0
repos/cpp/tesseract/src/textord/workingpartset.cpp,"tesseract::WorkingPartSet::AddPartition( ColPartition * part)",17, 70, 4, 0
repos/cpp/tesseract/src/textord/workingpartset.cpp,"tesseract::WorkingPartSet::ExtractCompletedBlocks( const ICOORD & bleft , const ICOORD & tright , int resolution , ColPartition_LIST * used_parts , BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",14, 75, 44, 0
repos/cpp/tesseract/src/textord/workingpartset.cpp,"tesseract::WorkingPartSet::InsertCompletedBlocks( BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",7, 71, 43, 0
repos/cpp/tesseract/src/textord/workingpartset.cpp,"tesseract::WorkingPartSet::MakeBlocks( const ICOORD & bleft , const ICOORD & tright , int resolution , ColPartition_LIST * used_parts)",60, 81, 32, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"sort_floats( const void * arg1 , const void * arg2)",11, 61, 0, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"compute_fixed_pitch( ICOORD page_tr , TO_BLOCK_LIST * port_blocks , float gradient , FCOORD rotation , bool testing_on)",60, 79, 4, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"fix_row_pitch( TO_ROW * bad_row , TO_BLOCK * bad_block , TO_BLOCK_LIST * blocks , int32_t row_target , int32_t block_target)",157, 84, 10, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"compute_block_pitch( TO_BLOCK * block , FCOORD rotation , int32_t block_index , bool testing_on)",35, 74, 4, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"compute_rows_pitch( TO_BLOCK * block , int32_t block_index , bool testing_on)",36, 77, 2, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"try_doc_fixed( ICOORD page_tr , TO_BLOCK_LIST * port_blocks , float gradient)",132, 113, 6, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"try_block_fixed( TO_BLOCK * block , int32_t block_index)",6, 58, 0, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"try_rows_fixed( TO_BLOCK * block , int32_t block_index , bool testing_on)",60, 77, 2, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"print_block_counts( TO_BLOCK * block , int32_t block_index)",29, 74, 2, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"count_block_votes( TO_BLOCK * block , int32_t & def_fixed , int32_t & def_prop , int32_t & maybe_fixed , int32_t & maybe_prop , int32_t & corr_fixed , int32_t & corr_prop , int32_t & dunno)",39, 77, 2, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"row_pitch_stats( TO_ROW * row , int32_t maxwidth , bool testing_on)",123, 81, 6, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"find_row_pitch( TO_ROW * row , int32_t maxwidth , int32_t dm_gap , TO_BLOCK * block , int32_t block_index , int32_t row_index , bool testing_on)",130, 95, 8, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"fixed_pitch_row( TO_ROW * row , BLOCK * block , int32_t block_index)",73, 76, 4, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"count_pitch_stats( TO_ROW * row , STATS * gap_stats , STATS * pitch_stats , float initial_pitch , float min_space , bool ignore_outsize , bool split_outsize , int32_t dm_gap)",79, 129, 10, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"tune_row_pitch( TO_ROW * row , STATS * projection , int16_t projection_left , int16_t projection_right , float space_size , float & initial_pitch , float & best_sp_sd , int16_t & best_mid_cuts , ICOORDELT_LIST * best_cells , bool testing_on)",103, 77, 4, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"tune_row_pitch2( TO_ROW * row , STATS * projection , int16_t projection_left , int16_t projection_right , float space_size , float & initial_pitch , float & best_sp_sd , int16_t & best_mid_cuts , ICOORDELT_LIST * best_cells , bool testing_on)",103, 97, 2, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"compute_pitch_sd( TO_ROW * row , STATS * projection , int16_t projection_left , int16_t projection_right , float space_size , float initial_pitch , float & sp_sd , int16_t & mid_cuts , ICOORDELT_LIST * row_cells , bool testing_on , int16_t start , int16_t end)",154, 80, 8, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"compute_pitch_sd2( TO_ROW * row , STATS * projection , int16_t projection_left , int16_t projection_right , float initial_pitch , int16_t & occupation , int16_t & mid_cuts , ICOORDELT_LIST * row_cells , bool testing_on , int16_t start , int16_t end)",83, 80, 2, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"print_pitch_sd( TO_ROW * row , STATS * projection , int16_t projection_left , int16_t projection_right , float space_size , float initial_pitch)",121, 89, 4, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"find_repeated_chars( TO_BLOCK * block , bool testing_on)",57, 80, 4, 0
repos/cpp/tesseract/src/textord/topitch.cpp,"plot_fp_word( TO_BLOCK * block , float pitch , float nonspace)",16, 77, 2, 0
repos/cpp/tesseract/src/textord/underlin.cpp,"restore_underlined_blobs( TO_BLOCK * block)",69, 80, 10, 0
repos/cpp/tesseract/src/textord/underlin.cpp,"most_overlapping_row( TO_ROW_LIST * rows , BLOBNBOX * blob)",49, 76, 2, 0
repos/cpp/tesseract/src/textord/underlin.cpp,"find_underlined_blobs( BLOBNBOX * u_line , QSPLINE * baseline , float xheight , float baseline_offset , ICOORDELT_LIST * chop_cells)",36, 78, 27, 0
repos/cpp/tesseract/src/textord/underlin.cpp,"vertical_cunderline_projection( C_OUTLINE * outline , QSPLINE * baseline , float xheight , float baseline_offset , STATS * lower_proj , STATS * middle_proj , STATS * upper_proj)",66, 83, 36, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::TabFind( int gridsize , const ICOORD & bleft , const ICOORD & tright , TabVector_LIST * vlines , int vertical_x , int vertical_y , int resolution)",12, 74, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::~TabFind()",3, 22, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::InsertBlobsToGrid( bool h_spread , bool v_spread , BLOBNBOX_LIST * blobs , BBGrid<BLOBNBOX,BLOBNBOX_CLIST,BLOBNBOX_C_IT> * grid)",21, 77, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::InsertBlob( bool h_spread , bool v_spread , BLOBNBOX * blob , BBGrid<BLOBNBOX,BLOBNBOX_CLIST,BLOBNBOX_C_IT> * grid)",13, 71, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::SetBlockRuleEdges( TO_BLOCK * block)",6, 51, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::SetBlobRuleEdges( BLOBNBOX_LIST * blobs)",11, 77, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::GutterWidth( int bottom_y , int top_y , const TabVector & v , bool ignore_unmergeables , int max_gutter_width , int * required_shift)",45, 87, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::GutterWidthAndNeighbourGap( int tab_x , int mean_height , int max_gutter , bool left , BLOBNBOX * bbox , int * gutter_width , int * neighbour_gap)",68, 80, 39, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::RightEdgeForBox( const TBOX & box , bool crossing , bool extended)",4, 79, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::LeftEdgeForBox( const TBOX & box , bool crossing , bool extended)",4, 78, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::RightTabForBox( const TBOX & box , bool crossing , bool extended)",42, 78, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::LeftTabForBox( const TBOX & box , bool crossing , bool extended)",43, 78, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::CommonWidth( int width)",10, 62, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::DifferentSizes( int size1 , int size2)",3, 53, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::VeryDifferentSizes( int size1 , int size2)",3, 57, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindTabVectors( TabVector_LIST * hlines , BLOBNBOX_LIST * image_blobs , TO_BLOCK * block , int min_gutter_width , double tabfind_aligned_gap_fraction , ColPartitionGrid * part_grid , FCOORD * deskew , FCOORD * reskew)",27, 77, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::DontFindTabVectors( BLOBNBOX_LIST * image_blobs , TO_BLOCK * block , FCOORD * deskew , FCOORD * reskew)",9, 78, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::TidyBlobs( TO_BLOCK * block)",23, 80, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::SetupTabSearch( int x , int y , int * min_key , int * max_key)",6, 75, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::DisplayTabVectors( ScrollView * tab_win)",12, 62, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindInitialTabVectors( BLOBNBOX_LIST * image_blobs , int min_gutter_width , double tabfind_aligned_gap_fraction , TO_BLOCK * block)",24, 80, 43, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::DisplayBoxVector( const GenericVector<BLOBNBOX*> & boxes , ScrollView * win)",16, 68, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindTabBoxes( int min_gutter_width , double tabfind_aligned_gap_fraction)",35, 80, 4, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::TestBoxForTabs( BLOBNBOX * bbox , int min_gutter_width , double tabfind_aligned_gap_fraction)",174, 80, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ConfirmRaggedLeft( BLOBNBOX * bbox , int min_gutter)",6, 66, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ConfirmRaggedRight( BLOBNBOX * bbox , int min_gutter)",6, 67, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::NothingYOverlapsInBox( const TBOX & search_box , const TBOX & target_box)",12, 62, 36, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindAllTabVectors( int min_gutter_width)",54, 80, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindTabVectors( int search_size_multiple , TabAlignment alignment , int min_gutter_width , TabVector_LIST * vectors , int * vertical_x , int * vertical_y)",24, 80, 6, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindTabVector( int search_size_multiple , int min_gutter_width , TabAlignment alignment , BLOBNBOX * bbox , int * vertical_x , int * vertical_y)",13, 86, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::SetVerticalSkewAndParallelize( int vertical_x , int vertical_y)",14, 78, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::SortVectors()",4, 46, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::EvaluateTabs()",17, 80, 6, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ComputeColumnWidths( ScrollView * tab_win , ColPartitionGrid * part_grid)",22, 73, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ApplyPartitionsToColumnWidths( ColPartitionGrid * part_grid , STATS * col_widths)",46, 78, 4, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::MakeColumnWidths( int col_widths_size , STATS * col_widths)",33, 73, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::MarkVerticalText()",14, 57, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::FindMedianGutterWidth( TabVector_LIST * lines)",22, 73, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::AdjacentBlob( const BLOBNBOX * bbox , bool look_left , bool ignore_images , double min_overlap_fraction , int gap_limit , int top_y , int bottom_y)",75, 80, 10, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::AddPartnerVector( BLOBNBOX * left_blob , BLOBNBOX * right_blob , TabVector * left , TabVector * right)",47, 78, 6, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::CleanupTabs()",16, 80, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::RotateBlobList( const FCOORD & rotation , BLOBNBOX_LIST * blobs)",6, 77, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::Deskew( TabVector_LIST * hlines , BLOBNBOX_LIST * image_blobs , TO_BLOCK * block , FCOORD * deskew , FCOORD * reskew)",31, 73, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ResetForVerticalText( const FCOORD & rotate , const FCOORD & rerotate , TabVector_LIST * horizontal_lines , int * min_gutter_width)",42, 81, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::Reset()",8, 71, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ReflectInYAxis()",22, 74, 2, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ComputeDeskewVectors( FCOORD * deskew , FCOORD * reskew)",8, 69, 0, 0
repos/cpp/tesseract/src/textord/tabfind.cpp,"tesseract::TabFind::ApplyTabConstraints()",38, 79, 4, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::StructuredTable()",12, 36, 6, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::Init()",2, 31, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::set_text_grid( ColPartitionGrid * text_grid)",3, 67, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::set_line_grid( ColPartitionGrid * line_grid)",3, 67, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::set_max_text_height( int height)",3, 56, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::is_lined() const",3, 41, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::row_count() const",3, 59, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::column_count() const",3, 59, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::cell_count() const",3, 42, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::set_bounding_box( const TBOX & box)",3, 58, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::bounding_box() const",3, 52, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::median_cell_height()",3, 44, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::median_cell_width()",3, 43, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::row_height( int row) const",4, 49, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::column_width( int column) const",4, 55, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::space_above() const",3, 43, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::space_below() const",3, 43, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindLinedStructure()",45, 73, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindWhitespacedStructure()",18, 60, 4, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::DoesPartitionFit( const ColPartition & part) const",10, 73, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountFilledCells()",3, 70, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountFilledCellsInRow( int row)",3, 60, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountFilledCellsInColumn( int column)",3, 63, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountFilledCells( int row_start , int row_end , int column_start , int column_end)",19, 80, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::VerifyRowFilled( int row)",8, 64, 4, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CalculateCellFilledPercentage( int row , int column)",22, 77, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::Display( ScrollView * window , ScrollView :: Color color)",17, 77, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::ClearStructure()",11, 41, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::VerifyLinedTableCells()",13, 63, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::VerifyWhitespacedTable()",4, 71, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindWhitespacedColumns()",39, 78, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindWhitespacedRows()",64, 88, 4, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CalculateMargins()",8, 43, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::UpdateMargins( ColPartitionGrid * grid)",10, 72, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindVerticalMargin( ColPartitionGrid * grid , int border , bool decrease) const",17, 76, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindHorizontalMargin( ColPartitionGrid * grid , int border , bool decrease) const",16, 80, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CalculateStats()",14, 71, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::AbsorbNearbyLines()",38, 75, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::FindCellSplitLocations( const GenericVector<int> & min_list , const GenericVector<int> & max_list , int max_merged , GenericVector<int> * locations)",43, 81, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountVerticalIntersections( int x)",21, 57, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountHorizontalIntersections( int y)",22, 59, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::StructuredTable::CountPartitions( const TBOX & box)",12, 57, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::TableRecognizer()",7, 36, 6, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::~TableRecognizer()",2, 38, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::Init()",2, 31, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::set_text_grid( ColPartitionGrid * text_grid)",3, 67, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::set_line_grid( ColPartitionGrid * line_grid)",3, 67, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::set_min_height( int height)",3, 51, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::set_min_width( int width)",3, 49, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::set_max_text_height( int height)",3, 56, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::RecognizeTable( const TBOX & guess)",22, 70, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::RecognizeLinedTable( const TBOX & guess_box , StructuredTable * table)",10, 68, 42, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::HasSignificantLines( const TBOX & guess)",18, 63, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::FindLinesBoundingBox( TBOX * bounding_box)",21, 65, 0, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::FindLinesBoundingBoxIteration( TBOX * bounding_box)",21, 79, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::RecognizeWhitespacedTable( const TBOX & guess_box , StructuredTable * table)",137, 80, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::NextHorizontalSplit( int left , int right , int y , bool top_to_bottom)",29, 74, 2, 0
repos/cpp/tesseract/src/textord/tablerecog.cpp,"tesseract::TableRecognizer::IsWeakTableRow( StructuredTable * table , int row)",12, 72, 0, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::SetBlobStrokeWidth( Pix * pix , BLOBNBOX * blob)",92, 80, 6, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::assign_blobs_to_blocks2( Pix * pix , BLOCK_LIST * blocks , TO_BLOCK_LIST * port_blocks)",42, 81, 4, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::find_components( Pix * pix , BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",24, 87, 4, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::filter_blobs( ICOORD page_tr , TO_BLOCK_LIST * blocks , bool testing_on)",44, 71, 4, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::filter_noise_blobs( BLOBNBOX_LIST * src_list , BLOBNBOX_LIST * noise_list , BLOBNBOX_LIST * small_list , BLOBNBOX_LIST * large_list)",68, 77, 2, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::cleanup_nontext_block( BLOCK * block)",37, 78, 6, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::cleanup_blocks( bool clean_noise , BLOCK_LIST * blocks)",49, 88, 4, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::clean_noise_from_row( ROW * row)",94, 87, 15, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::clean_noise_from_words( ROW * row)",109, 81, 6, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::clean_small_noise_from_words( ROW * row)",31, 79, 4, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::BlockGroup::BlockGroup()",1, 73, 2, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::BlockGroup::BlockGroup( BLOCK * block)",7, 51, 6, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::TransferDiacriticsToBlockGroups( BLOBNBOX_LIST * diacritic_blobs , BLOCK_LIST * blocks)",62, 88, 4, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tesseract::Textord::TransferDiacriticsToWords( BLOBNBOX_LIST * diacritic_blobs , const FCOORD & rotation , WordGrid * word_grid)",74, 80, 2, 0
repos/cpp/tesseract/src/textord/tordmain.cpp,"tweak_row_baseline( ROW * row , double blshift_maxshift , double blshift_xfraction)",100, 80, 2, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlobParams::AlignedBlobParams( int vertical_x , int vertical_y , int height , int v_gap_multiple , int min_gutter_width , int resolution , TabAlignment align0)",37, 81, 6, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlobParams::AlignedBlobParams( int vertical_x , int vertical_y , int width)",18, 69, 0, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlobParams::set_vertical( int vertical_x , int vertical_y)",7, 71, 0, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlob::AlignedBlob( int gridsize , const ICOORD & bleft , const ICOORD & tright)",4, 68, 25, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlob::WithinTestRegion( int detail_level , int x , int y)",6, 74, 2, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlob::DisplayTabs( const char * window_name , ScrollView * tab_win)",44, 69, 2, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AtLeast2LineCrossings( BLOBNBOX_CLIST * blobs)",8, 62, 2, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlob::FindVerticalAlignment( AlignedBlobParams align_params , BLOBNBOX * bbox , int * vertical_x , int * vertical_y)",87, 81, 2, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlob::AlignTabs( const AlignedBlobParams & params , bool top_to_bottom , BLOBNBOX * bbox , BLOBNBOX_CLIST * good_points , int * end_y)",43, 81, 4, 0
repos/cpp/tesseract/src/textord/alignedblob.cpp,"tesseract::AlignedBlob::FindAlignedBlob( const AlignedBlobParams & p , bool top_to_bottom , BLOBNBOX * bbox , int x_start , int * end_y)",164, 80, 4, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"block_edges( Pix * t_pix , PDBLK * block , C_OUTLINE_IT * outline_it)",42, 85, 6, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"make_margins( PDBLK * block , BLOCK_LINE_IT * line_it , uint8_t * pixels , uint8_t margin , int16_t left , int16_t right , int16_t y)",47, 78, 4, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"line_edges( int16_t x , int16_t y , int16_t xext , uint8_t uppercolour , uint8_t * bwpos , CRACKEDGE ** prevline , CRACKEDGE ** free_cracks , C_OUTLINE_IT * outline_it)",76, 77, 6, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"h_edge( int sign , CRACKEDGE * join , CrackPos * pos)",43, 69, 18, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"v_edge( int sign , CRACKEDGE * join , CrackPos * pos)",43, 66, 0, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"join_edges( CRACKEDGE * edge1 , CRACKEDGE * edge2 , CRACKEDGE ** free_cracks , C_OUTLINE_IT * outline_it)",25, 59, 33, 0
repos/cpp/tesseract/src/textord/scanedg.cpp,"free_crackedges( CRACKEDGE * start)",9, 62, 2, 0
repos/cpp/tesseract/src/textord/equationdetectbase.cpp,"tesseract::EquationDetectBase::RenderSpecialText( Pix * pix , BLOBNBOX * blob)",32, 78, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ColPartitionGrid( int gridsize , const ICOORD & bleft , const ICOORD & tright)",5, 81, 64, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::HandleClick( int x , int y)",18, 68, 9, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::Merges( TessResultCallback2<bool,ColPartition*,TBOX*> * box_cb , TessResultCallback2<bool,const ColPartition*,const ColPartition*> * confirm_cb)",15, 61, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::MergePart( TessResultCallback2<bool,ColPartition*,TBOX*> * box_cb , TessResultCallback2<bool,const ColPartition*,const ColPartition*> * confirm_cb , ColPartition * part)",55, 81, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::OKMergeCandidate( const ColPartition * part , const ColPartition * candidate , bool debug)",42, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::IncreaseInOverlap( const ColPartition * merge1 , const ColPartition * merge2 , int ok_overlap , ColPartition_CLIST * parts)",37, 79, 8, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::TestCompatibleCandidates( const ColPartition & part , bool debug , ColPartition_CLIST * candidates)",24, 75, 0, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ComputeTotalOverlap( ColPartitionGrid ** overlap_grid)",30, 79, 10, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindOverlappingPartitions( const TBOX & box , const ColPartition * not_this , ColPartition_CLIST * parts)",11, 79, 49, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::BestMergeCandidate( const ColPartition * part , ColPartition_CLIST * candidates , bool debug , TessResultCallback2<bool,const ColPartition*,const ColPartition*> * confirm_cb , int * overlap_increase)",93, 85, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::RemoveBadBox( BLOBNBOX * box , ColPartition * part , ColPartition_LIST * part_list)",5, 60, 0, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::SplitOverlappingPartitions( ColPartition_LIST * big_parts)",100, 79, 6, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::GridSmoothNeighbours( BlobTextFlowType source_type , Pix * nontext_map , const TBOX & im_box , const FCOORD & rotation)",19, 80, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ReflectInYAxis()",21, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ExtractPartitionsAsBlocks( BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",58, 77, 49, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::Deskew( const FCOORD & deskew)",22, 71, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::SetTabStops( TabFind * tabgrid)",21, 76, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::MakeColPartSets( PartSetVector * part_sets)",33, 75, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::MakeSingleColumnSet( WidthCallback * cb)",40, 76, 0, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ClaimBoxes()",9, 57, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ReTypeBlobs( BLOBNBOX_LIST * im_blobs)",58, 81, 6, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::RecomputeBounds( int gridsize , const ICOORD & bleft , const ICOORD & tright , const ICOORD & vertical)",23, 74, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::GridFindMargins( ColPartitionSet ** best_columns)",18, 76, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::ListFindMargins( ColPartitionSet ** best_columns , ColPartition_LIST * parts)",16, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::DeleteParts()",12, 67, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::DeleteUnknownParts( TO_BLOCK * block)",17, 72, 6, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::DeleteNonLeaderParts()",16, 57, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindFigureCaptions()",120, 81, 10, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindPartitionPartners()",14, 57, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindPartitionPartners( bool upper , ColPartition * part)",42, 79, 0, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindVPartitionPartners( bool to_the_left , ColPartition * part)",42, 78, 4, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::RefinePartitionPartners( bool get_desperate)",16, 72, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindMergeCandidates( const ColPartition * part , const TBOX & search_box , bool debug , ColPartition_CLIST * candidates)",72, 79, 43, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::SmoothRegionType( Pix * nontext_map , const TBOX & im_box , const FCOORD & rerotation , bool debug , ColPartition * part)",65, 75, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ComputeSearchBoxAndScaling( BlobNeighbourDir direction , const TBOX & part_box , int min_padding , TBOX * search_box , ICOORD * dist_scaling)",35, 79, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::SmoothInOneDirection( BlobNeighbourDir direction , Pix * nontext_map , const TBOX & im_box , const FCOORD & rerotation , bool debug , const ColPartition & part , int * best_distance)",75, 79, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::AccumulatePartDistances( const ColPartition & base_part , const ICOORD & dist_scaling , const TBOX & search_box , Pix * nontext_map , const TBOX & im_box , const FCOORD & rerotation , bool debug , GenericVector<int> * dists)",71, 78, 0, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindPartitionMargins( ColPartitionSet * columns , ColPartition * part)",27, 77, 2, 0
repos/cpp/tesseract/src/textord/colpartitiongrid.cpp,"tesseract::ColPartitionGrid::FindMargin( int x , bool right_to_left , int x_limit , int y_bottom , int y_top , const ColPartition * not_this)",33, 119, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::TextlineProjection( int resolution)",6, 69, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::~TextlineProjection()",3, 44, 0, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::ConstructProjection( TO_BLOCK * input_block , const FCOORD & rotation , Pix * nontext_map)",18, 77, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::PlotGradedBlobs( BLOBNBOX_LIST * blobs , ScrollView * win)",17, 70, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::MoveNonTextlineBlobs( BLOBNBOX_LIST * blobs , BLOBNBOX_LIST * small_blobs) const",15, 79, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::DisplayProjection() const",29, 79, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::DistanceOfBoxFromPartition( const TBOX & box , const ColPartition & part , const DENORM * denorm , bool debug) const",18, 77, 51, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::DistanceOfBoxFromBox( const TBOX & from_box , const TBOX & to_box , bool horizontal_textline , const DENORM * denorm , bool debug) const",60, 80, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::VerticalDistance( bool debug , int x , int y1 , int y2) const",30, 65, 41, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::HorizontalDistance( bool debug , int x1 , int x2 , int y) const",28, 71, 0, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::BoxOutOfHTextline( const TBOX & box , const DENORM * denorm , bool debug) const",15, 77, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::EvaluateColPartition( const ColPartition & part , const DENORM * denorm , bool debug) const",25, 73, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::EvaluateBox( const TBOX & box , const DENORM * denorm , bool debug) const",4, 86, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::EvaluateBoxInternal( const TBOX & box , const DENORM * denorm , bool debug , int * hgrad1 , int * hgrad2 , int * vgrad1 , int * vgrad2) const",34, 81, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::BestMeanGradientInRow( const DENORM * denorm , int16_t min_x , int16_t max_x , int16_t y , bool best_is_max) const",20, 87, 46, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::BestMeanGradientInColumn( const DENORM * denorm , int16_t x , int16_t min_y , int16_t max_y , bool best_is_max) const",20, 82, 0, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::MeanPixelsInLineSegment( const DENORM * denorm , int offset , TPOINT start_pt , TPOINT end_pt) const",52, 76, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::BoundsWithinBox( Pix * pix , const TBOX & box)",19, 64, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TruncateBoxToMissNonText( int x_middle , int y_middle , bool split_on_x , Pix * nontext_map , TBOX * bbox)",24, 72, 37, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::IncrementRectangle8Bit( const TBOX & box)",16, 67, 0, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::ProjectBlobs( BLOBNBOX_LIST * blobs , const FCOORD & rotation , const TBOX & nontext_map_box , Pix * nontext_map)",26, 77, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::PadBlobBox( BLOBNBOX * blob , TBOX * bbox)",58, 80, 4, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::TransformToPixCoords( const DENORM * denorm , TPOINT * pt) const",9, 68, 0, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::TruncateToImageBounds( TPOINT * pt) const",4, 67, 0, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::ImageXToProjectionX( int x) const",4, 78, 2, 0
repos/cpp/tesseract/src/textord/textlineprojection.cpp,"tesseract::TextlineProjection::ImageYToProjectionY( int y) const",4, 79, 2, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"tesseract::Textord::make_old_baselines( TO_BLOCK * block , bool testing_on , float gradient)",28, 74, 33, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"tesseract::Textord::correlate_lines( TO_BLOCK * block , float gradient)",32, 81, 6, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"tesseract::Textord::correlate_neighbours( TO_BLOCK * block , TO_ROW ** rows , int rowcount)",47, 75, 0, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"tesseract::Textord::correlate_with_stats( TO_ROW ** rows , int rowcount , TO_BLOCK * block)",101, 81, 4, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"tesseract::Textord::find_textlines( TO_BLOCK * block , TO_ROW * row , int degree , QSPLINE * spline)",91, 80, 4, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"get_blob_coords( TO_ROW * row , int32_t lineheight , TBOX * blobcoords , bool & holed_line , int & outcount)",59, 66, 6, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"make_first_baseline( TBOX blobcoords [ ] , int blobcount , int xcoords [ ] , int ycoords [ ] , QSPLINE * spline , QSPLINE * baseline , float jumplimit)",132, 82, 8, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"make_holed_baseline( TBOX blobcoords [ ] , int blobcount , QSPLINE * spline , QSPLINE * baseline , float gradient)",46, 76, 4, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"partition_line( TBOX blobcoords [ ] , int blobcount , int * numparts , char partids [ ] , int partsizes [ ] , QSPLINE * spline , float jumplimit , float ydiffs [ ])",71, 72, 2, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"merge_oldbl_parts( TBOX blobcoords [ ] , int blobcount , char partids [ ] , int partsizes [ ] , int biggestpart , float jumplimit)",102, 101, 6, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"get_ydiffs( TBOX blobcoords [ ] , int blobcount , QSPLINE * spline , float ydiffs [ ])",42, 85, 4, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"choose_partition( float diff , float partdiffs [ ] , int lastpart , float jumplimit , float * drift , float * lastdelta , int * partcount)",63, 74, 4, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"partition_coords( TBOX blobcoords [ ] , int blobcount , char partids [ ] , int bestpart , int xcoords [ ] , int ycoords [ ])",21, 99, 6, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"segment_spline( TBOX blobcoords [ ] , int blobcount , int xcoords [ ] , int ycoords [ ] , int degree , int pointcount , int xstarts [ ])",115, 128, 6, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"split_stepped_spline( QSPLINE * baseline , float jumplimit , int * xcoords , int * xstarts , int & segments)",98, 86, 4, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"insert_spline_point( int xstarts [ ] , int segment , int coord1 , int coord2 , int & segments)",14, 53, 0, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"find_lesser_parts( TO_ROW * row , TBOX blobcoords [ ] , int blobcount , char partids [ ] , int partsizes [ ] , int partcount , int bestpart)",70, 75, 2, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"old_first_xheight( TO_ROW * row , TBOX blobcoords [ ] , int initialheight , int blobcount , QSPLINE * baseline , float jumplimit)",74, 83, 6, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"make_first_xheight( TO_ROW * row , TBOX blobcoords [ ] , int lineheight , int init_lineheight , int blobcount , QSPLINE * baseline , float jumplimit)",73, 79, 2, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"find_top_modes( STATS * stats , int statnum , int modelist [ ] , int modenum)",32, 65, 8, 0
repos/cpp/tesseract/src/textord/oldbasel.cpp,"pick_x_height( TO_ROW * row , int modelist [ ] , int lefts [ ] , int rights [ ] , STATS * heightstat , int mode_threshold)",107, 81, 28, 0
repos/cpp/tesseract/src/textord/blkocc.cpp,"test_underline( bool testing_on , C_BLOB * blob , int16_t baseline , int16_t xheight)",61, 88, 9, 0
repos/cpp/tesseract/src/textord/blkocc.cpp,"horizontal_cblob_projection( C_BLOB * blob , STATS * stats)",11, 77, 2, 0
repos/cpp/tesseract/src/textord/blkocc.cpp,"horizontal_coutline_projection( C_OUTLINE * outline , STATS * stats)",27, 83, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabConstraint::CreateConstraint( TabVector * vector , bool is_top)",10, 71, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabConstraint::CompatibleConstraints( TabConstraint_LIST * list1 , TabConstraint_LIST * list2)",14, 71, 42, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabConstraint::MergeConstraints( TabConstraint_LIST * list1 , TabConstraint_LIST * list2)",21, 75, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabConstraint::ApplyConstraints( TabConstraint_LIST * constraints)",19, 72, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabConstraint::TabConstraint( TabVector * vector , bool is_top)",10, 61, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabConstraint::GetConstraints( TabConstraint_LIST * constraints , int * y_min , int * y_max)",13, 80, 6, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::FitVector( TabAlignment alignment , ICOORD vertical , int extended_start_y , int extended_end_y , BLOBNBOX_CLIST * good_points , int * vertical_x , int * vertical_y)",18, 75, 32, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::TabVector( const TabVector & src , TabAlignment alignment , const ICOORD & vertical_skew , BLOBNBOX * blob)",23, 81, 4, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::ShallowCopy() const",10, 59, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::ExtendToBox( BLOBNBOX * new_blob)",22, 58, 4, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::SetYStart( int start_y)",4, 41, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::SetYEnd( int end_y)",4, 37, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Rotate( const FCOORD & rotation)",12, 72, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::SetupConstraints()",4, 48, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::SetupPartnerConstraints()",37, 79, 6, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::SetupPartnerConstraints( TabVector * partner)",10, 74, 43, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::ApplyConstraints()",6, 58, 4, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::MergeSimilarTabVectors( const ICOORD & vertical , TabVector_LIST * vectors , BlobGrid * grid)",30, 71, 8, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::SimilarTo( const ICOORD & vertical , const TabVector & other , BlobGrid * grid) const",62, 119, 6, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::MergeWith( const ICOORD & vertical , TabVector * other)",29, 70, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::AddPartner( TabVector * partner)",11, 49, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::IsAPartner( const TabVector * other)",8, 62, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Print( const char * prefix)",8, 71, 6, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Debug( const char * prefix)",10, 63, 12, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Display( ScrollView * tab_win)",24, 75, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::FitAndEvaluateIfNeeded( const ICOORD & vertical , TabFind * finder)",7, 63, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Evaluate( const ICOORD & vertical , TabFind * finder)",195, 79, 2, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Fit( ICOORD vertical , bool force_parallel)",84, 80, 4, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::GetSinglePartner()",7, 43, 0, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::VerticalTextlinePartner()",57, 78, 39, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::TabVector( int extended_ymin , int extended_ymax , TabAlignment alignment , BLOBNBOX_CLIST * boxes)",9, 72, 4, 0
repos/cpp/tesseract/src/textord/tabvector.cpp,"tesseract::TabVector::Delete( TabVector * replacement)",30, 83, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::DeleteObject( T * object)",3, 53, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::TableFinder()",7, 38, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::~TableFinder()",9, 78, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::set_left_to_right_language( bool order)",3, 59, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::Init( int grid_size , const ICOORD & bottom_left , const ICOORD & top_right)",9, 67, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InsertCleanPartitions( ColPartitionGrid * grid , TO_BLOCK * block)",64, 77, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::LocateTables( ColPartitionGrid * grid , ColPartitionSet ** all_columns , WidthCallback * width_cb , const FCOORD & reskew)",115, 81, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::gridsize() const",3, 38, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::gridwidth() const",3, 39, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::gridheight() const",3, 40, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::bleft() const",3, 43, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::tright() const",3, 44, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InsertTextPartition( ColPartition * part)",8, 60, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InsertFragmentedTextPartition( ColPartition * part)",8, 70, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InsertLeaderPartition( ColPartition * part)",8, 62, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InsertRulingPartition( ColPartition * part)",3, 62, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InsertImagePartition( ColPartition * part)",6, 70, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::SplitAndInsertFragmentedTextPartition( ColPartition * part)",47, 80, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::AllowTextPartition( const ColPartition & part) const",10, 81, 9, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::AllowBlob( const BLOBNBOX & blob) const",11, 78, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::MakeWindow( int x , int y , const char * window_name)",3, 77, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GetColumnBlocks( ColPartitionSet ** all_columns , ColSegment_LIST * column_blocks)",13, 80, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GroupColumnBlocks( ColSegment_LIST * new_blocks , ColSegment_LIST * column_blocks)",28, 79, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::ConsecutiveBoxes( const TBOX & b1 , const TBOX & b2)",8, 69, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::InitializePartitions( ColPartitionSet ** all_columns)",5, 72, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::SetPartitionSpacings( ColPartitionGrid * grid , ColPartitionSet ** all_columns)",78, 85, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::SetVerticalSpacing( ColPartition * part)",41, 98, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::SetGlobalSpacings( ColPartitionGrid * grid)",46, 78, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::set_global_median_xheight( int xheight)",3, 59, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::set_global_median_blob_width( int width)",3, 60, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::set_global_median_ledding( int ledding)",3, 59, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::FindNeighbors()",18, 69, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::MarkTablePartitions()",30, 79, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::MarkPartitionsUsingLocalInformation()",27, 79, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::HasWideOrNoInterWordGap( ColPartition * part) const",80, 79, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::HasLeaderAdjacent( const ColPartition & part)",38, 81, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::FilterFalseAlarms()",5, 54, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::FilterParagraphEndings()",79, 81, 8, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::FilterHeaderAndFooter()",28, 77, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::SmoothTablePartitionRuns()",33, 74, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::SetColumnsType( ColSegment_LIST * column_blocks)",31, 80, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::MoveColSegmentsToGrid( ColSegment_LIST * segments , ColSegmentGrid * col_seg_grid)",8, 73, 41, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GridMergeColumnBlocks()",66, 89, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GetTableColumns( ColSegment_LIST * table_columns)",47, 77, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GetTableRegions( ColSegment_LIST * table_columns , ColSegment_LIST * table_regions)",56, 81, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GridMergeTableRegions()",55, 76, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::BelongToOneTable( const TBOX & box1 , const TBOX & box2)",22, 80, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::AdjustTableBoundaries()",33, 78, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GrowTableBox( const TBOX & table_box , TBOX * result_box)",19, 75, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GrowTableToIncludePartials( const TBOX & table_box , const TBOX & search_range , TBOX * result_box)",25, 75, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GrowTableToIncludeLines( const TBOX & table_box , const TBOX & search_range , TBOX * result_box)",26, 68, 42, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::HLineBelongsToTable( const ColPartition & part , const TBOX & table_box)",61, 81, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::IncludeLeftOutColumnHeaders( TBOX * table_box)",34, 78, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::DeleteSingleColumnTables()",62, 75, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::GapInXProjection( int * xprojection , int length)",38, 77, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::RecognizeTables()",52, 78, 4, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::DisplayColSegments( ScrollView * win , ColSegment_LIST * segments , ScrollView :: Color color)",19, 64, 37, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::DisplayColSegmentGrid( ScrollView * win , ColSegmentGrid * grid , ScrollView :: Color color)",21, 79, 0, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::DisplayColPartitions( ScrollView * win , ColPartitionGrid * grid , ScrollView :: Color default_color , ScrollView :: Color table_color)",28, 72, 39, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::DisplayColPartitions( ScrollView * win , ColPartitionGrid * grid , ScrollView :: Color default_color)",5, 74, 39, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::DisplayColPartitionConnections( ScrollView * win , ColPartitionGrid * grid , ScrollView :: Color color)",43, 66, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::TableFinder::MakeTableBlocks( ColPartitionGrid * grid , ColPartitionSet ** all_columns , WidthCallback * width_cb)",62, 80, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::ColSegment::ColSegment()",6, 27, 6, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::ColSegment::BoxColor() const",9, 51, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::ColSegment::InsertBox( const TBOX & other)",3, 55, 2, 0
repos/cpp/tesseract/src/textord/tablefind.cpp,"tesseract::ColSegment::set_type()",8, 66, 2, 0
repos/cpp/tesseract/src/classify/picofeat.cpp,"tesseract::Classify::ExtractPicoFeatures( TBLOB * Blob)",21, 59, 0, 0
repos/cpp/tesseract/src/classify/picofeat.cpp,"ConvertSegmentToPicoFeat( FPOINT * Start , FPOINT * End , FEATURE_SET FeatureSet)",37, 75, 2, 0
repos/cpp/tesseract/src/classify/picofeat.cpp,"ConvertToPicoFeatures2( MFOUTLINE Outline , FEATURE_SET FeatureSet)",27, 73, 0, 0
repos/cpp/tesseract/src/classify/picofeat.cpp,"NormalizePicoX( FEATURE_SET FeatureSet)",16, 54, 0, 0
repos/cpp/tesseract/src/classify/picofeat.cpp,"tesseract::Classify::ExtractIntCNFeatures( const TBLOB & blob , const INT_FX_RESULT_STRUCT & fx_info)",23, 71, 2, 0
repos/cpp/tesseract/src/classify/picofeat.cpp,"tesseract::Classify::ExtractIntGeoFeatures( const TBLOB & blob , const INT_FX_RESULT_STRUCT & fx_info)",19, 71, 2, 0
repos/cpp/tesseract/src/classify/outfeat.cpp,"tesseract::Classify::ExtractOutlineFeatures( TBLOB * Blob)",24, 62, 0, 0
repos/cpp/tesseract/src/classify/outfeat.cpp,"AddOutlineFeatureToSet( FPOINT * Start , FPOINT * End , FEATURE_SET FeatureSet)",13, 74, 2, 0
repos/cpp/tesseract/src/classify/outfeat.cpp,"ConvertToOutlineFeatures( MFOUTLINE Outline , FEATURE_SET FeatureSet)",27, 75, 0, 0
repos/cpp/tesseract/src/classify/outfeat.cpp,"NormalizeOutlineX( FEATURE_SET FeatureSet)",24, 57, 0, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::IntFeatureSpace()",3, 54, 2, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::Init( uint8_t xbuckets , uint8_t ybuckets , uint8_t thetabuckets)",5, 87, 0, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::Serialize( FILE * fp) const",9, 67, 2, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::PositionFromIndex( int index) const",5, 73, 0, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::IndexFeatures( const INT_FEATURE_STRUCT * features , int num_features , GenericVector<int> * mapped_features) const",7, 81, 36, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::IndexAndSortFeatures( const INT_FEATURE_STRUCT * features , int num_features , GenericVector<int> * sorted_features) const",8, 58, 4, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::XYToFeatureIndex( int x , int y) const",33, 81, 4, 0
repos/cpp/tesseract/src/classify/intfeaturespace.cpp,"tesseract::IntFeatureSpace::PositionFromBuckets( int x , int y , int theta) const",9, 75, 56, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"ConvertBlob( TBLOB * blob)",6, 58, 6, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"ConvertOutline( TESSLINE * outline)",32, 54, 2, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"ConvertOutlines( TESSLINE * outline , LIST mf_outlines , OUTLINETYPE outline_type)",13, 51, 6, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"FindDirectionChanges( MFOUTLINE Outline , float MinSlope , float MaxSlope)",23, 60, 0, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"FreeMFOutline( void * arg)",13, 82, 0, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"FreeOutlines( LIST Outlines)",3, 52, 0, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"MarkDirectionChanges( MFOUTLINE Outline)",18, 60, 0, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"NewEdgePoint()",3, 65, 2, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"NextExtremity( MFOUTLINE EdgePoint)",8, 53, 0, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"NormalizeOutline( MFOUTLINE Outline , float XOrigin)",14, 71, 4, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"tesseract::Classify::NormalizeOutlines( LIST Outlines , float * XScale , float * YScale)",19, 79, 6, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"ChangeDirection( MFOUTLINE Start , MFOUTLINE End , DIRECTION Direction)",9, 76, 0, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"CharNormalizeOutline( MFOUTLINE Outline , const DENORM & cn_denorm)",21, 73, 4, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"ComputeDirection( MFEDGEPT * Start , MFEDGEPT * Finish , float MinSlope , float MaxSlope)",61, 48, 2, 0
repos/cpp/tesseract/src/classify/mfoutline.cpp,"NextDirectionChange( MFOUTLINE EdgePoint)",15, 64, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::~TrainingSample()",4, 36, 0, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::Serialize( FILE * fp) const",21, 81, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::DeSerializeCreate( bool swap , FILE * fp)",6, 73, 0, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::DeSerialize( bool swap , FILE * fp)",35, 78, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::CopyFromFeatures( const INT_FX_RESULT_STRUCT & fx_info , const TBOX & bounding_box , const INT_FEATURE_STRUCT * features , int num_features)",26, 75, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::GetCNFeature() const",6, 55, 0, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::RandomizedCopy( int index) const",17, 77, 6, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::Copy() const",21, 81, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::ExtractCharDesc( int int_feature_type , int micro_type , int cn_type , int geo_type , CHAR_DESC_STRUCT * char_desc)",68, 80, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::IndexFeatures( const IntFeatureSpace & feature_space)",7, 75, 0, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::MapFeatures( const IntFeatureMap & feature_map)",8, 77, 2, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::RenderToPix( const UNICHARSET * unicharset) const",18, 72, 4, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::DisplayFeatures( ScrollView :: Color color , ScrollView * window) const",8, 65, 37, 0
repos/cpp/tesseract/src/classify/trainingsample.cpp,"tesseract::TrainingSample::GetSamplePix( int padding , Pix * page_pix) const",16, 70, 0, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::SampleIterator()",9, 34, 4, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::~SampleIterator()",3, 36, 0, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::Clear()",4, 32, 2, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::Init( const IndexMapBiDi * charset_map , const ShapeTable * shape_table , bool randomize , TrainingSampleSet * sample_set)",35, 76, 6, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::Begin()",11, 38, 2, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::AtEnd() const",3, 38, 2, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::GetSample() const",10, 69, 4, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::MutableSample() const",10, 72, 4, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::GlobalSampleIndex() const",10, 76, 4, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::GetCompactClassID() const",4, 79, 2, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::GetSparseClassID() const",3, 74, 2, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::Next()",38, 81, 6, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::CompactCharsetSize() const",4, 63, 2, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::SparseCharsetSize() const",6, 61, 6, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::MapSampleFeatures( const IntFeatureMap & feature_map)",6, 75, 0, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::UniformSamples()",10, 46, 4, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::NormalizeSamples()",21, 55, 6, 0
repos/cpp/tesseract/src/classify/sampleiterator.cpp,"tesseract::SampleIterator::GetShapeEntry() const",4, 63, 0, 0
repos/cpp/tesseract/src/classify/mfx.cpp,"BlobMicroFeatures( TBLOB * Blob , const DENORM & cn_denorm)",26, 77, 6, 0
repos/cpp/tesseract/src/classify/mfx.cpp,"ConvertToMicroFeatures( MFOUTLINE Outline , MICROFEATURES MicroFeatures)",25, 68, 37, 0
repos/cpp/tesseract/src/classify/mfx.cpp,"ExtractMicroFeature( MFOUTLINE Start , MFOUTLINE End)",17, 78, 2, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"InitFeatureDefs( FEATURE_DEFS_STRUCT * featuredefs)",6, 57, 0, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"FreeCharDescription( CHAR_DESC CharDesc)",7, 59, 0, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"NewCharDescription( const FEATURE_DEFS_STRUCT & FeatureDefs)",10, 71, 0, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"WriteCharDescription( const FEATURE_DEFS_STRUCT & FeatureDefs , CHAR_DESC CharDesc , STRING * str)",18, 67, 2, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"ValidCharDescription( const FEATURE_DEFS_STRUCT & FeatureDefs , CHAR_DESC CharDesc)",21, 75, 6, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"ReadCharDescription( const FEATURE_DEFS_STRUCT & FeatureDefs , FILE * File)",20, 70, 0, 0
repos/cpp/tesseract/src/classify/featdefs.cpp,"ShortNameToFeatureType( const FEATURE_DEFS_STRUCT & FeatureDefs , const char * ShortName)",8, 72, 0, 0
repos/cpp/tesseract/src/classify/fpoint.cpp,"DistanceBetween( FPOINT A , FPOINT B)",5, 55, 2, 0
repos/cpp/tesseract/src/classify/fpoint.cpp,"NormalizedAngleFrom( FPOINT * Point1 , FPOINT * Point2 , float FullScale)",11, 77, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::IntFeatureMap()",7, 51, 2, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::~IntFeatureMap()",3, 34, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::IndexFeature( const INT_FEATURE_STRUCT & f) const",3, 69, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::MapFeature( const INT_FEATURE_STRUCT & f) const",3, 67, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::MapIndexFeature( int index_feature) const",3, 62, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::InverseIndexFeature( int index_feature) const",3, 81, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::InverseMapFeature( int map_feature) const",4, 77, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::DeleteMapFeature( int map_feature)",4, 56, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::IsMapFeatureDeleted( int map_feature) const",3, 65, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::Init( const IntFeatureSpace & feature_space)",27, 65, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::OffsetFeature( int index_feature , int dir) const",10, 69, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::FindNZFeatureMapping( SampleIterator * it)",22, 63, 40, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::FinalizeMapping( SampleIterator * it)",11, 57, 0, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::DebugMapFeatures( const GenericVector<int> & map_features) const",7, 63, 4, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::Clear()",8, 51, 2, 0
repos/cpp/tesseract/src/classify/intfeaturemap.cpp,"tesseract::IntFeatureMap::ComputeOffsetFeature( int index_feature , int dir) const",42, 76, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::FontClassInfo::FontClassInfo()",3, 69, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::FontClassInfo::Serialize( FILE * fp) const",9, 81, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::FontClassInfo::DeSerialize( bool swap , FILE * fp)",14, 80, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::TrainingSampleSet( const FontInfoTable & font_table)",4, 70, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::~TrainingSampleSet()",3, 42, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::Serialize( FILE * fp) const",11, 69, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::DeSerialize( bool swap , FILE * fp)",17, 76, 4, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::LoadUnicharset( const char * filename)",12, 65, 4, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::AddSample( const char * unichar , TrainingSample * sample)",13, 80, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::AddSample( int unichar_id , TrainingSample * sample)",6, 76, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::NumClassSamples( int font_id , int class_id , bool randomize) const",16, 78, 6, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GetSample( int index) const",3, 70, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GetSample( int font_id , int class_id , int index) const",8, 80, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::MutableSample( int font_id , int class_id , int index)",8, 80, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::SampleToString( const TrainingSample & sample) const",6, 81, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GetCloudFeatures( int font_id , int class_id) const",6, 68, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GetCanonicalFeatures( int font_id , int class_id) const",6, 72, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::UnicharDistance( const UnicharAndFonts & uf1 , const UnicharAndFonts & uf2 , bool matched_fonts , const IntFeatureMap & feature_map)",62, 81, 18, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ClusterDistance( int font_id1 , int class_id1 , int font_id2 , int class_id2 , const IntFeatureMap & feature_map)",69, 79, 8, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ComputeClusterDistance( int font_id1 , int class_id1 , int font_id2 , int class_id2 , const IntFeatureMap & feature_map) const",11, 73, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::AddNearFeatures( const IntFeatureMap & feature_map , int f , int levels , GenericVector<int> * good_features)",20, 81, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ReliablySeparable( int font_id1 , int class_id1 , int font_id2 , int class_id2 , const IntFeatureMap & feature_map , bool thorough) const",36, 75, 41, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GlobalSampleIndex( int font_id , int class_id , int index) const",7, 68, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GetCanonicalSample( int font_id , int class_id) const",9, 70, 42, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::GetCanonicalDist( int font_id , int class_id) const",9, 77, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::IndexFeatures( const IntFeatureSpace & feature_space)",4, 78, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::KillSample( TrainingSample * sample)",3, 61, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::DeleteDeadSamples()",6, 77, 6, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::DeleteableSample( const TrainingSample * sample)",3, 73, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::OrganizeByFontAndClass()",34, 78, 14, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::SetupFontIdMap()",15, 49, 2, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ComputeCanonicalSamples( const IntFeatureMap & map , bool debug)",90, 80, 8, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ReplicateAndRandomizeSamples()",24, 79, 8, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ComputeCanonicalFeatures()",15, 69, 6, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::ComputeCloudFeatures( int feature_space_size)",20, 80, 8, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::AddAllFontsForClass( int class_id , Shape * shape) const",6, 80, 0, 0
repos/cpp/tesseract/src/classify/trainingsampleset.cpp,"tesseract::TrainingSampleSet::DisplaySamplesWithFeature( int f_index , const Shape & shape , const IntFeatureSpace & space , ScrollView :: Color color , ScrollView * window) const",19, 80, 50, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"ADAPT_RESULTS::Initialize()",5, 29, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"ADAPT_RESULTS::ComputeBest()",12, 47, 8, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"MarginalMatch( float confidence , float matcher_great_threshold)",3, 77, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"FindScoredUnichar( UNICHAR_ID id , const ADAPT_RESULTS & results)",7, 76, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"ScoredUnichar( UNICHAR_ID id , const ADAPT_RESULTS & results)",5, 74, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::AdaptiveClassifier( TBLOB * Blob , BLOB_CHOICE_LIST * Choices)",32, 76, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::RefreshDebugWindow( ScrollView ** win , const char * msg , int y_offset , const TBOX & wbox)",18, 74, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::LearnWord( const char * fontname , WERD_RES * word)",114, 79, 8, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::LearnPieces( const char * fontname , int start , int length , float threshold , CharSegmentationType segmentation , const char * correct_text , WERD_RES * word)",72, 80, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::EndAdaptiveClassifier()",49, 80, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::InitAdaptiveClassifier( TessdataManager * mgr)",70, 74, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ResetAdaptiveClassifierInternal()",12, 73, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::SwitchAdaptiveClassifier()",14, 80, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::StartBackupAdaptiveClassifier()",5, 54, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::SettupPass1()",6, 51, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::SettupPass2()",5, 51, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::InitAdaptedClass( TBLOB * Blob , CLASS_ID ClassId , int FontinfoId , ADAPT_CLASS Class , ADAPT_TEMPLATES Templates)",72, 74, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::GetAdaptiveFeatures( TBLOB * Blob , INT_FEATURE_ARRAY IntFeatures , FEATURE_SET * FloatFeatures)",20, 65, 34, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::AdaptableWord( WERD_RES * word)",19, 77, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::AdaptToChar( TBLOB * Blob , CLASS_ID ClassId , int FontinfoId , float Threshold , ADAPT_TEMPLATES adaptive_templates)",92, 80, 10, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::DisplayAdaptedChar( TBLOB * blob , INT_CLASS_STRUCT * int_class)",30, 78, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::AddNewResult( const UnicharRating & new_result , ADAPT_RESULTS * results)",30, 76, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::AmbigClassifier( const GenericVector<INT_FEATURE_STRUCT> & int_features , const INT_FX_RESULT_STRUCT & fx_info , const TBLOB * blob , INT_TEMPLATES templates , ADAPT_CLASS * classes , UNICHAR_ID * ambiguities , ADAPT_RESULTS * results)",39, 78, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::MasterMatcher( INT_TEMPLATES templates , int16_t num_features , const INT_FEATURE_STRUCT * features , const uint8_t * norm_factors , ADAPT_CLASS * classes , int debug , int matcher_multiplier , const TBOX & blob_box , const GenericVector<CP_RESULT_STRUCT> & results , ADAPT_RESULTS * final_results)",34, 78, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ExpandShapesAndApplyCorrections( ADAPT_CLASS * classes , bool debug , int class_id , int bottom , int top , float cp_rating , int blob_length , int matcher_multiplier , const uint8_t * cn_factors , UnicharRating * int_result , ADAPT_RESULTS * final_results)",70, 81, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ComputeCorrectedRating( bool debug , int unichar_id , double cp_rating , double im_rating , int feature_misses , int bottom , int top , int blob_length , int matcher_multiplier , const uint8_t * cn_factors)",44, 81, 40, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::BaselineClassifier( TBLOB * Blob , const GenericVector<INT_FEATURE_STRUCT> & int_features , const INT_FX_RESULT_STRUCT & fx_info , ADAPT_TEMPLATES Templates , ADAPT_RESULTS * Results)",28, 81, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::CharNormClassifier( TBLOB * blob , const TrainingSample & sample , ADAPT_RESULTS * adapt_results)",15, 77, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::CharNormTrainingSample( bool pruner_only , int keep_this , const TrainingSample & sample , GenericVector<UnicharRating> * results)",56, 84, 15, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ClassifyAsNoise( ADAPT_RESULTS * results)",7, 70, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ConvertMatchesToChoices( const DENORM & denorm , const TBOX & box , ADAPT_RESULTS * Results , BLOB_CHOICE_LIST * Choices)",73, 100, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::DebugAdaptiveClassifier( TBLOB * blob , ADAPT_RESULTS * Results)",11, 66, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::DoAdaptiveMatch( TBLOB * Blob , ADAPT_RESULTS * Results)",46, 74, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::GetAmbiguities( TBLOB * Blob , CLASS_ID CorrectClass)",38, 71, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::LooksLikeGarbage( TBLOB * blob)",22, 79, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::GetCharNormFeature( const INT_FX_RESULT_STRUCT & fx_info , INT_TEMPLATES templates , uint8_t * pruner_norm_array , uint8_t * char_norm_array)",17, 72, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ComputeCharNormArrays( FEATURE_STRUCT * norm_feature , INT_TEMPLATES_STRUCT * templates , uint8_t * char_norm_array , uint8_t * pruner_array)",28, 78, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::MakeNewTemporaryConfig( ADAPT_TEMPLATES Templates , CLASS_ID ClassId , int FontinfoId , int NumFeatures , INT_FEATURE_ARRAY Features , FEATURE_SET FloatFeatures)",75, 79, 6, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::MakeNewTempProtos( FEATURE_SET Features , int NumBadFeat , FEATURE_ID BadFeat [ ] , INT_CLASS IClass , ADAPT_CLASS Class , BIT_VECTOR TempProtoMask)",75, 74, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::MakePermanent( ADAPT_TEMPLATES Templates , CLASS_ID ClassId , int ConfigId , TBLOB * Blob)",45, 81, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"MakeTempProtoPerm( void * item1 , void * item2)",23, 64, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::PrintAdaptiveMatchResults( const ADAPT_RESULTS & results)",6, 81, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::RemoveBadMatches( ADAPT_RESULTS * Results)",51, 80, 10, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::RemoveExtraPuncs( ADAPT_RESULTS * Results)",36, 75, 17, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::SetAdaptiveThreshold( float Threshold)",7, 78, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ShowBestMatchFor( int shape_id , const INT_FEATURE_STRUCT * features , int num_features)",32, 73, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ClassIDToDebugStr( const INT_TEMPLATES_STRUCT * templates , int class_id , int config_id) const",11, 74, 0, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ClassAndConfigIDToFontOrShapeID( int class_id , int int_result_config) const",10, 77, 46, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::ShapeIDToClassID( int shape_id) const",13, 67, 4, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::TempConfigReliable( CLASS_ID class_id , const TEMP_CONFIG & config)",36, 77, 2, 0
repos/cpp/tesseract/src/classify/adaptmatch.cpp,"tesseract::Classify::UpdateAmbigsGroup( CLASS_ID class_id , TBLOB * Blob)",26, 79, 12, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::ComputeErrorRate( ShapeClassifier * classifier , int report_level , CountTypes boosting_mode , const FontInfoTable & fontinfo_table , const GenericVector<Pix*> & page_images , SampleIterator * it , double * unichar_error , double * scaled_error , STRING * fonts_report)",60, 75, 6, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::DebugNewErrors( ShapeClassifier * new_classifier , ShapeClassifier * old_classifier , CountTypes boosting_mode , const FontInfoTable & fontinfo_table , const GenericVector<Pix*> & page_images , SampleIterator * it)",47, 79, 10, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::ErrorCounter( const UNICHARSET & unicharset , int fontsize)",9, 71, 0, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::AccumulateErrors( bool debug , CountTypes boosting_mode , const FontInfoTable & font_table , const GenericVector<UnicharRating> & results , TrainingSample * sample)",123, 81, 36, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::AccumulateJunk( bool debug , const GenericVector<UnicharRating> & results , TrainingSample * sample)",27, 79, 34, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::ReportErrors( int report_level , CountTypes boosting_mode , const FontInfoTable & fontinfo_table , const SampleIterator & it , double * unichar_error , STRING * fonts_report)",87, 79, 8, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::ReportString( bool even_if_empty , const Counts & counts , STRING * report)",41, 87, 2, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::ComputeRates( const Counts & counts , double rates [ CT_SIZE ])",14, 87, 2, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::Counts::Counts()",3, 40, 2, 0
repos/cpp/tesseract/src/classify/errorcounter.cpp,"tesseract::ErrorCounter::Counts::operator +=( const Counts & other)",4, 61, 0, 0
repos/cpp/tesseract/src/classify/protos.cpp,"AddConfigToClass( CLASS_TYPE Class)",26, 66, 4, 0
repos/cpp/tesseract/src/classify/protos.cpp,"AddProtoToClass( CLASS_TYPE Class)",33, 73, 6, 0
repos/cpp/tesseract/src/classify/protos.cpp,"FillABC( PROTO Proto)",10, 49, 2, 0
repos/cpp/tesseract/src/classify/protos.cpp,"FreeClass( CLASS_TYPE Class)",6, 35, 0, 0
repos/cpp/tesseract/src/classify/protos.cpp,"FreeClassFields( CLASS_TYPE Class)",12, 58, 4, 0
repos/cpp/tesseract/src/classify/protos.cpp,"NewClass( int NumProtos , int NumConfigs)",18, 77, 4, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"InitIntegerFX()",12, 69, 6, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"FeatureDirection( uint8_t theta)",3, 53, 2, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::BlobToTrainingSample( const TBLOB & blob , bool nonlinear_norm , INT_FX_RESULT_STRUCT * fx_info , GenericVector<INT_FEATURE_STRUCT> * bl_features)",29, 78, 4, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::Classify::SetupBLCNDenorms( const TBLOB & blob , bool nonlinear_norm , DENORM * bl_denorm , DENORM * cn_denorm , INT_FX_RESULT_STRUCT * fx_info)",35, 86, 2, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::NormalizeDirection( uint8_t dir , const FCOORD & unnormed_pos , const DENORM & denorm , const DENORM * root_denorm)",13, 75, 0, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::MeanDirectionVector( const LLSQ & point_diffs , const LLSQ & dirs , const FCOORD & start_pt , const FCOORD & end_pt)",44, 80, 6, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::ComputeFeatures( const FCOORD & start_pt , const FCOORD & end_pt , double feature_length , GenericVector<INT_FEATURE_STRUCT> * features)",22, 74, 27, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::GatherPoints( const C_OUTLINE * outline , double feature_length , const DENORM & denorm , const DENORM * root_denorm , int start_index , int end_index , ICOORD * pos , FCOORD * pos_normed , LLSQ * points , LLSQ * dirs)",49, 79, 6, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::ExtractFeaturesFromRun( const EDGEPT * startpt , const EDGEPT * lastpt , const DENORM & denorm , double feature_length , bool force_poly , GenericVector<INT_FEATURE_STRUCT> * features)",107, 81, 4, 0
repos/cpp/tesseract/src/classify/intfx.cpp,"tesseract::Classify::ExtractFeatures( const TBLOB & blob , bool nonlinear_norm , GenericVector<INT_FEATURE_STRUCT> * bl_features , GenericVector<INT_FEATURE_STRUCT> * cn_features , INT_FX_RESULT_STRUCT * results , GenericVector<int> * outline_cn_counts)",43, 79, 31, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::MasterTrainer( NormalizationMode norm_mode , bool shape_analysis , bool replicate_samples , int debug_level)",11, 75, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::~MasterTrainer()",5, 48, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::Serialize( FILE * fp) const",14, 55, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::LoadUnicharset( const char * filename)",19, 74, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::ReadTrainingSamples( const char * page_name , const FEATURE_DEFS_STRUCT & feature_defs , bool verification)",48, 86, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::AddSample( bool verification , const char * unichar , TrainingSample * sample)",26, 73, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::LoadPageImages( const char * filename)",12, 62, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::PostLoadCleanup()",19, 73, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::PreTrainingSetup()",9, 56, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::SetupMasterShapes()",37, 76, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::IncludeJunk()",20, 72, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::ReplicateAndRandomizeSamplesIfRequired()",9, 63, 0, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::LoadFontInfo( const char * filename)",33, 75, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::LoadXHeights( const char * filename)",41, 73, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::AddSpacingInfo( const char * filename)",53, 78, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::GetFontInfoId( const char * font_name)",8, 69, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::GetBestMatchingFontInfoId( const char * filename)",15, 80, 6, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::SetupFlatShapeTable( ShapeTable * shape_table)",28, 81, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::SetupForClustering( const ShapeTable & shape_table , const FEATURE_DEFS_STRUCT & feature_defs , int shape_id , int * num_samples)",35, 76, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::WriteInttempAndPFFMTable( const UNICHARSET & unicharset , const UNICHARSET & shape_set , const ShapeTable & shape_table , CLASS_STRUCT * float_classes , const char * inttemp_file , const char * pffmtable_file)",66, 76, 45, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::DebugCanonical( const char * unichar_str1 , const char * unichar_str2)",48, 74, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::DisplaySamples( const char * unichar_str1 , int cloud_font , const char * unichar_str2 , int canonical_font)",51, 79, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::TestClassifierVOld( bool replicate_samples , ShapeClassifier * test_classifier , ShapeClassifier * old_classifier)",9, 74, 39, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::TestClassifierOnSamples( CountTypes error_mode , int report_level , bool replicate_samples , ShapeClassifier * test_classifier , STRING * report_string)",8, 78, 44, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::TestClassifier( CountTypes error_mode , int report_level , bool replicate_samples , TrainingSampleSet * samples , ShapeClassifier * test_classifier , STRING * report_string)",24, 75, 4, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::ShapeDistance( const ShapeTable & shapes , int s1 , int s2)",27, 79, 0, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::ReplaceFragmentedSamples()",60, 77, 2, 0
repos/cpp/tesseract/src/classify/mastertrainer.cpp,"tesseract::MasterTrainer::ClusterShapes( int min_shapes , int max_shape_unichars , float max_dist , ShapeTable * shapes)",75, 78, 6, 0
repos/cpp/tesseract/src/classify/tessclassifier.cpp,"tesseract::TessClassifier::UnicharClassifySample( const TrainingSample & sample , Pix * page_pix , int debug , UNICHAR_ID keep_this , GenericVector<UnicharRating> * results)",21, 79, 2, 0
repos/cpp/tesseract/src/classify/tessclassifier.cpp,"tesseract::TessClassifier::GetShapeTable() const",3, 58, 0, 0
repos/cpp/tesseract/src/classify/tessclassifier.cpp,"tesseract::TessClassifier::GetUnicharset() const",3, 58, 0, 0
repos/cpp/tesseract/src/classify/tessclassifier.cpp,"tesseract::TessClassifier::DisplayClassifyAs( const TrainingSample & sample , Pix * page_pix , int unichar_id , int index , PointerVector<ScrollView> * windows)",16, 77, 2, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::ClassPruner( int max_classes)",21, 80, 8, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::~ClassPruner()",6, 27, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::ComputeScores( const INT_TEMPLATES_STRUCT * int_templates , int num_features , const INT_FEATURE_STRUCT * features)",65, 79, 6, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::AdjustForExpectedNumFeatures( const uint16_t * expected_num_features , int cutoff_strength)",10, 75, 2, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::DisableDisabledClasses( const UNICHARSET & unicharset)",6, 66, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::DisableFragments( const UNICHARSET & unicharset)",9, 66, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::NormalizeForXheight( int norm_multiplier , const uint8_t * normalization_factors)",7, 70, 10, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::NoNormalization()",5, 66, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::PruneAndSort( int pruning_factor , int keep_this , bool max_of_non_fragments , const UNICHARSET & unicharset)",33, 79, 20, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::DebugMatch( const Classify & classify , const INT_TEMPLATES_STRUCT * int_templates , const INT_FEATURE_STRUCT * features) const",35, 79, 6, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::SummarizeResult( const Classify & classify , const INT_TEMPLATES_STRUCT * int_templates , const uint16_t * expected_num_features , int norm_multiplier , const uint8_t * normalization_factors) const",20, 75, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::ClassPruner::SetupResults( GenericVector<CP_RESULT_STRUCT> * results) const",10, 71, 8, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"tesseract::Classify::PruneClasses( const INT_TEMPLATES_STRUCT * int_templates , int num_features , int keep_this , const INT_FEATURE_STRUCT * features , const uint8_t * normalization_factors , const uint16_t * expected_num_features , GenericVector<CP_RESULT_STRUCT> * results)",41, 78, 2, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::Match( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , int16_t NumFeatures , const INT_FEATURE_STRUCT * Features , UnicharRating * Result , int AdaptFeatureThreshold , int Debug , bool SeparateDebugWindows)",60, 79, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::FindGoodProtos( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , uint16_t BlobLength , int16_t NumFeatures , INT_FEATURE_ARRAY Features , PROTO_ID * ProtoArray , int AdaptProtoThreshold , int Debug)",54, 79, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::FindBadFeatures( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , uint16_t BlobLength , int16_t NumFeatures , INT_FEATURE_ARRAY Features , FEATURE_ID * FeatureArray , int AdaptFeatureThreshold , int Debug)",50, 80, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::IntegerMatcher( tesseract :: IntParam * classify_debug_level)",26, 82, 2, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"ScratchEvidence::Clear( const INT_CLASS class_template)",6, 73, 9, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"ScratchEvidence::ClearFeatureEvidence( const INT_CLASS class_template)",4, 77, 0, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IMDebugConfiguration( int FeatureNum , uint16_t ActualProtoNum , uint8_t Evidence , BIT_VECTOR ConfigMask , uint32_t ConfigWord)",14, 74, 0, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IMDebugConfigurationSum( int FeatureNum , uint8_t * FeatureEvidence , int32_t ConfigCount)",8, 78, 0, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::UpdateTablesForFeature( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , int FeatureNum , const INT_FEATURE_STRUCT * Feature , ScratchEvidence * tables , int Debug)",136, 80, 2, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::DebugFeatureProtoError( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , const ScratchEvidence & tables , int16_t NumFeatures , int Debug)",113, 80, 8, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::DisplayProtoDebugInfo( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , const ScratchEvidence & tables , bool SeparateDebugWindows)",39, 76, 6, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::DisplayFeatureDebugInfo( INT_CLASS ClassTemplate , BIT_VECTOR ProtoMask , BIT_VECTOR ConfigMask , int16_t NumFeatures , const INT_FEATURE_STRUCT * Features , int AdaptFeatureThreshold , int Debug , bool SeparateDebugWindows)",43, 75, 8, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"ScratchEvidence::UpdateSumOfProtoEvidences( INT_CLASS ClassTemplate , BIT_VECTOR ConfigMask , int16_t NumFeatures)",36, 78, 9, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"ScratchEvidence::NormalizeSums( INT_CLASS ClassTemplate , int16_t NumFeatures , int32_t used_features)",8, 75, 4, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::FindBestMatch( INT_CLASS class_template , const ScratchEvidence & tables , UnicharRating * result)",26, 57, 2, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"IntegerMatcher::ApplyCNCorrection( float rating , int blob_length , int normalization_factor , int matcher_multiplier)",7, 71, 0, 0
repos/cpp/tesseract/src/classify/intmatcher.cpp,"HeapSort( int n , int ra [ ] , int rb [ ])",39, 39, 0, 0
repos/cpp/tesseract/src/classify/blobclass.cpp,"tesseract::ExtractFontName( const STRING & filename , STRING * fontname)",15, 81, 4, 0
repos/cpp/tesseract/src/classify/blobclass.cpp,"tesseract::Classify::LearnBlob( const STRING & fontname , TBLOB * blob , const DENORM & cn_denorm , const INT_FX_RESULT_STRUCT & fx_info , const char * blob_text)",25, 68, 2, 0
repos/cpp/tesseract/src/classify/blobclass.cpp,"tesseract::Classify::WriteTRFile( const STRING & filename)",12, 75, 6, 0
repos/cpp/tesseract/src/classify/mfdefs.cpp,"NewMicroFeature()",3, 55, 0, 0
repos/cpp/tesseract/src/classify/mfdefs.cpp,"FreeMicroFeatures( MICROFEATURES MicroFeatures)",3, 57, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeRating::FirstResultWithUnichar( const GenericVector<ShapeRating> & results , const ShapeTable & shape_table , UNICHAR_ID unichar_id)",13, 57, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::UnicharRating::FirstResultWithUnichar( const GenericVector<UnicharRating> & results , UNICHAR_ID unichar_id)",9, 49, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::UnicharAndFonts::Serialize( FILE * fp) const",3, 74, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::UnicharAndFonts::DeSerialize( TFile * fp)",3, 67, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::UnicharAndFonts::SortByUnicharId( const void * v1 , const void * v2)",5, 71, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::Serialize( FILE * fp) const",4, 78, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::DeSerialize( TFile * fp)",6, 47, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::AddToShape( int unichar_id , int font_id)",17, 61, 6, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::AddShape( const Shape & other)",9, 67, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::ContainsUnicharAndFont( int unichar_id , int font_id) const",14, 72, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::ContainsUnichar( int unichar_id) const",8, 52, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::ContainsFont( int font_id) const",10, 59, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::ContainsFontProperties( const FontInfoTable & font_table , uint32_t properties) const",11, 68, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::ContainsMultipleFontProperties( const FontInfoTable & font_table) const",12, 77, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::operator ==( const Shape & other) const",3, 55, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::IsSubsetOf( const Shape & other) const",11, 67, 6, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::IsEqualUnichars( Shape * other)",10, 67, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::Shape::SortUnichars()",4, 52, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::ShapeTable()",2, 65, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::ShapeTable( const UNICHARSET & unicharset)",3, 53, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::Serialize( FILE * fp) const",3, 45, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::DeSerialize( TFile * fp)",5, 51, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::NumFonts() const",14, 73, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::ReMapClassIds( const GenericVector<int> & unicharset_map)",8, 75, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::DebugStr( int shape_id) const",30, 71, 8, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::SummaryStr() const",19, 77, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AddShape( int unichar_id , int font_id)",8, 56, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AddShape( const Shape & other)",12, 50, 7, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::DeleteShape( int shape_id)",5, 45, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AddToShape( int shape_id , int unichar_id , int font_id)",5, 73, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AddShapeToShape( int shape_id , const Shape & other)",5, 69, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::FindShape( int unichar_id , int font_id) const",16, 63, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::GetFirstUnicharAndFont( int shape_id , int * unichar_id , int * font_id) const",6, 79, 40, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::BuildFromShape( const Shape & shape , const ShapeTable & master_shapes)",24, 73, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AlreadyMerged( int shape_id1 , int shape_id2) const",3, 81, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AnyMultipleUnichars() const",9, 52, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MaxNumUnichars() const",9, 47, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::ForceFontMerges( int start , int end)",16, 76, 8, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MasterUnicharCount( int shape_id) const",4, 57, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MasterFontCount( int shape_id) const",9, 54, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MergedUnicharCount( int shape_id1 , int shape_id2) const",8, 73, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MergeShapes( int shape_id1 , int shape_id2)",8, 65, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::SwapShapes( int shape_id1 , int shape_id2)",5, 60, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MasterDestinationIndex( int shape_id) const",10, 70, 4, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::SubsetUnichar( int shape_id1 , int shape_id2) const",16, 69, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MergeSubsetUnichar( int merge_id1 , int merge_id2 , int shape_id) const",24, 79, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::EqualUnichars( int shape_id1 , int shape_id2) const",15, 69, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::MergeEqualUnichars( int merge_id1 , int merge_id2 , int shape_id) const",23, 75, 6, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::CommonUnichars( int shape_id1 , int shape_id2) const",10, 70, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::CommonFont( int shape_id1 , int shape_id2) const",12, 66, 0, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AppendMasterShapes( const ShapeTable & other , GenericVector<int> * shape_map)",12, 69, 36, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::NumMasterShapes() const",8, 50, 2, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AddShapeToResults( const ShapeRating & shape_rating , GenericVector<int> * unichar_map , GenericVector<UnicharRating> * results) const",23, 81, 35, 0
repos/cpp/tesseract/src/classify/shapetable.cpp,"tesseract::ShapeTable::AddUnicharToResults( int unichar_id , float rating , GenericVector<int> * unichar_map , GenericVector<UnicharRating> * results) const",11, 67, 4, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"AddFeature( FEATURE_SET FeatureSet , FEATURE Feature)",9, 63, 2, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"FreeFeature( FEATURE Feature)",1, 71, 0, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"FreeFeatureSet( FEATURE_SET FeatureSet)",9, 54, 0, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"NewFeature( const FEATURE_DESC_STRUCT * FeatureDesc)",9, 75, 28, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"NewFeatureSet( int NumFeatures)",10, 68, 2, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"ReadFeature( FILE * File , const FEATURE_DESC_STRUCT * FeatureDesc)",13, 74, 0, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"ReadFeatureSet( FILE * File , const FEATURE_DESC_STRUCT * FeatureDesc)",11, 81, 0, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"WriteFeature( FEATURE Feature , STRING * str)",9, 55, 2, 0
repos/cpp/tesseract/src/classify/ocrfeatures.cpp,"WriteFeatureSet( FEATURE_SET FeatureSet , STRING * str)",9, 60, 0, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::Classify()",16, 78, 20, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::~Classify()",1, 25, 0, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::Classify()",154, 81, 6, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::~Classify()",6, 43, 2, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::SetStaticClassifier( ShapeClassifier * static_classifier)",4, 73, 0, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::AddLargeSpeckleTo( int blob_length , BLOB_CHOICE_LIST * choices)",21, 80, 2, 0
repos/cpp/tesseract/src/classify/classify.cpp,"tesseract::Classify::LargeSpeckle( const TBLOB & blob)",5, 70, 2, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::UnicharClassifySample( const TrainingSample & sample , Pix * page_pix , int debug , UNICHAR_ID keep_this , GenericVector<UnicharRating> * results)",15, 77, 2, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::ClassifySample( const TrainingSample & sample , Pix * page_pix , int debug , int keep_this , GenericVector<ShapeRating> * results)",6, 81, 0, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::BestShapeForUnichar( const TrainingSample & sample , Pix * page_pix , UNICHAR_ID unichar_id , ShapeRating * result)",15, 79, 41, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::GetUnicharset() const",3, 59, 0, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::DebugDisplay( const TrainingSample & sample , Pix * page_pix , UNICHAR_ID unichar_id)",61, 77, 2, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::DisplayClassifyAs( const TrainingSample & sample , Pix * page_pix , UNICHAR_ID unichar_id , int index , PointerVector<ScrollView> * windows)",7, 49, 4, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::UnicharPrintResults( const char * context , const GenericVector<UnicharRating> & results) const",15, 78, 4, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::PrintResults( const char * context , const GenericVector<ShapeRating> & results) const",12, 79, 4, 0
repos/cpp/tesseract/src/classify/shapeclassifier.cpp,"tesseract::ShapeClassifier::FilterDuplicateUnichars( GenericVector<ShapeRating> * results) const",27, 75, 10, 0
repos/cpp/tesseract/src/classify/cutoffs.cpp,"tesseract::Classify::ReadNewCutoffs( TFile * fp , CLASS_CUTOFF_ARRAY Cutoffs)",26, 71, 0, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"ReadSampleSize( TFile * fp)",10, 63, 2, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"ReadParamDesc( TFile * fp , uint16_t N)",28, 71, 16, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"ReadPrototype( TFile * fp , uint16_t N)",74, 80, 6, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"ReadNFloats( TFile * fp , uint16_t N , float Buffer [ ])",27, 63, 4, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"WriteParamDesc( FILE * File , uint16_t N , const PARAM_DESC ParamDesc [ ])",17, 76, 0, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"WritePrototype( FILE * File , uint16_t N , PROTOTYPE * Proto)",38, 64, 0, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"WriteNFloats( FILE * File , uint16_t N , float Array [ ])",5, 60, 0, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"WriteProtoStyle( FILE * File , PROTOSTYLE ProtoStyle)",16, 58, 0, 0
repos/cpp/tesseract/src/classify/clusttool.cpp,"WriteProtoList( FILE * File , uint16_t N , PARAM_DESC * ParamDesc , LIST ProtoList , bool WriteSigProtos , bool WriteInsigProtos)",18, 67, 0, 0
repos/cpp/tesseract/src/classify/float2int.cpp,"tesseract::Classify::ClearCharNormArray( uint8_t * char_norm_array)",3, 76, 2, 0
repos/cpp/tesseract/src/classify/float2int.cpp,"tesseract::Classify::ComputeIntCharNormArray( const FEATURE_STRUCT & norm_feature , uint8_t * char_norm_array)",14, 75, 0, 0
repos/cpp/tesseract/src/classify/float2int.cpp,"tesseract::Classify::ComputeIntFeatures( FEATURE_SET Features , INT_FEATURE_ARRAY IntFeatures)",21, 73, 8, 0
repos/cpp/tesseract/src/classify/normfeat.cpp,"ActualOutlineLength( FEATURE Feature)",3, 65, 2, 0
repos/cpp/tesseract/src/classify/normfeat.cpp,"ExtractCharNormFeatures( const INT_FX_RESULT_STRUCT & fx_info)",15, 75, 0, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::IntFeatureDist()",5, 65, 4, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::~IntFeatureDist()",3, 36, 0, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::Init( const IntFeatureMap * feature_map)",12, 78, 2, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::Set( const GenericVector<int> & indexed_features , int canonical_count , bool value)",21, 77, 10, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::FeatureDistance( const GenericVector<int> & features) const",20, 72, 2, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::DebugFeatureDistance( const GenericVector<int> & features) const",50, 73, 4, 0
repos/cpp/tesseract/src/classify/intfeaturedist.cpp,"tesseract::IntFeatureDist::Clear()",8, 33, 2, 0
repos/cpp/tesseract/src/classify/mf.cpp,"ExtractMicros( TBLOB * Blob , const DENORM & cn_denorm)",39, 72, 4, 0
repos/cpp/tesseract/src/classify/normmatch.cpp,"tesseract::Classify::ComputeNormMatch( CLASS_ID ClassId , const FEATURE_STRUCT & feature , bool DebugMatch)",73, 78, 4, 0
repos/cpp/tesseract/src/classify/normmatch.cpp,"tesseract::Classify::FreeNormProtos()",10, 52, 4, 0
repos/cpp/tesseract/src/classify/normmatch.cpp,"NormEvidenceOf( double NormAdj)",11, 53, 4, 0
repos/cpp/tesseract/src/classify/normmatch.cpp,"PrintNormMatch( FILE * File , int NumParams , PROTOTYPE * Proto , FEATURE Feature)",21, 57, 4, 0
repos/cpp/tesseract/src/classify/normmatch.cpp,"tesseract::Classify::ReadNormProtos( TFile * fp)",39, 80, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeClusterer( int16_t SampleSize , const PARAM_DESC ParamDesc [ ])",39, 75, 4, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeSample( CLUSTERER * Clusterer , const float * Feature , int32_t CharID)",34, 74, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"ClusterSamples( CLUSTERER * Clusterer , CLUSTERCONFIG * Config)",20, 78, 4, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FreeClusterer( CLUSTERER * Clusterer)",17, 60, 6, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FreeProtoList( LIST * ProtoList)",3, 50, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FreePrototype( void * arg)",17, 71, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NextSample( LIST * SearchState)",14, 56, 4, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"Mean( PROTOTYPE * Proto , uint16_t Dimension)",3, 51, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"StandardDeviation( PROTOTYPE * Proto , uint16_t Dimension)",21, 68, 12, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"CreateClusterTree( CLUSTERER * Clusterer)",57, 75, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakePotentialClusters( ClusteringContext * context , CLUSTER * Cluster , int32_t)",15, 73, 34, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FindNearestNeighbor( KDTREE * Tree , CLUSTER * Cluster , float * Distance)",25, 74, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeNewCluster( CLUSTERER * Clusterer , TEMPCLUSTER * TempCluster)",29, 79, 20, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MergeClusters( int16_t N , PARAM_DESC ParamDesc [ ] , int32_t n1 , int32_t n2 , float m [ ] , float m1 [ ] , float m2 [ ])",32, 62, 6, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"ComputePrototypes( CLUSTERER * Clusterer , CLUSTERCONFIG * Config)",27, 77, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakePrototype( CLUSTERER * Clusterer , CLUSTERCONFIG * Config , CLUSTER * Cluster)",69, 79, 6, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeDegenerateProto( uint16_t N , CLUSTER * Cluster , STATISTICS * Statistics , PROTOSTYLE Style , int32_t MinSamples)",28, 61, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"TestEllipticalProto( CLUSTERER * Clusterer , CLUSTERCONFIG * Config , CLUSTER * Cluster , STATISTICS * Statistics)",88, 80, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeSphericalProto( CLUSTERER * Clusterer , CLUSTER * Cluster , STATISTICS * Statistics , BUCKETS * Buckets)",22, 79, 37, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeEllipticalProto( CLUSTERER * Clusterer , CLUSTER * Cluster , STATISTICS * Statistics , BUCKETS * Buckets)",23, 80, 38, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeMixedProto( CLUSTERER * Clusterer , CLUSTER * Cluster , STATISTICS * Statistics , BUCKETS * NormalBuckets , double Confidence)",48, 80, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeDimRandom( uint16_t i , PROTOTYPE * Proto , PARAM_DESC * ParamDesc)",13, 81, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeDimUniform( uint16_t i , PROTOTYPE * Proto , STATISTICS * Statistics)",18, 83, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"ComputeStatistics( int16_t N , PARAM_DESC ParamDesc [ ] , CLUSTER * Cluster)",73, 75, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NewSphericalProto( uint16_t N , CLUSTER * Cluster , STATISTICS * Statistics)",19, 73, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NewEllipticalProto( int16_t N , CLUSTER * Cluster , STATISTICS * Statistics)",27, 72, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NewMixedProto( int16_t N , CLUSTER * Cluster , STATISTICS * Statistics)",14, 73, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NewSimpleProto( int16_t N , CLUSTER * Cluster)",19, 64, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"Independent( PARAM_DESC * ParamDesc , int16_t N , float * CoVariance , float Independence)",29, 71, 10, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"GetBuckets( CLUSTERER * clusterer , DISTRIBUTION Distribution , uint32_t SampleCount , double Confidence)",28, 75, 6, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MakeBuckets( DISTRIBUTION Distribution , uint32_t SampleCount , double Confidence)",81, 85, 6, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"OptimumNumberOfBuckets( uint32_t SampleCount)",17, 69, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"ComputeChiSquared( uint16_t DegreesOfFreedom , double Alpha)",37, 79, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NormalDensity( int32_t x)",6, 79, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"UniformDensity( int32_t x)",8, 77, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"Integral( double f1 , double f2 , double Dx)",3, 58, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FillBuckets( BUCKETS * Buckets , CLUSTER * Cluster , uint16_t Dim , PARAM_DESC * ParamDesc , float Mean , float StdDev)",58, 76, 7, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NormalBucket( PARAM_DESC * ParamDesc , float x , float Mean , float StdDev)",21, 59, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"UniformBucket( PARAM_DESC * ParamDesc , float x , float Mean , float StdDev)",21, 77, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"DistributionOK( BUCKETS * Buckets)",19, 73, 4, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FreeStatistics( STATISTICS * Statistics)",6, 53, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FreeBuckets( BUCKETS * buckets)",5, 48, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"FreeCluster( CLUSTER * Cluster)",7, 48, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"DegreesOfFreedom( DISTRIBUTION Distribution , uint16_t HistogramBuckets)",11, 89, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"AdjustBuckets( BUCKETS * Buckets , uint32_t NewSampleCount)",14, 71, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"InitBuckets( BUCKETS * Buckets)",8, 51, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"AlphaMatch( void * arg1 , void * arg2)",8, 89, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"NewChiStruct( uint16_t DegreesOfFreedom , double Alpha)",9, 74, 0, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"Solve( SOLVEFUNC Function , void * FunctionParams , double InitialGuess , double Accuracy)",45, 75, 6, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"ChiArea( CHISTRUCT * ChiParams , double x)",18, 62, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"MultipleCharSamples( CLUSTERER * Clusterer , CLUSTER * Cluster , float MaxIllegal)",50, 73, 2, 0
repos/cpp/tesseract/src/classify/cluster.cpp,"InvertMatrix( const float * input , int size , float * inv)",86, 81, 8, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"INT_FEATURE_STRUCT::INT_FEATURE_STRUCT( const FCOORD & pos , uint8_t theta)",6, 74, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"INT_FEATURE_STRUCT::INT_FEATURE_STRUCT( int x , int y , int theta)",6, 72, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"AddIntClass( INT_TEMPLATES Templates , CLASS_ID ClassId , INT_CLASS Class)",18, 79, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"AddIntConfig( INT_CLASS Class)",9, 52, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"AddIntProto( INT_CLASS Class)",35, 79, 11, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"AddProtoToClassPruner( PROTO Proto , CLASS_ID ClassId , INT_TEMPLATES Templates)",28, 69, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"AddProtoToProtoPruner( PROTO Proto , int ProtoId , INT_CLASS Class , bool debug)",45, 75, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"Bucket8For( float param , float offset , int num_buckets)",4, 77, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"Bucket16For( float param , float offset , int num_buckets)",4, 78, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"CircBucketFor( float param , float offset , int num_buckets)",4, 69, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"UpdateMatchDisplay()",4, 57, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"ConvertConfig( BIT_VECTOR Config , int ConfigId , INT_CLASS Class)",15, 71, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::Classify::ConvertProto( PROTO Proto , int ProtoId , INT_CLASS Class)",30, 73, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::Classify::CreateIntTemplates( CLASSES FloatProtos , const UNICHARSET & target_unicharset)",50, 78, 6, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"DisplayIntFeature( const INT_FEATURE_STRUCT * Feature , float Evidence)",7, 76, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"DisplayIntProto( INT_CLASS Class , PROTO_ID ProtoId , float Evidence)",7, 74, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"NewIntClass( int MaxNumProtos , int MaxNumConfigs)",37, 75, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"free_int_class( INT_CLASS int_class)",11, 50, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"NewIntTemplates()",13, 63, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"free_int_templates( INT_TEMPLATES templates)",9, 51, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::Classify::ReadIntTemplates( TFile * fp)",233, 80, 16, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::Classify::ShowMatchDisplay()",22, 72, 6, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::ClearFeatureSpaceWindow( NORM_METHOD norm_method , ScrollView * window)",20, 77, 22, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::Classify::WriteIntTemplates( FILE * File , INT_TEMPLATES Templates , const UNICHARSET & target_unicharset)",58, 89, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"BucketStart( int Bucket , float Offset , int NumBuckets)",4, 62, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"BucketEnd( int Bucket , float Offset , int NumBuckets)",3, 60, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"DoFill( FILL_SPEC * FillSpec , CLASS_PRUNER_STRUCT * Pruner , uint32_t ClassMask , uint32_t ClassCount , uint32_t WordIndex)",32, 60, 9, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"FillerDone( TABLE_FILLER * Filler)",8, 58, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"FillPPCircularBits( uint32_t ParamTable [ NUM_PP_BUCKETS ] [ WERDS_PER_PP_VECTOR ] , int Bit , float Center , float Spread , bool debug)",24, 82, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"FillPPLinearBits( uint32_t ParamTable [ NUM_PP_BUCKETS ] [ WERDS_PER_PP_VECTOR ] , int Bit , float Center , float Spread , bool debug)",17, 82, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"tesseract::Classify::GetClassToDebug( const char * Prompt , bool * adaptive_on , bool * pretrained_on , int * shape_id)",61, 81, 10, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"GetCPPadsForLevel( int Level , float * EndPad , float * SidePad , float * AnglePad)",33, 72, 6, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"GetMatchColorFor( float Evidence)",13, 56, 0, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"GetNextFill( TABLE_FILLER * Filler , FILL_SPEC * Fill)",37, 77, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"InitTableFiller( float EndPad , float SidePad , float AnglePad , PROTO Proto , TABLE_FILLER * Filler)",151, 81, 6, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"RenderIntFeature( ScrollView * window , const INT_FEATURE_STRUCT * Feature , ScrollView :: Color color)",19, 80, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"RenderIntProto( ScrollView * window , INT_CLASS Class , PROTO_ID ProtoId , ScrollView :: Color color)",50, 80, 2, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"TruncateParam( float Param , int Min , int Max , char * Id)",14, 62, 6, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"InitIntMatchWindowIfReqd()",16, 74, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"InitProtoDisplayWindowIfReqd()",6, 72, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"InitFeatureDisplayWindowIfReqd()",6, 76, 4, 0
repos/cpp/tesseract/src/classify/intproto.cpp,"CreateFeatureSpaceWindow( const char * name , int xpos , int ypos)",3, 77, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"NextLevel( KDTREE * tree , int level)",8, 48, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK::Element::Element()",1, 17, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK::Element::Element( const Key & k , const Value & v)",1, 64, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK::elements_count()",1, 51, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK::elements()",1, 50, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK<Key,Value>::MinK( Key max_key , int k)",4, 76, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK<Key,Value>::~MinK()",3, 28, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK<Key,Value>::max_insertable_key()",5, 52, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MinK<Key,Value>::insert( Key key , Value value)",18, 56, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDTreeSearch::KDTreeSearch( KDTREE * tree , float * query_point , int k_closest)",5, 79, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDTreeSearch::~KDTreeSearch()",4, 32, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDTreeSearch::Search( int * result_count , float * distances , void ** results)",21, 78, 6, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MakeKDTree( int16_t KeySize , const PARAM_DESC KeyDesc [ ])",22, 75, 6, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDStore( KDTREE * Tree , float * Key , void * Data)",25, 60, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDDelete( KDTREE * Tree , float Key [ ] , void * Data)",35, 74, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDNearestNeighborSearch( KDTREE * Tree , float Query [ ] , int QuerySize , float MaxDistance , int * NumberOfResults , void ** NBuffer , float DBuffer [ ])",6, 67, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDWalk( KDTREE * Tree , void_proc action , void * context)",4, 71, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"FreeKDTree( KDTREE * Tree)",4, 50, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"MakeKDNode( KDTREE * tree , float Key [ ] , void * Data , int Index)",15, 71, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"FreeKDNode( KDNODE * Node)",1, 46, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDTreeSearch::SearchRec( int level , KDNODE * sub_tree)",39, 80, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"DistanceSquared( int k , PARAM_DESC * dim , float p1 [ ] , float p2 [ ])",20, 72, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"ComputeDistance( int k , PARAM_DESC * dim , float p1 [ ] , float p2 [ ])",3, 72, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"KDTreeSearch::BoxIntersectsSearch( float * lower , float * upper)",37, 79, 2, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"Walk( KDTREE * tree , void_proc action , void * context , KDNODE * sub_tree , int32_t level)",8, 74, 4, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"InsertNodes( KDTREE * tree , KDNODE * nodes)",8, 48, 0, 0
repos/cpp/tesseract/src/classify/kdtree.cpp,"FreeSubTree( KDNODE * sub_tree)",7, 37, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"AddAdaptedClass( ADAPT_TEMPLATES Templates , ADAPT_CLASS Class , CLASS_ID ClassId)",18, 60, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"FreeTempConfig( TEMP_CONFIG Config)",5, 54, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"FreeTempProto( void * arg)",5, 32, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"FreePermConfig( PERM_CONFIG Config)",5, 49, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"NewAdaptedClass()",19, 77, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"free_adapted_class( ADAPT_CLASS adapt_class)",14, 58, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"tesseract::Classify::NewAdaptedTemplates( bool InitFromUnicharset)",20, 75, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"tesseract::Classify::GetFontinfoId( ADAPT_CLASS Class , uint8_t ConfigId)",5, 67, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"free_adapted_templates( ADAPT_TEMPLATES templates)",9, 65, 4, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"NewTempConfig( int MaxProtoId , int FontinfoId)",15, 72, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"NewTempProto()",3, 56, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"tesseract::Classify::PrintAdaptedTemplates( FILE * File , ADAPT_TEMPLATES Templates)",24, 78, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"ReadAdaptedClass( TFile * fp)",38, 74, 4, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"tesseract::Classify::ReadAdaptedTemplates( TFile * fp)",17, 75, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"ReadPermConfig( TFile * fp)",12, 72, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"ReadTempConfig( TFile * fp)",10, 72, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"WriteAdaptedClass( FILE * File , ADAPT_CLASS Class , int NumConfigs)",32, 75, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"tesseract::Classify::WriteAdaptedTemplates( FILE * File , ADAPT_TEMPLATES Templates)",15, 78, 0, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"WritePermConfig( FILE * File , PERM_CONFIG Config)",10, 63, 2, 0
repos/cpp/tesseract/src/classify/adaptive.cpp,"WriteTempConfig( FILE * File , TEMP_CONFIG Config)",7, 76, 2, 0
repos/cpp/tesseract/src/training/mftraining.cpp,"DisplayProtoList( const char * ch , LIST protolist)",30, 79, 4, 0
repos/cpp/tesseract/src/training/mftraining.cpp,"ClusterOneConfig( int shape_id , const char * class_label , LIST mf_classes , const ShapeTable & shape_table , MasterTrainer * trainer)",58, 79, 4, 0
repos/cpp/tesseract/src/training/mftraining.cpp,"SetupConfigMap( ShapeTable * shape_table , IndexMapBiDi * config_map)",18, 80, 0, 0
repos/cpp/tesseract/src/training/mftraining.cpp,"main( int argc , char ** argv)",83, 80, 2, 0
repos/cpp/tesseract/src/training/cntraining.cpp,"main( int argc , char * argv [ ])",78, 78, 2, 0
repos/cpp/tesseract/src/training/cntraining.cpp,"WriteNormProtos( const char * Directory , LIST LabeledProtoList , const FEATURE_DESC_STRUCT * feature_desc)",37, 81, 4, 0
repos/cpp/tesseract/src/training/cntraining.cpp,"WriteProtos( FILE * File , uint16_t N , LIST ProtoList , bool WriteSigProtos , bool WriteInsigProtos)",14, 68, 24, 0
repos/cpp/tesseract/src/training/shapeclustering.cpp,"main( int argc , char ** argv)",31, 77, 6, 0
repos/cpp/tesseract/src/training/merge_unicharsets.cpp,"main( int argc , char ** argv)",36, 79, 2, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::IntFlagExists( const char * flag_name , int32_t * value)",10, 67, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::DoubleFlagExists( const char * flag_name , double * value)",10, 70, 6, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::BoolFlagExists( const char * flag_name , bool * value)",10, 68, 6, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::StringFlagExists( const char * flag_name , const char ** value)",9, 74, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::SetIntFlagValue( const char * flag_name , const int32_t new_val)",9, 76, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::SetDoubleFlagValue( const char * flag_name , const double new_val)",9, 78, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::SetBoolFlagValue( const char * flag_name , const bool new_val)",9, 74, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::SetStringFlagValue( const char * flag_name , const char * new_val)",9, 77, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::SafeAtoi( const char * str , int * val)",5, 50, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::SafeAtod( const char * str , double * val)",5, 53, 0, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::PrintCommandLineFlags()",40, 80, 13, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::ParseCommandLineFlags( const char * usage , int * argc , char ** * argv , const bool remove_flags)",172, 86, 2, 0
repos/cpp/tesseract/src/training/commandlineflags.cpp,"tesseract::ParseCommandLineFlags( const char * usage , int * argc , char ** * argv , const bool remove_flags)",5, 54, 27, 0
repos/cpp/tesseract/src/training/combine_lang_model.cpp,"main( int argc , char ** argv)",40, 80, 6, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::LSTMTester( int64_t max_memory)",2, 72, 4, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::LoadAllEvalData( const STRING & filenames_file)",9, 65, 0, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::LoadAllEvalData( const GenericVector<STRING> & filenames)",6, 77, 2, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::RunEvalAsync( int iteration , const double * training_errors , const TessdataManager & model_mgr , int training_stage)",27, 79, 4, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::RunEvalSync( int iteration , const double * training_errors , const TessdataManager & model_mgr , int training_stage , int verbosity)",43, 80, 4, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::ThreadFunc( void * lstmtester_void)",9, 70, 2, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::LockIfNotRunning()",6, 38, 0, 0
repos/cpp/tesseract/src/training/lstmtester.cpp,"tesseract::LSTMTester::UnlockRunning()",4, 36, 2, 0
repos/cpp/tesseract/src/training/validate_khmer.cpp,"tesseract::ValidateKhmer::ConsumeGraphemeIfValid()",67, 81, 2, 0
repos/cpp/tesseract/src/training/validate_khmer.cpp,"tesseract::ValidateKhmer::UnicodeToCharClass( char32 ch) const",17, 77, 2, 0
repos/cpp/tesseract/src/training/tessopt.cpp,"tessopt( int32_t argc , char * argv [ ] , const char * arglist)",27, 61, 0, 0
repos/cpp/tesseract/src/training/set_unicharset_properties.cpp,"main( int argc , char ** argv)",19, 73, 39, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::BoxChar( const char * utf8_str , int len)",2, 69, 4, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::~BoxChar()",1, 43, 0, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::AddBox( int x , int y , int width , int height)",3, 60, 0, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::GetDirection( int * num_rtl , int * num_ltr) const",22, 75, 10, 1
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::ReverseUnicodesInBox()",5, 68, 2, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::TranslateBoxes( int xshift , int yshift , std :: vector<BoxChar*> * boxes)",10, 61, 29, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::PrepareToWrite( std :: vector<BoxChar*> * boxes)",12, 76, 4, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::InsertNewlines( bool rtl_rules , bool vertical_rules , std :: vector<BoxChar*> * boxes)",62, 79, 8, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::InsertSpaces( bool rtl_rules , bool vertical_rules , std :: vector<BoxChar*> * boxes)",55, 78, 2, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::ReorderRTLText( std :: vector<BoxChar*> * boxes)",22, 74, 2, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::ContainsMostlyRTL( const std :: vector<BoxChar*> & boxes)",7, 70, 0, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::MostlyVertical( const std :: vector<BoxChar*> & boxes)",16, 70, 4, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::TotalByteLength( const std :: vector<BoxChar*> & boxes)",6, 67, 0, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::RotateBoxes( float rotation , int xcenter , int ycenter , int start_box , int end_box , std :: vector<BoxChar*> * boxes)",18, 68, 0, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::WriteTesseractBoxFile( const std :: string & filename , int height , const std :: vector<BoxChar*> & boxes)",5, 77, 0, 0
repos/cpp/tesseract/src/training/boxchar.cpp,"tesseract::BoxChar::GetTesseractBoxStr( int height , const std :: vector<BoxChar*> & boxes)",18, 78, 40, 0
repos/cpp/tesseract/src/training/text2image.cpp,"tesseract::SpacingProperties::SpacingProperties()",1, 59, 2, 0
repos/cpp/tesseract/src/training/text2image.cpp,"tesseract::SpacingProperties::SpacingProperties( int b , int a)",1, 71, 2, 0
repos/cpp/tesseract/src/training/text2image.cpp,"tesseract::IsWhitespaceBox( const BoxChar * boxchar)",4, 54, 0, 0
repos/cpp/tesseract/src/training/text2image.cpp,"tesseract::StringReplace( const std :: string & in , const std :: string & oldsub , const std :: string & newsub)",12, 89, 33, 0
repos/cpp/tesseract/src/training/text2image.cpp,"tesseract::ExtractFontProperties( const std :: string & utf8_text , StringRenderer * render , const std :: string & output_base)",99, 81, 4, 0
repos/cpp/tesseract/src/training/text2image.cpp,"tesseract::MakeIndividualGlyphs( Pix * pix , const std :: vector<BoxChar*> & vbox , const int input_tiff_page)",94, 80, 4, 0
repos/cpp/tesseract/src/training/text2image.cpp,"Main()",273, 81, 4, 0
repos/cpp/tesseract/src/training/text2image.cpp,"main( int argc , char ** argv)",24, 69, 4, 0
repos/cpp/tesseract/src/training/dawg2wordlist.cpp,"LoadSquishedDawg( const UNICHARSET & unicharset , const char * filename)",19, 76, 6, 0
repos/cpp/tesseract/src/training/dawg2wordlist.cpp,"WordOutputter::WordOutputter( FILE * file)",1, 45, 2, 0
repos/cpp/tesseract/src/training/dawg2wordlist.cpp,"WordOutputter::output_word( const char * word)",1, 71, 2, 0
repos/cpp/tesseract/src/training/dawg2wordlist.cpp,"WriteDawgAsWordlist( const UNICHARSET & unicharset , const tesseract :: Dawg * dawg , const char * outfile_name)",15, 73, 6, 0
repos/cpp/tesseract/src/training/dawg2wordlist.cpp,"main( int argc , char * argv [ ])",29, 86, 4, 0
repos/cpp/tesseract/src/training/validate_javanese.cpp,"tesseract::ValidateJavanese::ConsumeGraphemeIfValid()",25, 81, 8, 0
repos/cpp/tesseract/src/training/validate_javanese.cpp,"tesseract::ValidateJavanese::ConsumeViramaIfValid( IndicPair joiner , bool post_matra)",69, 81, 0, 0
repos/cpp/tesseract/src/training/validate_javanese.cpp,"tesseract::ValidateJavanese::ConsumeConsonantHeadIfValid()",59, 82, 4, 0
repos/cpp/tesseract/src/training/validate_javanese.cpp,"tesseract::ValidateJavanese::ConsumeConsonantTailIfValid()",33, 79, 4, 0
repos/cpp/tesseract/src/training/validate_javanese.cpp,"tesseract::ValidateJavanese::ConsumeVowelIfValid()",13, 67, 2, 0
repos/cpp/tesseract/src/training/validate_javanese.cpp,"tesseract::ValidateJavanese::UnicodeToCharClass( char32 ch) const",18, 90, 2, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"CompareProtos( PROTO p1 , PROTO p2)",50, 77, 2, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"ComputeMergedProto( PROTO p1 , PROTO p2 , float w1 , float w2 , PROTO MergedProto)",17, 59, 2, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"FindClosestExistingProto( CLASS_TYPE Class , int NumMerged [ ] , PROTOTYPE * Prototype)",28, 64, 0, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"MakeNewFromOld( PROTO New , PROTOTYPE * Old)",7, 49, 0, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"SubfeatureEvidence( FEATURE Feature , PROTO Proto)",15, 63, 2, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"EvidenceOf( double Similarity)",13, 61, 4, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"DummyFastMatch( FEATURE Feature , PROTO Proto)",22, 67, 2, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"ComputePaddedBoundingBox( PROTO Proto , float TangentPad , float OrthogonalPad , FRECT * BoundingBox)",16, 74, 31, 0
repos/cpp/tesseract/src/training/mergenf.cpp,"PointInside( FRECT * Rectangle , float X , float Y)",6, 55, 0, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::is_hyphen_punc( const char32 ch)",17, 70, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::is_single_quote( const char32 ch)",17, 80, 6, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::is_double_quote( const char32 ch)",18, 81, 6, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::NormalizeUTF8ToUTF32( UnicodeNormMode u_mode , OCRNorm ocr_normalize , const char * str8 , std :: vector<char32> * normed32)",33, 80, 0, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::StripJoiners( std :: vector<char32> * str32)",13, 55, 0, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::NormalizeUTF8String( UnicodeNormMode u_mode , OCRNorm ocr_normalize , GraphemeNorm grapheme_normalize , const char * str8 , std :: string * normalized)",20, 76, 25, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::NormalizeCleanAndSegmentUTF8( UnicodeNormMode u_mode , OCRNorm ocr_normalize , GraphemeNormMode g_mode , bool report_errors , const char * str8 , std :: vector<std::string> * graphemes)",30, 81, 0, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::OCRNormalize( char32 ch)",9, 33, 0, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::IsOCREquivalent( char32 ch1 , char32 ch2)",3, 49, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::IsValidCodepoint( const char32 ch)",4, 83, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::IsWhitespace( const char32 ch)",5, 77, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::IsUTF8Whitespace( const char * text)",3, 51, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::SpanUTF8Whitespace( const char * text)",9, 72, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::SpanUTF8NotWhitespace( const char * text)",9, 72, 2, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::IsInterchangeValid( const char32 ch)",22, 81, 9, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::IsInterchangeValid7BitAscii( const char32 ch)",5, 69, 9, 0
repos/cpp/tesseract/src/training/normstrngs.cpp,"tesseract::FullwidthToHalfwidth( const char32 ch)",21, 79, 2, 0
repos/cpp/tesseract/src/training/lstmeval.cpp,"main( int argc , char ** argv)",45, 81, 4, 0
repos/cpp/tesseract/src/training/lstmtraining.cpp,"main( int argc , char ** argv)",149, 81, 8, 0
repos/cpp/tesseract/src/training/classifier_tester.cpp,"InitializeClassifier( const char * classifer_name , const UNICHARSET & unicharset , int argc , char ** argv , tesseract :: TessBaseAPI ** api)",46, 79, 4, 0
repos/cpp/tesseract/src/training/classifier_tester.cpp,"main( int argc , char ** argv)",29, 92, 35, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::PangoFontInfo()",4, 56, 4, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::PangoFontInfo( const std :: string & desc)",7, 58, 4, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::Clear()",9, 40, 4, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::~PangoFontInfo()",1, 72, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::DescriptionName() const",7, 60, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::SoftInitFontConfig()",6, 57, 23, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::HardInitFontConfig( const std :: string & fonts_dir , const std :: string & cache_dir)",39, 82, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::ListFontFamilies( PangoFontFamily ** * families , int * n_families)",7, 64, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::ParseFontDescription( const PangoFontDescription * desc)",21, 77, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::ParseFontDescriptionName( const std :: string & name)",6, 81, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::ToPangoFont() const",14, 63, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::CoversUTF8Text( const char * utf8_text , int byte_length) const",26, 83, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::my_strnmove( char * dest , const char * src , size_t n)",19, 74, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::DropUncoveredChars( std :: string * utf8_text) const",48, 81, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::GetSpacingProperties( const std :: string & utf8_char , int * x_bearing , int * x_advance) const",39, 81, 41, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::CanRenderString( const char * utf8_word , int len) const",4, 76, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::PangoFontInfo::CanRenderString( const char * utf8_word , int len , std :: vector<std::string> * graphemes) const",114, 81, 36, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::IsAvailableFont( const char * input_query_desc , std :: string * best_match)",47, 78, 4, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::ShouldIgnoreFontFamilyName( const char * query)",10, 76, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::ListAvailableFonts()",46, 71, 4, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::CharCoverageMapToBitmap( PangoCoverage * coverage , std :: vector<bool> * unichar_bitmap)",13, 73, 36, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::GetAllRenderableCharacters( std :: vector<bool> * unichar_bitmap)",4, 80, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::GetAllRenderableCharacters( const std :: string & font_name , std :: vector<bool> * unichar_bitmap)",12, 80, 43, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::GetAllRenderableCharacters( const std :: vector<std::string> & fonts , std :: vector<bool> * unichar_bitmap)",20, 82, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::FontScore( const std :: unordered_map<char32,int64_t> & ch_map , const std :: string & fontname , int * raw_score , std :: vector<bool> * ch_flags)",33, 80, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::BestFonts( const std :: unordered_map<char32,int64_t> & ch_map , std :: vector<std::pair<const char*,std::vector<bool>>> * fonts)",61, 80, 2, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::SelectFont( const char * utf8_word , const int utf8_len , std :: string * font_name , std :: vector<std::string> * graphemes)",5, 90, 27, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::SelectFont( const char * utf8_word , const int utf8_len , const std :: vector<std::string> & all_fonts , std :: string * font_name , std :: vector<std::string> * graphemes)",19, 90, 27, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::ReInit()",1, 55, 0, 0
repos/cpp/tesseract/src/training/pango_font_info.cpp,"tesseract::FontUtils::PangoFontTypeInfo()",25, 79, 2, 0
repos/cpp/tesseract/src/training/validate_myanmar.cpp,"tesseract::ValidateMyanmar::ConsumeGraphemeIfValid()",33, 79, 2, 0
repos/cpp/tesseract/src/training/validate_myanmar.cpp,"tesseract::ValidateMyanmar::UnicodeToCharClass( char32 ch) const",4, 76, 0, 0
repos/cpp/tesseract/src/training/validate_myanmar.cpp,"tesseract::ValidateMyanmar::ConsumeSubscriptIfPresent()",12, 60, 2, 0
repos/cpp/tesseract/src/training/validate_myanmar.cpp,"tesseract::ValidateMyanmar::ConsumeOptionalSignsIfPresent()",54, 78, 2, 0
repos/cpp/tesseract/src/training/validate_myanmar.cpp,"tesseract::ValidateMyanmar::IsMyanmarLetter( char32 ch)",10, 78, 9, 0
repos/cpp/tesseract/src/training/validate_myanmar.cpp,"tesseract::ValidateMyanmar::IsMyanmarOther( char32 ch)",10, 77, 2, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::WriteFile( const std :: string & output_dir , const std :: string & lang , const std :: string & suffix , const GenericVector<char> & data , FileWriter writer)",18, 75, 15, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::ReadFile( const std :: string & filename , FileReader reader)",12, 66, 0, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::WriteUnicharset( const UNICHARSET & unicharset , const std :: string & output_dir , const std :: string & lang , FileWriter writer , TessdataManager * traineddata)",11, 82, 0, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::WriteRecoder( const UNICHARSET & unicharset , bool pass_through , const std :: string & output_dir , const std :: string & lang , FileWriter writer , STRING * radical_table_data , TessdataManager * traineddata)",38, 81, 2, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::WriteDawg( const GenericVector<STRING> & words , const UNICHARSET & unicharset , Trie :: RTLReversePolicy reverse_policy , TessdataType file_type , TessdataManager * traineddata)",17, 78, 22, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::WriteDawgs( const GenericVector<STRING> & words , const GenericVector<STRING> & puncs , const GenericVector<STRING> & numbers , bool lang_is_rtl , const UNICHARSET & unicharset , TessdataManager * traineddata)",35, 79, 23, 0
repos/cpp/tesseract/src/training/lang_model_helpers.cpp,"tesseract::CombineLangModel( const UNICHARSET & unicharset , const std :: string & script_dir , const std :: string & version_str , const std :: string & output_dir , const std :: string & lang , bool pass_through_recoder , const GenericVector<STRING> & words , const GenericVector<STRING> & puncs , const GenericVector<STRING> & numbers , bool lang_is_rtl , FileReader reader , FileWriter writer)",54, 84, 21, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::ValidateGrapheme::ConsumeGraphemeIfValid()",44, 85, 2, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::ValidateGrapheme::UnicodeToCharClass( char32 ch) const",15, 79, 2, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::ValidateGrapheme::IsBadlyFormed( char32 prev_ch , char32 ch)",13, 79, 4, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::ValidateGrapheme::IsBadlyFormedIndicVowel( char32 prev_ch , char32 ch)",17, 76, 0, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::IsThaiConsonant( char32 ch)",1, 78, 0, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::IsThaiBeforeConsonantVowel( char32 ch)",3, 52, 0, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::IsThaiToneMark( char32 ch)",1, 77, 0, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::IsThaiTonableVowel( char32 ch)",3, 54, 2, 0
repos/cpp/tesseract/src/training/validate_grapheme.cpp,"tesseract::ValidateGrapheme::IsBadlyFormedThai( char32 prev_ch , char32 ch)",42, 80, 2, 0
repos/cpp/tesseract/src/training/icuerrorcode.cpp,"tesseract::IcuErrorCode::~IcuErrorCode()",5, 32, 0, 0
repos/cpp/tesseract/src/training/combine_tessdata.cpp,"main( int argc , char ** argv)",134, 80, 4, 0
repos/cpp/tesseract/src/training/unicharset_extractor.cpp,"tesseract::AddStringsToUnicharset( const GenericVector<STRING> & strings , int norm_mode , UNICHARSET * unicharset)",19, 79, 37, 0
repos/cpp/tesseract/src/training/unicharset_extractor.cpp,"tesseract::Main( int argc , char ** argv)",30, 77, 6, 0
repos/cpp/tesseract/src/training/unicharset_extractor.cpp,"main( int argc , char ** argv)",19, 80, 4, 0
repos/cpp/tesseract/src/training/unicharset_training_utils.cpp,"tesseract::SetupBasicProperties( bool report_errors , bool decompose , UNICHARSET * unicharset)",101, 79, 6, 0
repos/cpp/tesseract/src/training/unicharset_training_utils.cpp,"tesseract::SetScriptProperties( const std :: string & script_dir , UNICHARSET * unicharset)",19, 82, 0, 0
repos/cpp/tesseract/src/training/unicharset_training_utils.cpp,"tesseract::GetXheightString( const std :: string & script_dir , const UNICHARSET & unicharset)",13, 77, 22, 0
repos/cpp/tesseract/src/training/unicharset_training_utils.cpp,"tesseract::SetPropertiesForInputFile( const std :: string & script_dir , const std :: string & input_unicharset_file , const std :: string & output_unicharset_file , const std :: string & output_xheights_file)",25, 78, 2, 0
repos/cpp/tesseract/src/training/degradeimage.cpp,"tesseract::DegradeImage( Pix * input , int exposure , TRand * randomizer , float * rotation)",82, 79, 2, 0
repos/cpp/tesseract/src/training/degradeimage.cpp,"tesseract::PrepareDistortedPix( const Pix * pix , bool perspective , bool invert , bool white_noise , bool smooth_noise , bool blur , int box_reduction , TRand * randomizer , GenericVector<TBOX> * boxes)",37, 76, 2, 0
repos/cpp/tesseract/src/training/degradeimage.cpp,"tesseract::GeneratePerspectiveDistortion( int width , int height , TRand * randomizer , Pix ** pix , GenericVector<TBOX> * boxes)",41, 81, 6, 0
repos/cpp/tesseract/src/training/degradeimage.cpp,"tesseract::ProjectiveCoeffs( int width , int height , TRand * randomizer , float ** im_coeffs , float ** box_coeffs)",44, 80, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::IsCombiner( int ch)",6, 52, 10, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::EncodeAsUTF8( const char32 ch32)",4, 56, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::RandBool( const double prob , TRand * rand)",5, 55, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::CairoARGB32ToPixFormat( cairo_surface_t * surface)",18, 75, 4, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::StringRenderer( const std :: string & font_desc , int page_width , int page_height)",34, 77, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::set_font( const std :: string & desc)",5, 57, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::set_resolution( const int resolution)",4, 60, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::set_underline_start_prob( const double frac)",3, 67, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::set_underline_continuation_prob( const double frac)",3, 74, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::~StringRenderer()",5, 36, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::InitPangoCairo()",21, 74, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::SetLayoutProperties()",45, 76, 4, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::FreePangoCairo()",14, 40, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::SetWordUnderlineAttributes( const std :: string & page_text)",44, 80, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::FindFirstPageBreakOffset( const char * text , int text_length)",43, 76, 4, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::GetBoxes() const",3, 64, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::GetPageBoxes() const",3, 45, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::RotatePageBoxes( float rotation)",4, 68, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::ClearBoxes()",5, 69, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::GetBoxesStr()",4, 63, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::WriteAllBoxes( const std :: string & filename)",4, 69, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::GetClusterStrings( std :: vector<std::string> * cluster_text)",44, 83, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::MergeBoxCharsToWords( std :: vector<BoxChar*> * boxchars)",49, 80, 6, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::ComputeClusterBoxes()",140, 81, 4, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::CorrectBoxPositionsToLayout( std :: vector<BoxChar*> * boxchars)",12, 76, 8, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::StripUnrenderableWords( std :: string * utf8_text) const",26, 75, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::RenderToGrayscaleImage( const char * text , int text_length , Pix ** pix)",10, 78, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::RenderToBinaryImage( const char * text , int text_length , int threshold , Pix ** pix)",14, 75, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::InsertWordJoiners( const std :: string & text)",21, 81, 2, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::ConvertBasicLatinToFullwidthLatin( const std :: string & str)",18, 88, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::ConvertFullwidthLatinToBasicLatin( const std :: string & str)",17, 88, 0, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::RenderToImage( const char * text , int text_length , Pix ** pix)",79, 80, 4, 0
repos/cpp/tesseract/src/training/stringrenderer.cpp,"tesseract::StringRenderer::RenderAllFontsToImage( double min_coverage , const char * text , int text_length , std :: string * font_used , Pix ** image)",72, 81, 42, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::ValidateCleanAndSegment( GraphemeNormMode g_mode , bool report_errors , const std :: vector<char32> & src , std :: vector<std::vector<char32>> * dest)",29, 81, 4, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::ScriptValidator( ViramaScript script , bool report_errors)",20, 76, 54, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::ValidateCleanAndSegmentInternal( GraphemeNormMode g_mode , const std :: vector<char32> & src , std :: vector<std::vector<char32>> * dest)",15, 61, 4, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::MoveResultsToDest( GraphemeNormMode g_mode , std :: vector<std::vector<char32>> * dest)",20, 80, 4, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::CmpPairSecond( const std :: pair<int,int> & p1 , const std :: pair<int,int> & p2)",4, 59, 26, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::MostFrequentViramaScript( const std :: vector<char32> & utf32)",34, 85, 4, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::IsVirama( char32 unicode)",8, 74, 2, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::IsVedicAccent( char32 unicode)",5, 54, 10, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::IsSubscriptScript() const",7, 47, 9, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::ComputeClassCodes( const std :: vector<char32> & text)",6, 69, 0, 0
repos/cpp/tesseract/src/training/validator.cpp,"tesseract::Validator::Clear()",7, 26, 0, 0
repos/cpp/tesseract/src/training/ambiguous_words.cpp,"main( int argc , char ** argv)",50, 80, 4, 0
repos/cpp/tesseract/src/training/wordlist2dawg.cpp,"main( int argc , char ** argv)",73, 79, 2, 0
repos/cpp/tesseract/src/training/validate_indic.cpp,"tesseract::ValidateIndic::ConsumeGraphemeIfValid()",25, 81, 8, 0
repos/cpp/tesseract/src/training/validate_indic.cpp,"tesseract::ValidateIndic::UnicodeToCharClass( char32 ch) const",51, 80, 2, 0
repos/cpp/tesseract/src/training/validate_indic.cpp,"tesseract::ValidateIndic::ConsumeViramaIfValid( IndicPair joiner , bool post_matra)",69, 80, 8, 0
repos/cpp/tesseract/src/training/validate_indic.cpp,"tesseract::ValidateIndic::ConsumeConsonantHeadIfValid()",59, 82, 4, 0
repos/cpp/tesseract/src/training/validate_indic.cpp,"tesseract::ValidateIndic::ConsumeConsonantTailIfValid()",28, 79, 4, 0
repos/cpp/tesseract/src/training/validate_indic.cpp,"tesseract::ValidateIndic::ConsumeVowelIfValid()",13, 67, 2, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::EncodeAsUTF8( const char32 ch32)",4, 56, 2, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::LigatureTable::Get()",7, 42, 4, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::LigatureTable::LigatureTable()",2, 77, 33, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::LigatureTable::Init()",47, 80, 6, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::LigatureTable::RemoveLigatures( const std :: string & str) const",18, 80, 2, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::LigatureTable::RemoveCustomLigatures( const std :: string & str) const",25, 81, 0, 0
repos/cpp/tesseract/src/training/ligature_table.cpp,"tesseract::LigatureTable::AddLigatures( const std :: string & str , const PangoFontInfo * font) const",37, 80, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"ParseArguments( int * argc , char ** * argv)",10, 69, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"ParseArguments( int * argc , char ** * argv)",29, 90, 10, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"tesseract::LoadShapeTable( const STRING & file_prefix)",23, 59, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"tesseract::WriteShapeTable( const STRING & file_prefix , const ShapeTable & shape_table)",15, 81, 0, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"tesseract::LoadTrainingData( int argc , const char * const * argv , bool replication , ShapeTable ** shape_table , STRING * file_prefix)",98, 80, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"GetNextFilename( int argc , const char * const * argv)",6, 66, 0, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"FindList( LIST List , char * Label)",12, 51, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"NewLabeledList( const char * Label)",12, 66, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"ReadTrainingSamples( const FEATURE_DEFS_STRUCT & feature_definitions , const char * feature_name , int max_samples , UNICHARSET * unicharset , FILE * file , LIST * training_samples)",53, 76, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"FreeTrainingSamples( LIST CharList)",17, 68, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"FreeLabeledList( LABELEDLIST LabeledList)",5, 48, 0, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"SetUpForClustering( const FEATURE_DEFS_STRUCT & FeatureDefs , LABELEDLIST char_sample , const char * program_feature_type)",32, 80, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"MergeInsignificantProtos( LIST ProtoList , const char * label , CLUSTERER * Clusterer , CLUSTERCONFIG * clusterconfig)",65, 81, 45, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"CleanUpUnusedData( LIST ProtoList)",16, 54, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"RemoveInsignificantProtos( LIST ProtoList , bool KeepSigProtos , bool KeepInsigProtos , int N)",63, 78, 8, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"FindClass( LIST List , const char * Label)",12, 54, 0, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"NewLabeledClass( const char * Label)",10, 66, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"FreeLabeledClassList( LIST ClassList)",14, 60, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"SetUpForFloat2Int( const UNICHARSET & unicharset , LIST LabeledClassList)",61, 85, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"Normalize( float * Values)",15, 48, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"FreeNormProtoList( LIST CharList)",14, 59, 2, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"AddToNormProtosList( LIST * NormProtoList , LIST ProtoList , char * CharName)",16, 66, 4, 0
repos/cpp/tesseract/src/training/commontraining.cpp,"NumberOfProtos( LIST ProtoList , bool CountSigProtos , bool CountInsigProtos)",12, 58, 4, 0
repos/cpp/tesseract/src/ccmain/pagesegmain.cpp,"tesseract::RemoveEnclosingCircle( Pix * pixs)",34, 69, 2, 0
repos/cpp/tesseract/src/ccmain/pagesegmain.cpp,"tesseract::Tesseract::SegmentPage( const STRING * input_file , BLOCK_LIST * blocks , Tesseract * osd_tess , OSResults * osr)",76, 79, 2, 0
repos/cpp/tesseract/src/ccmain/pagesegmain.cpp,"tesseract::Tesseract::AutoPageSeg( PageSegMode pageseg_mode , BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks , BLOBNBOX_LIST * diacritic_blobs , Tesseract * osd_tess , OSResults * osr)",43, 80, 27, 0
repos/cpp/tesseract/src/ccmain/pagesegmain.cpp,"tesseract::AddAllScriptsConverted( const UNICHARSET & sid_set , const UNICHARSET & osd_set , GenericVector<int> * allowed_ids)",10, 71, 6, 0
repos/cpp/tesseract/src/ccmain/pagesegmain.cpp,"tesseract::Tesseract::SetupPageSegAndDetectOrientation( PageSegMode pageseg_mode , BLOCK_LIST * blocks , Tesseract * osd_tess , OSResults * osr , TO_BLOCK_LIST * to_blocks , Pix ** photo_mask_pix , Pix ** music_mask_pix)",138, 82, 4, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"BlnEventHandler::Notify( const SVEvent * sv_event)",6, 62, 6, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"bln_word_window_handle()",13, 64, 4, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"build_image_window( int width , int height)",10, 67, 29, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"display_bln_lines( ScrollView * window , ScrollView :: Color colour , float scale_factor , float y_offset , float minx , float maxx)",13, 76, 0, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"PGEventHandler::Notify( const SVEvent * event)",15, 71, 5, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::build_menu_new()",45, 75, 2, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::do_re_display( bool(tesseract::Tesseract::*word_painter)(PAGE_RES_IT*pr_it))",20, 83, 6, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::pgeditor_main( int width , int height , PAGE_RES * page_res)",27, 75, 0, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"pgeditor_msg( const char * msg)",4, 38, 0, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"pgeditor_show_point( SVEvent * event)",4, 68, 2, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::process_cmd_win_event( int32_t cmd_event , char * new_value)",161, 79, 0, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::process_image_event( const SVEvent & event)",72, 75, 33, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::debug_word( PAGE_RES * page_res , const TBOX & selection_box)",6, 80, 2, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"show_point( PAGE_RES * page_res , float x , float y)",38, 81, 2, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::word_blank_and_set_display( PAGE_RES_IT * pr_it)",5, 73, 2, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::word_bln_display( PAGE_RES_IT * pr_it)",24, 77, 34, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::word_display( PAGE_RES_IT * pr_it)",154, 78, 6, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::word_dumper( PAGE_RES_IT * pr_it)",17, 75, 6, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::word_set_display( PAGE_RES_IT * pr_it)",11, 77, 2, 0
repos/cpp/tesseract/src/ccmain/pgedit.cpp,"tesseract::Tesseract::blob_feature_display( PAGE_RES * page_res , const TBOX & selection_box)",38, 80, 4, 0
repos/cpp/tesseract/src/ccmain/linerec.cpp,"tesseract::Tesseract::TrainLineRecognizer( const STRING & input_imagename , const STRING & output_basename , BLOCK_LIST * block_list)",27, 84, 2, 0
repos/cpp/tesseract/src/ccmain/linerec.cpp,"tesseract::Tesseract::TrainFromBoxes( const GenericVector<TBOX> & boxes , const GenericVector<STRING> & texts , BLOCK_LIST * block_list , DocumentData * training_data)",51, 88, 6, 0
repos/cpp/tesseract/src/ccmain/linerec.cpp,"tesseract::Tesseract::GetLineData( const TBOX & line_box , const GenericVector<TBOX> & boxes , const GenericVector<STRING> & texts , int start_box , int end_box , const BLOCK & block)",27, 76, 2, 0
repos/cpp/tesseract/src/ccmain/linerec.cpp,"tesseract::Tesseract::GetRectImage( const TBOX & box , const BLOCK & block , int padding , TBOX * revised_box) const",55, 78, 2, 0
repos/cpp/tesseract/src/ccmain/linerec.cpp,"tesseract::Tesseract::LSTMRecognizeWord( const BLOCK & block , ROW * row , WERD_RES * word , PointerVector<WERD_RES> * words)",24, 80, 0, 0
repos/cpp/tesseract/src/ccmain/linerec.cpp,"tesseract::Tesseract::SearchWords( PointerVector<WERD_RES> * words)",50, 82, 16, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"LeadingUnicharsToChopped( WERD_RES * word , int num_unichars)",6, 72, 0, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"TrailingUnicharsToChopped( WERD_RES * word , int num_unichars)",6, 73, 0, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"tesseract::YOutlierPieces( WERD_RES * word , int rebuilt_blob_index , int super_y_bottom , int sub_y_top , ScriptPos * leading_pos , int * num_leading_outliers , ScriptPos * trailing_pos , int * num_trailing_outliers)",45, 78, 27, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"tesseract::Tesseract::SubAndSuperscriptFix( WERD_RES * word)",127, 79, 6, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"tesseract::Tesseract::GetSubAndSuperscriptCandidates( const WERD_RES * word , int * num_rebuilt_leading , ScriptPos * leading_pos , float * leading_certainty , int * num_rebuilt_trailing , ScriptPos * trailing_pos , float * trailing_certainty , float * avg_certainty , float * unlikely_threshold)",103, 79, 4, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"tesseract::Tesseract::TrySuperscriptSplits( int num_chopped_leading , float leading_certainty , ScriptPos leading_pos , int num_chopped_trailing , float trailing_certainty , ScriptPos trailing_pos , WERD_RES * word , bool * is_good , int * retry_rebuild_leading , int * retry_rebuild_trailing)",119, 79, 4, 0
repos/cpp/tesseract/src/ccmain/superscript.cpp,"tesseract::Tesseract::BelievableSuperscript( bool debug , const WERD_RES & word , float certainty_threshold , int * left_ok , int * right_ok) const",88, 78, 8, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::c_blob_comparator( const void * blob1p , const void * blob2p)",9, 74, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::fix_fuzzy_spaces( ETEXT_DESC * monitor , int32_t word_count , PAGE_RES * page_res)",96, 79, 17, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::fix_fuzzy_space_list( WERD_RES_LIST & best_perm , ROW * row , BLOCK * block)",29, 67, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"initialise_search( WERD_RES_LIST & src_list , WERD_RES_LIST & new_list)",16, 75, 0, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::match_current_words( WERD_RES_LIST & words , ROW * row , BLOCK * block)",17, 78, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::eval_word_spacing( WERD_RES_LIST & word_res_list)",103, 81, 6, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::digit_or_numeric_punct( WERD_RES * word , int char_position)",14, 76, 0, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"transform_to_next_perm( WERD_RES_LIST & words)",75, 77, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::dump_words( WERD_RES_LIST & perm , int16_t score , int16_t mode , bool improved)",53, 78, 18, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::fixspace_thinks_word_done( WERD_RES * word)",23, 80, 6, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::fix_sp_fp_word( WERD_RES_IT & word_res_it , ROW * row , BLOCK * block)",33, 67, 0, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::fix_noisy_space_list( WERD_RES_LIST & best_perm , ROW * row , BLOCK * block)",39, 76, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::break_noisiest_blob_word( WERD_RES_LIST & words)",64, 77, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::worst_noise_blob( WERD_RES * word_res , float * worst_noise_score)",79, 81, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::blob_noise_score( TBLOB * blob)",33, 69, 2, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"fixspace_dbg( WERD_RES * word)",24, 77, 6, 0
repos/cpp/tesseract/src/ccmain/fixspace.cpp,"tesseract::Tesseract::fp_eval_word_spacing( WERD_RES_LIST & word_res_list)",34, 77, 2, 0
repos/cpp/tesseract/src/ccmain/pagewalk.cpp,"tesseract::Tesseract::process_selected_words( PAGE_RES * page_res , TBOX & selection_box , bool(tesseract::Tesseract::*word_processor)(PAGE_RES_IT*pr_it))",13, 77, 8, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::safe_dict_word( const WERD_RES * werd_res)",5, 63, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::set_done( WERD_RES * word , int16_t pass)",22, 80, 4, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::make_reject_map( WERD_RES * word , ROW * row , int16_t pass)",87, 82, 8, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"reject_blanks( WERD_RES * word)",11, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::reject_I_1_L( WERD_RES * word)",13, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"reject_poor_matches( WERD_RES * word)",9, 65, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"compute_reject_threshold( WERD_CHOICE * word)",26, 62, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::reject_edge_blobs( WERD_RES * word)",22, 75, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::one_ell_conflict( WERD_RES * word_res , bool update_map)",175, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::first_alphanum_index( const char * word , const char * word_lengths)",12, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::first_alphanum_offset( const char * word , const char * word_lengths)",12, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::alpha_count( const char * word , const char * word_lengths)",12, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::word_contains_non_1_digit( const char * word , const char * word_lengths)",12, 79, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::dont_allow_1Il( WERD_RES * word)",30, 71, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::count_alphanums( WERD_RES * word_res)",12, 75, 12, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::reject_mostly_rejects( WERD_RES * word)",7, 80, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::repeated_nonalphanum_wd( WERD_RES * word , ROW * row)",24, 74, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::safe_dict_word( const WERD_RES * werd_res)",5, 63, 2, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::flip_hyphens( WERD_RES * word_res)",53, 79, 6, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::flip_0O( WERD_RES * word_res)",111, 77, 12, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::non_O_upper( const UNICHARSET & ch_set , UNICHAR_ID unichar_id)",3, 79, 0, 0
repos/cpp/tesseract/src/ccmain/reject.cpp,"tesseract::Tesseract::non_0_digit( const UNICHARSET & ch_set , UNICHAR_ID unichar_id)",3, 79, 0, 0
repos/cpp/tesseract/src/ccmain/par_control.cpp,"tesseract::BlobData::BlobData()",1, 50, 2, 0
repos/cpp/tesseract/src/ccmain/par_control.cpp,"tesseract::BlobData::BlobData( int index , Tesseract * tess , const WERD_RES & word)",4, 61, 2, 0
repos/cpp/tesseract/src/ccmain/par_control.cpp,"tesseract::Tesseract::PrerecAllWordsPar( const GenericVector<WordData> & words)",32, 83, 10, 0
repos/cpp/tesseract/src/ccmain/tessedit.cpp,"tesseract::Tesseract::read_config_file( const char * filename , SetParamConstraint constraint)",20, 73, 2, 0
repos/cpp/tesseract/src/ccmain/tessedit.cpp,"tesseract::Tesseract::init_tesseract_lang_data( const char * arg0 , const char * textbase , const char * language , OcrEngineMode oem , char ** configs , int configs_size , const GenericVector<STRING> * vars_vec , const GenericVector<STRING> * vars_values , bool set_only_non_debug_params , TessdataManager * mgr)",398, 81, 39, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::LTRResultIterator( PAGE_RES * page_res , Tesseract * tesseract , int scale , int scaled_yres , int rect_left , int rect_top , int rect_width , int rect_height)",8, 81, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::GetUTF8Text( PageIteratorLevel level) const",36, 75, 14, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::SetLineSeparator( const char * new_line)",3, 65, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::SetParagraphSeparator( const char * new_para)",3, 70, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::Confidence( PageIteratorLevel level) const",53, 77, 15, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::RowAttributes( float * row_height , float * descenders , float * ascenders) const",7, 77, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordFontAttributes( bool * is_bold , bool * is_italic , bool * is_underlined , bool * is_monospace , bool * is_serif , bool * is_smallcaps , int * pointsize , int * font_id) const",43, 81, 12, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordRecognitionLanguage() const",5, 67, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordDirection() const",9, 65, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordIsFromDictionary() const",6, 71, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::BlanksBeforeWord() const",4, 50, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordIsNumeric() const",5, 68, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::HasBlamerInfo() const",4, 76, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::GetParamsTrainingBundle() const",5, 75, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::GetBlamerDebug() const",3, 56, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::GetBlamerMisadaptionDebug() const",3, 67, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::HasTruthString() const",8, 68, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::EquivalentToTruth( const char * str) const",6, 67, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordTruthUTF8Text() const",8, 65, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordNormedUTF8Text() const",14, 76, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::WordLattice( int * lattice_size) const",6, 70, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::SymbolIsSuperscript() const",6, 66, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::SymbolIsSubscript() const",5, 80, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::LTRResultIterator::SymbolIsDropcap() const",5, 78, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::ChoiceIterator( const LTRResultIterator & result_it)",27, 81, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::~ChoiceIterator()",1, 57, 0, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::Next()",15, 57, 8, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::GetUTF8Text() const",10, 61, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::Confidence() const",12, 66, 4, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::Timesteps() const",8, 74, 2, 0
repos/cpp/tesseract/src/ccmain/ltrresultiterator.cpp,"tesseract::ChoiceIterator::filterSpaces()",21, 74, 4, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::ResultIterator( const LTRResultIterator & resit)",14, 64, 6, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::StartOfParagraph( const LTRResultIterator & resit)",4, 50, 0, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::ParagraphIsLtr() const",3, 46, 0, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::CurrentParagraphIsLtr() const",52, 79, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::CalculateBlobOrder( GenericVector<int> * blob_indices) const",97, 78, 4, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::PrintScriptDirs( const GenericVector<StrongScriptDirection> & dirs)",12, 80, 0, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::CalculateTextlineOrder( bool paragraph_is_ltr , const LTRResultIterator & resit , GenericVectorEqEq<int> * word_indices) const",7, 78, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::CalculateTextlineOrder( bool paragraph_is_ltr , const LTRResultIterator & resit , GenericVector<StrongScriptDirection> * dirs_arg , GenericVectorEqEq<int> * word_indices) const",21, 76, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::CalculateTextlineOrder( bool paragraph_is_ltr , const GenericVector<StrongScriptDirection> & word_dirs , GenericVectorEqEq<int> * reading_order)",70, 79, 8, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::LTRWordIndex() const",10, 48, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::MoveToLogicalStartOfWord()",10, 60, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::IsAtFinalSymbolOfWord() const",6, 69, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::IsAtFirstSymbolOfWord() const",6, 65, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::AppendSuffixMarks( STRING * text) const",30, 75, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::MoveToLogicalStartOfTextline()",19, 75, 4, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::Begin()",7, 55, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::Next( PageIteratorLevel level)",75, 80, 10, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::IsAtBeginningOf( PageIteratorLevel level) const",30, 77, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::IsAtFinalElement( PageIteratorLevel level , PageIteratorLevel element) const",19, 77, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::BlanksBeforeWord() const",4, 77, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::GetUTF8Text( PageIteratorLevel level) const",42, 72, 8, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::GetRawLSTMTimesteps() const",7, 46, 0, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::GetBestLSTMSymbolChoices() const",7, 53, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::GetSegmentedLSTMTimesteps() const",7, 54, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::AppendUTF8WordText( STRING * text) const",16, 62, 0, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::IterateAndAppendUTF8TextlineText( STRING * text)",43, 76, 4, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::AppendUTF8ParagraphText( STRING * text) const",9, 73, 2, 0
repos/cpp/tesseract/src/ccmain/resultiterator.cpp,"tesseract::ResultIterator::BidiDebug( int min_level) const",8, 54, 0, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::output_pass( PAGE_RES_IT & page_res_it , const TBOX * target_word_box)",48, 75, 41, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::write_results( PAGE_RES_IT & page_res_it , char newline_type , bool force_eol)",106, 84, 4, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"determine_newline_type( WERD * word , BLOCK * block , WERD * next_word , BLOCK * next_block)",31, 76, 2, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::get_rep_char( WERD_RES * word)",11, 80, 0, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::set_unlv_suspects( WERD_RES * word_res)",92, 78, 2, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::count_alphas( const WERD_CHOICE & word)",8, 60, 4, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::count_alphanums( const WERD_CHOICE & word)",9, 62, 0, 0
repos/cpp/tesseract/src/ccmain/output.cpp,"tesseract::Tesseract::acceptable_number_string( const char * s , const char * lengths)",30, 77, 13, 0
repos/cpp/tesseract/src/ccmain/tessbox.cpp,"tesseract::Tesseract::tess_segment_pass_n( int pass_n , WERD_RES * word)",22, 66, 0, 0
repos/cpp/tesseract/src/ccmain/tessbox.cpp,"tesseract::Tesseract::tess_acceptable_word( WERD_RES * word)",3, 55, 0, 0
repos/cpp/tesseract/src/ccmain/tessbox.cpp,"tesseract::Tesseract::tess_add_doc_word( WERD_CHOICE * word_choice)",3, 62, 0, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::DocQualCallbacks::DocQualCallbacks( WERD_RES * word0)",2, 62, 4, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::DocQualCallbacks::CountMatchingBlobs( int index)",3, 39, 2, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::DocQualCallbacks::CountAcceptedBlobs( int index)",5, 44, 4, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::DocQualCallbacks::AcceptIfGoodQuality( int index)",4, 58, 4, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::word_blob_quality( WERD_RES * word , ROW * row)",11, 77, 6, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::word_outline_errs( WERD_RES * word)",14, 78, 6, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::word_char_quality( WERD_RES * word , ROW * row , int16_t * match_count , int16_t * accepted_match_count)",18, 77, 6, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::unrej_good_chs( WERD_RES * word , ROW * row)",10, 78, 6, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::count_outline_errs( char c , int16_t outline_count)",11, 71, 0, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::quality_based_rejection( PAGE_RES_IT & page_res_it , bool good_quality_doc)",10, 66, 0, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::unrej_good_quality_words( PAGE_RES_IT & page_res_it)",63, 81, 34, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::doc_and_block_rejection( PAGE_RES_IT & page_res_it , bool good_quality_doc)",165, 81, 20, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"reject_whole_page( PAGE_RES_IT & page_res_it)",9, 58, 33, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::tilde_crunch( PAGE_RES_IT & page_res_it)",84, 73, 16, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::terrible_word_crunch( WERD_RES * word , GARBAGE_LEVEL garbage_level)",37, 77, 4, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::potential_word_crunch( WERD_RES * word , GARBAGE_LEVEL garbage_level , bool ok_dict_word)",47, 80, 44, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::tilde_delete( PAGE_RES_IT & page_res_it)",68, 78, 6, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::convert_bad_unlv_chs( WERD_RES * word_res)",19, 68, 2, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::garbage_word( WERD_RES * word , BOOL8 ok_dict_word)",200, 76, 0, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::word_deletable( WERD_RES * word , int16_t & delete_mode)",70, 78, 0, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::failure_count( WERD_RES * word)",10, 66, 2, 0
repos/cpp/tesseract/src/ccmain/docqual.cpp,"tesseract::Tesseract::noise_outlines( TWERD * word)",22, 72, 4, 0
repos/cpp/tesseract/src/ccmain/recogtraining.cpp,"tesseract::Tesseract::init_recog_training( const STRING & fname)",19, 81, 4, 0
repos/cpp/tesseract/src/ccmain/recogtraining.cpp,"tesseract::read_t( PAGE_RES_IT * page_res_it , TBOX * tbox)",20, 80, 4, 0
repos/cpp/tesseract/src/ccmain/recogtraining.cpp,"tesseract::Tesseract::recog_training_segmented( const STRING & fname , PAGE_RES * page_res , volatile ETEXT_DESC * monitor , FILE * output_file)",81, 80, 8, 0
repos/cpp/tesseract/src/ccmain/recogtraining.cpp,"tesseract::PrintPath( int length , const BLOB_CHOICE ** blob_choices , const UNICHARSET & unicharset , const char * label , FILE * output_file)",16, 68, 0, 0
repos/cpp/tesseract/src/ccmain/recogtraining.cpp,"tesseract::PrintMatrixPaths( int col , int dim , const MATRIX & ratings , int length , const BLOB_CHOICE ** blob_choices , const UNICHARSET & unicharset , const char * label , FILE * output_file)",20, 79, 10, 0
repos/cpp/tesseract/src/ccmain/recogtraining.cpp,"tesseract::Tesseract::ambigs_classify_and_output( const char * label , PAGE_RES_IT * pr_it , FILE * output_file)",26, 77, 2, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::clear_any_old_text( BLOCK_LIST * block_list)",14, 76, 4, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ApplyBoxes( const STRING & fname , bool find_segmentation , BLOCK_LIST * block_list)",54, 81, 33, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::MedianXHeight( BLOCK_LIST * block_list)",12, 76, 4, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::PreenXHeights( BLOCK_LIST * block_list)",21, 78, 2, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::SetupApplyBoxes( const GenericVector<TBOX> & boxes , BLOCK_LIST * block_list)",32, 72, 6, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::MaximallyChopWord( const GenericVector<TBOX> & boxes , BLOCK * block , ROW * row , WERD_RES * word_res)",56, 80, 50, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::BoxMissMetric( const TBOX & box1 , const TBOX & box2)",7, 66, 0, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ResegmentCharBox( PAGE_RES * page_res , const TBOX * prev_box , const TBOX & box , const TBOX * next_box , const char * correct_text)",95, 82, 10, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ResegmentWordBox( BLOCK_LIST * block_list , const TBOX & box , const TBOX * next_box , const char * correct_text)",72, 84, 12, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ReSegmentByClassification( PAGE_RES * page_res)",23, 72, 6, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ConvertStringToUnichars( const char * utf8 , GenericVector<UNICHAR_ID> * class_ids)",17, 80, 40, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::FindSegmentation( const GenericVector<UNICHAR_ID> & target_text , WERD_RES * word_res)",55, 81, 6, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::SearchForText( const GenericVector<BLOB_CHOICE_LIST*> * choices , int choices_pos , int choices_length , const GenericVector<UNICHAR_ID> & target_text , int text_index , float rating , GenericVector<int> * segmentation , float * best_rating , GenericVector<int> * best_segmentation)",72, 81, 2, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::TidyUp( PAGE_RES * page_res)",56, 80, 6, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ReportFailedBox( int boxfile_lineno , TBOX box , const char * box_ch , const char * err_msg)",6, 75, 32, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::CorrectClassifyWords( PAGE_RES * page_res)",21, 75, 6, 0
repos/cpp/tesseract/src/ccmain/applybox.cpp,"tesseract::Tesseract::ApplyBoxTraining( const STRING & fontname , PAGE_RES * page_res)",10, 79, 0, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::update_best_orientation()",21, 53, 2, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::set_best_orientation( int orientation_id)",4, 59, 0, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::update_best_script( int orientation)",22, 65, 2, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::get_best_script( int orientation_id) const",12, 78, 10, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::print_scores( void) const",6, 43, 0, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::print_scores( int orientation_id) const",8, 72, 6, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OSResults::accumulate( const OSResults & osr)",10, 51, 0, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"remove_nontext_regions( tesseract :: Tesseract * tess , BLOCK_LIST * blocks , TO_BLOCK_LIST * to_blocks)",29, 74, 44, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"orientation_and_script_detection( STRING & filename , OSResults * osr , tesseract :: Tesseract * tess)",39, 79, 4, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"os_detect( TO_BLOCK_LIST * port_blocks , OSResults * osr , tesseract :: Tesseract * tess)",38, 70, 6, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"os_detect_blobs( const GenericVector<int> * allowed_scripts , BLOBNBOX_CLIST * blob_list , OSResults * osr , tesseract :: Tesseract * tess)",47, 77, 2, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"os_detect_blob( BLOBNBOX * bbox , OrientationDetector * o , ScriptDetector * s , OSResults * osr , tesseract :: Tesseract * tess)",43, 75, 2, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OrientationDetector::OrientationDetector( const GenericVector<int> * allowed_scripts , OSResults * osr)",5, 65, 4, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OrientationDetector::detect_blob( BLOB_CHOICE_LIST * scores)",64, 81, 8, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OrientationDetector::get_orientation()",4, 45, 0, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"ScriptDetector::ScriptDetector( const GenericVector<int> * allowed_scripts , OSResults * osr , tesseract :: Tesseract * tess)",14, 77, 31, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"ScriptDetector::detect_blob( BLOB_CHOICE_LIST * scores)",88, 77, 6, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"ScriptDetector::must_stop( int orientation)",4, 50, 0, 0
repos/cpp/tesseract/src/ccmain/osdetect.cpp,"OrientationIdToValue( const int & id)",14, 42, 0, 0
repos/cpp/tesseract/src/ccmain/fixxht.cpp,"tesseract::Tesseract::CountMisfitTops( WERD_RES * word_res)",29, 80, 4, 0
repos/cpp/tesseract/src/ccmain/fixxht.cpp,"tesseract::Tesseract::ComputeCompatibleXheight( WERD_RES * word_res , float * baseline_shift)",112, 81, 10, 0
repos/cpp/tesseract/src/ccmain/werdit.cpp,"make_pseudo_word( PAGE_RES * page_res , const TBOX & selection_box)",29, 79, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::SortCPByTopReverse( const void * p1 , const void * p2)",7, 69, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::SortCPByBottom( const void * p1 , const void * p2)",7, 69, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::SortCPByHeight( const void * p1 , const void * p2)",7, 69, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::IsTextOrEquationType( PolyBlockType type)",3, 55, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::IsLeftIndented( const EquationDetect :: IndentType type)",4, 68, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::IsRightIndented( const EquationDetect :: IndentType type)",4, 69, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::EquationDetect( const char * equ_datapath , const char * equ_name)",18, 73, 12, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::~EquationDetect()",1, 64, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::SetLangTesseract( Tesseract * lang_tesseract)",3, 67, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::SetResolution( const int resolution)",3, 59, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::LabelSpecialText( TO_BLOCK * to_block)",19, 59, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifySpecialText( BLOBNBOX * blobnbox , const int height_th)",72, 86, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::EstimateTypeForUnichar( const UNICHARSET & unicharset , const UNICHAR_ID id) const",33, 81, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifySpecialText()",51, 87, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifyBlobsToSkip( ColPartition * part)",47, 78, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::FindEquationParts( ColPartitionGrid * part_grid , ColPartitionSet ** best_columns)",65, 78, 8, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::MergePartsByLocation()",38, 80, 8, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::SearchByOverlap( ColPartition * seed , GenericVector<ColPartition*> * parts_overlap)",48, 77, 6, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::InsertPartAfterAbsorb( ColPartition * part)",26, 78, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifySeedParts()",71, 80, 10, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::ComputeForegroundDensity( const TBOX & tbox)",13, 67, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::CheckSeedFgDensity( const float density_th , ColPartition * part)",21, 71, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::SplitCPHor( ColPartition * part , GenericVector<ColPartition*> * parts_splitted)",49, 80, 6, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::SplitCPHorLite( ColPartition * part , GenericVector<TBOX> * splitted_boxes)",39, 78, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::CheckForSeed2( const GenericVector<int> & indented_texts_left , const float foreground_density_th , ColPartition * part)",21, 63, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::CountAlignment( const GenericVector<int> & sorted_vec , const int val) const",23, 77, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifyInlineParts()",7, 67, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::ComputeCPsSuperBBox()",10, 57, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifyInlinePartsHorizontal()",64, 79, 6, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::EstimateTextPartLineSpacing()",39, 78, 10, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IdentifyInlinePartsVertical( const bool top_to_bottom , const int textparts_linespacing)",28, 81, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IsInline( const bool search_bottom , const int textparts_linespacing , ColPartition * part)",46, 81, 8, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::CheckSeedBlobsCount( ColPartition * part)",17, 72, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::CheckSeedDensity( const float math_density_high , const float math_density_low , const ColPartition * part) const",18, 68, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IsIndented( ColPartition * part)",63, 81, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::ExpandSeed( ColPartition * seed)",42, 78, 6, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::ExpandSeedHorizontal( const bool search_left , ColPartition * seed , GenericVector<ColPartition*> * parts_to_merge)",55, 76, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::ExpandSeedVertical( const bool search_bottom , ColPartition * seed , GenericVector<ColPartition*> * parts_to_merge)",86, 82, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IsNearSmallNeighbor( const TBOX & seed_box , const TBOX & part_box) const",21, 71, 41, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::CheckSeedNeighborDensity( const ColPartition * part) const",16, 80, 0, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::ProcessMathBlockSatelliteParts()",48, 78, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IsMathBlockSatellite( ColPartition * part , GenericVector<ColPartition*> * math_blocks)",53, 86, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::SearchNNVertical( const bool search_bottom , const ColPartition * part)",34, 77, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::IsNearMathNeighbor( const int y_gap , const ColPartition * neighbor) const",8, 67, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::GetOutputTiffName( const char * name , STRING * image_name) const",7, 79, 2, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::PaintSpecialTexts( const STRING & outfile) const",16, 79, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::PaintColParts( const STRING & outfile) const",22, 70, 4, 0
repos/cpp/tesseract/src/ccmain/equationdetect.cpp,"tesseract::EquationDetect::PrintSpecialBlobsDensity( const ColPartition * part) const",14, 80, 0, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::recog_pseudo_word( PAGE_RES * page_res , TBOX & selection_box)",9, 63, 2, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::recog_interactive( PAGE_RES_IT * pr_it)",27, 81, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::ProcessTargetWord( const TBOX & word_box , const TBOX & target_word_box , const char * word_config , int pass)",32, 79, 10, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::SetupAllWordsPassN( int pass_n , const TBOX * target_word_box , const char * word_config , PAGE_RES * page_res , GenericVector<WordData> * words)",21, 71, 2, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::SetupWordPassN( int pass_n , WordData * word)",34, 78, 6, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::RecogAllWordsPassN( int pass_n , ETEXT_DESC * monitor , PAGE_RES_IT * pr_it , GenericVector<WordData> * words)",68, 82, 10, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::recog_all_words( PAGE_RES * page_res , ETEXT_DESC * monitor , const TBOX * target_word_box , const char * word_config , int dopasses)",162, 81, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::bigram_correction_pass( PAGE_RES * page_res)",144, 81, 14, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::rejection_passes( PAGE_RES * page_res , ETEXT_DESC * monitor , const TBOX * target_word_box , const char * word_config)",95, 79, 7, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::blamer_pass( PAGE_RES * page_res)",22, 79, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::script_pos_pass( PAGE_RES * page_res)",38, 81, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::WordGap( const PointerVector<WERD_RES> & words , int index , int * right , int * next_left)",10, 81, 0, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::EvaluateWordSpan( const PointerVector<WERD_RES> & words , int first_index , int end_index , float * rating , float * certainty , bool * bad , bool * valid_permuter)",21, 76, 29, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::SelectBestWords( double rating_ratio , double certainty_margin , bool debug , PointerVector<WERD_RES> * new_words , PointerVector<WERD_RES> * best_words)",84, 79, 29, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::RetryWithLanguage( const WordData & word_data , WordRecognizer recognizer , bool debug , WERD_RES ** in_word , PointerVector<WERD_RES> * best_words)",27, 77, 2, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::WordsAcceptable( const PointerVector<WERD_RES> & words)",6, 73, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::ReassignDiacritics( int pass , PAGE_RES_IT * pr_it , bool * make_next_word_fuzzy)",64, 82, 2, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::AssignDiacriticsToOverlappingBlobs( const GenericVector<C_OUTLINE*> & outlines , int pass , WERD * real_word , PAGE_RES_IT * pr_it , GenericVector<bool> * word_wanted , GenericVector<bool> * overlapped_any_blob , GenericVector<C_BLOB*> * target_blobs)",52, 79, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::AssignDiacriticsToNewBlobs( const GenericVector<C_OUTLINE*> & outlines , int pass , WERD * real_word , PAGE_RES_IT * pr_it , GenericVector<bool> * word_wanted , GenericVector<C_BLOB*> * target_blobs)",74, 82, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::SelectGoodDiacriticOutlines( int pass , float certainty_threshold , PAGE_RES_IT * pr_it , C_BLOB * blob , const GenericVector<C_OUTLINE*> & outlines , int num_outlines , GenericVector<bool> * ok_outlines)",84, 80, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::ClassifyBlobPlusOutlines( const GenericVector<bool> & ok_outlines , const GenericVector<C_OUTLINE*> & outlines , int pass_n , PAGE_RES_IT * pr_it , C_BLOB * blob , STRING * best_str)",44, 79, 4, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::ClassifyBlobAsWord( int pass_n , PAGE_RES_IT * pr_it , C_BLOB * blob , STRING * best_str , float * c2)",42, 88, 6, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::classify_word_and_language( int pass_n , PAGE_RES_IT * pr_it , WordData * word_data)",75, 80, 6, 0
repos/cpp/tesseract/src/ccmain/control.cpp,"tesseract::Tesseract::classify_word_pass1( const WordData & word_data , WERD_RES ** in_word , PointerVector<WERD_RES> * out_words)",728, 83, 4, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::PageIterator( PAGE_RES * page_res , Tesseract * tesseract , int scale , int scaled_yres , int rect_left , int rect_top , int rect_width , int rect_height)",20, 80, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::~PageIterator()",4, 32, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::PageIterator( const PageIterator & src)",18, 52, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::operator =( const PageIterator & src)",16, 71, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::PositionedAtSameWord( const PAGE_RES_IT * other) const",4, 74, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::Begin()",4, 36, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::RestartParagraph()",12, 66, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::IsWithinFirstTextlineOfParagraph() const",5, 62, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::RestartRow()",4, 34, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::Next( PageIteratorLevel level)",32, 71, 6, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::IsAtBeginningOf( PageIteratorLevel level) const",19, 69, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::IsAtFinalElement( PageIteratorLevel level , PageIteratorLevel element) const",19, 77, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::Cmp( const PageIterator & other) const",10, 57, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::BoundingBoxInternal( PageIteratorLevel level , int * left , int * top , int * right , int * bottom) const",53, 81, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::BoundingBox( PageIteratorLevel level , int * left , int * top , int * right , int * bottom) const",5, 64, 31, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::BoundingBox( PageIteratorLevel level , const int padding , int * left , int * top , int * right , int * bottom) const",16, 79, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::Empty( PageIteratorLevel level) const",7, 81, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::BlockType() const",7, 71, 4, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::BlockPolygon() const",17, 79, 4, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::GetBinaryImage( PageIteratorLevel level) const",24, 83, 4, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::GetImage( PageIteratorLevel level , int padding , Pix * original_img , int * left , int * top) const",38, 89, 4, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::Baseline( PageIteratorLevel level , int * x1 , int * y1 , int * x2 , int * y2) const",21, 74, 2, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::Orientation( tesseract :: Orientation * orientation , tesseract :: WritingDirection * writing_direction , tesseract :: TextlineOrder * textline_order , float * deskew_angle) const",45, 79, 31, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::ParagraphInfo( tesseract :: ParagraphJustification * just , bool * is_list_item , bool * is_crown , int * first_line_indent) const",16, 74, 0, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::BeginWord( int offset)",39, 80, 8, 0
repos/cpp/tesseract/src/ccmain/pageiterator.cpp,"tesseract::PageIterator::SetWordBlamerBundle( BlamerBundle * blamer_bundle)",8, 70, 0, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::ImageThresholder()",7, 49, 4, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::~ImageThresholder()",3, 40, 0, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::Clear()",3, 33, 0, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::IsEmpty() const",3, 41, 0, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::SetImage( const unsigned char * imagedata , int width , int height , int bytes_per_pixel , int bytes_per_line)",55, 81, 4, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::SetRectangle( int left , int top , int width , int height)",6, 80, 0, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::GetImageSizes( int * left , int * top , int * width , int * height , int * imagewidth , int * imageheight)",10, 74, 37, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::SetImage( const Pix * pix)",30, 80, 2, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::ThresholdToPix( PageSegMode pageseg_mode , Pix ** pix)",16, 77, 0, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::GetPixRectThresholds()",16, 73, 2, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::Init()",3, 51, 2, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::GetPixRect()",12, 76, 4, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::GetPixRectGrey()",11, 63, 2, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::OtsuThresholdRectToPix( Pix * src_pix , Pix ** out_pix) const",25, 80, 2, 0
repos/cpp/tesseract/src/ccmain/thresholder.cpp,"tesseract::ImageThresholder::ThresholdRectToPix( Pix * src_pix , int num_channels , const int * thresholds , const int * hi_values , Pix ** pix) const",31, 75, 12, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::Tesseract()",501, 95, 6, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::~Tesseract()",10, 37, 2, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::getDict()",11, 68, 12, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::Clear()",14, 52, 2, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::SetEquationDetect( EquationDetect * detector)",4, 62, 0, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::ResetAdaptiveClassifier()",6, 54, 4, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::ResetDocumentDictionary()",6, 56, 4, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::SetBlackAndWhitelist()",12, 76, 8, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::PrepareForPageseg()",25, 81, 8, 0
repos/cpp/tesseract/src/ccmain/tesseractclass.cpp,"tesseract::Tesseract::PrepareForTessOCR( BLOCK_LIST * block_list , Tesseract * osd_tess , OSResults * osr)",36, 81, 2, 0
repos/cpp/tesseract/src/ccmain/adaptions.cpp,"tesseract::Tesseract::word_adaptable( WERD_RES * word , uint16_t mode)",79, 78, 4, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::ParamContent( tesseract :: StringParam * it)",7, 57, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::ParamContent( tesseract :: IntParam * it)",7, 54, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::ParamContent( tesseract :: BoolParam * it)",7, 55, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::ParamContent( tesseract :: DoubleParam * it)",7, 57, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::GetParamContentById( int id)",3, 58, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamsEditor::GetFirstWords( const char * s , int n , char * t)",17, 57, 2, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::GetName() const",8, 66, 2, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::GetDescription() const",7, 66, 2, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::GetValue() const",17, 50, 4, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::SetValue( const char * val)",14, 68, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamsEditor::GetPrefixes( const char * s , STRING * level_one , STRING * level_two , STRING * level_three)",11, 65, 0, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamContent::Compare( const void * v1 , const void * v2)",5, 74, 2, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamsEditor::BuildListOfAllLeaves( tesseract :: Tesseract * tess)",71, 80, 4, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamsEditor::Notify( const SVEvent * sve)",16, 70, 29, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamsEditor::ParamsEditor( tesseract :: Tesseract * tess , ScrollView * sv)",31, 69, 2, 0
repos/cpp/tesseract/src/ccmain/paramsd.cpp,"ParamsEditor::WriteParams( char * filename , bool changes_only)",36, 80, 14, 0
repos/cpp/tesseract/src/ccmain/tfacepp.cpp,"tesseract::Tesseract::recog_word( WERD_RES * word)",56, 80, 8, 0
repos/cpp/tesseract/src/ccmain/tfacepp.cpp,"tesseract::Tesseract::recog_word_recursive( WERD_RES * word)",26, 76, 43, 0
repos/cpp/tesseract/src/ccmain/tfacepp.cpp,"tesseract::Tesseract::split_and_recog_word( WERD_RES * word)",26, 70, 4, 0
repos/cpp/tesseract/src/ccmain/tfacepp.cpp,"tesseract::Tesseract::split_word( WERD_RES * word , int split_pt , WERD_RES ** right_piece , BlamerBundle ** orig_blamer_bundle) const",48, 79, 25, 0
repos/cpp/tesseract/src/ccmain/tfacepp.cpp,"tesseract::Tesseract::join_words( WERD_RES * word , WERD_RES * word2 , BlamerBundle * orig_bb) const",87, 79, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::Epsilon( int space_pix)",3, 36, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::AcceptableRowArgs( int debug_level , int min_num_rows , const char * function_name , const GenericVector<RowScratchRegisters> * rows , int row_start , int row_end)",18, 74, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::StrOf( int num)",5, 47, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::PrintTable( const GenericVector<GenericVector<STRING>> & rows , const STRING & colsep)",34, 74, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RtlEmbed( const STRING & word , bool rtlify)",5, 58, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::PrintDetectorState( const ParagraphTheory & theory , const GenericVector<RowScratchRegisters> & rows)",41, 81, 31, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::DebugDump( bool should_print , const STRING & phase , const ParagraphTheory & theory , const GenericVector<RowScratchRegisters> & rows)",10, 54, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::PrintRowRange( const GenericVector<RowScratchRegisters> & rows , int row_start , int row_end)",8, 74, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::IsLatinLetter( int ch)",3, 63, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::IsDigitLike( int ch)",3, 59, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::IsOpeningPunct( int ch)",3, 42, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::IsTerminalPunct( int ch)",3, 46, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SkipChars( const char * str , const char * toskip)",4, 68, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SkipChars( const char * str , bool(*skip)(int))",4, 67, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SkipOne( const char * str , const char * toskip)",4, 66, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::LikelyListNumeral( const STRING & word)",33, 69, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::LikelyListMark( const STRING & word)",4, 69, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::AsciiLikelyListItem( const STRING & word)",3, 58, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UnicodeFor( const UNICHARSET * u , const WERD_CHOICE * werd , int pos)",5, 75, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UnicodeSpanSkipper::UnicodeSpanSkipper( const UNICHARSET * unicharset , const WERD_CHOICE * word)",2, 76, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UnicodeSpanSkipper::SkipPunc( int pos)",4, 81, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UnicodeSpanSkipper::SkipDigits( int pos)",5, 77, 28, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UnicodeSpanSkipper::SkipRomans( int pos)",9, 61, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UnicodeSpanSkipper::SkipAlpha( int pos)",4, 75, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::LikelyListMarkUnicode( int ch)",25, 58, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::UniLikelyListItem( const UNICHARSET * u , const WERD_CHOICE * werd)",29, 78, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::LeftWordAttributes( const UNICHARSET * unicharset , const WERD_CHOICE * werd , const STRING & utf8 , bool * is_list , bool * starts_idea , bool * ends_idea)",41, 80, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RightWordAttributes( const UNICHARSET * unicharset , const WERD_CHOICE * werd , const STRING & utf8 , bool * is_list , bool * starts_idea , bool * ends_idea)",31, 80, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::AppendDebugHeaderFields( GenericVector<STRING> * header)",5, 51, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::AppendDebugInfo( const ParagraphTheory & theory , GenericVector<STRING> * dbg) const",30, 78, 42, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::Init( const RowInfo & row)",7, 53, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::GetLineType() const",19, 66, 8, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::GetLineType( const ParagraphModel * model) const",21, 79, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::SetStartLine()",9, 75, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::SetBodyLine()",9, 75, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::AddStartLine( const ParagraphModel * model)",6, 74, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::AddBodyLine( const ParagraphModel * model)",6, 73, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::StartHypotheses( SetOfModels * models) const",6, 76, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::StrongHypotheses( SetOfModels * models) const",6, 72, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::NonNullHypotheses( SetOfModels * models) const",6, 73, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::UniqueStartHypothesis() const",5, 75, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::UniqueBodyHypothesis() const",5, 74, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowScratchRegisters::DiscardNonMatchingHypotheses( const SetOfModels & models)",10, 56, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::Cluster::Cluster()",1, 37, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::Cluster::Cluster( int cen , int num)",1, 57, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SimpleClusterer::SimpleClusterer( int max_cluster_width)",2, 50, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SimpleClusterer::Add( int value)",1, 52, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SimpleClusterer::size() const",1, 46, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ClosestCluster( const GenericVector<Cluster> & clusters , int value)",9, 79, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SimpleClusterer::GetClusters( GenericVector<Cluster> * clusters)",13, 76, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::CalculateTabStops( GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , int tolerance , GenericVector<Cluster> * left_tabs , GenericVector<Cluster> * right_tabs)",95, 80, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::MarkRowsWithModel( GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , const ParagraphModel * model , bool ltr , int eop_threshold)",37, 75, 9, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::GeometricClassifierState( int dbg_level , GenericVector<RowScratchRegisters> * r , int r_start , int r_end)",15, 77, 6, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::AssumeLeftJustification()",4, 42, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::AssumeRightJustification()",4, 43, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::AlignTabs() const",4, 67, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::OffsideTabs() const",4, 66, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::IsFullRow( int i) const",4, 66, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::AlignsideTabIndex( int row_idx) const",3, 80, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::FirstWordWouldHaveFit( int row_a , int row_b)",4, 53, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::PrintRows() const",1, 71, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::Fail( int min_debug_level , const char * why) const",5, 58, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifierState::Model() const",3, 79, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassifyThreeTabStopTextBlock( int debug_level , GeometricClassifierState & s , ParagraphTheory * theory)",59, 78, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::GeometricClassify( int debug_level , GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , ParagraphTheory * theory)",134, 80, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphTheory::AddModel( const ParagraphModel & model)",10, 79, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphTheory::DiscardUnusedModels( const SetOfModels & used_models)",10, 76, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphTheory::Fits( const GenericVector<RowScratchRegisters> * rows , int start , int end) const",10, 80, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphTheory::NonCenteredModels( SetOfModels * models)",7, 63, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphTheory::IndexOf( const ParagraphModel * model) const",7, 66, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ValidFirstLine( const GenericVector<RowScratchRegisters> * rows , int row , const ParagraphModel * model)",10, 77, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ValidBodyLine( const GenericVector<RowScratchRegisters> * rows , int row , const ParagraphModel * model)",10, 76, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::CrownCompatible( const GenericVector<RowScratchRegisters> * rows , int a , int b , const ParagraphModel * model)",17, 77, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphModelSmearer::ParagraphModelSmearer( GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , ParagraphTheory * theory)",15, 70, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphModelSmearer::CalculateOpenModels( int row_start , int row_end)",28, 81, 10, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphModelSmearer::Smear()",94, 77, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::DiscardUnusedModels( const GenericVector<RowScratchRegisters> & rows , ParagraphTheory * theory)",8, 80, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::DowngradeWeakestToCrowns( int debug_level , ParagraphTheory * theory , GenericVector<RowScratchRegisters> * rows)",51, 81, 37, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RecomputeMarginsAndClearHypotheses( GenericVector<RowScratchRegisters> * rows , int start , int end , int percentile)",38, 77, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::InterwordSpace( const GenericVector<RowScratchRegisters> & rows , int row_start , int row_end)",20, 69, 21, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::FirstWordWouldHaveFit( const RowScratchRegisters & before , const RowScratchRegisters & after , tesseract :: ParagraphJustification justification)",21, 81, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::FirstWordWouldHaveFit( const RowScratchRegisters & before , const RowScratchRegisters & after)",14, 63, 27, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::TextSupportsBreak( const RowScratchRegisters & before , const RowScratchRegisters & after)",10, 66, 30, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::LikelyParagraphStart( const RowScratchRegisters & before , const RowScratchRegisters & after , tesseract :: ParagraphJustification j)",7, 72, 33, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::InternalParagraphModelByOutline( const GenericVector<RowScratchRegisters> * rows , int start , int end , int tolerance , bool * consistent)",96, 80, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ParagraphModelByOutline( int debug_level , const GenericVector<RowScratchRegisters> * rows , int start , int end , int tolerance)",13, 77, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowsFitModel( const GenericVector<RowScratchRegisters> * rows , int start , int end , const ParagraphModel * model)",10, 69, 18, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::MarkStrongEvidence( GenericVector<RowScratchRegisters> * rows , int row_start , int row_end)",66, 73, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ModelStrongEvidence( int debug_level , GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , bool allow_flush_models , ParagraphTheory * theory)",87, 78, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::StrongEvidenceClassify( int debug_level , GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , ParagraphTheory * theory)",29, 78, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::SeparateSimpleLeaderLines( GenericVector<RowScratchRegisters> * rows , int row_start , int row_end , ParagraphTheory * theory)",13, 80, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::ConvertHypothesizedModelRunsToParagraphs( int debug_level , const GenericVector<RowScratchRegisters> & rows , GenericVector<PARA*> * row_owners , ParagraphTheory * theory)",81, 81, 8, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::Interval::Interval()",1, 35, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::Interval::Interval( int b , int e)",1, 47, 2, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::RowIsStranded( const GenericVector<RowScratchRegisters> & rows , int row)",36, 74, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::LeftoverSegments( const GenericVector<RowScratchRegisters> & rows , GenericVector<Interval> * to_fix , int row_start , int row_end)",47, 77, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::CanonicalizeDetectionResults( GenericVector<PARA*> * row_owners , PARA_LIST * paragraphs)",21, 52, 6, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::DetectParagraphs( int debug_level , GenericVector<RowInfo> * row_infos , GenericVector<PARA*> * row_owners , PARA_LIST * paragraphs , GenericVector<ParagraphModel*> * models)",92, 79, 4, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::InitializeTextAndBoxesPreRecognition( const MutableIterator & it , RowInfo * info)",48, 76, 0, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::InitializeRowInfo( bool after_recognition , const MutableIterator & it , RowInfo * info)",92, 90, 8, 0
repos/cpp/tesseract/src/ccmain/paragraphs.cpp,"tesseract::DetectParagraphs( int debug_level , bool after_text_recognition , const MutableIterator * block_start , GenericVector<ParagraphModel*> * models)",68, 91, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"releaseDSProfile( ds_profile * profile , ds_score_release sr)",16, 78, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"initDSProfile( ds_profile ** p , const char * version)",69, 85, 4, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"profileDevices( ds_profile * profile , const ds_evaluation_type type , ds_perf_evaluator evaluator , void * evaluatorData , unsigned int * numUpdates)",38, 81, 32, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"findString( const char * contentStart , const char * contentEnd , const char * string)",20, 80, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"readProFile( const char * fileName , char ** content , size_t * contentSize)",27, 67, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"readProfileFromFile( ds_profile * profile , ds_score_deserializer deserializer , const char * file)",171, 81, 8, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"writeProfileToFile( ds_profile * profile , ds_score_serializer serializer , const char * file)",83, 81, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"legalizeFileName( char * fileName)",22, 67, 4, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"populateGPUEnvFromDevice( GPUEnv * gpuInfo , cl_device_id device)",30, 81, 29, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::LoadOpencl()",16, 57, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::SetKernelEnv( KernelEnv * envInfo)",7, 53, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"allocateZeroCopyBuffer( const KernelEnv & rEnv , l_uint32 * hostbuffer , size_t nElements , cl_mem_flags flags , cl_int * pStatus)",9, 77, 37, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"mapOutputCLBuffer( const KernelEnv & rEnv , cl_mem clbuffer , Pix * pixd , Pix * pixs , int elements , cl_mem_flags flags , bool memcopy = false , bool sync = true)",32, 81, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::releaseMorphCLBuffers()",7, 77, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::initMorphCLAllocations( l_int32 wpl , l_int32 h , Pix * pixs)",29, 81, 46, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::InitEnv()",12, 49, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::ReleaseOpenclRunEnv()",7, 42, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::AddKernelConfig( int kCount , const char * kName)",7, 76, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::RegistOpenclKernel()",9, 67, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::InitOpenclRunEnv_DeviceSelection( int argc)",21, 80, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::OpenclDevice()",3, 31, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::~OpenclDevice()",3, 32, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::ReleaseOpenclEnv( GPUEnv * gpuInfo)",28, 61, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::BinaryGenerated( const char * clFileName , FILE ** fhandle)",22, 76, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::CachedOfKernerPrg( const GPUEnv * gpuEnvCached , const char * clFileName)",13, 74, 4, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::WriteBinaryToFile( const char * fileName , const char * birary , size_t numBytes)",13, 78, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::GeneratBinFromKernelSource( cl_program program , const char * clFileName)",73, 81, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::CompileKernelFile( GPUEnv * gpuInfo , const char * buildOption)",127, 80, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::pixReadFromTiffKernel( l_uint32 * tiffdata , l_int32 w , l_int32 h , l_int32 wpl , l_uint32 * line)",61, 81, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixDilateCL_55( l_int32 wpl , l_int32 h)",54, 80, 29, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixErodeCL_55( l_int32 wpl , l_int32 h)",60, 80, 29, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixDilateCL( l_int32 hsize , l_int32 vsize , l_int32 wpl , l_int32 h)",94, 79, 4, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixErodeCL( l_int32 hsize , l_int32 vsize , l_uint32 wpl , l_uint32 h)",106, 81, 4, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixOpenCL( l_int32 hsize , l_int32 vsize , l_int32 wpl , l_int32 h)",15, 80, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixCloseCL( l_int32 hsize , l_int32 vsize , l_int32 wpl , l_int32 h)",15, 81, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"pixSubtractCL_work( l_uint32 wpl , l_uint32 h , cl_mem buffer1 , cl_mem buffer2)",27, 80, 29, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::pixGetLinesCL( Pix * pixd , Pix * pixs , Pix ** pix_vline , Pix ** pix_hline , Pix ** pixClosed , bool getpixClosed , l_int32 close_hsize , l_int32 close_vsize , l_int32 open_hsize , l_int32 open_vsize , l_int32 line_hsize , l_int32 line_vsize)",74, 81, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::HistogramRectOCL( void * imageData , int bytes_per_pixel , int bytes_per_line , int left , int top , int width , int height , int kHistogramSize , int * histogramAllChannels)",157, 81, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::ThresholdRectToPixOCL( unsigned char * imageData , int bytes_per_pixel , int bytes_per_line , int * thresholds , int * hi_values , Pix ** pix , int height , int width , int top , int left)",107, 81, 40, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"populateTessScoreEvaluationInputData( TessScoreEvaluationInputData * input)",86, 80, 6, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"composeRGBPixelMicroBench( GPUEnv * env , TessScoreEvaluationInputData input , ds_device_type type)",86, 79, 11, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"histogramRectMicroBench( GPUEnv * env , TessScoreEvaluationInputData input , ds_device_type type)",83, 79, 11, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"ThresholdRectToPix_Native( const unsigned char * imagedata , int bytes_per_pixel , int bytes_per_line , const int * thresholds , const int * hi_values , Pix ** pix)",34, 79, 38, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"thresholdRectToPixMicroBench( GPUEnv * env , TessScoreEvaluationInputData input , ds_device_type type)",88, 79, 43, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"getLineMasksMorphMicroBench( GPUEnv * env , TessScoreEvaluationInputData input , ds_device_type type)",94, 81, 32, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"serializeScore( ds_device * device , uint8_t ** serializedScore , unsigned int * serializedScoreSize)",7, 78, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"deserializeScore( ds_device * device , const uint8_t * serializedScore , unsigned int serializedScoreSize)",8, 70, 34, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"releaseScore( TessDeviceScore * score)",4, 56, 0, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"evaluateScoreForDevice( ds_device * device , void * inputData)",62, 81, 2, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::getDeviceSelection()",113, 81, 8, 0
repos/cpp/tesseract/src/opencl/openclwrapper.cpp,"OpenclDevice::selectedDeviceIsOpenCL()",4, 51, 2, 0
repos/cpp/tesseract/src/ccutil/ambigs.cpp,"tesseract::AmbigSpec::AmbigSpec()",7, 45, 2, 0
repos/cpp/tesseract/src/ccutil/ambigs.cpp,"tesseract::UnicharAmbigs::InitUnicharAmbigs( const UNICHARSET & unicharset , bool use_ambigs_for_adaption)",12, 70, 38, 0
repos/cpp/tesseract/src/ccutil/ambigs.cpp,"tesseract::UnicharAmbigs::LoadUniversal( const UNICHARSET & encoder_set , UNICHARSET * unicharset)",6, 76, 2, 0
repos/cpp/tesseract/src/ccutil/ambigs.cpp,"tesseract::UnicharAmbigs::LoadUnicharAmbigs( const UNICHARSET & encoder_set , TFile * ambig_file , int debug_level , bool use_ambigs_for_adaption , UNICHARSET * unicharset)",148, 82, 8, 0
repos/cpp/tesseract/src/ccutil/ambigs.cpp,"tesseract::UnicharAmbigs::ParseAmbiguityLine( int line_num , int version , int debug_level , const UNICHARSET & unicharset , char * buffer , int * test_ambig_part_size , UNICHAR_ID * test_unichar_ids , int * replacement_ambig_part_size , char * replacement_string , int * type)",114, 81, 4, 0
repos/cpp/tesseract/src/ccutil/ambigs.cpp,"tesseract::UnicharAmbigs::InsertIntoTable( UnicharAmbigsVector & table , int test_ambig_part_size , UNICHAR_ID * test_unichar_ids , int replacement_ambig_part_size , const char * replacement_string , int type , AmbigSpec * ambig_spec , UNICHARSET * unicharset)",59, 80, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::UNICHAR_PROPERTIES()",3, 55, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::Init()",16, 46, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::SetRangesOpen()",12, 55, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::SetRangesEmpty()",12, 56, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::AnyRangeEmpty() const",3, 61, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::ExpandRangesFrom( const UNICHAR_PROPERTIES & src)",19, 57, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHAR_PROPERTIES::CopyFrom( const UNICHAR_PROPERTIES & src)",6, 79, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::UNICHARSET()",14, 58, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::~UNICHARSET()",3, 28, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::reserve( int unichars_number)",13, 70, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::unichar_to_id( const char * const unichar_repr) const",7, 72, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::unichar_to_id( const char * const unichar_repr , int length) const",9, 75, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::step( const char * str) const",7, 71, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::encodable_string( const char * str , int * first_bad_position) const",5, 75, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::encode_string( const char * str , bool give_up_on_failure , GenericVector<UNICHAR_ID> * encoding , GenericVector<char> * lengths , int * encoded_length) const",31, 81, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::id_to_unichar( UNICHAR_ID id) const",7, 61, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::id_to_unichar_ext( UNICHAR_ID id) const",17, 76, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::debug_utf8_str( const char * str)",21, 53, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::debug_str( UNICHAR_ID id) const",27, 78, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::set_normed_ids( UNICHAR_ID unichar_id)",11, 79, 28, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::get_isprivate( UNICHAR_ID unichar_id) const",5, 62, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::set_ranges_empty()",5, 46, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::PartialSetPropertiesFromOther( int start_index , const UNICHARSET & src)",26, 80, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::ExpandRangesFromOther( const UNICHARSET & src)",10, 64, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::CopyFrom( const UNICHARSET & src)",12, 73, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::AppendOtherUnicharset( const UNICHARSET & src)",19, 73, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::SizesDistinct( UNICHAR_ID id1 , UNICHAR_ID id2) const",7, 71, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::encode_string( const char * str , int str_index , int str_length , GenericVector<UNICHAR_ID> * encoding , GenericVector<char> * lengths , int * best_total_length , GenericVector<UNICHAR_ID> * best_encoding , GenericVector<char> * best_lengths) const",37, 79, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::GetStrProperties( const char * utf8_str , UNICHAR_PROPERTIES * props) const",54, 79, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::get_properties( UNICHAR_ID id) const",14, 63, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::get_chartype( UNICHAR_ID id) const",8, 53, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::unichar_insert( const char * const unichar_repr , OldUncleanUnichars old_style)",44, 78, 8, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::contains_unichar( const char * const unichar_repr) const",5, 74, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::contains_unichar( const char * const unichar_repr , int length) const",9, 75, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::eq( UNICHAR_ID unichar_id , const char * const unichar_repr) const",4, 69, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::save_to_string( STRING * str) const",34, 76, 14, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"InMemoryFilePointer::InMemoryFilePointer( const char * memory , int mem_size)",2, 69, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"InMemoryFilePointer::fgets( char * orig_dst , int size)",15, 66, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::load_from_inmemory_file( const char * memory , int mem_size , bool skip_fragments)",9, 70, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"LocalFilePointer::LocalFilePointer( FILE * stream)",1, 50, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"LocalFilePointer::fgets( char * dst , int size)",3, 37, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::load_from_file( FILE * file , bool skip_fragments)",8, 67, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::load_from_file( tesseract :: TFile * file , bool skip_fragments)",7, 79, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::load_via_fgets( TessResultCallback2<char*,char*,int> * fgets_cb , bool skip_fragments)",101, 81, 10, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::post_load_setup()",61, 77, 6, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::major_right_to_left() const",12, 57, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::set_black_and_whitelist( const char * blacklist , const char * whitelist , const char * unblacklist)",35, 68, 41, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::AnyRepeatedUnicodes() const",12, 81, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::add_script( const char * script)",21, 71, 2, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"CHAR_FRAGMENT::to_string( const char * unichar , int pos , int total , bool natural)",12, 73, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"CHAR_FRAGMENT::parse_from_string( const char * string)",41, 78, 4, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::get_script_id_from_name( const char * script_name) const",7, 73, 0, 0
repos/cpp/tesseract/src/ccutil/unicharset.cpp,"UNICHARSET::CleanupString( const char * utf8_str , size_t length)",25, 77, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::BitVector()",1, 58, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::BitVector( int length)",4, 55, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::BitVector( const BitVector & src)",4, 72, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::operator =( const BitVector & src)",5, 56, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::~BitVector()",3, 26, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::Init( int length)",4, 35, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::Serialize( FILE * fp) const",5, 59, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::DeSerialize( bool swap , FILE * fp)",15, 70, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::SetAllFalse()",3, 35, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::SetAllTrue()",3, 36, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::NextSetBit( int prev_bit) const",36, 71, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::NumSetBits() const",12, 49, 6, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::operator |=( const BitVector & other)",5, 59, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::operator &=( const BitVector & other)",7, 59, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::operator ^=( const BitVector & other)",5, 59, 2, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::SetSubtract( const BitVector & v1 , const BitVector & v2)",8, 72, 0, 0
repos/cpp/tesseract/src/ccutil/bitvector.cpp,"tesseract::BitVector::Alloc( int length)",9, 46, 2, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::TessdataManager()",3, 89, 0, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::TessdataManager( FileReader reader)",6, 52, 0, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::LoadFileLater( const char * data_file_name)",4, 66, 0, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::LoadArchiveFile( const char * filename)",34, 76, 14, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::Init( const char * data_file_name)",12, 64, 4, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::LoadMemBuffer( const char * name , const char * data , int size)",32, 75, 2, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::OverwriteEntry( TessdataType type , const char * data , int size)",6, 74, 0, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::SaveFile( const STRING & filename , FileWriter writer) const",11, 66, 2, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::Serialize( GenericVector<char> * data) const",26, 67, 0, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::Clear()",6, 56, 2, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::Directory() const",11, 73, 6, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::GetComponent( TessdataType type , TFile * fp)",5, 68, 2, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::GetComponent( TessdataType type , TFile * fp) const",7, 73, 0, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::VersionString() const",4, 57, 21, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::SetVersionString( const std :: string & v_str)",4, 70, 2, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::CombineDataFiles( const char * language_data_path_prefix , const char * output_filename)",30, 78, 4, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::OverwriteComponents( const char * new_traineddata_filename , char ** component_filenames , int num_new_components)",19, 79, 8, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::ExtractToFile( const char * filename)",7, 78, 6, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::TessdataTypeFromFileSuffix( const char * suffix , TessdataType * type)",14, 71, 49, 0
repos/cpp/tesseract/src/ccutil/tessdatamanager.cpp,"tesseract::TessdataManager::TessdataTypeFromFileName( const char * filename , TessdataType * type)",7, 69, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , char * data , size_t n)",3, 51, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , float * data , size_t n)",3, 52, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , int8_t * data , size_t n)",3, 53, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , int16_t * data , size_t n)",3, 54, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , int32_t * data , size_t n)",3, 54, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , uint8_t * data , size_t n)",3, 54, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , uint16_t * data , size_t n)",3, 55, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::DeSerialize( FILE * fp , uint32_t * data , size_t n)",3, 55, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const char * data , size_t n)",3, 55, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const float * data , size_t n)",3, 56, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const int8_t * data , size_t n)",3, 57, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const int16_t * data , size_t n)",3, 58, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const int32_t * data , size_t n)",3, 58, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const uint8_t * data , size_t n)",3, 58, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const uint16_t * data , size_t n)",3, 59, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::Serialize( FILE * fp , const uint32_t * data , size_t n)",3, 59, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::TFile()",6, 29, 6, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::~TFile()",4, 22, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( char * buffer , size_t count)",3, 57, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( double * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( float * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( int8_t * buffer , size_t count)",3, 57, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( int16_t * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( int32_t * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( int64_t * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( uint8_t * buffer , size_t count)",3, 57, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( uint16_t * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( uint32_t * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::DeSerialize( uint64_t * buffer , size_t count)",3, 63, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const char * buffer , size_t count)",3, 58, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const double * buffer , size_t count)",3, 60, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const float * buffer , size_t count)",3, 59, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const int8_t * buffer , size_t count)",3, 60, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const int16_t * buffer , size_t count)",3, 61, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const int32_t * buffer , size_t count)",3, 61, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const int64_t * buffer , size_t count)",3, 61, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const uint8_t * buffer , size_t count)",3, 61, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const uint16_t * buffer , size_t count)",3, 62, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const uint32_t * buffer , size_t count)",3, 62, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Serialize( const uint64_t * buffer , size_t count)",3, 62, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Skip( size_t count)",4, 33, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Open( const STRING & filename , FileReader reader)",13, 62, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Open( const char * data , int size)",12, 47, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Open( FILE * fp , int64_t end_offset)",24, 69, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::FGets( char * buffer , int buffer_size)",10, 62, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::FReadEndian( void * buffer , size_t size , int count)",10, 63, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::FRead( void * buffer , size_t size , int count)",19, 57, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::Rewind()",4, 29, 2, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::OpenWrite( GenericVector<char> * data)",14, 51, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::CloseWrite( const STRING & filename , FileWriter writer)",7, 68, 0, 0
repos/cpp/tesseract/src/ccutil/serialis.cpp,"tesseract::TFile::FWrite( const void * buffer , size_t size , int count)",13, 71, 2, 0
repos/cpp/tesseract/src/ccutil/errcode.cpp,"ERRCODE::error( const char * caller , TessErrorLogCode action , const char * format , ...) const",59, 79, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::UNICHAR( const char * utf8_str , int len)",26, 67, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::UNICHAR( int unicode)",35, 67, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::first_uni() const",29, 47, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::utf8_str() const",7, 34, 0, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::utf8_step( const char * utf8_str)",14, 70, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::const_iterator::operator ++()",13, 65, 0, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::const_iterator::operator *() const",10, 52, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::const_iterator::get_utf8( char * utf8_output) const",11, 65, 0, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::const_iterator::utf8_len() const",9, 52, 4, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::const_iterator::is_legal() const",3, 49, 0, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::begin( const char * utf8_str , const int len)",3, 78, 0, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::end( const char * utf8_str , const int len)",3, 76, 0, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::UTF8ToUTF32( const char * utf8_str)",15, 78, 2, 0
repos/cpp/tesseract/src/ccutil/unichar.cpp,"tesseract::UNICHAR::UTF32ToUTF8( const std :: vector<char32> & str32)",13, 74, 4, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST::internal_clear( void(*zapper)(ELIST_LINK*))",17, 56, 33, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST::assign_to_sublist( ELIST_ITERATOR * start_it , ELIST_ITERATOR * end_it)",11, 75, 30, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST::length() const",8, 63, 2, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST::sort( int comparator(const void*,const void*))",31, 65, 2, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST::add_sorted_and_find( int comparator(const void*,const void*) , bool unique , ELIST_LINK * new_link)",31, 64, 4, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST_ITERATOR::forward()",32, 75, 4, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST_ITERATOR::data_relative( int8_t offset)",26, 82, 42, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST_ITERATOR::move_to_last()",11, 68, 4, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST_ITERATOR::exchange( ELIST_ITERATOR * other_it)",86, 82, 0, 0
repos/cpp/tesseract/src/ccutil/elst.cpp,"ELIST_ITERATOR::extract_sublist( ELIST_ITERATOR * other_it)",71, 93, 0, 0
repos/cpp/tesseract/src/ccutil/globaloc.cpp,"SavePixForCrash( int resolution , Pix * pix)",16, 60, 2, 0
repos/cpp/tesseract/src/ccutil/globaloc.cpp,"signal_exit( int signal_code)",21, 67, 4, 0
repos/cpp/tesseract/src/ccutil/globaloc.cpp,"err_exit()",3, 54, 2, 0
repos/cpp/tesseract/src/ccutil/globaloc.cpp,"set_global_loc_code( int loc_code)",3, 41, 0, 0
repos/cpp/tesseract/src/ccutil/globaloc.cpp,"set_global_subloc_code( int loc_code)",3, 44, 0, 0
repos/cpp/tesseract/src/ccutil/globaloc.cpp,"set_global_subsubloc_code( int loc_code)",3, 47, 0, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"LongBit()",3, 34, 2, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"SkipSpace( FILE * s)",6, 65, 2, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"SetBit( unsigned long * bitmap , unsigned int bit)",3, 51, 2, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"TestBit( unsigned long * bitmap , unsigned int bit)",3, 73, 2, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"DigitValue( int ch , int base)",11, 53, 2, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"streamtoumax( FILE * s , int base)",38, 69, 2, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"streamtofloat( FILE * s)",43, 81, 4, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"tfscanf( FILE * stream , const char * format , ...)",10, 53, 0, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"fscanf( FILE * stream , const char * format , ...)",10, 52, 0, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"vfscanf( FILE * stream , const char * format , ...)",10, 53, 0, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"tvfscanf( FILE * stream , const char * format , va_list ap)",312, 79, 22, 0
repos/cpp/tesseract/src/ccutil/scanutils.cpp,"creat( const char * pathname , mode_t mode)",3, 61, 2, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::internal_deep_clear( void(*zapper)(void*))",17, 56, 0, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::shallow_clear()",15, 53, 4, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::assign_to_sublist( CLIST_ITERATOR * start_it , CLIST_ITERATOR * end_it)",11, 75, 30, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::length() const",8, 60, 2, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::sort( int comparator(const void*,const void*))",31, 65, 2, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::add_sorted( int comparator(const void*,const void*) , bool unique , void * new_data)",32, 67, 2, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST::set_subtract( int comparator(const void*,const void*) , bool unique , CLIST * minuend , CLIST * subtrahend)",23, 68, 2, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST_ITERATOR::forward()",31, 75, 4, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST_ITERATOR::data_relative( int8_t offset)",26, 76, 36, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST_ITERATOR::move_to_last()",14, 68, 4, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST_ITERATOR::exchange( CLIST_ITERATOR * other_it)",86, 82, 0, 0
repos/cpp/tesseract/src/ccutil/clst.cpp,"CLIST_ITERATOR::extract_sublist( CLIST_ITERATOR * other_it)",69, 93, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::Open( const std :: string & filename , const std :: string & mode)",3, 73, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::OpenOrDie( const std :: string & filename , const std :: string & mode)",9, 68, 4, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::WriteStringToFileOrDie( const std :: string & str , const std :: string & filename)",10, 68, 4, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::Readable( const std :: string & filename)",8, 51, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::ReadFileToString( const std :: string & filename , std :: string * out)",8, 77, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::JoinPath( const std :: string & prefix , const std :: string & suffix)",5, 83, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::Delete( const char * pathname)",12, 60, 4, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::DeleteMatchingFiles( const char * pattern)",13, 58, 3, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::File::DeleteMatchingFiles( const char * pattern)",12, 63, 4, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::InputBuffer::InputBuffer( FILE * stream)",6, 39, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::InputBuffer::InputBuffer( FILE * stream , size_t)",6, 47, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::InputBuffer::~InputBuffer()",5, 30, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::InputBuffer::Read( std :: string * out)",13, 53, 2, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::InputBuffer::CloseFile()",5, 32, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::OutputBuffer::OutputBuffer( FILE * stream)",3, 41, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::OutputBuffer::OutputBuffer( FILE * stream , size_t)",3, 49, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::OutputBuffer::~OutputBuffer()",5, 32, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::OutputBuffer::WriteString( const std :: string & str)",3, 57, 0, 0
repos/cpp/tesseract/src/ccutil/fileio.cpp,"tesseract::OutputBuffer::CloseFile()",5, 33, 0, 0
repos/cpp/tesseract/src/ccutil/mainblk.cpp,"tesseract::CCUtil::main_setup( const char * argv0 , const char * basename)",52, 79, 36, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::RadicalPreHash( const std :: vector<int> & rs)",8, 56, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::DecodeRadicalLine( STRING * radical_data_line , RSMap * radical_map)",18, 79, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::DecodeRadicalTable( STRING * radical_data , RSMap * radical_map)",12, 75, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::UnicharCompress()",1, 55, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::UnicharCompress( const UnicharCompress & src)",1, 78, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::~UnicharCompress()",1, 51, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::operator =( const UnicharCompress & src)",7, 74, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::ComputeEncoding( const UNICHARSET & unicharset , int null_id , STRING * radical_stroke_table)",113, 81, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::SetupPassThrough( const UNICHARSET & unicharset)",14, 71, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::SetupDirect( const GenericVector<RecodedCharID> & codes)",5, 79, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::DefragmentCodeValues( int encoded_null)",40, 81, 2, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::EncodeUnichar( int unichar_id , RecodedCharID * code) const",5, 80, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::DecodeUnichar( const RecodedCharID & code) const",7, 79, 2, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::Serialize( TFile * fp) const",3, 51, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::DeSerialize( TFile * fp)",6, 54, 2, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::GetEncodingAsString( const UNICHARSET & unicharset) const",24, 79, 4, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::DecomposeHangul( int unicode , int * leading , int * vowel , int * trailing)",11, 77, 0, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::ComputeCodeRange()",10, 56, 6, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::SetupDecoder()",36, 78, 10, 0
repos/cpp/tesseract/src/ccutil/unicharcompress.cpp,"tesseract::UnicharCompress::Cleanup()",12, 73, 2, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2::internal_clear( void(*zapper)(ELIST2_LINK*))",17, 56, 33, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2::assign_to_sublist( ELIST2_ITERATOR * start_it , ELIST2_ITERATOR * end_it)",11, 77, 31, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2::length() const",8, 63, 2, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2::sort( int comparator(const void*,const void*))",31, 67, 2, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2::add_sorted( int comparator(const void*,const void*) , ELIST2_LINK * new_link)",28, 66, 0, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2_ITERATOR::forward()",36, 77, 4, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2_ITERATOR::backward()",31, 73, 4, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2_ITERATOR::data_relative( int8_t offset)",23, 84, 44, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2_ITERATOR::exchange( ELIST2_ITERATOR * other_it)",98, 84, 0, 0
repos/cpp/tesseract/src/ccutil/elst2.cpp,"ELIST2_ITERATOR::extract_sublist( ELIST2_ITERATOR * other_it)",76, 96, 0, 0
repos/cpp/tesseract/src/ccutil/ccutil.cpp,"tesseract::CCUtil::CCUtil()",13, 80, 2, 0
repos/cpp/tesseract/src/ccutil/ccutil.cpp,"tesseract::CCUtilMutex::CCUtilMutex()",7, 40, 2, 0
repos/cpp/tesseract/src/ccutil/ccutil.cpp,"tesseract::CCUtilMutex::Lock()",7, 41, 2, 0
repos/cpp/tesseract/src/ccutil/ccutil.cpp,"tesseract::CCUtilMutex::Unlock()",7, 33, 2, 0
repos/cpp/tesseract/src/ccutil/tprintf.cpp,"tprintf( const char * format , ...)",33, 86, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::AllocData( int used , int capacity)",9, 69, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::DiscardData()",4, 29, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::ensure_cstr( int32_t min_capacity)",25, 63, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::FixHeader() const",5, 45, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::STRING()",4, 45, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::STRING( const STRING & str)",8, 54, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::STRING( const char * cstr)",11, 47, 4, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::STRING( const char * data , int length)",10, 57, 4, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::~STRING()",3, 20, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::Serialize( FILE * fp) const",5, 51, 9, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::Serialize( TFile * fp) const",5, 42, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::DeSerialize( bool swap , FILE * fp)",10, 77, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::DeSerialize( TFile * fp)",6, 44, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::SkipDeSerialize( TFile * fp)",5, 44, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::contains( const char c) const",3, 60, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::length() const",4, 33, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::string() const",10, 59, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::c_str() const",3, 36, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator [ ]( int32_t index) const",3, 54, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::insert_range( int32_t index , const char * str , int len)",32, 81, 4, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::erase_range( int32_t index , int len)",9, 51, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::truncate_at( int32_t index)",8, 44, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator [ ]( int32_t index) const",6, 62, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::split( const char c , GenericVector<STRING> * splited)",18, 78, 8, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator ==( const STRING & str) const",11, 65, 10, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator !=( const STRING & str) const",11, 64, 9, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator !=( const char * cstr) const",12, 62, 4, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator =( const STRING & str)",15, 75, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator +=( const STRING & str)",22, 73, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::add_str_int( const char * str , int number)",9, 61, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::add_str_double( const char * str , double number)",9, 62, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator =( const char * cstr)",20, 77, 4, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::assign( const char * cstr , int len)",12, 75, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator +( const STRING & str) const",7, 52, 0, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator +( const char ch) const",18, 60, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator +=( const char * str)",23, 73, 2, 0
repos/cpp/tesseract/src/ccutil/strngs.cpp,"STRING::operator +=( const char ch)",19, 57, 4, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::UNICHARMAP()",3, 27, 0, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::~UNICHARMAP()",3, 28, 0, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::unichar_to_id( const char * const unichar_repr , int length) const",17, 81, 2, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::insert( const char * const unichar_repr , UNICHAR_ID id)",18, 73, 0, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::contains( const char * const unichar_repr , int length) const",18, 81, 8, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::minmatch( const char * const unichar_repr) const",14, 75, 8, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::clear()",4, 27, 0, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::UNICHARMAP_NODE::UNICHARMAP_NODE()",4, 49, 0, 0
repos/cpp/tesseract/src/ccutil/unicharmap.cpp,"UNICHARMAP::UNICHARMAP_NODE::~UNICHARMAP_NODE()",3, 50, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMap::SparseToCompact( int sparse_index) const",4, 61, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMap::CopyFrom( const IndexMap & src)",4, 47, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMap::CopyFrom( const IndexMapBiDi & src)",4, 51, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMap::Serialize( FILE * fp) const",3, 80, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMap::DeSerialize( bool swap , FILE * fp)",10, 75, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::InitAndSetupRange( int sparse_size , int start , int end)",6, 76, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::Init( int size , bool all_mapped)",7, 53, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::SetMap( int sparse_index , bool mapped)",3, 59, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::Setup()",15, 49, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::CopyFrom( const IndexMapBiDi & src)",5, 55, 0, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::Merge( int compact_index1 , int compact_index2)",21, 78, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::CompleteMerges()",36, 77, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::Serialize( FILE * fp) const",15, 77, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::DeSerialize( bool swap , FILE * fp)",14, 60, 2, 0
repos/cpp/tesseract/src/ccutil/indexmapbidi.cpp,"tesseract::IndexMapBiDi::MapFeatures( const GenericVector<int> & sparse , GenericVector<int> * compact) const",19, 67, 30, 0
repos/cpp/tesseract/src/ccutil/basedir.cpp,"truncate_path( const char * code_path , STRING * trunc_path)",16, 75, 4, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"GlobalParams()",4, 78, 2, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"tesseract::ParamUtils::ReadParamsFile( const char * file , SetParamConstraint constraint , ParamsVectors * member_params)",20, 69, 4, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"tesseract::ParamUtils::ReadParamsFromFp( SetParamConstraint constraint , TFile * fp , ParamsVectors * member_params)",28, 76, 0, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"tesseract::ParamUtils::SetParam( const char * name , const char * value , SetParamConstraint constraint , ParamsVectors * member_params)",43, 80, 2, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"tesseract::ParamUtils::GetParamAsString( const char * name , const ParamsVectors * member_params , STRING * value)",37, 80, 2, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"tesseract::ParamUtils::PrintParams( FILE * fp , const ParamsVectors * member_params)",23, 84, 14, 0
repos/cpp/tesseract/src/ccutil/params.cpp,"tesseract::ParamUtils::ResetToDefaults( ParamsVectors * member_params)",19, 68, 4, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::BuildPopupMenu()",11, 62, 18, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::BuildMenuBar()",17, 59, 2, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::PopupHandler( const SVEvent * sv_event)",6, 61, 2, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::MenuBarHandler( const SVEvent * sv_event)",6, 66, 2, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::ClickHandler( const SVEvent * sv_event)",21, 75, 4, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::SelectionHandler( const SVEvent * sv_event)",20, 60, 23, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::Notify( const SVEvent * sv_event)",7, 77, 2, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"SVPaint::SVPaint( const char * server_name)",48, 80, 2, 0
repos/cpp/tesseract/src/viewer/svpaint.cpp,"main( int argc , char ** argv)",5, 79, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVMutex::SVMutex()",7, 40, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVMutex::Lock()",7, 41, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVMutex::Unlock()",7, 33, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVSync::StartThread( void *(*func)(void*) , void * arg)",18, 81, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVSync::ExitThread()",7, 28, 0, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVSync::StartProcess( const char * executable , const char * args)",51, 88, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVSemaphore::SVSemaphore()",15, 53, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVSemaphore::Signal()",9, 44, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVSemaphore::Wait()",9, 45, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVNetwork::Send( const char * msg)",5, 40, 0, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVNetwork::Flush()",8, 81, 4, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVNetwork::Receive()",46, 82, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVNetwork::Close()",9, 30, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"ScrollViewProg()",8, 48, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"ScrollViewCommand( std :: string scrollview_path)",26, 79, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"FreeAddrInfo( struct addrinfo * addr_info)",8, 55, 0, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"GetAddrInfoNonLinux( const char * hostname , int port , struct addrinfo ** addr_info)",35, 76, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"GetAddrInfo( const char * hostname , int port , struct addrinfo ** address)",10, 60, 2, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVNetwork::SVNetwork( const char * hostname , int port)",62, 82, 4, 0
repos/cpp/tesseract/src/viewer/svutil.cpp,"SVNetwork::~SVNetwork()",4, 27, 2, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::SVMenuNode()",8, 31, 2, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::~SVMenuNode()",2, 28, 0, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::AddChild( const char * txt)",5, 75, 2, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::AddChild( const char * txt , int command_event)",3, 86, 2, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::AddChild( const char * txt , int command_event , const char * val)",4, 82, 2, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::AddChild( const char * txt , int command_event , const char * val , const char * desc)",4, 79, 0, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::AddChild( const char * txt , int command_event , int tv)",3, 82, 2, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::SVMenuNode( int command_event , const char * txt , int tv , bool check_box_entry , const char * val , const char * desc)",12, 70, 23, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::AddChild( SVMenuNode * svmn)",11, 56, 4, 0
repos/cpp/tesseract/src/viewer/svmnode.cpp,"SVMenuNode::BuildMenu( ScrollView * sv , bool menu_bar)",22, 75, 6, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"SVEvent::copy()",14, 52, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::MessageReceiver( void * a)",99, 89, 6, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::ScrollView( const char * name , int x_pos , int y_pos , int x_size , int y_size , int x_canvas_size , int y_canvas_size , bool y_axis_reversed , const char * server_name)",5, 79, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::ScrollView( const char * name , int x_pos , int y_pos , int x_size , int y_size , int x_canvas_size , int y_canvas_size , bool y_axis_reversed)",6, 79, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::ScrollView( const char * name , int x_pos , int y_pos , int x_size , int y_size , int x_canvas_size , int y_canvas_size)",5, 79, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Initialize( const char * name , int x_pos , int y_pos , int x_size , int y_size , int x_canvas_size , int y_canvas_size , bool y_axis_reversed , const char * server_name)",49, 80, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::StartEventHandler( void * a)",37, 84, 6, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::~ScrollView()",29, 76, 4, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::SendMsg( const char * format , ...)",15, 65, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::SendRawMessage( const char * msg)",3, 51, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AddEventHandler( SVEventHandler * listener)",3, 61, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Signal()",3, 28, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::SetEvent( SVEvent * svevent)",16, 46, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AwaitEvent( SVEventType type)",18, 87, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AwaitEventAnyWindow()",17, 87, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::SendPolygon()",29, 69, 4, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::SetCursor( int x , int y)",4, 43, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::DrawTo( int x , int y)",5, 55, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Line( int x1 , int y1 , int x2 , int y2)",15, 75, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::SetVisible( bool visible)",4, 46, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AlwaysOnTop( bool b)",4, 47, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AddMessage( const char * format , ...)",15, 63, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AddMessageBox()",3, 35, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Exit()",4, 35, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Clear()",3, 27, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Stroke( float width)",3, 40, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Rectangle( int x1 , int y1 , int x2 , int y2)",6, 65, 4, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Ellipse( int x1 , int y1 , int width , int height)",4, 66, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Pen( int red , int green , int blue)",3, 53, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Pen( int red , int green , int blue , int alpha)",3, 64, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Brush( int red , int green , int blue)",3, 55, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Brush( int red , int green , int blue , int alpha)",3, 66, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::TextAttributes( const char * font , int pixel_size , bool bold , bool italic , bool underlined)",15, 75, 32, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Text( int x , int y , const char * mystring)",3, 73, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Image( const char * image , int x_pos , int y_pos)",5, 66, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::MenuItem( const char * parent , const char * name , int cmdEvent , bool flag)",8, 64, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::MenuItem( const char * parent , const char * name , int cmdEvent)",4, 80, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::MenuItem( const char * parent , const char * name)",4, 66, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::PopupItem( const char * parent , const char * name)",4, 67, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::PopupItem( const char * parent , const char * name , int cmdEvent , const char * value , const char * desc)",10, 80, 27, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::UpdateWindow()",3, 34, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Update()",9, 66, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Pen( Color color)",4, 55, 6, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Brush( Color color)",6, 38, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::ShowInputDialog( const char * msg)",10, 59, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::ShowYesNoDialog( const char * msg)",9, 59, 2, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::ZoomToRectangle( int x1 , int y1 , int x2 , int y2)",6, 83, 10, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::Image( struct Pix * image , int x_pos , int y_pos)",41, 66, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::AddEscapeChars( const char * input)",16, 54, 0, 0
repos/cpp/tesseract/src/viewer/scrollview.cpp,"ScrollView::TranslateYCoordinate( int y)",4, 46, 0, 0
repos/cpp/tesseract/src/cutil/emalloc.cpp,"Emalloc( int Size)",6, 34, 2, 0
repos/cpp/tesseract/src/cutil/emalloc.cpp,"Erealloc( void * ptr , int size)",6, 58, 2, 0
repos/cpp/tesseract/src/cutil/emalloc.cpp,"Efree( void * ptr)",4, 31, 2, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"is_same( void * item1 , void * item2)",3, 52, 2, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"count( LIST var_list)",6, 31, 2, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"delete_d( LIST list , void * key , int_compare is_equal)",25, 60, 0, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"destroy( LIST list)",10, 29, 2, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"destroy_nodes( LIST list , void_dest destructor)",8, 70, 4, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"last( LIST var_list)",4, 74, 2, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"pop( LIST list)",10, 26, 2, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"push( LIST list , void * element)",8, 38, 0, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"push_last( LIST list , void * item)",10, 40, 0, 0
repos/cpp/tesseract/src/cutil/oldlist.cpp,"search( LIST list , void * key , int_compare is_equal)",6, 71, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"cprintf( const char * format , ...)",12, 51, 0, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"c_create_window( const char * name , int16_t xpos , int16_t ypos , int16_t xsize , int16_t ysize , double xmin , double xmax , double ymin , double ymax)",13, 90, 3, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"c_line_color_index( void * win , C_COL index)",7, 89, 1, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"c_move( void * win , double x , double y)",7, 42, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"c_draw( void * win , double x , double y)",7, 42, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"c_make_current( void * win)",5, 42, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"c_clear_window( void * win)",5, 42, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"window_wait( ScrollView * win)",12, 68, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"reverse32( void * ptr)",11, 29, 2, 0
repos/cpp/tesseract/src/cutil/callcpp.cpp,"reverse16( void * ptr)",8, 29, 2, 0
repos/cpp/tesseract/src/cutil/bitvec.cpp,"ExpandBitVector( BIT_VECTOR Vector , int NewNumBits)",4, 64, 0, 0
repos/cpp/tesseract/src/cutil/bitvec.cpp,"FreeBitVector( BIT_VECTOR BitVector)",17, 61, 1, 0
repos/cpp/tesseract/src/cutil/bitvec.cpp,"NewBitVector( int NumBits)",4, 52, 0, 0
repos/cpp/tesseract/src/arch/intsimdmatrixsse.cpp,"tesseract::IntDotProductSSE( const int8_t * u , const int8_t * v , int n)",36, 80, 4, 0
repos/cpp/tesseract/src/arch/intsimdmatrixsse.cpp,"tesseract::PartialMatrixDotVector1( const int8_t * wi , const double * scales , const int8_t * u , int num_in , double * v)",7, 76, 0, 0
repos/cpp/tesseract/src/arch/intsimdmatrixsse.cpp,"tesseract::matrixDotVector( int dim1 , int dim2 , const int8_t * wi , const double * scales , const int8_t * u , double * v)",13, 80, 28, 0
repos/cpp/tesseract/src/arch/intsimdmatrix.cpp,"tesseract::IntSimdMatrix::Init( const GENERIC_2D_ARRAY<int8_t> & w , std :: vector<int8_t> & shaped_w) const",45, 79, 6, 0
repos/cpp/tesseract/src/arch/intsimdmatrix.cpp,"tesseract::IntSimdMatrix::MatrixDotVector( const GENERIC_2D_ARRAY<int8_t> & w , const GenericVector<double> & scales , const int8_t * u , double * v)",14, 77, 4, 0
repos/cpp/tesseract/src/arch/simddetect.cpp,"tesseract::DotProductGeneric( const double * u , const double * v , int n)",5, 75, 0, 0
repos/cpp/tesseract/src/arch/simddetect.cpp,"tesseract::SetDotProduct( DotProductFunction f , const IntSimdMatrix * m = nullptr)",4, 84, 0, 0
repos/cpp/tesseract/src/arch/simddetect.cpp,"tesseract::SIMDDetect::SIMDDetect()",73, 80, 4, 0
repos/cpp/tesseract/src/arch/simddetect.cpp,"tesseract::SIMDDetect::Update()",48, 84, 4, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::MultiplyGroup( const __m256i & rep_input , const __m256i & ones , const int8_t * & wi , __m256i & weights , __m256i & reps , __m256i & result)",20, 80, 0, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::ExtractResults( __m256i & result , __m256i & shift_id , const int8_t * & wi , const double * & scales , int num_out , double * & v)",18, 76, 34, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::PartialMatrixDotVector64( const int8_t * wi , const double * scales , const int8_t * u , int num_in , int num_out , double * v)",53, 79, 37, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::PartialMatrixDotVector32( const int8_t * wi , const double * scales , const int8_t * u , int num_in , int num_out , double * v)",41, 79, 37, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::PartialMatrixDotVector16( const int8_t * wi , const double * scales , const int8_t * u , int num_in , int num_out , double * v)",35, 79, 37, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::PartialMatrixDotVector8( const int8_t * wi , const double * scales , const int8_t * u , int num_in , int num_out , double * v)",30, 78, 36, 0
repos/cpp/tesseract/src/arch/intsimdmatrixavx2.cpp,"tesseract::matrixDotVector( int dim1 , int dim2 , const int8_t * wi , const double * scales , const int8_t * u , double * v)",51, 82, 4, 0
repos/cpp/tesseract/src/arch/dotproductavx.cpp,"tesseract::DotProductAVX( const double * u , const double * v , int n)",28, 64, 0, 0
repos/cpp/tesseract/src/arch/dotproductsse.cpp,"tesseract::DotProductSSE( const double * u , const double * v , int n)",49, 80, 2, 0
repos/cpp/tesseract/src/arch/dotproduct.cpp,"tesseract::DotProductNative( const double * u , const double * v , int n)",5, 67, 0, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::TessPDFRenderer( const char * outputbase , const char * datadir , bool textonly)",8, 78, 0, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::AppendPDFObjectDIY( size_t objectsize)",4, 62, 0, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::AppendPDFObject( const char * data)",4, 58, 0, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::prec( double x)",7, 49, 2, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::dist2( int x1 , int y1 , int x2 , int y2)",3, 56, 2, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::GetWordBaseline( int writing_direction , int ppi , int height , int word_x1 , int word_y1 , int word_x2 , int word_y2 , int line_x1 , int line_y1 , int line_x2 , int line_y2 , double * x0 , double * y0 , double * length)",33, 80, 28, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::AffineMatrix( int writing_direction , int line_x1 , int line_y1 , int line_x2 , int line_y2 , double * a , double * b , double * c , double * d)",21, 77, 25, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::ClipBaseline( int ppi , int x1 , int y1 , int x2 , int y2 , int * line_x1 , int * line_y1 , int * line_x2 , int * line_y2)",12, 66, 0, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::CodepointToUtf16be( int code , char utf16 [ kMaxBytesPerCodepoint ])",16, 78, 0, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::GetPDFTextObjects( TessBaseAPI * api , double width , double height)",169, 81, 6, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::BeginDocumentHandler()",201, 81, 2, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::imageToPDFObj( Pix * pix , const char * filename , long int objnum , char ** pdf_object , long int * pdf_object_size , const int jpg_quality)",141, 70, 15, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::AddImageHandler( TessBaseAPI * api)",84, 80, 2, 0
repos/cpp/tesseract/src/api/pdfrenderer.cpp,"tesseract::TessPDFRenderer::EndDocumentHandler()",91, 73, 2, 0
repos/cpp/tesseract/src/api/wordstrboxrenderer.cpp,"tesseract::TessBaseAPI::GetWordStrBoxText( int page_number)",54, 81, 2, 0
repos/cpp/tesseract/src/api/wordstrboxrenderer.cpp,"tesseract::TessWordStrBoxRenderer::TessWordStrBoxRenderer( const char * outputbase)",2, 71, 0, 0
repos/cpp/tesseract/src/api/wordstrboxrenderer.cpp,"tesseract::TessWordStrBoxRenderer::AddImageHandler( TessBaseAPI * api)",9, 65, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::addAvailableLanguages( const STRING & datadir , const STRING & base , GenericVector<STRING> * langs)",56, 77, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::CompareSTRING( const void * p1 , const void * p2)",5, 59, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::TessBaseAPI()",33, 84, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::~TessBaseAPI()",3, 30, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::Version()",3, 37, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::getOpenCLDevice( void ** data)",13, 62, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::CatchSignals()",14, 62, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetInputName( const char * name)",6, 51, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetOutputName( const char * name)",6, 52, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetVariable( const char * name , const char * value)",5, 79, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetDebugVariable( const char * name , const char * value)",5, 76, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetIntVariable( const char * name , int * value) const",7, 75, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetBoolVariable( const char * name , bool * value) const",7, 77, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetStringVariable( const char * name) const",5, 81, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetDoubleVariable( const char * name , double * value) const",7, 81, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetVariableAsString( const char * name , STRING * val)",3, 72, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::PrintVariables( FILE * fp) const",3, 53, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::Init( const char * datapath , const char * language , OcrEngineMode oem , char ** configs , int configs_size , const GenericVector<STRING> * vars_vec , const GenericVector<STRING> * vars_values , bool set_only_non_debug_params)",8, 75, 22, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::Init( const char * data , int data_size , const char * language , OcrEngineMode oem , char ** configs , int configs_size , const GenericVector<STRING> * vars_vec , const GenericVector<STRING> * vars_values , bool set_only_non_debug_params , FileReader reader)",65, 81, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetInitLanguagesAsString() const",4, 68, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetLoadedLanguagesAsVector( GenericVector<STRING> * langs) const",10, 59, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetAvailableLanguagesAsVector( GenericVector<STRING> * langs) const",8, 59, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::InitLangMod( const char * datapath , const char * language)",8, 75, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::InitForAnalysePage()",8, 49, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ReadConfigFile( const char * filename)",3, 78, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ReadDebugConfigFile( const char * filename)",3, 75, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetPageSegMode( PageSegMode mode)",5, 53, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetPageSegMode() const",6, 58, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::TesseractRect( const unsigned char * imagedata , int bytes_per_pixel , int bytes_per_line , int left , int top , int width , int height)",17, 78, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ClearAdaptiveClassifier()",6, 46, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetImage( const unsigned char * imagedata , int width , int height , int bytes_per_pixel , int bytes_per_line)",9, 70, 27, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetSourceResolution( int ppi)",6, 67, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetImage( Pix * pix)",13, 68, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetRectangle( int left , int top , int width , int height)",6, 75, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetThresholdedImage()",8, 72, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetRegions( Pixa ** pixa)",3, 62, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetTextlines( const bool raw_image , const int raw_padding , Pixa ** pixa , int ** blockids , int ** paraids)",5, 78, 32, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetStrips( Pixa ** pixa , int ** blockids)",3, 66, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetWords( Pixa ** pixa)",3, 60, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetConnectedComponents( Pixa ** pixa)",3, 62, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetComponentImages( PageIteratorLevel level , bool text_only , bool raw_image , const int raw_padding , Pixa ** pixa , int ** blockids , int ** paraids)",81, 78, 40, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetThresholdedImageScaleFactor() const",6, 58, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::AnalyseLayout()",1, 76, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::AnalyseLayout( bool merge_similar_words)",13, 73, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::Recognize( ETEXT_DESC * monitor)",88, 80, 29, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::RecognizeForChopTest( ETEXT_DESC * monitor)",30, 70, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetInputImage( Pix * pix)",1, 81, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetInputImage()",1, 73, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetInputName()",5, 43, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetDatapath()",3, 43, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetSourceYResolution()",3, 47, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ProcessPagesFileList( FILE * flist , STRING * buf , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer , int tessedit_page_number)",57, 71, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ProcessPagesMultipageTiff( const l_uint8 * data , size_t size , const char * filename , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer , int tessedit_page_number)",33, 74, 44, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ProcessPages( const char * filename , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer)",16, 80, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ProcessPagesInternal( const char * filename , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer)",98, 74, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ProcessPage( Pix * pix , int page_index , const char * filename , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer)",62, 78, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetLTRIterator()",8, 76, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetIterator()",8, 76, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetMutableIterator()",8, 80, 29, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetUTF8Text()",16, 78, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::AddBoxToTSV( const PageIterator * it , PageIteratorLevel level , STRING * text)",9, 73, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetTSVText( int page_number)",106, 81, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetBoxText( int page_number)",35, 80, 15, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetUNLVText()",100, 78, 8, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::DetectOrientationScript( int * orient_deg , float * orient_conf , const char ** script_name , float * script_conf)",25, 80, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetOsdText( int page_number)",27, 72, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::MeanTextConf()",10, 36, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::AllWordConfidences()",23, 81, 17, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::AdaptToWordStr( PageSegMode mode , const char * wordstr)",55, 74, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::Clear()",6, 53, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::End()",29, 62, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ClearPersistentCache()",3, 48, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::IsValidWord( const char * word)",3, 49, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::IsValidCharacter( const char * utf8_character)",3, 68, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetTextDirection( int * out_offset , float * out_slope)",33, 79, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetDictFunc( DictFunc f)",5, 47, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetProbabilityInContextFunc( ProbabilityInContextFunc f)",10, 76, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::SetFillLatticeFunc( FillLatticeFunc f)",3, 60, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::InternalSetImage()",10, 70, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::Threshold( Pix ** pix)",53, 80, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::FindLines()",74, 78, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::ClearResults()",18, 47, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::TextLength( int * blob_count)",25, 73, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::DetectOS( OSResults * osr)",13, 78, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::set_min_orientation_margin( double margin)",3, 62, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetBlockTextOrientations( int ** block_orientation , bool ** vertical_writing)",43, 80, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::DetectParagraphs( bool after_text_recognition)",14, 71, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetUnichar( int unichar_id)",3, 59, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetDawg( int i) const",4, 64, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::NumDawgs() const",3, 71, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::HOcrEscape( const char * text)",15, 40, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::FindLinesCreateBlockList()",6, 54, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::DeleteBlockList( BLOCK_LIST * block_list)",3, 60, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::MakeTessOCRRow( float baseline , float xheight , float descender , float ascender)",15, 51, 33, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::MakeTBLOB( Pix * pix)",24, 63, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::NormalizeTBLOB( TBLOB * tblob , ROW * row , bool numeric_mode)",8, 82, 19, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::make_tesseract_blob( float baseline , float xheight , float descender , float ascender , bool numeric_mode , Pix * pix)",12, 75, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::AdaptToCharacter( const char * unichar_repr , int length , float baseline , float xheight , float descender , float ascender)",33, 78, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::RecognitionPass1( BLOCK_LIST * block_list)",6, 76, 36, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::RecognitionPass2( BLOCK_LIST * block_list , PAGE_RES * pass1_result)",8, 75, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TESS_CHAR::TESS_CHAR( float _cost , const char * repr , int len = - 1)",5, 73, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TESS_CHAR::TESS_CHAR()",6, 29, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TESS_CHAR::~TESS_CHAR()",3, 28, 4, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::add_space( TESS_CHAR_IT * it)",4, 42, 0, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::rating_to_cost( float rating)",8, 49, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::extract_result( TESS_CHAR_IT * out , PAGE_RES * page_res)",25, 81, 6, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::TesseractExtractResult( char ** text , int ** lengths , float ** costs , int ** x0 , int ** y0 , int ** x1 , int ** y1 , PAGE_RES * page_res)",44, 62, 40, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::GetFeaturesForBlob( TBLOB * blob , INT_FEATURE_STRUCT * int_features , int * num_features , int * feature_outline_index)",25, 81, 2, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::FindRowForBox( BLOCK_LIST * blocks , int left , int top , int right , int bottom)",23, 76, 32, 0
repos/cpp/tesseract/src/api/baseapi.cpp,"tesseract::TessBaseAPI::RunAdaptiveClassifier( TBLOB * blob , int num_max_matches , int * unichar_ids , float * ratings , int * num_matches_returned)",21, 69, 40, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::AddBoxToAlto( const ResultIterator * it , PageIteratorLevel level , std :: stringstream & alto_str)",22, 76, 0, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::TessAltoRenderer::BeginDocumentHandler()",33, 71, 6, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::TessAltoRenderer::AddImageHandler( TessBaseAPI * api)",8, 74, 2, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::TessAltoRenderer::EndDocumentHandler()",5, 46, 0, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::TessAltoRenderer::TessAltoRenderer( const char * outputbase)",2, 59, 0, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::TessBaseAPI::GetAltoText( int page_number)",3, 50, 0, 0
repos/cpp/tesseract/src/api/altorenderer.cpp,"tesseract::TessBaseAPI::GetAltoText( ETEXT_DESC * monitor , int page_number)",104, 81, 2, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"Win32ErrorHandler( const char * module , const char * fmt , va_list ap)",8, 67, 0, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"Win32WarningHandler( const char * module , const char * fmt , va_list ap)",9, 69, 0, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintVersionInfo()",62, 81, 2, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintHelpForPSM()",28, 84, 6, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintHelpForOEM()",10, 55, 6, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintHelpExtra( const char * program)",49, 88, 6, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintHelpMessage( const char * program)",19, 82, 6, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"SetVariablesFromCLArgs( tesseract :: TessBaseAPI * api , int argc , char ** argv)",23, 74, 0, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintLangsList( tesseract :: TessBaseAPI * api)",10, 67, 2, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PrintBanner()",4, 67, 2, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"FixPageSegMode( tesseract :: TessBaseAPI * api , tesseract :: PageSegMode pagesegmode)",5, 65, 27, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"checkArgValues( int arg , const char * mode , int count)",6, 87, 4, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"ParseArgs( const int argc , char ** argv , const char ** lang , const char ** image , const char ** outputbase , const char ** datapath , l_int32 * dpi , bool * list_langs , bool * print_parameters , GenericVector<STRING> * vars_vec , GenericVector<STRING> * vars_values , l_int32 * arg_i , tesseract :: PageSegMode * pagesegmode , tesseract :: OcrEngineMode * enginemode)",96, 83, 4, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"PreloadRenderers( tesseract :: TessBaseAPI * api , tesseract :: PointerVector<tesseract::TessResultRenderer> * renderers , tesseract :: PageSegMode pagesegmode , const char * outputbase)",158, 77, 4, 0
repos/cpp/tesseract/src/api/tesseractmain.cpp,"main( int argc , char ** argv)",183, 97, 10, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::GetBlockTextOrientation( const PageIterator * it)",9, 80, 0, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::AddBaselineCoordsTohOCR( const PageIterator * it , PageIteratorLevel level , std :: stringstream & hocr_str)",35, 78, 2, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::AddBoxTohOCR( const ResultIterator * it , PageIteratorLevel level , std :: stringstream & hocr_str)",20, 78, 4, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessBaseAPI::GetHOCRText( int page_number)",3, 50, 0, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessBaseAPI::GetHOCRText( ETEXT_DESC * monitor , int page_number)",262, 81, 2, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessHOcrRenderer::TessHOcrRenderer( const char * outputbase)",4, 59, 0, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessHOcrRenderer::TessHOcrRenderer( const char * outputbase , bool font_info)",4, 75, 0, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessHOcrRenderer::BeginDocumentHandler()",24, 76, 6, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessHOcrRenderer::EndDocumentHandler()",5, 46, 0, 0
repos/cpp/tesseract/src/api/hocrrenderer.cpp,"tesseract::TessHOcrRenderer::AddImageHandler( TessBaseAPI * api)",8, 74, 2, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessVersion()",4, 45, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessDeleteText( char * text)",4, 51, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessDeleteTextArray( char ** arr)",6, 56, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessDeleteIntArray( int * arr)",4, 53, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessDeleteBlockList( BLOCK_LIST * block_list)",4, 68, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessTextRendererCreate( const char * outputbase)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessHOcrRendererCreate( const char * outputbase)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessHOcrRendererCreate2( const char * outputbase , BOOL font_info)",4, 103, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessAltoRendererCreate( const char * outputbase)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessTsvRendererCreate( const char * outputbase)",4, 85, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPDFRendererCreate( const char * outputbase , const char * datadir , BOOL textonly)",5, 106, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessUnlvRendererCreate( const char * outputbase)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBoxTextRendererCreate( const char * outputbase)",4, 89, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessWordStrBoxRendererCreate( const char * outputbase)",4, 92, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessLSTMBoxRendererCreate( const char * outputbase)",4, 89, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessDeleteResultRenderer( TessResultRenderer * renderer)",4, 79, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererInsert( TessResultRenderer * renderer , TessResultRenderer * next)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererNext( TessResultRenderer * renderer)",4, 92, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererBeginDocument( TessResultRenderer * renderer , const char * title)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererAddImage( TessResultRenderer * renderer , TessBaseAPI * api)",4, 99, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererEndDocument( TessResultRenderer * renderer)",4, 84, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererExtention( TessResultRenderer * renderer)",4, 89, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererTitle( TessResultRenderer * renderer)",4, 85, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultRendererImageNum( TessResultRenderer * renderer)",4, 80, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPICreate()",4, 52, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIDelete( TessBaseAPI * handle)",4, 63, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetOpenCLDevice( TessBaseAPI * handle , void ** device)",4, 89, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetInputName( TessBaseAPI * handle , const char * name)",4, 87, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetInputName( TessBaseAPI * handle)",4, 76, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetInputImage( TessBaseAPI * handle , Pix * pix)",4, 80, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetInputImage( TessBaseAPI * handle)",4, 70, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetSourceYResolution( TessBaseAPI * handle)",4, 76, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetDatapath( TessBaseAPI * handle)",4, 75, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetOutputName( TessBaseAPI * handle , const char * name)",4, 88, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetVariable( TessBaseAPI * handle , const char * name , const char * value)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetDebugVariable( TessBaseAPI * handle , const char * name , const char * value)",4, 110, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetIntVariable( const TessBaseAPI * handle , const char * name , int * value)",4, 107, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetBoolVariable( const TessBaseAPI * handle , const char * name , BOOL * value)",13, 109, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetDoubleVariable( const TessBaseAPI * handle , const char * name , double * value)",4, 113, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetStringVariable( const TessBaseAPI * handle , const char * name)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIPrintVariables( const TessBaseAPI * handle , FILE * fp)",4, 87, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIPrintVariablesToFile( const TessBaseAPI * handle , const char * filename)",11, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetVariableAsString( TessBaseAPI * handle , const char * name , STRING * val)",4, 107, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInit4( TessBaseAPI * handle , const char * datapath , const char * language , TessOcrEngineMode mode , char ** configs , int configs_size , char ** vars_vec , char ** vars_values , size_t vars_vec_size , BOOL set_only_non_debug_params)",16, 124, 4, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInit1( TessBaseAPI * handle , const char * datapath , const char * language , TessOcrEngineMode oem , char ** configs , int configs_size)",5, 128, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInit2( TessBaseAPI * handle , const char * datapath , const char * language , TessOcrEngineMode oem)",4, 128, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInit3( TessBaseAPI * handle , const char * datapath , const char * language)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetInitLanguagesAsString( const TessBaseAPI * handle)",4, 94, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetLoadedLanguagesAsVector( const TessBaseAPI * handle)",10, 91, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetAvailableLanguagesAsVector( const TessBaseAPI * handle)",10, 94, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInitLangMod( TessBaseAPI * handle , const char * datapath , const char * language)",4, 111, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInitForAnalysePage( TessBaseAPI * handle)",4, 75, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIReadConfigFile( TessBaseAPI * handle , const char * filename)",4, 93, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIReadDebugConfigFile( TessBaseAPI * handle , const char * filename)",4, 98, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetPageSegMode( TessBaseAPI * handle , TessPageSegMode mode)",4, 93, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetPageSegMode( const TessBaseAPI * handle)",4, 88, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIRect( TessBaseAPI * handle , const unsigned char * imagedata , int bytes_per_pixel , int bytes_per_line , int left , int top , int width , int height)",6, 104, 4, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIClearAdaptiveClassifier( TessBaseAPI * handle)",4, 80, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetImage( TessBaseAPI * handle , const unsigned char * imagedata , int width , int height , int bytes_per_pixel , int bytes_per_line)",5, 120, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetImage2( TessBaseAPI * handle , struct Pix * pix)",4, 83, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetSourceResolution( TessBaseAPI * handle , int ppi)",4, 85, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetRectangle( TessBaseAPI * handle , int left , int top , int width , int height)",4, 111, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetThresholder( TessBaseAPI * handle , TessImageThresholder * thresholder)",4, 106, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetThresholdedImage( TessBaseAPI * handle)",4, 83, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetRegions( TessBaseAPI * handle , struct Pixa ** pixa)",4, 95, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetTextlines( TessBaseAPI * handle , struct Pixa ** pixa , int ** blockids)",4, 113, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetTextlines1( TessBaseAPI * handle , const BOOL raw_image , const int raw_padding , struct Pixa ** pixa , int ** blockids , int ** paraids)",5, 123, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetStrips( TessBaseAPI * handle , struct Pixa ** pixa , int ** blockids)",4, 110, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetWords( TessBaseAPI * handle , struct Pixa ** pixa)",4, 93, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetConnectedComponents( TessBaseAPI * handle , struct Pixa ** cc)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetComponentImages( TessBaseAPI * handle , TessPageIteratorLevel level , BOOL text_only , struct Pixa ** pixa , int ** blockids)",4, 164, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetComponentImages1( TessBaseAPI * handle , const TessPageIteratorLevel level , const BOOL text_only , const BOOL raw_image , const int raw_padding , struct Pixa ** pixa , int ** blockids , int ** paraids)",6, 119, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetThresholdedImageScaleFactor( const TessBaseAPI * handle)",4, 92, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIAnalyseLayout( TessBaseAPI * handle)",4, 83, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIRecognize( TessBaseAPI * handle , ETEXT_DESC * monitor)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIRecognizeForChopTest( TessBaseAPI * handle , ETEXT_DESC * monitor)",4, 97, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIProcessPages( TessBaseAPI * handle , const char * filename , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer)",8, 117, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIProcessPage( TessBaseAPI * handle , struct Pix * pix , int page_index , const char * filename , const char * retry_config , int timeout_millisec , TessResultRenderer * renderer)",8, 125, 47, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetIterator( TessBaseAPI * handle)",4, 83, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetMutableIterator( TessBaseAPI * handle)",4, 91, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetUTF8Text( TessBaseAPI * handle)",4, 69, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetHOCRText( TessBaseAPI * handle , int page_number)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetAltoText( TessBaseAPI * handle , int page_number)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetTsvText( TessBaseAPI * handle , int page_number)",4, 85, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetBoxText( TessBaseAPI * handle , int page_number)",4, 85, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetWordStrBoxText( TessBaseAPI * handle , int page_number)",4, 92, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetLSTMBoxText( TessBaseAPI * handle , int page_number)",4, 89, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetUNLVText( TessBaseAPI * handle)",4, 69, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIMeanTextConf( TessBaseAPI * handle)",4, 68, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIAllWordConfidences( TessBaseAPI * handle)",4, 75, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIAdaptToWordStr( TessBaseAPI * handle , TessPageSegMode mode , const char * wordstr)",4, 114, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIClear( TessBaseAPI * handle)",4, 62, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIEnd( TessBaseAPI * handle)",4, 60, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIIsValidWord( TessBaseAPI * handle , const char * word)",4, 85, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetTextDirection( TessBaseAPI * handle , int * out_offset , float * out_slope)",4, 108, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetDictFunc( TessBaseAPI * handle , TessDictFunc f)",4, 84, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIClearPersistentCache( TessBaseAPI * handle)",4, 78, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetProbabilityInContextFunc( TessBaseAPI * handle , TessProbabilityInContextFunc f)",4, 116, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIDetectOrientationScript( TessBaseAPI * handle , int * orient_deg , float * orient_conf , const char ** script_name , float * script_conf)",7, 143, 60, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetFeaturesForBlob( TessBaseAPI * handle , TBLOB * blob , INT_FEATURE_STRUCT * int_features , int * num_features , int * FeatureOutlineIndex)",5, 122, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessFindRowForBox( BLOCK_LIST * blocks , int left , int top , int right , int bottom)",4, 104, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIRunAdaptiveClassifier( TessBaseAPI * handle , TBLOB * blob , int num_max_matches , int * unichar_ids , float * ratings , int * num_matches_returned)",5, 124, 63, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetUnichar( TessBaseAPI * handle , int unichar_id)",4, 90, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIGetDawg( const TessBaseAPI * handle , int i)",4, 88, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPINumDawgs( const TessBaseAPI * handle)",4, 70, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMakeTessOCRRow( float baseline , float xheight , float descender , float ascender)",4, 107, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMakeTBLOB( struct Pix * pix)",4, 57, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessNormalizeTBLOB( TBLOB * tblob , ROW * row , BOOL numeric_mode)",4, 86, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIOem( const TessBaseAPI * handle)",4, 79, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIInitTruthCallback( TessBaseAPI * handle , TessTruthCallback * cb)",4, 97, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPISetMinOrientationMargin( TessBaseAPI * handle , double margin)",4, 95, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseGetBlockTextOrientations( TessBaseAPI * handle , int ** block_orientation , bool ** vertical_writing)",4, 128, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessBaseAPIFindLinesCreateBlockList( TessBaseAPI * handle)",4, 88, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorDelete( TessPageIterator * handle)",4, 74, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorCopy( const TessPageIterator * handle)",4, 90, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorBegin( TessPageIterator * handle)",4, 72, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorNext( TessPageIterator * handle , TessPageIteratorLevel level)",4, 100, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorIsAtBeginningOf( const TessPageIterator * handle , TessPageIteratorLevel level)",4, 117, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorIsAtFinalElement( const TessPageIterator * handle , TessPageIteratorLevel level , TessPageIteratorLevel element)",5, 118, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorBoundingBox( const TessPageIterator * handle , TessPageIteratorLevel level , int * left , int * top , int * right , int * bottom)",5, 113, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorBlockType( const TessPageIterator * handle)",4, 95, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorGetBinaryImage( const TessPageIterator * handle , TessPageIteratorLevel level)",4, 123, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorGetImage( const TessPageIterator * handle , TessPageIteratorLevel level , int padding , struct Pix * original_image , int * left , int * top)",5, 130, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorBaseline( const TessPageIterator * handle , TessPageIteratorLevel level , int * x1 , int * y1 , int * x2 , int * y2)",5, 110, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorOrientation( TessPageIterator * handle , TessOrientation * orientation , TessWritingDirection * writing_direction , TessTextlineOrder * textline_order , float * deskew_angle)",6, 134, 58, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessPageIteratorParagraphInfo( TessPageIterator * handle , TessParagraphJustification * justification , BOOL * is_list_item , BOOL * is_crown , int * first_line_indent)",10, 124, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorDelete( TessResultIterator * handle)",4, 77, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorCopy( const TessResultIterator * handle)",4, 96, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorGetPageIterator( TessResultIterator * handle)",4, 99, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorGetPageIteratorConst( const TessResultIterator * handle)",4, 116, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorGetChoiceIterator( const TessResultIterator * handle)",4, 109, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorNext( TessResultIterator * handle , TessPageIteratorLevel level)",4, 105, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorGetUTF8Text( const TessResultIterator * handle , TessPageIteratorLevel level)",4, 118, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorConfidence( const TessResultIterator * handle , TessPageIteratorLevel level)",4, 117, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorWordRecognitionLanguage( const TessResultIterator * handle)",4, 107, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorWordFontAttributes( const TessResultIterator * handle , BOOL * is_bold , BOOL * is_italic , BOOL * is_underlined , BOOL * is_monospace , BOOL * is_serif , BOOL * is_smallcaps , int * pointsize , int * font_id)",21, 138, 4, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorWordIsFromDictionary( const TessResultIterator * handle)",4, 97, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorWordIsNumeric( const TessResultIterator * handle)",4, 90, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorSymbolIsSuperscript( const TessResultIterator * handle)",4, 96, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorSymbolIsSubscript( const TessResultIterator * handle)",4, 94, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessResultIteratorSymbolIsDropcap( const TessResultIterator * handle)",4, 92, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessChoiceIteratorDelete( TessChoiceIterator * handle)",4, 77, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessChoiceIteratorNext( TessChoiceIterator * handle)",4, 76, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessChoiceIteratorGetUTF8Text( const TessChoiceIterator * handle)",4, 95, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessChoiceIteratorConfidence( const TessChoiceIterator * handle)",4, 88, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorCreate()",4, 51, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorDelete( ETEXT_DESC * monitor)",4, 63, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorSetCancelFunc( ETEXT_DESC * monitor , TessCancelFunc cancelFunc)",4, 97, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorSetCancelThis( ETEXT_DESC * monitor , void * cancelThis)",4, 88, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorGetCancelThis( ETEXT_DESC * monitor)",4, 71, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorSetProgressFunc( ETEXT_DESC * monitor , TessProgressFunc progressFunc)",4, 103, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorGetProgress( ETEXT_DESC * monitor)",4, 67, 0, 0
repos/cpp/tesseract/src/api/capi.cpp,"TessMonitorSetDeadlineMSecs( ETEXT_DESC * monitor , int deadline)",4, 87, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::TessResultRenderer( const char * outputbase , const char * extension)",15, 81, 4, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::~TessResultRenderer()",9, 44, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::insert( TessResultRenderer * next)",12, 60, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::BeginDocument( const char * title)",10, 60, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::AddImage( TessBaseAPI * api)",9, 54, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::EndDocument()",8, 41, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::AppendString( const char * s)",3, 55, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::AppendData( const char * s , int len)",3, 62, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::BeginDocumentHandler()",3, 50, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessResultRenderer::EndDocumentHandler()",3, 48, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTextRenderer::TessTextRenderer( const char * outputbase)",3, 59, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTextRenderer::AddImageHandler( TessBaseAPI * api)",15, 72, 2, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTsvRenderer::TessTsvRenderer( const char * outputbase)",4, 57, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTsvRenderer::TessTsvRenderer( const char * outputbase , bool font_info)",4, 73, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTsvRenderer::BeginDocumentHandler()",7, 61, 6, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTsvRenderer::EndDocumentHandler()",1, 60, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessTsvRenderer::AddImageHandler( TessBaseAPI * api)",8, 72, 2, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessUnlvRenderer::TessUnlvRenderer( const char * outputbase)",3, 59, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessUnlvRenderer::AddImageHandler( TessBaseAPI * api)",8, 64, 2, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessBoxTextRenderer::TessBoxTextRenderer( const char * outputbase)",3, 65, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessBoxTextRenderer::AddImageHandler( TessBaseAPI * api)",8, 73, 2, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessOsdRenderer::TessOsdRenderer( const char * outputbase)",2, 57, 0, 0
repos/cpp/tesseract/src/api/renderer.cpp,"tesseract::TessOsdRenderer::AddImageHandler( TessBaseAPI * api)",9, 58, 0, 0
repos/cpp/tesseract/src/api/lstmboxrenderer.cpp,"tesseract::AddBoxToLSTM( int right , int bottom , int top , int image_height , int page_num , STRING * text)",7, 75, 0, 0
repos/cpp/tesseract/src/api/lstmboxrenderer.cpp,"tesseract::TessBaseAPI::GetLSTMBoxText( int page_number)",52, 81, 2, 0
repos/cpp/tesseract/src/api/lstmboxrenderer.cpp,"tesseract::TessLSTMBoxRenderer::TessLSTMBoxRenderer( const char * outputbase)",2, 65, 0, 0
repos/cpp/tesseract/src/api/lstmboxrenderer.cpp,"tesseract::TessLSTMBoxRenderer::AddImageHandler( TessBaseAPI * api)",8, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"StopperAmbigThreshold( double f1 , double f2)",4, 60, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES::PAGE_RES( bool merge_similar_words , BLOCK_LIST * the_block_list , WERD_CHOICE ** prev_word_best_choice_ptr)",14, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"BLOCK_RES::BLOCK_RES( bool merge_similar_words , BLOCK * the_block)",19, 76, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"ROW_RES::ROW_RES( bool merge_similar_words , ROW * the_row)",66, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::operator =( const WERD_RES & source)",60, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::CopySimpleFields( const WERD_RES & source)",23, 58, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::InitForRetryRecognition( const WERD_RES & source)",8, 65, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupForRecognition( const UNICHARSET & unicharset_in , tesseract :: Tesseract * tess , Pix * pix , int norm_mode , const TBOX * norm_box , bool numeric_mode , bool use_body_size , bool allow_detailed_fx , ROW * row , const BLOCK * block)",37, 82, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupBasicsFromChoppedWord( const UNICHARSET & unicharset_in)",6, 77, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupFake( const UNICHARSET & unicharset_in)",31, 75, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupWordScript( const UNICHARSET & uch)",7, 66, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupBlamerBundle()",5, 47, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupBlobWidthsAndGaps()",14, 76, 10, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::InsertSeam( int blob_number , SEAM * seam)",18, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::AlternativeChoiceAdjustmentsWorseThan( float threshold) const",10, 78, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::IsAmbiguous()",3, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::StatesAllValid()",19, 76, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::DebugWordChoices( bool debug , const char * word_to_debug)",17, 87, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::DebugTopChoice( const char * msg) const",8, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::FilterWordChoices( int debug_level)",47, 81, 14, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ComputeAdaptionThresholds( float certainty_scale , float min_rating , float max_rating , float rating_margin , float * thresholds)",40, 77, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::LogNewRawChoice( WERD_CHOICE * word_choice)",9, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::LogNewCookedChoice( int max_num_choices , bool debug , WERD_CHOICE * word_choice)",86, 80, 20, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"MovePointerData( T ** dest , T ** src)",5, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::PrintBestChoices() const",10, 76, 10, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::GetBlobsWidth( int start_blob , int last_blob)",9, 61, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::GetBlobsGap( int blob_index)",5, 56, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::GetBlobChoice( int index) const",5, 70, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::GetBlobChoices( int index) const",3, 62, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ConsumeWordResults( WERD_RES * word)",27, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ReplaceBestChoice( WERD_CHOICE * choice)",10, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::RebuildBestState()",24, 64, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::CloneChoppedToRebuild()",12, 43, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetupBoxWord()",6, 67, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetScriptPositions()",3, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::SetAllScriptPositions( tesseract :: ScriptPos position)",6, 70, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::FakeClassifyWord( int blob_count , BLOB_CHOICE ** choices)",18, 73, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::FakeWordFromRatings( PermuterType permuter)",23, 74, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::BestChoiceToCorrectText()",9, 65, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ConditionalBlobMerge( TessResultCallback2<UNICHAR_ID,UNICHAR_ID,UNICHAR_ID> * class_cb , TessResultCallback2<bool,const TBOX&,const TBOX&> * box_cb)",33, 71, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::MergeAdjacentBlobs( int index)",11, 52, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"is_simple_quote( const char * signed_str , int length)",13, 65, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::BothQuotes( UNICHAR_ID id1 , UNICHAR_ID id2)",8, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::fix_quotes()",9, 61, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::BothHyphens( UNICHAR_ID id1 , UNICHAR_ID id2)",8, 74, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::HyphenBoxesOverlap( const TBOX & box1 , const TBOX & box2)",3, 72, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::fix_hyphens()",9, 70, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::BothSpaces( UNICHAR_ID id1 , UNICHAR_ID id2)",6, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::merge_tess_fails()",8, 73, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::PiecesAllNatural( int start , int count) const",10, 65, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::~WERD_RES()",3, 25, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::InitNonPointers()",27, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::InitPointers()",14, 32, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::Clear()",9, 27, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ClearResults()",25, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ClearWordChoices()",8, 36, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"WERD_RES::ClearRatings()",7, 39, 4, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::cmp( const PAGE_RES_IT & other) const",63, 69, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::InsertSimpleCloneWord( const WERD_RES & clone_res , WERD * new_word)",22, 72, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"ComputeBlobEnds( const WERD_RES & word , const TBOX & clip_box , C_BLOB_LIST * next_word_blobs , GenericVector<int> * blob_ends)",26, 81, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"ComputeWordBounds( const tesseract :: PointerVector<WERD_RES> & words , int w_index , TBOX prev_box , WERD_RES_IT w_it)",38, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"MoveAndClipBlob( C_BLOB_IT * src_it , C_BLOB_IT * dest_it , const TBOX & clip_box)",20, 79, 8, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::ReplaceCurrentWord( tesseract :: PointerVector<WERD_RES> * words)",105, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::DeleteCurrentWord()",30, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::MakeCurrentWordFuzzy()",20, 80, 11, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::start_page( bool empty_ok)",15, 55, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::ResetWordIterator()",27, 76, 9, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::internal_forward( bool new_block , bool empty_ok)",58, 86, 6, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::restart_row()",8, 56, 2, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::forward_paragraph()",8, 69, 9, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::forward_block()",6, 41, 0, 0
repos/cpp/tesseract/src/ccstruct/pageres.cpp,"PAGE_RES_IT::rej_stat_word()",17, 58, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::bounding_box() const",7, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::CombineableWith( const SEAM & other , int max_x_dist , float max_total_priority) const",12, 62, 0, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::CombineWith( const SEAM & other)",8, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::IsHealthy( const TBLOB & blob , int min_points , int min_area) const",5, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::PrepareToInsertSeam( const GenericVector<SEAM*> & seams , const GenericVector<TBLOB*> & blobs , int insert_index , bool modify)",12, 70, 4, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::FindBlobWidth( const GenericVector<TBLOB*> & blobs , int index , bool modify)",24, 77, 6, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::ApplySeam( bool italic_blob , TBLOB * blob , TBLOB * other_blob) const",13, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::UndoSeam( TBLOB * blob , TBLOB * other_blob) const",18, 60, 0, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::Print( const char * label) const",10, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::PrintSeams( const char * label , const GenericVector<SEAM*> & seams)",10, 78, 0, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::Mark( ScrollView * window) const",3, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::BreakPieces( const GenericVector<SEAM*> & seams , const GenericVector<TBLOB*> & blobs , int first , int last)",18, 70, 23, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::JoinPieces( const GenericVector<SEAM*> & seams , const GenericVector<TBLOB*> & blobs , int first , int last)",13, 81, 22, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::Hide() const",5, 42, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::Reveal() const",5, 42, 2, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"SEAM::FullPriority( int xmin , int xmax , double overlap_knob , int centered_maxwidth , double center_knob , double width_change_knob) const",16, 75, 6, 0
repos/cpp/tesseract/src/ccstruct/seam.cpp,"start_seam_list( TWERD * word , GenericVector<SEAM*> * seam_array)",12, 80, 4, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"position_outline( C_OUTLINE * outline , C_OUTLINE_LIST * destlist)",47, 75, 29, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"plot_outline_list( C_OUTLINE_LIST * list , ScrollView * window , ScrollView :: Color colour , ScrollView :: Color child_colour)",18, 85, 30, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"plot_normed_outline_list( const DENORM & denorm , C_OUTLINE_LIST * list , ScrollView :: Color colour , ScrollView :: Color child_colour , ScrollView * window)",14, 71, 6, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"reverse_outline_list( C_OUTLINE_LIST * list)",11, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::C_BLOB( C_OUTLINE_LIST * outline_list)",8, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::C_BLOB( C_OUTLINE * outline)",4, 37, 0, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::ConstructBlobsFromOutlines( bool good_blob , C_OUTLINE_LIST * outline_list , C_BLOB_IT * good_blobs_it , C_BLOB_IT * bad_blobs_it)",31, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::CheckInverseFlagAndDirection()",13, 71, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::FakeBlob( const TBOX & box)",5, 44, 0, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::bounding_box() const",12, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::area()",12, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::perimeter()",12, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::outer_area()",12, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::count_transitions( int32_t threshold)",14, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::move( const ICOORD vec)",8, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"RotateOutlineList( const FCOORD & rotation , C_OUTLINE_LIST * outlines)",19, 67, 4, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::rotate( const FCOORD & rotation)",3, 46, 0, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"ComputeEdgeOffsetsOutlineList( int threshold , Pix * pix , C_OUTLINE_LIST * list)",13, 71, 6, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::ComputeEdgeOffsets( int threshold , Pix * pix)",3, 60, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::EstimateBaselinePosition()",60, 81, 8, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"render_outline_list( C_OUTLINE_LIST * list , int left , int top , Pix * pix)",10, 63, 32, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"render_outline_list_outline( C_OUTLINE_LIST * list , int left , int top , Pix * pix)",8, 71, 40, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::render()",6, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::render_outline()",6, 70, 2, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::plot( ScrollView * window , ScrollView :: Color blob_colour , ScrollView :: Color child_colour)",5, 74, 0, 0
repos/cpp/tesseract/src/ccstruct/stepblob.cpp,"C_BLOB::plot_normed( const DENORM & denorm , ScrollView :: Color blob_colour , ScrollView :: Color child_colour , ScrollView * window)",7, 73, 2, 0
repos/cpp/tesseract/src/ccstruct/otsuthr.cpp,"tesseract::OtsuThreshold( Pix * src_pix , int left , int top , int width , int height , int ** thresholds , int ** hi_values)",105, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/otsuthr.cpp,"tesseract::HistogramRect( Pix * src_pix , int channel , int left , int top , int width , int height , int * histogram)",17, 80, 6, 0
repos/cpp/tesseract/src/ccstruct/otsuthr.cpp,"tesseract::OtsuStats( const int * histogram , int * H_out , int * omega0_out)",39, 67, 0, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::POLY_BLOCK( ICOORDELT_LIST * points , PolyBlockType t)",9, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::POLY_BLOCK( const TBOX & tbox , PolyBlockType t)",11, 60, 0, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::compute_bb()",27, 52, 33, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::winding_number( const ICOORD & point)",35, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::contains( POLY_BLOCK * other)",37, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::rotate( FCOORD rotation)",17, 59, 4, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::reflect_in_y_axis()",12, 50, 2, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::move( ICOORD shift)",12, 49, 2, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::plot( ScrollView * window , int32_t num)",25, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::fill( ScrollView * window , ScrollView :: Color colour)",28, 75, 6, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::overlap( POLY_BLOCK * other)",37, 58, 4, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"PB_LINE_IT::get_line( int16_t y)",35, 71, 4, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"lessthan( const void * first , const void * second)",11, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/polyblk.cpp,"POLY_BLOCK::ColorForPolyBlockType( PolyBlockType type)",24, 81, 4, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::STATS( int32_t min_bucket_value , int32_t max_bucket_value_plus_1)",10, 74, 0, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::STATS()",5, 22, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::set_range( int32_t min_bucket_value , int32_t max_bucket_value_plus_1)",13, 83, 0, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::clear()",5, 72, 4, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::~STATS()",1, 39, 0, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::add( int32_t value , int32_t count)",8, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::mode() const",14, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::mean() const",10, 69, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::sd() const",16, 69, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::ile( double frac) const",26, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::min_bucket() const",8, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::max_bucket() const",8, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::median() const",17, 73, 4, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::local_min( int32_t x) const",18, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::smooth( int32_t factor)",20, 71, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::cluster( float lower , float upper , float multiple , int32_t max_clusters , STATS * clusters)",119, 74, 6, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"GatherPeak( int index , const int * src_buckets , int * used_buckets , int * prev_count , int * total_count , double * total_value)",15, 81, 23, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::top_n_modes( int max_modes , GenericVector<KDPairInc<float,int>> * modes) const",59, 81, 8, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::print() const",18, 64, 6, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::print_summary() const",16, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::plot( ScrollView * window , float xorigin , float yorigin , float xscale , float yscale , ScrollView :: Color colour) const",17, 74, 17, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"STATS::plotline( ScrollView * window , float xorigin , float yorigin , float xscale , float yscale , ScrollView :: Color colour) const",16, 77, 21, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"choose_nth_item( int32_t index , float * array , int32_t count)",60, 70, 0, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"choose_nth_item( int32_t index , void * array , int32_t count , size_t size , int(*compar)(const void*,const void*))",55, 80, 0, 0
repos/cpp/tesseract/src/ccstruct/statistc.cpp,"swap_entries( void * array , size_t size , int32_t index1 , int32_t index2)",17, 54, 18, 0
repos/cpp/tesseract/src/ccstruct/polyaprx.cpp,"ApproximateOutline( bool allow_detailed_fx , C_OUTLINE * c_outline)",46, 77, 0, 0
repos/cpp/tesseract/src/ccstruct/polyaprx.cpp,"edgesteps_to_edgepts( C_OUTLINE * c_outline , EDGEPT edgepts [ ])",91, 64, 6, 0
repos/cpp/tesseract/src/ccstruct/polyaprx.cpp,"fix2( EDGEPT * start , int area)",176, 181, 6, 0
repos/cpp/tesseract/src/ccstruct/polyaprx.cpp,"poly2( EDGEPT * startpt , int area)",91, 72, 12, 0
repos/cpp/tesseract/src/ccstruct/polyaprx.cpp,"cutline( EDGEPT * first , EDGEPT * last , int area)",88, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"OpenBoxFile( const STRING & fname)",9, 76, 4, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"ReadAllBoxes( int target_page , bool skip_blanks , const STRING & filename , GenericVector<TBOX> * boxes , GenericVector<STRING> * texts , GenericVector<STRING> * box_texts , GenericVector<int> * pages)",14, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"ReadMemBoxes( int target_page , bool skip_blanks , const char * box_data , bool continue_on_failure , GenericVector<TBOX> * boxes , GenericVector<STRING> * texts , GenericVector<STRING> * box_texts , GenericVector<int> * pages)",35, 75, 0, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"BoxFileName( const STRING & image_filename)",9, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"ReadNextBox( int * line_number , FILE * box_file , STRING * utf8_str , TBOX * bounding_box)",4, 73, 2, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"ReadNextBox( int target_page , int * line_number , FILE * box_file , STRING * utf8_str , TBOX * bounding_box)",30, 81, 4, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"ParseBoxFileStr( const char * boxfile_str , int * page_number , STRING * utf8_str , TBOX * bounding_box)",58, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/boxread.cpp,"MakeBoxFileStr( const char * unichar_str , const TBOX & box , int page_num , STRING * box_str)",9, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::bounding_box() const",5, 87, 6, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::Hide() const",12, 60, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::Reveal() const",12, 60, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::FullPriority( int xmin , int xmax , double overlap_knob , int centered_maxwidth , double center_knob , double width_change_knob) const",31, 97, 4, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::IsHealthy( const TBLOB & blob , int min_points , int min_area) const",4, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::IsLittleChunk( int min_points , int min_area) const",11, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"make_edgept( int x , int y , EDGEPT * next , EDGEPT * prev)",55, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"remove_edgept( EDGEPT * point)",13, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::Print() const",4, 75, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::Mark( ScrollView * window) const",5, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::SplitOutlineList( TESSLINE * outlines) const",16, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::SplitOutline() const",22, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::UnsplitOutlineList( TBLOB * blob) const",14, 52, 0, 0
repos/cpp/tesseract/src/ccstruct/split.cpp,"SPLIT::UnsplitOutlines() const",28, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/mod128.cpp,"DIR128::DIR128( const FCOORD fc)",24, 53, 15, 0
repos/cpp/tesseract/src/ccstruct/vecfuncs.cpp,"direction( EDGEPT * point)",21, 69, 4, 0
repos/cpp/tesseract/src/ccstruct/blread.cpp,"read_unlv_file( STRING name , int32_t xsize , int32_t ysize , BLOCK_LIST * blocks)",30, 77, 4, 0
repos/cpp/tesseract/src/ccstruct/blread.cpp,"FullPageBlock( int width , int height , BLOCK_LIST * blocks)",5, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfo::Serialize( FILE * fp) const",5, 52, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfo::DeSerialize( TFile * fp)",5, 50, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::FontInfoTable()",4, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::~FontInfoTable()",2, 34, 0, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::Serialize( FILE * fp) const",3, 48, 0, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::DeSerialize( TFile * fp)",4, 45, 0, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::SetContainsFontProperties( int font_id , const GenericVector<ScoredFont> & font_set) const",9, 68, 4, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::SetContainsMultipleFontProperties( const GenericVector<ScoredFont> & font_set) const",11, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::MoveSpacingInfoFrom( FontInfoTable * other)",19, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoTable::MoveTo( UnicityTable<FontInfo> * target)",11, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::CompareFontInfo( const FontInfo & fi1 , const FontInfo & fi2)",7, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::CompareFontSet( const FontSet & fs1 , const FontSet & fs2)",9, 62, 0, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontInfoDeleteCallback( FontInfo f)",9, 43, 4, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::FontSetDeleteCallback( FontSet fs)",3, 41, 0, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::read_info( TFile * f , FontInfo * fi)",9, 54, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::write_info( FILE * f , const FontInfo & fi)",6, 55, 9, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::read_spacing_info( TFile * f , FontInfo * fi)",27, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::write_spacing_info( FILE * f , const FontInfo & fi)",27, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::read_set( TFile * f , FontSet * fs)",5, 52, 2, 0
repos/cpp/tesseract/src/ccstruct/fontinfo.cpp,"tesseract::write_set( FILE * f , const FontSet & fs)",4, 59, 9, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::BoxWord()",2, 34, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::BoxWord( const BoxWord & src)",3, 39, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::operator =( const BoxWord & src)",4, 50, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::CopyFrom( const BoxWord & src)",8, 45, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::CopyFromNormalized( TWERD * tessword)",32, 76, 10, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::ClipToOriginalWord( const BLOCK * block , WERD * original_word)",36, 80, 6, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::MergeBoxes( int start , int end)",14, 47, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::InsertBox( int index , const TBOX & box)",8, 54, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::ChangeBox( int index , const TBOX & box)",4, 54, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::DeleteBox( int index)",6, 46, 2, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::DeleteAllBoxes()",5, 33, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::ComputeBoundingBox()",5, 37, 0, 0
repos/cpp/tesseract/src/ccstruct/boxword.cpp,"tesseract::BoxWord::ProcessMatchedBlobs( const TWERD & other , TessCallback1<int> * cb) const",9, 66, 34, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::DENORM()",3, 19, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::DENORM( const DENORM & src)",4, 36, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::operator =( const DENORM & src)",18, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::~DENORM()",3, 20, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::SetupNormalization( const BLOCK * block , const FCOORD * rotation , const DENORM * predecessor , float x_origin , float y_origin , float x_scale , float y_scale , float final_xshift , float final_yshift)",20, 74, 32, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"ComputeRunlengthImage( const TBOX & box , const GenericVector<GenericVector<int>> & x_coords , const GenericVector<GenericVector<int>> & y_coords , GENERIC_2D_ARRAY<int> * minruns)",48, 75, 6, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"ComputeEdgeDensityProfiles( const TBOX & box , const GENERIC_2D_ARRAY<int> & minruns , GenericVector<float> * hx , GenericVector<float> * hy)",32, 77, 39, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::SetupNonLinear( const DENORM * predecessor , const TBOX & box , float target_width , float target_height , float final_xshift , float final_yshift , const GenericVector<GenericVector<int>> & x_coords , const GenericVector<GenericVector<int>> & y_coords)",35, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::LocalNormTransform( const TPOINT & pt , TPOINT * transformed) const",7, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::LocalNormTransform( const FCOORD & pt , FCOORD * transformed) const",16, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::NormTransform( const DENORM * first_norm , const TPOINT & pt , TPOINT * transformed) const",8, 71, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::NormTransform( const DENORM * first_norm , const FCOORD & pt , FCOORD * transformed) const",14, 71, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::LocalDenormTransform( const TPOINT & pt , TPOINT * original) const",7, 78, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::LocalDenormTransform( const FCOORD & pt , FCOORD * original) const",17, 78, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::DenormTransform( const DENORM * last_denorm , const TPOINT & pt , TPOINT * original) const",8, 74, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::DenormTransform( const DENORM * last_denorm , const FCOORD & pt , FCOORD * original) const",11, 74, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::LocalNormBlob( TBLOB * blob) const",11, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::XHeightRange( int unichar_id , const UNICHARSET & unicharset , const TBOX & bbox , float * min_xht , float * max_xht , float * yshift) const",75, 81, 26, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::Print() const",33, 72, 6, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::Clear()",8, 23, 0, 0
repos/cpp/tesseract/src/ccstruct/normalis.cpp,"DENORM::Init()",15, 58, 2, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::PDBLK( int16_t xmin , int16_t ymin , int16_t xmax , int16_t ymax)",18, 67, 0, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::set_sides( ICOORDELT_LIST * left , ICOORDELT_LIST * right)",15, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::contains( ICOORD pt)",16, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::move( const ICOORD vec)",15, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::render_mask( const FCOORD & rerotation , TBOX * mask_box)",40, 77, 22, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::plot( ScrollView * window , int32_t serial , ScrollView :: Color colour)",53, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"PDBLK::operator =( const PDBLK & source)",13, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"BLOCK_RECT_IT::BLOCK_RECT_IT( PDBLK * blkptr)",10, 63, 0, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"BLOCK_RECT_IT::set_to_block( PDBLK * blkptr)",9, 71, 0, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"BLOCK_RECT_IT::start_block()",11, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"BLOCK_RECT_IT::forward()",23, 54, 33, 0
repos/cpp/tesseract/src/ccstruct/pdblock.cpp,"BLOCK_LINE_IT::get_line( int16_t y , int16_t & xext)",35, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrpara.cpp,"ParagraphJustificationToString( tesseract :: ParagraphJustification justification)",13, 55, 4, 0
repos/cpp/tesseract/src/ccstruct/ocrpara.cpp,"ParagraphModel::ValidFirstLine( int lmargin , int lindent , int rindent , int rmargin) const",16, 70, 36, 0
repos/cpp/tesseract/src/ccstruct/ocrpara.cpp,"ParagraphModel::ValidBodyLine( int lmargin , int lindent , int rindent , int rmargin) const",16, 69, 35, 0
repos/cpp/tesseract/src/ccstruct/ocrpara.cpp,"ParagraphModel::Comparable( const ParagraphModel & other) const",12, 72, 21, 0
repos/cpp/tesseract/src/ccstruct/ocrpara.cpp,"ParagraphModel::ToString() const",8, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::BLOCK( const char * name , BOOL8 prop , int16_t kern , int16_t space , int16_t xmin , int16_t ymin , int16_t xmax , int16_t ymax)",30, 64, 13, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"decreasing_top_order( const void * row1 , const void * row2)",4, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::rotate( const FCOORD & rotation)",4, 51, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::restricted_bounding_box( bool upper_dots , bool lower_dots) const",9, 78, 0, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::reflect_polygon_in_y_axis()",4, 51, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::sort_rows()",5, 45, 0, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::compress()",29, 85, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::check_pitch()",4, 55, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::compress( const ICOORD vec)",6, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::print( FILE * , bool dump)",25, 67, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::operator =( const BLOCK & source)",16, 53, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"LeftMargin( ICOORDELT_LIST * segments , int x , int * margin)",19, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"RightMargin( ICOORDELT_LIST * segments , int x , int * margin)",19, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"BLOCK::compute_row_margins()",71, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"PrintSegmentationStats( BLOCK_LIST * block_list)",25, 81, 6, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"ExtractBlobsFromSegmentation( BLOCK_LIST * blocks , C_BLOB_LIST * output_blob_list)",21, 81, 6, 0
repos/cpp/tesseract/src/ccstruct/ocrblock.cpp,"RefreshWordBlobsFromNewBlobs( BLOCK_LIST * block_list , C_BLOB_LIST * new_blobs , C_BLOB_LIST * not_found_blobs)",41, 86, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::WordFeature::WordFeature()",2, 53, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::WordFeature::WordFeature( const FCOORD & fcoord , uint8_t dir)",5, 68, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::WordFeature::ComputeSize( const GenericVector<WordFeature> & features , int * max_x , int * max_y)",9, 74, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::WordFeature::Draw( const GenericVector<WordFeature> & features , ScrollView * window)",15, 67, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::WordFeature::Serialize( FILE * fp) const",5, 46, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::WordFeature::DeSerialize( bool swap , FILE * fp)",6, 54, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::FloatWordFeature::FromWordFeatures( const GenericVector<WordFeature> & word_features , GenericVector<FloatWordFeature> * float_features)",12, 55, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::FloatWordFeature::SortByXBucket( const void * v1 , const void * v2)",7, 73, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::ImageData()",2, 67, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::ImageData( bool vertical , Pix * pix)",4, 48, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::~ImageData()",2, 26, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::Build( const char * name , int page_number , const char * lang , const char * imagedata , int imagedatasize , const char * truth_text , const char * box_text)",29, 81, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::Serialize( TFile * fp) const",12, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::DeSerialize( TFile * fp)",14, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::SkipDeSerialize( TFile * fp)",12, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::SetPix( Pix * pix)",3, 37, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::GetPix() const",3, 38, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::PreScale( int target_height , int max_height , float * scale_factor , int * scaled_width , int * scaled_height , GenericVector<TBOX> * boxes) const",43, 81, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::MemoryUsed() const",3, 36, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::Display() const",35, 79, 6, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::AddBoxes( const GenericVector<TBOX> & boxes , const GenericVector<STRING> & texts , const GenericVector<int> & box_pages)",11, 69, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::SetPixInternal( Pix * pix , GenericVector<char> * image_data)",9, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::GetPixInternal( const GenericVector<char> & image_data)",10, 72, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ImageData::AddBoxes( const char * box_text)",17, 76, 21, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::ReCachePagesFunc( void * data)",5, 66, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::DocumentData( const STRING & name)",7, 47, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::~DocumentData()",4, 38, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::LoadDocument( const char * filename , int start_page , int64_t max_memory , FileReader reader)",6, 73, 32, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::SetDocument( const char * filename , int64_t max_memory , FileReader reader)",9, 73, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::SaveDocument( const char * filename , FileWriter writer)",10, 75, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::SaveToBuffer( GenericVector<char> * buffer)",6, 63, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::AddPageToDocument( ImageData * page)",5, 56, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::LoadPageInBackground( int index)",9, 53, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::GetPage( int index)",18, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::IsPageAvailable( int index , ImageData ** page)",16, 76, 6, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::UnCache()",11, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::Shuffle()",13, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentData::ReCachePages()",47, 76, 12, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::DocumentCache( int64_t max_memory)",2, 56, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::~DocumentCache()",1, 35, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::LoadDocuments( const GenericVector<STRING> & filenames , CachingStrategy cache_strategy , FileReader reader)",23, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::AddToCache( DocumentData * data)",4, 53, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::FindDocument( const STRING & document_name) const",7, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::TotalPages()",16, 75, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::GetPageRoundRobin( int serial)",11, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::GetPageSequential( int serial)",51, 79, 4, 0
repos/cpp/tesseract/src/ccstruct/imagedata.cpp,"tesseract::DocumentCache::CountNeighbourDocs( int index , int dir)",8, 68, 4, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"FCOORD::normalise()",10, 50, 0, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"ICOORD::set_with_shrink( int x , int y)",9, 53, 2, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"sign( int x)",6, 26, 4, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"ICOORD::Serialize( FILE * fp) const",4, 46, 2, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"ICOORD::DeSerialize( bool swap , FILE * fp)",9, 58, 2, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"ICOORD::setup_render( ICOORD * major_step , ICOORD * minor_step , int * major , int * minor) const",22, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"FCOORD::to_direction() const",3, 40, 2, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"FCOORD::from_direction( uint8_t direction)",5, 52, 2, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"FCOORD::binary_angle_plus_pi( double radians)",3, 71, 2, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"FCOORD::angle_from_direction( uint8_t direction)",3, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/points.cpp,"FCOORD::nearest_pt_on_line( const FCOORD & line_point , const FCOORD & dir_vector) const",10, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TPOINT::IsCrossed( const TPOINT & a0 , const TPOINT & a1 , const TPOINT & b0 , const TPOINT & b1)",29, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::BuildFromOutlineList( EDGEPT * outline)",19, 79, 6, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::CopyFrom( const TESSLINE & src)",25, 47, 0, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::Clear()",11, 41, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::Normalize( const DENORM & denorm)",8, 50, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::Rotate( const FCOORD rot)",12, 65, 8, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::Move( const ICOORD vec)",9, 40, 0, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::Scale( float factor)",9, 67, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::SetupFromPos()",10, 45, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::ComputeBoundingBox()",24, 66, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::MinMaxCrossProduct( const TPOINT vec , int * min_xp , int * max_xp) const",13, 66, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::bounding_box() const",3, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::plot( ScrollView * window , ScrollView :: Color color , ScrollView :: Color child_color)",17, 65, 0, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TESSLINE::FindBestStartPt() const",16, 74, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"ApproximateOutlineList( bool allow_detailed_fx , C_OUTLINE_LIST * outlines , bool children , TESSLINE ** tail)",19, 79, 6, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::PolygonalCopy( bool allow_detailed_fx , C_BLOB * src)",6, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::ShallowCopy( const TBLOB & src)",5, 46, 0, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::ClassifyNormalizeIfNeeded() const",22, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::CopyFrom( const TBLOB & src)",14, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::Clear()",7, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::Normalize( const BLOCK * block , const FCOORD * rotation , const DENORM * predecessor , float x_origin , float y_origin , float x_scale , float y_scale , float final_xshift , float final_yshift , bool inverse , Pix * pix)",23, 84, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::Rotate( const FCOORD rotation)",6, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::Move( const ICOORD vec)",6, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::Scale( float factor)",6, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::ComputeBoundingBoxes()",6, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::NumOutlines() const",7, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::bounding_box() const",9, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::EliminateDuplicateOutlines()",18, 78, 9, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::CorrectBlobOrder( TBLOB * next)",7, 46, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::plot( ScrollView * window , ScrollView :: Color color , ScrollView :: Color child_color)",6, 62, 0, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::ComputeMoments( FCOORD * center , FCOORD * second_moments) const",16, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::GetPreciseBoundingBox( TBOX * precise_box) const",6, 61, 0, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::GetEdgeCoords( const TBOX & box , GenericVector<GenericVector<int>> * x_coords , GenericVector<GenericVector<int>> * y_coords) const",11, 80, 26, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"SegmentLLSQ( const FCOORD & pt1 , const FCOORD & pt2 , LLSQ * accumulator)",21, 68, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"SegmentCoords( const FCOORD & pt1 , const FCOORD & pt2 , int x_limit , int y_limit , GenericVector<GenericVector<int>> * x_coords , GenericVector<GenericVector<int>> * y_coords)",20, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"SegmentBBox( const FCOORD & pt1 , const FCOORD & pt2 , TBOX * bbox)",24, 78, 8, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"CollectEdgesOfRun( const EDGEPT * startpt , const EDGEPT * lastpt , const DENORM & denorm , const TBOX & box , TBOX * bounding_box , LLSQ * accumulator , GenericVector<GenericVector<int>> * x_coords , GenericVector<GenericVector<int>> * y_coords)",86, 81, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TBLOB::CollectEdges( const TBOX & box , TBOX * bounding_box , LLSQ * llsq , GenericVector<GenericVector<int>> * x_coords , GenericVector<GenericVector<int>> * y_coords) const",24, 81, 6, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::PolygonalCopy( bool allow_detailed_fx , WERD * src)",11, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::BLNormalize( const BLOCK * block , const ROW * row , Pix * pix , bool inverse , float x_height , float baseline_shift , bool numeric_mode , tesseract :: OcrEngineMode hint , const TBOX * norm_box , DENORM * word_denorm)",47, 81, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::CopyFrom( const TWERD & src)",8, 48, 4, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::Clear()",4, 32, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::ComputeBoundingBoxes()",5, 43, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::bounding_box() const",8, 43, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::MergeBlobs( int start , int end)",23, 70, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"TWERD::plot( ScrollView * window)",7, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"divisible_blob( TBLOB * blob , bool italic_blob , TPOINT * location)",40, 81, 8, 0
repos/cpp/tesseract/src/ccstruct/blobs.cpp,"divide_blobs( TBLOB * blob , TBLOB * other_blob , bool italic_blob , const TPOINT & location)",37, 79, 8, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::ROW( int32_t spline_size , int32_t * xstarts , double * coeffs , float x_height , float ascenders , float descenders , int16_t kern , int16_t space)",22, 56, 0, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::ROW( TO_ROW * to_row , int16_t kern , int16_t space)",16, 52, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::restricted_bounding_box( bool upper_dots , bool lower_dots) const",9, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::recalc_bounding_box()",39, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::move( const ICOORD vec)",11, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::print( FILE * fp)",12, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::plot( ScrollView * window , ScrollView :: Color colour)",12, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::plot( ScrollView * window)",11, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/ocrrow.cpp,"ROW::operator =( const ROW & source)",18, 54, 2, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::TBOX( const ICOORD pt1 , const ICOORD pt2)",25, 47, 6, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::TBOX( int16_t left , int16_t bottom , int16_t right , int16_t top)",4, 62, 4, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::rotate_large( const FCOORD & vec)",9, 52, 2, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::intersection( const TBOX & box) const",35, 47, 22, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::bounding_union( const TBOX & box) const",26, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::plot( ScrollView * fd , ScrollView :: Color fill_colour , ScrollView :: Color border_colour) const",9, 68, 15, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::print_to_str( STRING * str) const",8, 58, 2, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::Serialize( FILE * fp) const",5, 46, 2, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::DeSerialize( bool swap , FILE * fp)",5, 54, 2, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"operator +=( TBOX & op1 , const TBOX & op2)",17, 56, 0, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"operator &=( TBOX & op1 , const TBOX & op2)",22, 49, 4, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::x_almost_equal( const TBOX & box , int tolerance) const",4, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/rect.cpp,"TBOX::almost_equal( const TBOX & box , int tolerance) const",6, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/matrix.cpp,"MATRIX::Classified( int col , int row , int wildcard_id) const",10, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/matrix.cpp,"MATRIX::IncreaseBandSize( int bandwidth)",3, 47, 0, 0
repos/cpp/tesseract/src/ccstruct/matrix.cpp,"MATRIX::ConsumeAndMakeBigger( int ind)",32, 77, 8, 0
repos/cpp/tesseract/src/ccstruct/matrix.cpp,"MATRIX::DeepCopy() const",16, 70, 4, 0
repos/cpp/tesseract/src/ccstruct/matrix.cpp,"MATRIX::print( const UNICHARSET & unicharset) const",48, 74, 8, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::QSPLINE( int32_t count , int32_t * xstarts , double * coeffs)",21, 56, 4, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::QSPLINE( int xstarts [ ] , int segcount , int xpts [ ] , int ypts [ ] , int pointcount , int degree)",61, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::QSPLINE( const QSPLINE & src)",7, 39, 17, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::~QSPLINE()",4, 23, 0, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::operator =( const QSPLINE & source)",12, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::step( double x1 , double x2)",17, 74, 4, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::y( double x) const",8, 54, 2, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::spline_index( double x) const",18, 61, 28, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::move( ICOORD vec)",12, 54, 2, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::overlap( QSPLINE * spline2 , double fraction)",10, 109, 2, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::extrapolate( double gradient , int xmin , int xmax)",47, 67, 0, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::plot( ScrollView * window , ScrollView :: Color colour) const",24, 66, 19, 0
repos/cpp/tesseract/src/ccstruct/quspline.cpp,"QSPLINE::plot( Pix * pix) const",37, 69, 6, 0
repos/cpp/tesseract/src/ccstruct/quadlsq.cpp,"QLSQ::clear()",14, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/quadlsq.cpp,"QLSQ::add( double x , double y)",11, 57, 2, 0
repos/cpp/tesseract/src/ccstruct/quadlsq.cpp,"QLSQ::remove( double x , double y)",15, 74, 4, 0
repos/cpp/tesseract/src/ccstruct/quadlsq.cpp,"QLSQ::fit( int degree)",44, 81, 4, 0
repos/cpp/tesseract/src/ccstruct/dppoint.cpp,"tesseract::DPPoint::Solve( int min_step , int max_step , bool debug , CostFunc cost_func , int size , DPPoint * points)",36, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/dppoint.cpp,"tesseract::DPPoint::CostWithVariance( const DPPoint * prev)",15, 73, 2, 0
repos/cpp/tesseract/src/ccstruct/dppoint.cpp,"tesseract::DPPoint::UpdateIfBetter( int64_t cost , int32_t steps , const DPPoint * prev , int32_t n , int32_t sig_x , int64_t sig_xsq)",11, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::IncorrectReasonName( IncorrectResultReason irr)",3, 75, 0, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::IncorrectReason() const",3, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetWordTruth( const UNICHARSET & unicharset , const char * truth_str , const TBOX & word_box)",17, 79, 32, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetSymbolTruth( const UNICHARSET & unicharset , const char * char_str , const TBOX & char_box)",16, 80, 34, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetRejectedTruth()",4, 43, 2, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::ChoiceIsCorrect( const WERD_CHOICE * word_choice) const",11, 75, 0, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::FillDebugString( const STRING & msg , const WERD_CHOICE * choice , STRING * debug)",20, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetupNormTruthWord( const DENORM & denorm)",20, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SplitBundle( int word1_right , int word2_left , bool debug , BlamerBundle * bundle1 , BlamerBundle * bundle2) const",54, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::JoinBlames( const BlamerBundle & bundle1 , const BlamerBundle & bundle2 , bool debug)",28, 73, 30, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::BlameClassifier( const UNICHARSET & unicharset , const TBOX & blob_box , const BLOB_CHOICE_LIST & choices , bool debug)",49, 74, 6, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetChopperBlame( const WERD_RES * word , bool debug)",53, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::BlameClassifierOrLangModel( const WERD_RES * word , const UNICHARSET & unicharset , bool valid_permuter , bool debug)",36, 79, 8, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetupCorrectSegmentation( const TWERD * word , bool debug)",52, 81, 4, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::GuidedSegsearchNeeded( const WERD_CHOICE * best_choice) const",6, 81, 0, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::InitForSegSearch( const WERD_CHOICE * best_choice , MATRIX * ratings , UNICHAR_ID wildcard_id , bool debug , STRING * debug_str , TessResultCallback2<bool,int,int> * cb)",27, 79, 36, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::GuidedSegsearchStillGoing() const",3, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::FinishSegSearch( const WERD_CHOICE * best_choice , bool debug , STRING * debug_str)",38, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::LastChanceBlame( bool debug , WERD_RES * word)",24, 79, 4, 0
repos/cpp/tesseract/src/ccstruct/blamer.cpp,"BlamerBundle::SetMisAdaptionDebug( const WERD_CHOICE * best_choice , bool debug)",13, 71, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"BLOB_CHOICE::BLOB_CHOICE( UNICHAR_ID src_unichar_id , float src_rating , float src_cert , int src_script_id , float min_xheight , float max_xheight , float yshift , BlobChoiceClassifier c)",19, 79, 25, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"BLOB_CHOICE::BLOB_CHOICE( const BLOB_CHOICE & other)",14, 73, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"BLOB_CHOICE::operator =( const BLOB_CHOICE & other)",16, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"BLOB_CHOICE::PosAndSizeAgree( const BLOB_CHOICE & other , float x_height , bool debug) const",25, 79, 4, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"FindMatchingChoice( UNICHAR_ID char_id , BLOB_CHOICE_LIST * bc_list)",13, 61, 32, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::permuter_name( uint8_t permuter)",3, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"tesseract::ScriptPosToString( enum ScriptPos script_pos)",9, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::WERD_CHOICE( const char * src_string , const UNICHARSET & unicharset)",16, 75, 2, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::init( const char * src_string , const char * src_lengths , float src_rating , float src_certainty , uint8_t src_permuter)",27, 73, 10, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::~WERD_CHOICE()",6, 30, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::permuter_name() const",3, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::blob_choices( int index , MATRIX * ratings) const",9, 80, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::MatrixCoord( int index) const",7, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::set_blob_choice( int index , int blob_count , const BLOB_CHOICE * blob_choice)",7, 68, 34, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::contains_unichar_id( UNICHAR_ID unichar_id) const",8, 69, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::remove_unichar_ids( int start , int num)",17, 60, 2, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::reverse_and_mirror_unichar_ids()",10, 80, 4, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::punct_stripped( int * start , int * end) const",13, 64, 9, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::GetNonSuperscriptSpan( int * pstart , int * pend) const",16, 72, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::shallow_copy( int start , int end) const",11, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::has_rtl_unichar_id() const",11, 77, 4, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::string_and_lengths( STRING * word_str , STRING * word_lengths_str) const",12, 71, 37, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::append_unichar_id( UNICHAR_ID unichar_id , int blob_count , float rating , float certainty)",9, 66, 2, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::operator +=( const WERD_CHOICE & second)",28, 69, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::operator =( const WERD_CHOICE & source)",23, 65, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::SetScriptPositions( bool small_caps , TWERD * word , int debug)",65, 80, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::SetScriptPositions( const tesseract :: ScriptPos * positions , int length)",9, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::SetAllScriptPositions( tesseract :: ScriptPos position)",4, 73, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::ScriptPositionOf( bool print_debug , const UNICHARSET & unicharset , const TBOX & blob_box , UNICHAR_ID unichar_id)",36, 70, 40, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::GetTopScriptID() const",30, 73, 2, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::UpdateStateForSplit( int blob_position)",10, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::TotalOfStates() const",7, 41, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::print( const char * msg) const",26, 67, 2, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::print_state( const char * msg) const",6, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"WERD_CHOICE::DisplaySegmentation( TWERD * word)",42, 66, 4, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"EqualIgnoringCaseAndTerminalPunct( const WERD_CHOICE & word1 , const WERD_CHOICE & word2)",17, 67, 39, 0
repos/cpp/tesseract/src/ccstruct/ratngs.cpp,"print_ratings_list( const char * msg , BLOB_CHOICE_LIST * ratings , const UNICHARSET & current_unicharset)",19, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::WERD( C_BLOB_LIST * blob_list , uint8_t blank_count , const char * text)",62, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::WERD( C_BLOB_LIST * blob_list , WERD * clone)",15, 84, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::ConstructFromSingleBlob( bool bol , bool eol , C_BLOB * blob)",9, 72, 0, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::bounding_box() const",1, 80, 0, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::restricted_bounding_box( bool upper_dots , bool lower_dots) const",15, 77, 0, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::true_bounding_box() const",9, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::move( const ICOORD vec)",6, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::join_on( WERD * other)",15, 51, 4, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::copy_on( WERD * other)",25, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::print()",22, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::plot( ScrollView * window , ScrollView :: Color colour)",7, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::NextColor( ScrollView :: Color colour)",6, 71, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::plot( ScrollView * window)",9, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::plot_rej_blobs( ScrollView * window)",6, 65, 4, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::shallow_copy()",9, 31, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::operator =( const WERD & source)",16, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"word_comparator( const void * word1p , const void * word2p)",5, 70, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::ConstructWerdWithNewBlobs( C_BLOB_LIST * all_blobs , C_BLOB_LIST * orphan_blobs)",91, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::CleanNoise( float size_threshold)",21, 79, 10, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::GetNoiseOutlines( GenericVector<C_OUTLINE*> * outlines)",9, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/werd.cpp,"WERD::AddSelectedOutlines( const GenericVector<bool> & wanted , const GenericVector<C_BLOB*> & target_blobs , const GenericVector<C_OUTLINE*> & outlines , bool * make_next_word_fuzzy)",53, 81, 12, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::DetLineFit()",2, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::Clear()",4, 27, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::Add( const ICOORD & pt)",3, 41, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::Add( const ICOORD & pt , int halfwidth)",3, 56, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::Fit( int skip_first , int skip_last , ICOORD * pt1 , ICOORD * pt2)",58, 78, 2, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::ConstrainedFit( const FCOORD & direction , double min_dist , double max_dist , bool debug , ICOORD * line_pt)",29, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::SufficientPointsForIndependentFit() const",3, 61, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::Fit( float * m , float * c)",12, 74, 4, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::ConstrainedFit( double m , float * c)",13, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::EvaluateLineFit()",13, 72, 4, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::ComputeUpperQuartileError()",14, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::NumberOfMisfittedPoints( double threshold) const",10, 66, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::ComputeDistances( const ICOORD & start , const ICOORD & end)",28, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/detlinefit.cpp,"tesseract::DetLineFit::ComputeConstrainedDistances( const FCOORD & direction , double min_dist , double max_dist)",13, 81, 45, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::rotate( FCOORD rotation)",5, 41, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::reflect_box_in_y_axis()",5, 41, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::rotate_box( FCOORD rotation)",15, 67, 4, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::merge( BLOBNBOX * nextblob)",7, 61, 21, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::really_merge( BLOBNBOX * other)",7, 56, 4, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::chop( BLOBNBOX_IT * start_it , BLOBNBOX_IT * end_it , FCOORD rotation , float xheight)",58, 70, 8, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::NeighbourGaps( int gaps [ BND_COUNT ]) const",14, 58, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::MinMaxGapsClipped( int * h_min , int * h_max , int * v_min , int * v_max) const",12, 73, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::CleanNeighbours()",9, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::GoodTextBlob() const",9, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::NoisyNeighbours() const",10, 63, 4, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::DefiniteIndividualFlow()",38, 78, 4, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::ConfirmNoTabViolation( const BLOBNBOX & other) const",11, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::MatchingStrokeWidth( const BLOBNBOX & other , double fractional_tolerance , double constant_tolerance) const",25, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::BoundsWithinLimits( int left , int right)",21, 62, 22, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::EstimateBaselinePosition()",5, 55, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::CleanNeighbours( BLOBNBOX_LIST * blobs)",6, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::DeleteNoiseBlobs( BLOBNBOX_LIST * blobs)",10, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::ComputeEdgeOffsets( Pix * thresholds , Pix * grey , BLOBNBOX_LIST * blobs)",29, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::PlotBlobs( BLOBNBOX_LIST * list , ScrollView :: Color body_colour , ScrollView :: Color child_colour , ScrollView * win)",9, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::PlotNoiseBlobs( BLOBNBOX_LIST * list , ScrollView :: Color body_colour , ScrollView :: Color child_colour , ScrollView * win)",11, 62, 30, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::TextlineColor( BlobRegionType region_type , BlobTextFlowType flow_type)",35, 79, 6, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::BoxColor() const",3, 47, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"BLOBNBOX::plot( ScrollView * window , ScrollView :: Color blob_colour , ScrollView :: Color child_colour)",6, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"find_cblob_limits( C_BLOB * blob , float leftx , float rightx , FCOORD rotation , float & ymin , float & ymax)",31, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"find_cblob_vlimits( C_BLOB * blob , float leftx , float rightx , float & ymin , float & ymax)",28, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"find_cblob_hlimits( C_BLOB * blob , float bottomy , float topy , float & xmin , float & xmax)",28, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"crotate_cblob( C_BLOB * blob , FCOORD rotation)",15, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"box_next( BLOBNBOX_IT * it)",19, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"box_next_pre_chopped( BLOBNBOX_IT * it)",16, 63, 25, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_ROW::TO_ROW( BLOBNBOX * blob , float top , float bottom , float row_size)",27, 53, 33, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_ROW::print() const",9, 79, 10, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_ROW::add_blob( BLOBNBOX * blob , float top , float bottom , float row_size)",28, 57, 8, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_ROW::insert_blob( BLOBNBOX * blob)",19, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_ROW::compute_vertical_projection()",22, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_ROW::clear()",34, 32, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"vertical_cblob_projection( C_BLOB * blob , STATS * stats)",11, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"vertical_coutline_projection( C_OUTLINE * outline , STATS * stats)",26, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::TO_BLOCK( BLOCK * src_block)",6, 52, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"clear_blobnboxes( BLOBNBOX_LIST * boxes)",9, 68, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::clear()",19, 32, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::~TO_BLOCK()",8, 76, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"SizeFilterBlobs( int min_height , int max_height , BLOBNBOX_LIST * src_list , BLOBNBOX_LIST * noise_list , BLOBNBOX_LIST * small_list , BLOBNBOX_LIST * medium_list , BLOBNBOX_LIST * large_list)",26, 74, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::ReSetAndReFilterBlobs()",24, 72, 18, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::DeleteUnownedNoise()",10, 44, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::ComputeEdgeOffsets( Pix * thresholds , Pix * grey)",5, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::plot_noise_blobs( ScrollView * win)",6, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"TO_BLOCK::plot_graded_blobs( ScrollView * win)",8, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/blobbox.cpp,"plot_blob_list( ScrollView * win , BLOBNBOX_LIST * list , ScrollView :: Color body_colour , ScrollView :: Color child_colour)",9, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::clear()",8, 61, 2, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::add( double x , double y)",8, 64, 0, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::add( double x , double y , double weight)",8, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::add( const LLSQ & other)",8, 65, 2, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::remove( double x , double y)",10, 70, 0, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::m() const",8, 49, 4, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::c( double m) const",6, 58, 0, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::rms( double m , double c) const",15, 68, 0, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::pearson() const",11, 77, 2, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::mean_point() const",7, 61, 4, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::rms_orth( const FCOORD & dir) const",7, 54, 19, 0
repos/cpp/tesseract/src/ccstruct/linlsq.cpp,"LLSQ::vector_fit() const",8, 58, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::C_OUTLINE( CRACKEDGE * startpt , ICOORD bot_left , ICOORD top_right , int16_t length)",21, 76, 0, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::C_OUTLINE( ICOORD startpt , DIR128 * new_steps , int16_t length)",52, 72, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::C_OUTLINE( C_OUTLINE * srcline , FCOORD rotation)",95, 81, 8, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::FakeOutline( const TBOX & box , C_OUTLINE_LIST * outlines)",9, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::area() const",27, 71, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::perimeter() const",12, 76, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::outer_area() const",24, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::count_transitions( int32_t threshold)",118, 62, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::operator <( const C_OUTLINE & other) const",25, 74, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::winding_number( ICOORD point) const",30, 61, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::turn_direction() const",21, 67, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::reverse()",15, 60, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::move( const ICOORD vec)",9, 63, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::IsLegallyNested() const",13, 80, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::RemoveSmallRecursive( int min_size , C_OUTLINE_IT * it)",14, 75, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"ComputeGradient( const l_uint32 * data , int wpl , int x , int y , int width , int height , ICOORD * gradient)",11, 81, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"EvaluateVerticalDiff( const l_uint32 * data , int wpl , int diff_sign , int x , int y , int height , int * best_diff , int * best_sum , int * best_y)",16, 79, 0, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"EvaluateHorizontalDiff( const l_uint32 * line , int diff_sign , int x , int width , int * best_diff , int * best_sum , int * best_x)",15, 81, 35, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::ComputeEdgeOffsets( int threshold , Pix * pix)",86, 80, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::ComputeBinaryOffsets()",52, 80, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::render( int left , int top , Pix * pix) const",14, 64, 2, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::render_outline( int left , int top , Pix * pix) const",16, 68, 0, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::plot( ScrollView * window , ScrollView :: Color colour) const",27, 75, 0, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::plot_normed( const DENORM & denorm , ScrollView :: Color colour , ScrollView * window) const",27, 79, 6, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::operator =( const C_OUTLINE & source)",19, 67, 4, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::increment_step( int s , int increment , ICOORD * pos , int * dir_counts , int * pos_totals) const",12, 73, 31, 0
repos/cpp/tesseract/src/ccstruct/coutln.cpp,"C_OUTLINE::chain_step( int chaindir)",3, 45, 0, 0
repos/cpp/tesseract/src/ccstruct/params_training_featdef.cpp,"tesseract::ParamsTrainingFeatureByName( const char * name)",13, 62, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::perm_rejected()",9, 52, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rej_before_nn_accept()",5, 55, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rej_between_nn_and_mm()",5, 72, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rej_between_mm_and_quality_accept()",3, 48, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rej_between_quality_and_minimal_rej_accept()",4, 65, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rej_before_mm_accept()",5, 53, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rej_before_quality_accept()",4, 54, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::rejected()",8, 67, 6, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::accept_if_good_quality()",11, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_tess_failure()",3, 58, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_small_xht()",3, 52, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_edge_char()",3, 54, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_1Il_conflict()",3, 56, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_postNN_1Il()",3, 48, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_rej_cblob()",3, 51, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_mm_reject()",3, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_bad_repetition()",3, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_poor_match()",3, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_not_tess_accepted()",4, 52, 33, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_contains_blanks()",4, 52, 33, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_bad_permuter()",3, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_hyphen()",3, 58, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_dubious()",3, 53, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_no_alphanums()",3, 54, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_mostly_rej()",3, 52, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_xht_fixup()",3, 44, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_bad_quality()",3, 53, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_doc_rej()",3, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_block_rej()",3, 51, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_row_rej()",3, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_unlv_rej()",3, 50, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_hyphen_accept()",3, 56, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_nn_accept()",3, 52, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_mm_accept()",3, 49, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_quality_accept()",3, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::setrej_minimal_rej_accept()",4, 59, 33, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJ::full_print( FILE * fp)",32, 79, 2, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::operator =( const REJMAP & source)",7, 50, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::initialise( int16_t length)",4, 42, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::accept_count()",10, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::recoverable_rejects()",7, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::quality_recoverable_rejects()",7, 68, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::remove_pos( int16_t pos)",10, 57, 24, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::print( FILE * fp)",10, 38, 4, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::full_print( FILE * fp)",8, 36, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_small_xht()",7, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_tess_failure()",7, 60, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_not_tess_accepted()",7, 65, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_contains_blanks()",7, 63, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_bad_permuter()",7, 60, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_xht_fixup()",7, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_no_alphanums()",7, 60, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_mostly_rej()",7, 58, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_bad_quality()",7, 59, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_doc_rej()",7, 55, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_block_rej()",7, 57, 0, 0
repos/cpp/tesseract/src/ccstruct/rejctmap.cpp,"REJMAP::rej_word_row_rej()",7, 55, 0, 0
repos/cpp/tesseract/src/dict/permdawg.cpp,"tesseract::Dict::go_deeper_dawg_fxn( const char * debug , const BLOB_CHOICE_LIST_VECTOR & char_choices , int char_choice_index , const CHAR_FRAGMENT_INFO * prev_char_frag_info , bool word_ending , WERD_CHOICE * word , float certainties [ ] , float * limit , WERD_CHOICE * best_choice , int * attempts_left , void * void_more_args)",113, 83, 4, 0
repos/cpp/tesseract/src/dict/permdawg.cpp,"tesseract::Dict::dawg_permute_and_select( const BLOB_CHOICE_LIST_VECTOR & char_choices , float rating_limit)",22, 80, 6, 0
repos/cpp/tesseract/src/dict/permdawg.cpp,"tesseract::Dict::permute_choices( const char * debug , const BLOB_CHOICE_LIST_VECTOR & char_choices , int char_choice_index , const CHAR_FRAGMENT_INFO * prev_char_frag_info , WERD_CHOICE * word , float certainties [ ] , float * limit , WERD_CHOICE * best_choice , int * attempts_left , void * more_args)",33, 81, 21, 0
repos/cpp/tesseract/src/dict/permdawg.cpp,"tesseract::Dict::append_choices( const char * debug , const BLOB_CHOICE_LIST_VECTOR & char_choices , const BLOB_CHOICE & blob_choice , int char_choice_index , const CHAR_FRAGMENT_INFO * prev_char_frag_info , WERD_CHOICE * word , float certainties [ ] , float * limit , WERD_CHOICE * best_choice , int * attempts_left , void * more_args)",49, 80, 27, 0
repos/cpp/tesseract/src/dict/permdawg.cpp,"tesseract::Dict::fragment_state_okay( UNICHAR_ID curr_unichar_id , float curr_rating , float curr_certainty , const CHAR_FRAGMENT_INFO * prev_char_frag_info , const char * debug , int word_ending , CHAR_FRAGMENT_INFO * char_frag_info)",76, 78, 31, 0
repos/cpp/tesseract/src/dict/context.cpp,"tesseract::Dict::case_ok( const WERD_CHOICE & word) const",18, 52, 2, 0
repos/cpp/tesseract/src/dict/context.cpp,"tesseract::Dict::absolute_garbage( const WERD_CHOICE & word , const UNICHARSET & unicharset)",11, 80, 10, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::AcceptableChoice( const WERD_CHOICE & best_choice , XHeightConsistencyEnum xheight_consistency)",59, 80, 4, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::AcceptableResult( WERD_RES * word) const",39, 78, 2, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::NoDangerousAmbig( WERD_CHOICE * best_choice , DANGERR * fixpt , bool fix_replaceable , MATRIX * ratings)",215, 80, 2, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::EndDangerousAmbigs()",1, 35, 0, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::SettupStopperPass1()",3, 34, 0, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::SettupStopperPass2()",3, 62, 2, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::ReplaceAmbig( int wrong_ngram_begin_index , int wrong_ngram_size , UNICHAR_ID correct_ngram_id , WERD_CHOICE * werd_choice , MATRIX * ratings)",73, 81, 4, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::LengthOfShortestAlphaRun( const WERD_CHOICE & WordChoice) const",18, 74, 0, 0
repos/cpp/tesseract/src/dict/stopper.cpp,"tesseract::Dict::UniformCertainties( const WERD_CHOICE & word)",49, 81, 2, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::Dict( CCUtil * ccutil)",156, 81, 25, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::~Dict()",5, 77, 2, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::GlobalDawgCache()",6, 75, 2, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::SetupForLoad( DawgCache * dawg_cache)",16, 77, 2, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::Load( const STRING & lang , TessdataManager * data_file)",81, 79, 49, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::LoadLSTM( const STRING & lang , TessdataManager * data_file)",18, 77, 4, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::FinishLoad()",19, 80, 2, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::End()",20, 45, 4, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::def_letter_is_okay( void * void_dawg_args , const UNICHARSET & unicharset , UNICHAR_ID unichar_id , bool word_end) const",163, 84, 4, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::ProcessPatternEdges( const Dawg * dawg , const DawgPosition & pos , UNICHAR_ID unichar_id , bool word_end , DawgArgs * dawg_args , PermuterType * curr_perm) const",34, 81, 6, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::init_active_dawgs( DawgPositionVector * active_dawgs , bool ambigs_mode) const",16, 70, 8, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::default_dawgs( DawgPositionVector * dawg_pos_vec , bool suppress_patterns) const",26, 79, 6, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::add_document_word( const WERD_CHOICE & best_choice)",59, 75, 2, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::adjust_word( WERD_CHOICE * word , bool nonword , XHeightConsistencyEnum xheight_consistency , float additional_adjust , bool modify_rating , bool debug)",79, 81, 6, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::valid_word( const WERD_CHOICE & word , bool numbers_ok) const",33, 77, 4, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::valid_bigram( const WERD_CHOICE & word1 , const WERD_CHOICE & word2) const",42, 75, 4, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::valid_punctuation( const WERD_CHOICE & word)",25, 76, 15, 0
repos/cpp/tesseract/src/dict/dict.cpp,"tesseract::Dict::IsSpaceDelimitedLang() const",7, 46, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::get_reverse_policy_name( RTLReversePolicy reverse_policy)",3, 77, 0, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::clear()",7, 48, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::edge_char_of( NODE_REF node_ref , NODE_REF next_node , int direction , bool word_end , UNICHAR_ID unichar_id , EDGE_RECORD ** edge_ptr , EDGE_INDEX * edge_index) const",50, 80, 24, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::add_edge_linkage( NODE_REF node1 , NODE_REF node2 , bool marker_flag , int direction , bool word_end , UNICHAR_ID unichar_id)",35, 78, 0, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::add_word_ending( EDGE_RECORD * edge_ptr , NODE_REF the_next_node , bool marker_flag , UNICHAR_ID unichar_id)",16, 75, 27, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::add_word_to_dawg( const WERD_CHOICE & word , const GenericVector<bool> * repetitions)",98, 81, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::new_dawg_node()",5, 51, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::sort_strings_by_dec_length( const void * v1 , const void * v2)",5, 72, 0, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::read_and_add_word_list( const char * filename , const UNICHARSET & unicharset , Trie :: RTLReversePolicy reverse_policy)",8, 75, 34, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::read_word_list( const char * filename , GenericVector<STRING> * words)",22, 68, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::add_word_list( const GenericVector<STRING> & words , const UNICHARSET & unicharset , Trie :: RTLReversePolicy reverse_policy)",23, 76, 4, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::initialize_patterns( UNICHARSET * unicharset)",16, 74, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::unichar_id_to_patterns( UNICHAR_ID unichar_id , const UNICHARSET & unicharset , GenericVector<UNICHAR_ID> * vec) const",21, 74, 34, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::character_class_to_pattern( char ch)",17, 55, 0, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::read_pattern_list( const char * filename , const UNICHARSET & unicharset)",81, 80, 4, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::remove_edge_linkage( NODE_REF node1 , NODE_REF node2 , int direction , bool word_end , UNICHAR_ID unichar_id)",21, 78, 0, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::trie_to_dawg()",46, 80, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::eliminate_redundant_edges( NODE_REF node , const EDGE_RECORD & edge1 , const EDGE_RECORD & edge2)",46, 79, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::reduce_lettered_edges( EDGE_INDEX edge_index , UNICHAR_ID unichar_id , NODE_REF node , EDGE_VECTOR * backward_edges , NODE_MARKER reduced_nodes)",40, 74, 8, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::sort_edges( EDGE_VECTOR * edges)",13, 63, 2, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::reduce_node_input( NODE_REF node , NODE_MARKER reduced_nodes)",36, 76, 6, 0
repos/cpp/tesseract/src/dict/trie.cpp,"tesseract::Trie::print_node( NODE_REF node , int max_num_edges) const",25, 64, 0, 0
repos/cpp/tesseract/src/dict/hyphen.cpp,"tesseract::Dict::reset_hyphen_vars( bool last_word_on_line)",14, 69, 2, 0
repos/cpp/tesseract/src/dict/hyphen.cpp,"tesseract::Dict::set_hyphen_word( const WERD_CHOICE & word , const DawgPositionVector & active_dawgs)",17, 69, 27, 0
repos/cpp/tesseract/src/dict/dawg_cache.cpp,"tesseract::DawgLoader::DawgLoader( const STRING & lang , TessdataType tessdata_dawg_type , int dawg_debug_level , TessdataManager * data_file)",6, 66, 2, 0
repos/cpp/tesseract/src/dict/dawg_cache.cpp,"tesseract::DawgCache::GetSquishedDawg( const STRING & lang , TessdataType tessdata_dawg_type , int debug_level , TessdataManager * data_file)",8, 80, 33, 0
repos/cpp/tesseract/src/dict/dawg_cache.cpp,"tesseract::DawgLoader::Load()",42, 75, 2, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::prefix_in_dawg( const WERD_CHOICE & word , bool requires_complete) const",20, 78, 2, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::word_in_dawg( const WERD_CHOICE & word) const",3, 57, 0, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::check_for_words( const char * filename , const UNICHARSET & unicharset , bool enable_wildcard) const",35, 75, 23, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::iterate_words( const UNICHARSET & unicharset , TessCallback1<const WERD_CHOICE*> * cb) const",5, 73, 25, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::CallWithUTF8( TessCallback1<const char*> * cb , const WERD_CHOICE * wc)",6, 58, 0, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::iterate_words( const UNICHARSET & unicharset , TessCallback1<const char*> * cb) const",7, 66, 25, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::iterate_words_rec( const WERD_CHOICE & word_so_far , NODE_REF to_explore , TessCallback1<const WERD_CHOICE*> * cb) const",17, 77, 29, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::match_words( WERD_CHOICE * word , int32_t index , NODE_REF node , UNICHAR_ID wildcard) const",31, 79, 2, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::Dawg::init( int unicharset_size)",11, 78, 2, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::~SquishedDawg()",1, 51, 0, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::edge_char_of( NODE_REF node , UNICHAR_ID unichar_id , bool word_end) const",31, 71, 44, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::num_forward_edges( NODE_REF node) const",12, 63, 0, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::print_node( NODE_REF node , int max_num_edges) const",57, 80, 6, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::print_edge( EDGE_REF edge) const",12, 58, 12, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::read_squished_dawg( TFile * file)",27, 78, 4, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::build_node_map( int32_t * num_nodes) const",28, 70, 2, 0
repos/cpp/tesseract/src/dict/dawg.cpp,"tesseract::SquishedDawg::write_squished_dawg( TFile * file)",49, 70, 2, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::Network()",11, 32, 6, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::Network( NetworkType type , const STRING & name , int ni , int no)",12, 71, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::SetEnableTraining( TrainingState state)",11, 62, 4, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::SetNetworkFlags( uint32_t flags)",3, 48, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::InitWeights( float range , TRand * randomizer)",4, 59, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::SetRandomizer( TRand * randomizer)",3, 49, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::SetupNeedsBackprop( bool needs_backprop)",4, 56, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::Serialize( TFile * fp) const",16, 53, 2, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::getNetworkType( TFile * fp)",15, 79, 4, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::CreateFromFile( TFile * fp)",92, 75, 2, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::Random( double range)",4, 41, 2, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::DisplayForward( const NetworkIO & matrix)",9, 64, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::DisplayBackward( const NetworkIO & matrix)",10, 64, 0, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::ClearWindow( bool tess_coords , const char * window_name , int width , int height , ScrollView ** window)",20, 81, 4, 0
repos/cpp/tesseract/src/lstm/network.cpp,"tesseract::Network::DisplayImage( Pix * pix , ScrollView * window)",6, 58, 0, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::FullyConnected( const STRING & name , int ni , int no , NetworkType type)",4, 79, 2, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::OutputShape( const StaticShape & input_shape) const",13, 80, 0, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::SetEnableTraining( TrainingState state)",13, 62, 0, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::InitWeights( float range , TRand * randomizer)",6, 76, 2, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::RemapOutputs( int old_no , const std :: vector<int> & code_map)",7, 81, 0, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::ConvertToInt()",3, 38, 0, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::DebugWeights()",3, 38, 0, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::Serialize( TFile * fp) const",5, 59, 2, 0
repos/cpp/tesseract/src/lstm/fullyconnected.cpp,"tesseract::FullyConnected::DeSerialize( TFile * fp)",3, 49, 2, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::Input( const STRING & name , int ni , int no)",2, 61, 4, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::Input( const STRING & name , const StaticShape & shape)",6, 62, 4, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::Serialize( TFile * fp) const",3, 57, 2, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::DeSerialize( TFile * fp)",3, 37, 0, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::XScaleFactor() const",3, 34, 0, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::CacheXScaleFactor( int factor)",3, 44, 0, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",5, 66, 20, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",6, 62, 0, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::PrepareLSTMInputs( const ImageData & image_data , const Network * network , int min_width , TRand * randomizer , float * image_scale)",20, 78, 2, 0
repos/cpp/tesseract/src/lstm/input.cpp,"tesseract::Input::PreparePixInput( const StaticShape & shape , const Pix * pix , TRand * randomizer , NetworkIO * input)",34, 75, 2, 0
repos/cpp/tesseract/src/lstm/convolve.cpp,"tesseract::Convolve::Convolve( const STRING & name , int ni , int half_x , int half_y)",4, 74, 2, 0
repos/cpp/tesseract/src/lstm/convolve.cpp,"tesseract::Convolve::Serialize( TFile * fp) const",5, 44, 0, 0
repos/cpp/tesseract/src/lstm/convolve.cpp,"tesseract::Convolve::DeSerialize( TFile * fp)",6, 49, 2, 0
repos/cpp/tesseract/src/lstm/convolve.cpp,"tesseract::Convolve::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",31, 80, 12, 0
repos/cpp/tesseract/src/lstm/convolve.cpp,"tesseract::Convolve::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",30, 73, 4, 0
repos/cpp/tesseract/src/lstm/parallel.cpp,"tesseract::Parallel::Parallel( const STRING & name , NetworkType type)",3, 76, 0, 0
repos/cpp/tesseract/src/lstm/parallel.cpp,"tesseract::Parallel::OutputShape( const StaticShape & input_shape) const",9, 74, 0, 0
repos/cpp/tesseract/src/lstm/parallel.cpp,"tesseract::Parallel::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",58, 79, 2, 0
repos/cpp/tesseract/src/lstm/parallel.cpp,"tesseract::Parallel::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",65, 79, 2, 0
repos/cpp/tesseract/src/lstm/tfnetwork.cpp,"tesseract::TFNetwork::TFNetwork( const STRING & name)",1, 81, 0, 0
repos/cpp/tesseract/src/lstm/tfnetwork.cpp,"tesseract::TFNetwork::InitFromProtoStr( const std :: string & proto_str)",4, 64, 0, 0
repos/cpp/tesseract/src/lstm/tfnetwork.cpp,"tesseract::TFNetwork::Serialize( TFile * fp) const",10, 56, 2, 0
repos/cpp/tesseract/src/lstm/tfnetwork.cpp,"tesseract::TFNetwork::DeSerialize( TFile * fp)",8, 61, 2, 0
repos/cpp/tesseract/src/lstm/tfnetwork.cpp,"tesseract::TFNetwork::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",57, 79, 2, 0
repos/cpp/tesseract/src/lstm/tfnetwork.cpp,"tesseract::TFNetwork::InitFromProto()",19, 79, 2, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::ComputeCTCTargets( const GenericVector<int> & labels , int null_char , const GENERIC_2D_ARRAY<float> & outputs , NetworkIO * targets)",28, 77, 0, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::CTC( const GenericVector<int> & labels , int null_char , const GENERIC_2D_ARRAY<float> & outputs)",7, 66, 4, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::ComputeLabelLimits()",29, 76, 4, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::ComputeSimpleTargets( GENERIC_2D_ARRAY<float> * targets) const",41, 81, 4, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::ComputeWidthsAndMeans( GenericVector<float> * half_widths , GenericVector<int> * means) const",37, 78, 2, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::BestLabel( const GENERIC_2D_ARRAY<float> & outputs , int t)",9, 70, 0, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::CalculateBiasFraction()",38, 81, 2, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::LogSumExp( double ln_x , double ln_y)",7, 52, 0, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::Forward( GENERIC_2D_ARRAY<double> * log_probs) const",26, 68, 8, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::Backward( GENERIC_2D_ARRAY<double> * log_probs) const",27, 80, 6, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::NormalizeSequence( GENERIC_2D_ARRAY<double> * probs) const",22, 77, 4, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::LabelsToClasses( const GENERIC_2D_ARRAY<double> & probs , NetworkIO * targets) const",23, 77, 6, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::NormalizeProbs( GENERIC_2D_ARRAY<float> * probs)",23, 75, 4, 0
repos/cpp/tesseract/src/lstm/ctc.cpp,"tesseract::CTC::NeededNull( int index) const",4, 81, 2, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::Plumbing( const STRING & name)",3, 39, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::SetEnableTraining( TrainingState state)",5, 56, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::SetNetworkFlags( uint32_t flags)",5, 49, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::InitWeights( float range , TRand * randomizer)",6, 63, 4, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::RemapOutputs( int old_no , const std :: vector<int> & code_map)",7, 75, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::ConvertToInt()",4, 42, 2, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::SetRandomizer( TRand * randomizer)",4, 50, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::AddToStack( Network * network)",15, 78, 4, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::SetupNeedsBackprop( bool needs_backprop)",13, 72, 6, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::XScaleFactor() const",3, 37, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::CacheXScaleFactor( int factor)",5, 47, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::DebugWeights()",4, 42, 2, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::EnumerateLayers( const STRING * prefix , GenericVector<STRING> * layers) const",14, 70, 31, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::GetLayer( const char * id) const",11, 64, 4, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::LayerLearningRatePtr( const char * id) const",12, 64, 4, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::Serialize( TFile * fp) const",13, 79, 2, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::DeSerialize( TFile * fp)",16, 59, 2, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::Update( float learning_rate , float momentum , float adam_beta , int num_samples)",14, 76, 0, 0
repos/cpp/tesseract/src/lstm/plumbing.cpp,"tesseract::Plumbing::CountAlternators( const Network & other , double * same , double * changed) const",8, 70, 4, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::log2( double n)",3, 38, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::MatrixDotVectorInternal( const GENERIC_2D_ARRAY<double> & w , bool add_bias_fwd , bool skip_bias_back , const double * u , double * v)",13, 81, 43, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::TransposedArray::Transpose( const GENERIC_2D_ARRAY<double> & input)",6, 73, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::InitWeightsFloat( int no , int ni , bool use_adam , float weight_range , TRand * randomizer)",15, 76, 35, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::RemapOutputs( const std :: vector<int> & code_map)",20, 68, 4, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::ConvertToInt()",25, 56, 4, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::InitBackward()",8, 49, 2, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::Serialize( bool training , TFile * fp) const",16, 81, 2, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::DeSerialize( bool training , TFile * fp)",22, 70, 2, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::DeSerializeOld( bool training , TFile * fp)",21, 76, 4, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::MatrixDotVector( const double * u , double * v) const",4, 71, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::MatrixDotVector( const int8_t * u , double * v) const",9, 71, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::MultiplyAccumulate( const double * v , double * inout)",9, 72, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::VectorDotMatrix( const double * u , double * v) const",4, 71, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::SumOuterTransposed( const TransposedArray & u , const TransposedArray & v , bool in_parallel)",26, 64, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::Update( double learning_rate , double momentum , double adam_beta , int num_samples)",21, 81, 2, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::AddDeltas( const WeightMatrix & other)",5, 58, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::CountAlternators( const WeightMatrix & other , double * same , double * changed) const",18, 77, 0, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::HistogramWeight( double weight , STATS * histogram)",8, 76, 4, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::Debug2D( const char * msg)",18, 61, 8, 0
repos/cpp/tesseract/src/lstm/weightmatrix.cpp,"tesseract::WeightMatrix::FloatToDouble( const GENERIC_2D_ARRAY<float> & wf , GENERIC_2D_ARRAY<double> * wd)",11, 73, 4, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::InitNetwork( int num_outputs , STRING network_spec , int append_index , int net_flags , float weight_range , TRand * randomizer , Network ** network)",33, 73, 4, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::SkipWhitespace( char ** str)",3, 65, 2, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::BuildFromString( const StaticShape & input_shape , char ** str)",34, 73, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseInput( char ** str)",21, 81, 4, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseSeries( const StaticShape & input_shape , Input * input_layer , char ** str)",23, 71, 37, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseParallel( const StaticShape & input_shape , char ** str)",17, 71, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseR( const StaticShape & input_shape , char ** str)",33, 78, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseS( const StaticShape & input_shape , char ** str)",17, 78, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NonLinearity( char func)",20, 45, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseC( const StaticShape & input_shape , char ** str)",26, 79, 2, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseM( const StaticShape & input_shape , char ** str)",9, 78, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseLSTM( const StaticShape & input_shape , char ** str)",70, 81, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::BuildLSTMXYQuad( int num_inputs , int num_states)",20, 80, 6, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::BuildFullyConnected( const StaticShape & input_shape , NetworkType type , const STRING & name , int depth)",20, 81, 36, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseFullyConnected( const StaticShape & input_shape , char ** str)",16, 77, 0, 0
repos/cpp/tesseract/src/lstm/networkbuilder.cpp,"tesseract::NetworkBuilder::ParseOutput( const StaticShape & input_shape , char ** str)",47, 81, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::LSTMTrainer()",13, 75, 10, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::LSTMTrainer( FileReader file_reader , FileWriter file_writer , CheckPointReader checkpoint_reader , CheckPointWriter checkpoint_writer , const char * model_base , const char * checkpoint_name , int debug_interval , int64_t max_memory)",28, 78, 25, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::~LSTMTrainer()",9, 30, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::TryLoadingCheckpoint( const char * filename , const char * old_traineddata)",36, 78, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::InitNetwork( const STRING & network_spec , int append_index , int net_flags , float weight_range , float learning_rate , float momentum , float adam_beta)",24, 77, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::InitTensorFlowNetwork( const std :: string & tf_proto)",17, 70, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::InitIterations()",21, 62, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::GridSearchDictParams( const ImageData * trainingdata , int iteration , double min_dict_ratio , double dict_ratio_step , double max_dict_ratio , double min_cert_offset , double cert_offset_step , double max_cert_offset , STRING * results)",48, 83, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::DebugNetwork()",3, 35, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::LoadAllTrainingData( const GenericVector<STRING> & filenames , CachingStrategy cache_strategy , bool randomly_rotate)",7, 80, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::MaintainCheckpoints( TestCallback tester , STRING * log_msg)",86, 81, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::PrepareLogMsg( STRING * log_msg) const",9, 75, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::LogIterations( const char * intro_str , STRING * log_msg) const",6, 80, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::TransitionTrainingStage( float error_threshold)",8, 67, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::Serialize( SerializeAmount serialize_amount , const TessdataManager * mgr , TFile * fp) const",34, 89, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::DeSerialize( const TessdataManager * mgr , TFile * fp)",45, 91, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::StartSubtrainer( STRING * log_msg)",21, 81, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::UpdateSubtrainer( STRING * log_msg)",40, 72, 6, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ReduceLearningRates( LSTMTrainer * samples_trainer , STRING * log_msg)",12, 78, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ReduceLayerLearningRates( double factor , int num_samples , LSTMTrainer * samples_trainer)",105, 81, 6, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::EncodeString( const STRING & str , const UNICHARSET & unicharset , const UnicharCompress * recoder , bool simple_text , int null_char , GenericVector<int> * labels)",44, 81, 31, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::TrainOnLine( const ImageData * trainingdata , bool batch)",30, 76, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::PrepareForBackward( const ImageData * trainingdata , NetworkIO * fwd_outputs , NetworkIO * targets)",97, 81, 12, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::SaveTrainingDump( SerializeAmount serialize_amount , const LSTMTrainer * trainer , GenericVector<char> * data) const",7, 70, 35, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ReadLocalTrainingDump( const TessdataManager * mgr , const char * data , int size)",10, 80, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::SaveTraineddata( const STRING & filename)",7, 60, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::SaveRecognitionDump( GenericVector<char> * data) const",7, 73, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::DumpFilename() const",7, 67, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::FillErrorBuffer( double new_error , ErrorTypes type)",5, 71, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::MapRecoder( const UNICHARSET & old_chset , const UnicharCompress & old_recoder) const",32, 79, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::InitCharSet()",11, 68, 8, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::SetNullChar()",7, 77, 51, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::EmptyConstructor()",10, 39, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::DebugLSTMTraining( const NetworkIO & inputs , const ImageData & trainingdata , const NetworkIO & fwd_outputs , const GenericVector<int> & truth_labels , const NetworkIO & outputs)",31, 78, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::DisplayTargets( const NetworkIO & targets , const char * window_name , ScrollView ** window)",34, 81, 33, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeTextTargets( const NetworkIO & outputs , const GenericVector<int> & truth_labels , NetworkIO * targets)",16, 81, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeCTCTargets( const GenericVector<int> & truth_labels , NetworkIO * outputs , NetworkIO * targets)",7, 78, 36, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeErrorRates( const NetworkIO & deltas , double char_error , double word_error)",18, 80, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeRMSError( const NetworkIO & deltas)",13, 63, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeWinnerError( const NetworkIO & deltas)",16, 77, 6, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeCharError( const GenericVector<int> & truth_str , const GenericVector<int> & ocr_str)",25, 74, 0, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::ComputeWordError( STRING * truth_str , STRING * ocr_str)",30, 81, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::UpdateErrorBuffer( double new_error , ErrorTypes type)",11, 83, 2, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::RollErrorBuffers()",14, 78, 4, 0
repos/cpp/tesseract/src/lstm/lstmtrainer.cpp,"tesseract::LSTMTrainer::UpdateErrorGraph( int iteration , double error_rate , const GenericVector<char> & model_data , TestCallback tester)",72, 83, 6, 0
repos/cpp/tesseract/src/lstm/reversed.cpp,"tesseract::Reversed::Reversed( const STRING & name , NetworkType type)",3, 76, 0, 0
repos/cpp/tesseract/src/lstm/reversed.cpp,"tesseract::Reversed::OutputShape( const StaticShape & input_shape) const",12, 74, 0, 0
repos/cpp/tesseract/src/lstm/reversed.cpp,"tesseract::Reversed::SetNetwork( Network * network)",4, 46, 0, 0
repos/cpp/tesseract/src/lstm/reversed.cpp,"tesseract::Reversed::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",9, 71, 2, 0
repos/cpp/tesseract/src/lstm/reversed.cpp,"tesseract::Reversed::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",12, 69, 2, 0
repos/cpp/tesseract/src/lstm/reversed.cpp,"tesseract::Reversed::ReverseData( const NetworkIO & src , NetworkIO * dest) const",8, 74, 0, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::ceil_log2( uint32_t n)",23, 54, 2, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::LSTM( const STRING & name , int ni , int ns , int no , bool two_dimensional , NetworkType type)",23, 77, 0, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::~LSTM()",1, 35, 0, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::OutputShape( const StaticShape & input_shape) const",7, 70, 0, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::SetEnableTraining( TrainingState state)",18, 63, 2, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::InitWeights( float range , TRand * randomizer)",13, 62, 4, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::RemapOutputs( int old_no , const std :: vector<int> & code_map)",7, 71, 0, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::ConvertToInt()",9, 39, 2, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::DebugWeights()",11, 44, 4, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::Serialize( TFile * fp) const",10, 69, 4, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::DeSerialize( TFile * fp)",27, 74, 4, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",188, 80, 2, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",223, 81, 2, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::Update( float learning_rate , float momentum , float adam_beta , int num_samples)",16, 78, 4, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::CountAlternators( const Network & other , double * same , double * changed) const",12, 78, 4, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::PrintW()",24, 59, 8, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::PrintDW()",24, 54, 8, 0
repos/cpp/tesseract/src/lstm/lstm.cpp,"tesseract::LSTM::ResizeForward( const NetworkIO & input)",12, 59, 2, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::Reconfig( const STRING & name , int ni , int x_scale , int y_scale)",4, 73, 0, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::OutputShape( const StaticShape & input_shape) const",8, 74, 0, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::XScaleFactor() const",3, 37, 0, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::Serialize( TFile * fp) const",5, 44, 0, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::DeSerialize( TFile * fp)",6, 49, 2, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",23, 79, 4, 0
repos/cpp/tesseract/src/lstm/reconfig.cpp,"tesseract::Reconfig::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",24, 81, 8, 0
repos/cpp/tesseract/src/lstm/maxpool.cpp,"tesseract::Maxpool::Maxpool( const STRING & name , int ni , int x_scale , int y_scale)",5, 71, 0, 0
repos/cpp/tesseract/src/lstm/maxpool.cpp,"tesseract::Maxpool::DeSerialize( TFile * fp)",5, 43, 2, 0
repos/cpp/tesseract/src/lstm/maxpool.cpp,"tesseract::Maxpool::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",31, 79, 4, 0
repos/cpp/tesseract/src/lstm/maxpool.cpp,"tesseract::Maxpool::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",7, 67, 2, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Resize2d( bool int_mode , int width , int num_features)",9, 71, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ResizeToMap( bool int_mode , const StrideMap & stride_map , int num_features)",14, 81, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ResizeScaled( const NetworkIO & src , int x_scale , int y_scale , int num_features)",6, 75, 29, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ResizeXTo1( const NetworkIO & src , int num_features)",5, 69, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Zero()",7, 70, 2, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ZeroInvalidElements()",35, 73, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::ComputeBlackWhite( Pix * pix , float * black , float * white)",28, 76, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::FromPix( const StaticShape & shape , const Pix * pix , TRand * randomizer)",5, 66, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::FromPixes( const StaticShape & shape , const std :: vector<const Pix*> & pixes , TRand * randomizer)",30, 68, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Copy2DImage( int batch , Pix * pix , float black , float contrast , TRand * randomizer)",33, 79, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Copy1DGreyImage( int batch , Pix * pix , float black , float contrast , TRand * randomizer)",21, 71, 2, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::SetPixel( int t , int f , int pixel , float black , float contrast)",9, 81, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ToPix() const",78, 85, 8, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Print( int num) const",15, 67, 10, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyTimeStepFrom( int dest_t , const NetworkIO & src , int src_t)",8, 80, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyTimeStepGeneral( int dest_t , int dest_offset , int num_features , const NetworkIO & src , int src_t , int src_offset)",12, 76, 36, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ZeroTimeStepGeneral( int t , int offset , int num_features)",7, 75, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Randomize( int t , int offset , int num_features , TRand * randomizer)",13, 66, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::BestChoiceOverRange( int t_start , int t_end , int not_this , int null_ch , float * rating , float * certainty) const",17, 73, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ScoresOverRange( int t_start , int t_end , int choice , int null_ch , float * rating , float * certainty) const",35, 81, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::BestLabel( int t , int not_this , int not_that , float * score) const",15, 66, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::PositionOfBestMatch( const GenericVector<int> & labels , int start , int end) const",15, 80, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ScoreOfLabels( const GenericVector<int> & labels , int start) const",9, 66, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::SetActivations( int t , int label , float ok_score)",9, 67, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::EnsureBestLabel( int t , int label)",16, 78, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ProbToCertainty( float prob)",3, 54, 2, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::AnySuspiciousTruth( float confidence_thr) const",17, 71, 12, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ReadTimeStep( int t , double * output) const",13, 60, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::AddTimeStep( int t , double * inout) const",14, 59, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::AddTimeStepPart( int t , int offset , int num_features , float * inout) const",14, 69, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::WriteTimeStep( int t , const double * input)",3, 60, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::WriteTimeStepPart( int t , int offset , int num_features , const double * input)",15, 71, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::MaxpoolTimeStep( int dest_t , const NetworkIO & src , int src_t , int * max_line)",25, 77, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::MaxpoolBackward( const NetworkIO & fwd , const GENERIC_2D_ARRAY<int> & maxes)",15, 70, 32, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::MinOfMaxes() const",21, 60, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CombineOutputs( const NetworkIO & base_output , const NetworkIO & combiner_output)",32, 80, 8, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ComputeCombinerDeltas( const NetworkIO & fwd_deltas , const NetworkIO & base_output)",39, 79, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyAll( const NetworkIO & src)",4, 48, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::AddAllToFloat( const NetworkIO & src)",5, 54, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::SubtractAllFromFloat( const NetworkIO & src)",5, 61, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyWithNormalization( const NetworkIO & src , const NetworkIO & scale)",20, 81, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyWithYReversal( const NetworkIO & src)",17, 79, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyWithXReversal( const NetworkIO & src)",17, 72, 6, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyWithXYTranspose( const NetworkIO & src)",22, 66, 8, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyPacking( const NetworkIO & src , int feature_offset)",25, 71, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::CopyUnpacking( const NetworkIO & src , int feature_offset , int num_features)",17, 72, 0, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::Transpose( TransposedArray * dest) const",5, 64, 2, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::ClipVector( int t , float range)",7, 52, 4, 0
repos/cpp/tesseract/src/lstm/networkio.cpp,"tesseract::NetworkIO::GetPadding( int num_features)",8, 78, 6, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::IsValid() const",11, 69, 4, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::IsLast( FlexDimensions dimension) const",3, 64, 0, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::MaxIndexOfDim( FlexDimensions dim) const",16, 64, 0, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::AddOffset( int offset , FlexDimensions dimension)",5, 73, 0, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::Increment()",13, 55, 4, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::Decrement()",19, 81, 8, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::InitToLastOfBatch( int batch)",7, 65, 4, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::Index::SetTFromIndices()",6, 55, 4, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::SetStride( const std :: vector<std::pair<int,int>> & h_w_pairs)",16, 79, 0, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::ScaleXY( int x_factor , int y_factor)",7, 54, 0, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::ReduceWidthTo1()",5, 37, 2, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::TransposeXY()",5, 50, 2, 0
repos/cpp/tesseract/src/lstm/stridemap.cpp,"tesseract::StrideMap::ComputeTIncrements()",6, 61, 4, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::Series( const STRING & name)",3, 54, 0, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::OutputShape( const StaticShape & input_shape) const",8, 72, 0, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::InitWeights( float range , TRand * randomizer)",12, 75, 12, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::RemapOutputs( int old_no , const std :: vector<int> & code_map)",13, 73, 0, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::SetupNeedsBackprop( bool needs_backprop)",6, 68, 4, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::XScaleFactor() const",6, 43, 6, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::CacheXScaleFactor( int factor)",3, 45, 0, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::Forward( bool debug , const NetworkIO & input , const TransposedArray * input_transpose , NetworkScratch * scratch , NetworkIO * output)",19, 77, 2, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::Backward( bool debug , const NetworkIO & fwd_deltas , NetworkScratch * scratch , NetworkIO * back_deltas)",27, 80, 2, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::SplitAt( int last_start , Series ** start , Series ** end)",27, 69, 0, 0
repos/cpp/tesseract/src/lstm/series.cpp,"tesseract::Series::AppendSeries( Network * src)",9, 56, 2, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LSTMRecognizer()",12, 34, 6, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::~LSTMRecognizer()",5, 36, 0, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::Load( const char * lang , TessdataManager * mgr)",9, 68, 0, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::Serialize( const TessdataManager * mgr , TFile * fp) const",17, 81, 2, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DeSerialize( const TessdataManager * mgr , TFile * fp)",23, 80, 26, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LoadCharsets( const TessdataManager * mgr)",8, 71, 2, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LoadRecoder( TFile * fp)",15, 52, 6, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LoadDictionary( const char * lang , TessdataManager * mgr)",12, 78, 0, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::RecognizeLine( const ImageData & image_data , bool invert , bool debug , double worst_dict_cert , const TBOX & line_box , PointerVector<WERD_RES> * words , int lstm_choice_mode)",20, 79, 8, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::OutputStats( const NetworkIO & outputs , float * min_output , float * mean_output , float * sd)",23, 81, 2, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::RecognizeLine( const ImageData & image_data , bool invert , bool debug , bool re_invert , bool upside_down , float * scale_factor , NetworkIO * inputs , NetworkIO * outputs)",66, 82, 4, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DecodeLabels( const GenericVector<int> & labels)",12, 72, 0, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DisplayForward( const NetworkIO & inputs , const GenericVector<int> & labels , const GenericVector<int> & label_coords , const char * window_name , ScrollView ** window)",13, 76, 36, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DisplayLSTMOutput( const GenericVector<int> & labels , const GenericVector<int> & xcoords , int height , ScrollView * window)",24, 74, 39, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DebugActivationPath( const NetworkIO & outputs , const GenericVector<int> & labels , const GenericVector<int> & xcoords)",24, 79, 8, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DebugActivationRange( const NetworkIO & outputs , const char * label , int best_choice , int x_start , int x_end)",25, 78, 42, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::NullIsBest( const NetworkIO & output , float null_thr , int null_char , int t)",7, 75, 2, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LabelsFromOutputs( const NetworkIO & outputs , GenericVector<int> * labels , GenericVector<int> * xcoords)",9, 70, 39, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LabelsViaReEncode( const NetworkIO & output , GenericVector<int> * labels , GenericVector<int> * xcoords)",10, 79, 8, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::LabelsViaSimpleText( const NetworkIO & output , GenericVector<int> * labels , GenericVector<int> * xcoords)",16, 72, 41, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DecodeLabel( const GenericVector<int> & labels , int start , int * end , int * decoded)",39, 78, 6, 0
repos/cpp/tesseract/src/lstm/lstmrecognizer.cpp,"tesseract::LSTMRecognizer::DecodeSingleLabel( int label)",12, 77, 4, 0
repos/cpp/tesseract/src/lstm/functions.cpp,"tesseract::TableInit::TableInit()",6, 59, 6, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeNode::Print( int null_char , const UNICHARSET & unicharset , int depth) const",18, 76, 10, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::RecodeBeamSearch( const UnicharCompress & recoder , int null_char , bool simple_text , Dict * dict)",12, 84, 2, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::Decode( const NetworkIO & output , double dict_ratio , double cert_offset , double worst_dict_cert , const UNICHARSET * charset , int lstm_choice_mode)",16, 81, 30, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::Decode( const GENERIC_2D_ARRAY<float> & output , double dict_ratio , double cert_offset , double worst_dict_cert , const UNICHARSET * charset)",11, 81, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::SaveMostCertainChoices( const float * outputs , int num_outputs , const UNICHARSET * charset , int xCoord)",28, 75, 20, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ExtractBestPathAsLabels( GenericVector<int> * labels , GenericVector<int> * xcoords) const",20, 78, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ExtractBestPathAsUnicharIds( bool debug , const UNICHARSET * unicharset , GenericVector<int> * unichar_ids , GenericVector<float> * certs , GenericVector<float> * ratings , GenericVector<int> * xcoords) const",13, 79, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ExtractBestPathAsWords( const TBOX & line_box , float scale_factor , bool debug , const UNICHARSET * unicharset , PointerVector<WERD_RES> * words , int lstm_choice_mode)",153, 92, 8, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::DebugBeams( const UNICHARSET & unicharset) const",15, 73, 8, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::DebugBeamPos( const UNICHARSET & unicharset , const RecodeHeap & heap) const",27, 84, 6, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ExtractPathAsUnicharIds( const GenericVector<const RecodeNode*> & best_nodes , GenericVector<int> * unichar_ids , GenericVector<float> * certs , GenericVector<float> * ratings , GenericVector<int> * xcoords , std :: deque<std::tuple<int,int>> * best_choices , std :: deque<std::tuple<int,int>> * best_choices_acc)",65, 78, 8, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::InitializeWord( bool leading_space , const TBOX & line_box , int word_start , int word_end , float space_certainty , const UNICHARSET * unicharset , const GenericVector<int> & xcoords , float scale_factor)",32, 81, 43, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ComputeTopN( const float * outputs , int num_outputs , int top_n)",28, 76, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::DecodeStep( const float * outputs , int t , double dict_ratio , double cert_offset , double worst_dict_cert , const UNICHARSET * charset , bool debug)",68, 81, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ContinueContext( const RecodeNode * prev , int index , const float * outputs , TopNState top_n_flag , double dict_ratio , double cert_offset , double worst_dict_cert , RecodeBeam * step)",107, 81, 6, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ContinueUnichar( int code , int unichar_id , float cert , float worst_dict_cert , float dict_ratio , bool use_dawgs , NodeContinuation cont , const RecodeNode * prev , RecodeBeam * step)",40, 80, 39, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ContinueDawg( int code , int unichar_id , float cert , NodeContinuation cont , const RecodeNode * prev , RecodeBeam * step)",77, 83, 23, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::PushInitialDawgIfBetter( int code , int unichar_id , PermuterType permuter , bool start , bool end , float cert , NodeContinuation cont , const RecodeNode * prev , RecodeBeam * step)",18, 81, 47, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::PushDupOrNoDawgIfBetter( int length , bool dup , int code , int unichar_id , float cert , float worst_dict_cert , float dict_ratio , bool use_dawgs , NodeContinuation cont , const RecodeNode * prev , RecodeBeam * step)",20, 79, 23, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::PushHeapIfBetter( int max_size , int code , int unichar_id , PermuterType permuter , bool dawg_start , bool word_start , bool end , bool dup , float cert , const RecodeNode * prev , DawgPositionVector * d , RecodeHeap * heap)",21, 80, 0, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::PushHeapIfBetter( int max_size , RecodeNode * node , RecodeHeap * heap)",12, 77, 2, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::UpdateHeapIfMatched( RecodeNode * new_node , RecodeHeap * heap)",23, 80, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ComputeCodeHash( int code , bool dup , const RecodeNode * prev) const",12, 75, 43, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ExtractBestPaths( GenericVector<const RecodeNode*> * best_nodes , GenericVector<const RecodeNode*> * second_nodes) const",42, 79, 36, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::ExtractPath( const RecodeNode * node , GenericVector<const RecodeNode*> * path) const",9, 76, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::DebugPath( const UNICHARSET * unicharset , const GenericVector<const RecodeNode*> & path) const",9, 58, 4, 0
repos/cpp/tesseract/src/lstm/recodebeam.cpp,"tesseract::RecodeBeamSearch::DebugUnicharPath( const UNICHARSET * unicharset , const GenericVector<const RecodeNode*> & path , const GenericVector<int> & unichar_ids , const GenericVector<float> & certs , const GenericVector<float> & ratings , const GenericVector<int> & xcoords) const",17, 81, 4, 0
