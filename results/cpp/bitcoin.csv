File, Function, Total Width, Leading Space(s), Leading Tab(s)
repos/cpp/bitcoin/build_msvc/testconsensus/testconsensus.cpp,"BuildSpendingTransaction( const CScript & scriptSig , const CScriptWitness & scriptWitness , int nValue = 0)",124, 0, 0
repos/cpp/bitcoin/build_msvc/testconsensus/testconsensus.cpp,"main()",215, 4, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CreateGenesisBlock( const char * pszTimestamp , const CScript & genesisOutputScript , uint32_t nTime , uint32_t nNonce , uint32_t nBits , int32_t nVersion , const CAmount & genesisReward)",195, 4, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CreateGenesisBlock( uint32_t nTime , uint32_t nNonce , uint32_t nBits , int32_t nVersion , const CAmount & genesisReward)",212, 4, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CMainParams::CMainParams()",128, 8, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CTestNetParams::CTestNetParams()",129, 8, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CRegTestParams::CRegTestParams( const ArgsManager & args)",139, 8, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CRegTestParams::UpdateVersionBitsParameters( Consensus :: DeploymentPos d , int64_t nStartTime , int64_t nTimeout)",103, 4, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CRegTestParams::UpdateVersionBitsParametersFromArgs( const ArgsManager & args)",152, 16, 0
repos/cpp/bitcoin/src/chainparams.cpp,"Params()",31, 0, 0
repos/cpp/bitcoin/src/chainparams.cpp,"CreateChainParams( const std :: string & chain)",83, 4, 0
repos/cpp/bitcoin/src/chainparams.cpp,"SelectParams( const std :: string & network)",52, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPWorkItem::HTTPWorkItem( std :: unique_ptr<HTTPRequest> _req , const std :: string & _path , const HTTPRequestHandler & _func)",112, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPWorkItem::operator ( )()",31, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"WorkQueue::WorkQueue( size_t _maxDepth)",58, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"WorkQueue::~WorkQueue()",17, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"WorkQueue::Enqueue( WorkItem * item)",61, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"WorkQueue::Run()",49, 16, 0
repos/cpp/bitcoin/src/httpserver.cpp,"WorkQueue::Interrupt()",27, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPPathHandler::HTTPPathHandler()",25, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPPathHandler::HTTPPathHandler( std :: string _prefix , bool _exactMatch , HTTPRequestHandler _handler)",89, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"ClientAllowed( const CNetAddr & netaddr)",51, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"InitHTTPAllowList()",208, 16, 0
repos/cpp/bitcoin/src/httpserver.cpp,"RequestMethodString( HTTPRequest :: RequestMethod m)",69, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"http_request_cb( struct evhttp_request * req , void * arg)",152, 13, 0
repos/cpp/bitcoin/src/httpserver.cpp,"http_reject_request_cb( struct evhttp_request * req , void *)",70, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"ThreadHTTP( struct event_base * base)",63, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPBindAddresses( struct evhttp * http)",142, 12, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPWorkQueueRun( WorkQueue<HTTPClosure> * queue)",60, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"libevent_log_cb( int severity , const char * msg)",91, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"InitHTTPServer()",100, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"UpdateHTTPServerLogging( bool enable)",59, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"StartHTTPServer()",92, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"InterruptHTTPServer()",70, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"StopHTTPServer()",81, 4, 0
repos/cpp/bitcoin/src/httpserver.cpp,"EventBase()",31, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"httpevent_callback_fn( evutil_socket_t , short , void * data)",70, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPEvent::HTTPEvent( struct event_base * base , bool _deleteWhenTriggered , const std :: function<void()> & _handler)",113, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPEvent::~HTTPEvent()",24, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPEvent::trigger( struct timeval * tv)",76, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::HTTPRequest( struct evhttp_request * _req)",72, 55, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::~HTTPRequest()",71, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::GetHeader( const std :: string & hdr) const",82, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::ReadBody()",80, 5, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::WriteHeader( const std :: string & hdr , const std :: string & value)",80, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::WriteReply( int nStatus , const std :: string & strReply)",99, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::GetPeer() const",66, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::GetURI() const",40, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"HTTPRequest::GetRequestMethod() const",65, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"RegisterHTTPHandler( const std :: string & prefix , bool exactMatch , const HTTPRequestHandler & handler)",104, 0, 0
repos/cpp/bitcoin/src/httpserver.cpp,"UnregisterHTTPHandler( const std :: string & prefix , bool exactMatch)",106, 8, 0
repos/cpp/bitcoin/src/httpserver.cpp,"urlDecode( const std :: string & urlEncoded)",78, 8, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CMerkleBlock::CMerkleBlock( const CBlock & block , CBloomFilter * filter , const std :: set<uint256> * txids)",102, 0, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CPartialMerkleTree::CalcHash( int height , unsigned int pos , const std :: vector<uint256> & vTxid)",104, 0, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CPartialMerkleTree::TraverseAndBuild( int height , unsigned int pos , const std :: vector<uint256> & vTxid , const std :: vector<bool> & vMatch)",142, 0, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CPartialMerkleTree::TraverseAndExtract( int height , unsigned int pos , unsigned int & nBitsUsed , unsigned int & nHashUsed , std :: vector<uint256> & vMatch , std :: vector<unsigned int> & vnIndex)",195, 0, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CPartialMerkleTree::CPartialMerkleTree( const std :: vector<uint256> & vTxid , const std :: vector<bool> & vMatch)",152, 0, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CPartialMerkleTree::CPartialMerkleTree()",75, 0, 0
repos/cpp/bitcoin/src/merkleblock.cpp,"CPartialMerkleTree::ExtractMatches( std :: vector<uint256> & vMatch , std :: vector<unsigned int> & vnIndex)",111, 0, 0
repos/cpp/bitcoin/src/versionbits.cpp,"AbstractThresholdConditionChecker::GetStateFor( const CBlockIndex * pindexPrev , const Consensus :: Params & params , ThresholdConditionCache & cache) const",165, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"AbstractThresholdConditionChecker::GetStateStatisticsFor( const CBlockIndex * pindex , const Consensus :: Params & params) const",133, 0, 0
repos/cpp/bitcoin/src/versionbits.cpp,"AbstractThresholdConditionChecker::GetStateSinceHeightFor( const CBlockIndex * pindexPrev , const Consensus :: Params & params , ThresholdConditionCache & cache) const",165, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::BeginTime( const Consensus :: Params & params) const",117, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::EndTime( const Consensus :: Params & params) const",113, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::Period( const Consensus :: Params & params) const",107, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::Threshold( const Consensus :: Params & params) const",116, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::Condition( const CBlockIndex * pindex , const Consensus :: Params & params) const",128, 8, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::VersionBitsConditionChecker( Consensus :: DeploymentPos id_)",84, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsConditionChecker::Mask( const Consensus :: Params & params) const",114, 4, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsState( const CBlockIndex * pindexPrev , const Consensus :: Params & params , Consensus :: DeploymentPos pos , VersionBitsCache & cache)",151, 0, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsStatistics( const CBlockIndex * pindexPrev , const Consensus :: Params & params , Consensus :: DeploymentPos pos)",126, 0, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsStateSinceHeight( const CBlockIndex * pindexPrev , const Consensus :: Params & params , Consensus :: DeploymentPos pos , VersionBitsCache & cache)",151, 0, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsMask( const Consensus :: Params & params , Consensus :: DeploymentPos pos)",88, 0, 0
repos/cpp/bitcoin/src/versionbits.cpp,"VersionBitsCache::Clear()",81, 4, 0
repos/cpp/bitcoin/src/pow.cpp,"GetNextWorkRequired( const CBlockIndex * pindexLast , const CBlockHeader * pblock , const Consensus :: Params & params)",140, 16, 0
repos/cpp/bitcoin/src/pow.cpp,"CalculateNextWorkRequired( const CBlockIndex * pindexLast , int64_t nFirstBlockTime , const Consensus :: Params & params)",128, 0, 0
repos/cpp/bitcoin/src/pow.cpp,"CheckProofOfWork( uint256 hash , unsigned int nBits , const Consensus :: Params & params)",95, 4, 0
repos/cpp/bitcoin/src/warnings.cpp,"SetMiscWarning( const std :: string & strWarning)",51, 0, 0
repos/cpp/bitcoin/src/warnings.cpp,"SetfLargeWorkForkFound( bool flag)",39, 0, 0
repos/cpp/bitcoin/src/warnings.cpp,"GetfLargeWorkForkFound()",32, 4, 0
repos/cpp/bitcoin/src/warnings.cpp,"SetfLargeWorkInvalidChainFound( bool flag)",47, 0, 0
repos/cpp/bitcoin/src/warnings.cpp,"GetWarnings( const std :: string & strFor)",185, 8, 0
repos/cpp/bitcoin/src/addrdb.cpp,"SerializeDB( Stream & stream , const Data & data)",77, 8, 0
repos/cpp/bitcoin/src/addrdb.cpp,"SerializeFileDB( const std :: string & prefix , const fs :: path & path , const Data & data)",88, 0, 0
repos/cpp/bitcoin/src/addrdb.cpp,"DeserializeDB( Stream & stream , Data & data , bool fCheckSum = true)",81, 16, 0
repos/cpp/bitcoin/src/addrdb.cpp,"DeserializeFileDB( const fs :: path & path , Data & data)",77, 8, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CBanDB::CBanDB()",48, 4, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CBanDB::Write( const banmap_t & banSet)",60, 4, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CBanDB::Read( banmap_t & banSet)",51, 4, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CAddrDB::CAddrDB()",43, 4, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CAddrDB::Write( const CAddrMan & addr)",53, 4, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CAddrDB::Read( CAddrMan & addr)",46, 4, 0
repos/cpp/bitcoin/src/addrdb.cpp,"CAddrDB::Read( CAddrMan & addr , CDataStream & ssPeers)",57, 0, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::fopen( const fs :: path & p , const char * mode)",78, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::GetErrorReason()",38, 0, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::FileLock::FileLock( const fs :: path & file)",46, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::FileLock::~FileLock()",22, 0, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::FileLock::TryLock()",43, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::GetErrorReason()",121, 8, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::FileLock::FileLock( const fs :: path & file)",135, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::FileLock::~FileLock()",41, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::FileLock::TryLock()",169, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::get_filesystem_error_message( const fs :: filesystem_error & e)",103, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::openmodeToStr( std :: ios_base :: openmode mode)",96, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::ifstream::open( const fs :: path & p , std :: ios_base :: openmode mode)",69, 0, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::ifstream::close()",29, 4, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::ofstream::open( const fs :: path & p , std :: ios_base :: openmode mode)",69, 0, 0
repos/cpp/bitcoin/src/fs.cpp,"fsbridge::ofstream::close()",29, 4, 0
repos/cpp/bitcoin/src/timedata.cpp,"GetTimeOffset()",26, 4, 0
repos/cpp/bitcoin/src/timedata.cpp,"GetAdjustedTime()",40, 4, 0
repos/cpp/bitcoin/src/timedata.cpp,"abs64( int64_t n)",32, 0, 0
repos/cpp/bitcoin/src/timedata.cpp,"AddTimeData( const CNetAddr & ip , int64_t nOffsetSample)",191, 20, 0
repos/cpp/bitcoin/src/netbase.cpp,"ParseNetwork( std :: string net)",129, 8, 0
repos/cpp/bitcoin/src/netbase.cpp,"GetNetworkName( enum Network net)",47, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"LookupIntern( const char * pszName , std :: vector<CNetAddr> & vIP , unsigned int nMaxSolutions , bool fAllowLookup)",121, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"LookupHost( const char * pszName , std :: vector<CNetAddr> & vIP , unsigned int nMaxSolutions , bool fAllowLookup)",112, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"LookupHost( const char * pszName , CNetAddr & addr , bool fAllowLookup)",72, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"Lookup( const char * pszName , std :: vector<CService> & vAddr , int portDefault , bool fAllowLookup , unsigned int nMaxSolutions)",127, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"Lookup( const char * pszName , CService & addr , int portDefault , bool fAllowLookup)",85, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"LookupNumeric( const char * pszName , int portDefault)",75, 4, 0
repos/cpp/bitcoin/src/netbase.cpp,"MillisToTimeval( int64_t nTimeout)",49, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"InterruptibleRecv( uint8_t * data , size_t len , int timeout , const SOCKET & hSocket)",102, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"Socks5ErrorString( uint8_t err)",50, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"Socks5( const std :: string & strDest , int port , const ProxyCredentials * auth , const SOCKET & hSocket)",118, 8, 0
repos/cpp/bitcoin/src/netbase.cpp,"CreateSocket( const CService & addrConnect)",134, 8, 0
repos/cpp/bitcoin/src/netbase.cpp,"LogConnectFailure( bool manual_connection , const char * fmt , const Args & ... args)",94, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"ConnectSocketDirectly( const CService & addrConnect , const SOCKET & hSocket , int nTimeout , bool manual_connection)",149, 16, 0
repos/cpp/bitcoin/src/netbase.cpp,"SetProxy( enum Network net , const proxyType & addrProxy)",62, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"GetProxy( enum Network net , proxyType & proxyInfoOut)",59, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"SetNameProxy( const proxyType & addrProxy)",48, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"GetNameProxy( proxyType & nameProxyOut)",45, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"HaveNameProxy()",32, 4, 0
repos/cpp/bitcoin/src/netbase.cpp,"IsProxy( const CNetAddr & addr)",63, 8, 0
repos/cpp/bitcoin/src/netbase.cpp,"ConnectThroughProxy( const proxyType & proxy , const std :: string & strDest , int port , const SOCKET & hSocket , int nTimeout , bool * outProxyConnectionFailed)",156, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"LookupSubNet( const char * pszName , CSubNet & ret)",98, 12, 0
repos/cpp/bitcoin/src/netbase.cpp,"NetworkErrorString( int err)",122, 8, 0
repos/cpp/bitcoin/src/netbase.cpp,"NetworkErrorString( int err)",90, 0, 0
repos/cpp/bitcoin/src/netbase.cpp,"CloseSocket( SOCKET & hSocket)",107, 8, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::CBloomFilter( const unsigned int nElements , const double nFPRate , const unsigned int nTweakIn , unsigned char nFlagsIn)",134, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::Hash( unsigned int nHashNum , const std :: vector<unsigned char> & vDataToHash) const",115, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::insert( const std :: vector<unsigned char> & vKey)",66, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::insert( const COutPoint & outpoint)",67, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::insert( const uint256 & hash)",63, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::contains( const std :: vector<unsigned char> & vKey) const",74, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::contains( const COutPoint & outpoint) const",67, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::contains( const uint256 & hash) const",63, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::clear()",34, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::reset( const unsigned int nNewTweak)",55, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::IsWithinSizeConstraints() const",82, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::IsRelevantAndUpdate( const CTransaction & tx)",114, 8, 0
repos/cpp/bitcoin/src/bloom.cpp,"CBloomFilter::UpdateEmptyFull()",52, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CRollingBloomFilter::CRollingBloomFilter( const unsigned int nElements , const double fpRate)",118, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"RollingBloomHash( unsigned int nHashNum , uint32_t nTweak , const std :: vector<unsigned char> & vDataToHash)",129, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"FastMod( uint32_t x , size_t n)",55, 0, 0
repos/cpp/bitcoin/src/bloom.cpp,"CRollingBloomFilter::insert( const std :: vector<unsigned char> & vKey)",129, 8, 0
repos/cpp/bitcoin/src/bloom.cpp,"CRollingBloomFilter::insert( const uint256 & hash)",64, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CRollingBloomFilter::contains( const std :: vector<unsigned char> & vKey) const",121, 8, 0
repos/cpp/bitcoin/src/bloom.cpp,"CRollingBloomFilter::contains( const uint256 & hash) const",64, 4, 0
repos/cpp/bitcoin/src/bloom.cpp,"CRollingBloomFilter::reset()",86, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"HTTPRPCTimer::HTTPRPCTimer( struct event_base * eventBase , std :: function<void()> & func , int64_t millis)",94, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"HTTPRPCTimerInterface::HTTPRPCTimerInterface( struct event_base * _base)",75, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"HTTPRPCTimerInterface::Name()",32, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"HTTPRPCTimerInterface::NewTimer( std :: function<void()> & func , int64_t millis)",81, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"JSONErrorReply( HTTPRequest * req , const UniValue & objError , const UniValue & id)",91, 0, 0
repos/cpp/bitcoin/src/httprpc.cpp,"multiUserAuthorized( std :: string strUserPass)",188, 8, 0
repos/cpp/bitcoin/src/httprpc.cpp,"RPCAuthorized( const std :: string & strAuth , std :: string & strAuthUsernameOut)",108, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"HTTPReq_JSONRPC( HTTPRequest * req , const std :: string &)",90, 8, 0
repos/cpp/bitcoin/src/httprpc.cpp,"InitRPCAuthentication()",242, 8, 0
repos/cpp/bitcoin/src/httprpc.cpp,"StartHTTPRPC()",74, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"InterruptHTTPRPC()",60, 4, 0
repos/cpp/bitcoin/src/httprpc.cpp,"StopHTTPRPC()",61, 8, 0
repos/cpp/bitcoin/src/key.cpp,"ec_privkey_import_der( const secp256k1_context * ctx , unsigned char * out32 , const unsigned char * privkey , size_t privkeylen)",136, 0, 0
repos/cpp/bitcoin/src/key.cpp,"ec_privkey_export_der( const secp256k1_context * ctx , unsigned char * privkey , size_t * privkeylen , const unsigned char * key32 , bool compressed)",154, 0, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::Check( const unsigned char * vch)",68, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::MakeNewKey( bool fCompressedIn)",60, 8, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::GetPrivKey() const",108, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::GetPubKey() const",174, 4, 0
repos/cpp/bitcoin/src/key.cpp,"SigHasLowR( const secp256k1_ecdsa_signature * sig)",129, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::Sign( const uint256 & hash , std :: vector<unsigned char> & vchSig , bool grind , uint32_t test_case) const",172, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::VerifyPubKey( const CPubKey & pubkey) const",109, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::SignCompact( const uint256 & hash , std :: vector<unsigned char> & vchSig) const",144, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::Load( const CPrivKey & privkey , const CPubKey & vchPubKey , bool fSkipCheck = false)",113, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CKey::Derive( CKey & keyChild , ChainCode & ccChild , unsigned int nChild , const ChainCode & cc) const",118, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CExtKey::Derive( CExtKey & out , unsigned int _nChild) const",67, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CExtKey::SetSeed( const unsigned char * seed , unsigned int nSeedLen)",94, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CExtKey::Neuter() const",59, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CExtKey::Encode( unsigned char code [ BIP32_EXTKEY_SIZE ]) const",70, 4, 0
repos/cpp/bitcoin/src/key.cpp,"CExtKey::Decode( const unsigned char code [ BIP32_EXTKEY_SIZE ])",75, 4, 0
repos/cpp/bitcoin/src/key.cpp,"ECC_InitSanityCheck()",38, 4, 0
repos/cpp/bitcoin/src/key.cpp,"ECC_Start()",79, 4, 0
repos/cpp/bitcoin/src/key.cpp,"ECC_Stop()",53, 4, 0
repos/cpp/bitcoin/src/init.cpp,"CCoinsViewErrorCatcher::CCoinsViewErrorCatcher( CCoinsView * view)",82, 4, 0
repos/cpp/bitcoin/src/init.cpp,"CCoinsViewErrorCatcher::GetCoin( const COutPoint & outpoint , Coin & coin) const",131, 12, 0
repos/cpp/bitcoin/src/init.cpp,"Interrupt()",32, 8, 0
repos/cpp/bitcoin/src/init.cpp,"Shutdown( InitInterfaces & interfaces)",102, 4, 0
repos/cpp/bitcoin/src/init.cpp,"HandleSIGTERM( int)",31, 0, 0
repos/cpp/bitcoin/src/init.cpp,"HandleSIGHUP( int)",36, 4, 0
repos/cpp/bitcoin/src/init.cpp,"consoleCtrlHandler( DWORD dwCtrlType)",56, 0, 0
repos/cpp/bitcoin/src/init.cpp,"registerSignalHandler( int signal , void(*handler)(int))",67, 0, 0
repos/cpp/bitcoin/src/init.cpp,"OnRPCStarted()",63, 4, 0
repos/cpp/bitcoin/src/init.cpp,"OnRPCStopped()",66, 4, 0
repos/cpp/bitcoin/src/init.cpp,"SetupServerArgs()",437, 4, 0
repos/cpp/bitcoin/src/init.cpp,"LicenseInfo()",250, 11, 0
repos/cpp/bitcoin/src/init.cpp,"BlockNotifyCallback( bool initialSync , const CBlockIndex * pBlockIndex)",82, 0, 0
repos/cpp/bitcoin/src/init.cpp,"BlockNotifyGenesisWait( bool , const CBlockIndex * pBlockIndex)",73, 0, 0
repos/cpp/bitcoin/src/init.cpp,"CImportingNow::CImportingNow()",37, 8, 0
repos/cpp/bitcoin/src/init.cpp,"CImportingNow::~CImportingNow()",36, 8, 0
repos/cpp/bitcoin/src/init.cpp,"CleanupBlockRevFiles()",99, 4, 0
repos/cpp/bitcoin/src/init.cpp,"ThreadImport( std :: vector<fs::path> vImportFiles)",118, 8, 0
repos/cpp/bitcoin/src/init.cpp,"InitSanityCheck()",82, 8, 0
repos/cpp/bitcoin/src/init.cpp,"AppInitServers()",69, 4, 0
repos/cpp/bitcoin/src/init.cpp,"InitParameterInteraction()",132, 8, 0
repos/cpp/bitcoin/src/init.cpp,"ResolveErrMsg( const char * const optname , const std :: string & strBind)",89, 0, 0
repos/cpp/bitcoin/src/init.cpp,"InitLogging()",109, 4, 0
repos/cpp/bitcoin/src/init.cpp,"new_handler_terminate()",76, 4, 0
repos/cpp/bitcoin/src/init.cpp,"AppInitBasicSetup()",124, 4, 0
repos/cpp/bitcoin/src/init.cpp,"AppInitParameterInteraction()",168, 12, 0
repos/cpp/bitcoin/src/init.cpp,"LockDataDirectory( bool probeOnly)",153, 8, 0
repos/cpp/bitcoin/src/init.cpp,"AppInitSanityChecks()",117, 8, 0
repos/cpp/bitcoin/src/init.cpp,"AppInitLockDataDirectory()",107, 4, 0
repos/cpp/bitcoin/src/init.cpp,"AppInitMain( InitInterfaces & interfaces)",182, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"DummyWalletInit::HasWalletSupport() const",59, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"DummyWalletInit::ParameterInteraction() const",62, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"DummyWalletInit::Construct( InitInterfaces & interfaces) const",111, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"DummyWalletInit::AddWalletOptions() const",146, 8, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"GetWalletDir()",75, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"ListWalletDir()",75, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"GetWallets()",75, 4, 0
repos/cpp/bitcoin/src/dummywallet.cpp,"interfaces::MakeWallet( const std :: shared_ptr<CWallet> & wallet)",75, 0, 0
repos/cpp/bitcoin/src/outputtype.cpp,"ParseOutputType( const std :: string & type , OutputType & output_type)",71, 0, 0
repos/cpp/bitcoin/src/outputtype.cpp,"FormatOutputType( OutputType type)",73, 4, 0
repos/cpp/bitcoin/src/outputtype.cpp,"GetDestinationForKey( const CPubKey & key , OutputType type)",73, 0, 0
repos/cpp/bitcoin/src/outputtype.cpp,"GetAllDestinationsForKey( const CPubKey & key)",98, 8, 0
repos/cpp/bitcoin/src/outputtype.cpp,"AddAndGetDestinationForScript( CKeyStore & keystore , const CScript & script , OutputType type)",106, 0, 0
repos/cpp/bitcoin/src/core_read.cpp,"ParseScript( const std :: string & s)",114, 4, 0
repos/cpp/bitcoin/src/core_read.cpp,"CheckTxScriptsSanity( const CMutableTransaction & tx)",106, 8, 0
repos/cpp/bitcoin/src/core_read.cpp,"DecodeHexTx( CMutableTransaction & tx , const std :: string & hex_tx , bool try_no_witness , bool try_witness)",108, 0, 0
repos/cpp/bitcoin/src/core_read.cpp,"DecodeHexBlockHeader( CBlockHeader & header , const std :: string & hex_header)",79, 0, 0
repos/cpp/bitcoin/src/core_read.cpp,"DecodeHexBlk( CBlock & block , const std :: string & strHexBlk)",67, 4, 0
repos/cpp/bitcoin/src/core_read.cpp,"DecodePSBT( PartiallySignedTransaction & psbt , const std :: string & base64_tx , std :: string & error)",100, 0, 0
repos/cpp/bitcoin/src/core_read.cpp,"ParseHashStr( const std :: string & strHex , uint256 & result)",62, 0, 0
repos/cpp/bitcoin/src/core_read.cpp,"ParseHexUV( const UniValue & v , const std :: string & strName)",98, 8, 0
repos/cpp/bitcoin/src/core_read.cpp,"ParseSighashString( const UniValue & sighash)",92, 12, 0
repos/cpp/bitcoin/src/chain.cpp,"CChain::SetTip( CBlockIndex * pindex)",58, 4, 0
repos/cpp/bitcoin/src/chain.cpp,"CChain::GetLocator( const CBlockIndex * pindex) const",68, 0, 0
repos/cpp/bitcoin/src/chain.cpp,"CChain::FindFork( const CBlockIndex * pindex) const",71, 0, 0
repos/cpp/bitcoin/src/chain.cpp,"CChain::FindEarliestAtLeast( int64_t nTime) const",108, 4, 0
repos/cpp/bitcoin/src/chain.cpp,"InvertLowestOne( int n)",65, 0, 0
repos/cpp/bitcoin/src/chain.cpp,"GetSkipHeight( int height)",102, 4, 0
repos/cpp/bitcoin/src/chain.cpp,"CBlockIndex::GetAncestor( int height) const",81, 12, 0
repos/cpp/bitcoin/src/chain.cpp,"CBlockIndex::GetAncestor( int height)",97, 4, 0
repos/cpp/bitcoin/src/chain.cpp,"CBlockIndex::BuildSkip()",60, 8, 0
repos/cpp/bitcoin/src/chain.cpp,"GetBlockProof( const CBlockIndex & block)",87, 4, 0
repos/cpp/bitcoin/src/chain.cpp,"GetBlockProofEquivalentTime( const CBlockIndex & to , const CBlockIndex & from , const CBlockIndex & tip , const Consensus :: Params & params)",141, 0, 0
repos/cpp/bitcoin/src/chain.cpp,"LastCommonAncestor( const CBlockIndex * pa , const CBlockIndex * pb)",86, 0, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::CThreadInterrupt()",54, 0, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::operator bool() const",49, 4, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::reset()",50, 4, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::operator ( )()",53, 8, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::sleep_for( std :: chrono :: milliseconds rel_time)",102, 4, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::sleep_for( std :: chrono :: seconds rel_time)",87, 4, 0
repos/cpp/bitcoin/src/threadinterrupt.cpp,"CThreadInterrupt::sleep_for( std :: chrono :: minutes rel_time)",87, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"UpdateTime( CBlockHeader * pblock , const Consensus :: Params & consensusParams , const CBlockIndex * pindexPrev)",114, 0, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::Options::Options()",58, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::BlockAssembler( const CChainParams & params , const Options & options)",114, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"DefaultOptions()",97, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::BlockAssembler( const CChainParams & params)",105, 0, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::resetBlock()",49, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::CreateNewBlock( const CScript & scriptPubKeyIn , bool fMineWitnessTx)",267, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::onlyUnconfirmed( CTxMemPool :: setEntries & testSet)",91, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::TestPackage( uint64_t packageSize , int64_t packageSigOpsCost) const",95, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::TestPackageTransactions( const CTxMemPool :: setEntries & package)",84, 0, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::AddToBlock( CTxMemPool :: txiter iter)",85, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::UpdatePackagesForAdded( const CTxMemPool :: setEntries & alreadyAdded , indexed_modified_transaction_set & mapModifiedTx)",87, 0, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::SkipMapTxEntry( CTxMemPool :: txiter it , indexed_modified_transaction_set & mapModifiedTx , CTxMemPool :: setEntries & failedTx)",142, 0, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::SortForBlock( const CTxMemPool :: setEntries & package , std :: vector<CTxMemPool::txiter> & sortedEntries)",121, 0, 0
repos/cpp/bitcoin/src/miner.cpp,"BlockAssembler::addPackageTxs( int & nPackagesSelected , int & nDescendantsUpdated)",129, 4, 0
repos/cpp/bitcoin/src/miner.cpp,"IncrementExtraNonce( CBlock * pblock , const CBlockIndex * pindexPrev , unsigned int & nExtraNonce)",107, 4, 0
repos/cpp/bitcoin/src/logging.cpp,"FileWriteStr( const std :: string & str , FILE * fp)",58, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::OpenDebugLog()",61, 8, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::EnableCategory( BCLog :: LogFlags flag)",57, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::EnableCategory( const std :: string & str)",59, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::DisableCategory( BCLog :: LogFlags flag)",58, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::DisableCategory( const std :: string & str)",60, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::WillLogCategory( BCLog :: LogFlags category) const",75, 4, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::DefaultShrinkDebugFile() const",51, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"GetLogCategory( BCLog :: LogFlags & flag , const std :: string & str)",67, 0, 0
repos/cpp/bitcoin/src/logging.cpp,"ListLogCategories()",85, 8, 0
repos/cpp/bitcoin/src/logging.cpp,"ListActiveLogCategories()",85, 8, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::LogTimestampStr( const std :: string & str)",82, 12, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::LogPrintStr( const std :: string & str)",73, 8, 0
repos/cpp/bitcoin/src/logging.cpp,"BCLog::Logger::ShrinkDebugFile()",79, 4, 0
repos/cpp/bitcoin/src/compressor.cpp,"IsToKeyID( const CScript & script , CKeyID & hash)",79, 28, 0
repos/cpp/bitcoin/src/compressor.cpp,"IsToScriptID( const CScript & script , CScriptID & hash)",74, 4, 0
repos/cpp/bitcoin/src/compressor.cpp,"IsToPubKey( const CScript & script , CPubKey & pubkey)",99, 8, 0
repos/cpp/bitcoin/src/compressor.cpp,"CompressScript( const CScript & script , std :: vector<unsigned char> & out)",76, 0, 0
repos/cpp/bitcoin/src/compressor.cpp,"GetSpecialScriptSize( unsigned int nSize)",62, 4, 0
repos/cpp/bitcoin/src/compressor.cpp,"DecompressScript( CScript & script , unsigned int nSize , const std :: vector<unsigned char> & in)",97, 0, 0
repos/cpp/bitcoin/src/compressor.cpp,"CompressAmount( uint64_t n)",41, 8, 0
repos/cpp/bitcoin/src/compressor.cpp,"DecompressAmount( uint64_t x)",71, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::AddOneShot( const std :: string & strDest)",54, 0, 0
repos/cpp/bitcoin/src/net.cpp,"GetListenPort()",79, 4, 0
repos/cpp/bitcoin/src/net.cpp,"GetLocal( CService & addr , const CNetAddr * paddrPeer)",114, 12, 0
repos/cpp/bitcoin/src/net.cpp,"convertSeed6( const std :: vector<SeedSpec6> & vSeedsIn)",88, 8, 0
repos/cpp/bitcoin/src/net.cpp,"GetLocalAddress( const CNetAddr * paddrPeer , ServiceFlags nLocalServices)",81, 0, 0
repos/cpp/bitcoin/src/net.cpp,"GetnScore( const CService & addr)",48, 4, 0
repos/cpp/bitcoin/src/net.cpp,"IsPeerAddrLocalGood( CNode * pnode)",78, 4, 0
repos/cpp/bitcoin/src/net.cpp,"AdvertiseLocal( CNode * pnode)",116, 12, 0
repos/cpp/bitcoin/src/net.cpp,"AddLocal( const CService & addr , int nScore)",61, 4, 0
repos/cpp/bitcoin/src/net.cpp,"AddLocal( const CNetAddr & addr , int nScore)",62, 4, 0
repos/cpp/bitcoin/src/net.cpp,"RemoveLocal( const CService & addr)",53, 4, 0
repos/cpp/bitcoin/src/net.cpp,"SetLimited( enum Network net , bool fLimited)",54, 4, 0
repos/cpp/bitcoin/src/net.cpp,"IsLimited( enum Network net)",33, 0, 0
repos/cpp/bitcoin/src/net.cpp,"IsLimited( const CNetAddr & addr)",41, 4, 0
repos/cpp/bitcoin/src/net.cpp,"SeenLocal( const CService & addr)",43, 8, 0
repos/cpp/bitcoin/src/net.cpp,"IsLocal( const CService & addr)",41, 4, 0
repos/cpp/bitcoin/src/net.cpp,"IsReachable( enum Network net)",35, 0, 0
repos/cpp/bitcoin/src/net.cpp,"IsReachable( const CNetAddr & addr)",42, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::FindNode( const CNetAddr & ip)",54, 6, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::FindNode( const CSubNet & subNet)",64, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::FindNode( const std :: string & addrName)",55, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::FindNode( const CService & addr)",58, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::CheckIncomingNonce( uint64_t nonce)",99, 8, 0
repos/cpp/bitcoin/src/net.cpp,"GetBindAddress( SOCKET sock)",88, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ConnectNode( CAddress addrConnect , const char * pszDest , bool fCountFailure , bool manual_connection)",175, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DumpBanlist()",86, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::CloseSocketDisconnect()",61, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ClearBanned()",46, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::IsBanned( CNetAddr ip)",66, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::IsBanned( CSubNet subnet)",51, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Ban( const CNetAddr & addr , const BanReason & banReason , int64_t bantimeoffset , bool sinceUnixEpoch)",115, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Ban( const CSubNet & subNet , const BanReason & banReason , int64_t bantimeoffset , bool sinceUnixEpoch)",116, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Unban( const CNetAddr & addr)",45, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Unban( const CSubNet & subNet)",55, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetBanned( banmap_t & banMap)",58, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetBanned( const banmap_t & banMap)",49, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SweepBanned()",127, 16, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::BannedSetIsDirty()",34, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetBannedSetDirty( bool dirty)",68, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::IsWhitelistedRange( const CNetAddr & addr)",58, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::GetAddrName() const",41, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::MaybeSetAddrName( const std :: string & addrNameIn)",62, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::GetAddrLocal() const",39, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::SetAddrLocal( const CService & addrLocalIn)",138, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::copyStats( CNodeStats & stats)",165, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::ReceiveMsgBytes( const char * pch , unsigned int nBytes , bool & complete)",103, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::SetSendVersion( int nVersionIn)",120, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::GetSendVersion() const",95, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CNetMessage::readHeader( const char * pch , unsigned int nBytes)",66, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNetMessage::readData( const char * pch , unsigned int nBytes)",85, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CNetMessage::GetMessageHash() const",51, 0, 0
repos/cpp/bitcoin/src/net.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pnode -> cs_vSend)",171, 12, 0
repos/cpp/bitcoin/src/net.cpp,"ReverseCompareNodeMinPingTime( const NodeEvictionCandidate & a , const NodeEvictionCandidate & b)",106, 0, 0
repos/cpp/bitcoin/src/net.cpp,"ReverseCompareNodeTimeConnected( const NodeEvictionCandidate & a , const NodeEvictionCandidate & b)",108, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CompareNetGroupKeyed( const NodeEvictionCandidate & a , const NodeEvictionCandidate & b)",99, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CompareNodeBlockTime( const NodeEvictionCandidate & a , const NodeEvictionCandidate & b)",123, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CompareNodeTXTime( const NodeEvictionCandidate & a , const NodeEvictionCandidate & b)",129, 4, 0
repos/cpp/bitcoin/src/net.cpp,"EraseLastKElements( std :: vector<T> & elements , Comparator comparator , size_t k)",90, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::AttemptToEvictConnection()",126, 47, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::AcceptConnection( const ListenSocket & hListenSocket)",140, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DisconnectNodes()",100, 20, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::NotifyNumConnectionsChanged()",70, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::InactivityCheck( CNode * pnode)",178, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SocketHandler()",123, 24, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ThreadSocketHandler()",39, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::WakeMessageHandler()",56, 8, 0
repos/cpp/bitcoin/src/net.cpp,"ThreadMapPort()",103, 12, 0
repos/cpp/bitcoin/src/net.cpp,"StartMapPort()",100, 8, 0
repos/cpp/bitcoin/src/net.cpp,"InterruptMapPort()",35, 4, 0
repos/cpp/bitcoin/src/net.cpp,"StopMapPort()",35, 4, 0
repos/cpp/bitcoin/src/net.cpp,"StartMapPort()",33, 4, 0
repos/cpp/bitcoin/src/net.cpp,"InterruptMapPort()",33, 4, 0
repos/cpp/bitcoin/src/net.cpp,"StopMapPort()",33, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ThreadDNSAddressSeed()",146, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DumpAddresses()",70, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DumpData()",26, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ProcessOneShot()",75, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetTryNewOutboundPeer()",40, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetTryNewOutboundPeer( bool flag)",98, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetExtraOutboundCount()",162, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ThreadOpenConnections( const std :: vector<std::string> connect)",143, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetAddedNodeInfo()",134, 16, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ThreadOpenAddedConnections()",121, 20, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::OpenNetworkConnection( const CAddress & addrConnect , bool fCountFailure , CSemaphoreGrant * grantOutbound , const char * pszDest , bool fOneShot , bool fFeeler , bool manual_connection)",192, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ThreadMessageHandler()",142, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::BindListenPort( const CService & addrBind , std :: string & strError , bool fWhitelisted)",152, 8, 0
repos/cpp/bitcoin/src/net.cpp,"Discover()",94, 20, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetNetworkActive( bool active)",60, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::CConnman( uint64_t nSeed0In , uint64_t nSeed1In)",94, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetNewNodeId()",64, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Bind( const CService & addr , unsigned int flags)",96, 12, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::InitBinds( const std :: vector<CService> & binds , const std :: vector<CService> & whiteBinds)",104, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Start( CScheduler & scheduler , const Options & connOptions)",202, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CNetCleanup::CNetCleanup()",21, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CNetCleanup::~CNetCleanup()",36, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Interrupt()",60, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::Stop()",119, 16, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DeleteNode( CNode * pnode)",68, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::~CConnman()",22, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetAddressCount() const",41, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetServices( const CService & addr , ServiceFlags nServices)",73, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::MarkAddressGood( const CAddress & addr)",53, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::AddNewAddresses( const std :: vector<CAddress> & vAddr , const CAddress & addrFrom , int64_t nTimePenalty)",115, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetAddresses()",47, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::AddNode( const std :: string & strNode)",51, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::RemoveAddedNode( const std :: string & strNode)",102, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetNodeCount( NumConnections flags)",76, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetNodeStats( std :: vector<CNodeStats> & vstats)",61, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DisconnectNode( const std :: string & strNode)",58, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::DisconnectNode( NodeId id)",41, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::RecordBytesRecv( uint64_t bytes)",47, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::RecordBytesSent( uint64_t bytes)",66, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetMaxOutboundTarget( uint64_t limit)",52, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetMaxOutboundTarget()",42, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetMaxOutboundTimeframe()",45, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetMaxOutboundTimeLeftInCycle()",80, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetMaxOutboundTimeframe( uint64_t timeframe)",59, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::OutboundTargetReached( bool historicalBlockServingLimit)",108, 8, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetOutboundTargetBytesLeft()",129, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetTotalBytesRecv()",39, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetTotalBytesSent()",39, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetLocalServices() const",48, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::SetBestHeight( int height)",58, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetBestHeight() const",56, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetReceiveFloodSize() const",81, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::CNode( NodeId idIn , ServiceFlags nLocalServicesIn , int nMyStartingHeightIn , SOCKET hSocketIn , const CAddress & addrIn , uint64_t nKeyedNetGroupIn , uint64_t nLocalHostNonceIn , const CAddress & addrBindIn , const std :: string & addrNameIn , bool fInboundIn)",257, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::~CNode()",26, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CNode::AskFor( const CInv & inv)",133, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::NodeFullyConnected( const CNode * pnode)",74, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::PushMessage( CNode * pnode , CSerializedNetMsg && msg)",129, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::ForNode( NodeId id , std :: function<bool(CNode*pnode)> func)",74, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::PoissonNextSendInbound( int64_t now , int average_interval_seconds)",117, 8, 0
repos/cpp/bitcoin/src/net.cpp,"PoissonNextSend( int64_t now , int average_interval_seconds)",147, 4, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::GetDeterministicRandomizer( uint64_t id) const",67, 0, 0
repos/cpp/bitcoin/src/net.cpp,"CConnman::CalculateKeyedNetGroup( const CAddress & ad) const",120, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"ecdsa_signature_parse_der_lax( const secp256k1_context * ctx , secp256k1_ecdsa_signature * sig , const unsigned char * input , size_t inputlen)",150, 0, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CPubKey::Verify( const uint256 & hash , const std :: vector<unsigned char> & vchSig) const",104, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CPubKey::RecoverCompact( const uint256 & hash , const std :: vector<unsigned char> & vchSig)",145, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CPubKey::IsFullyValid() const",86, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CPubKey::Decompress()",111, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CPubKey::Derive( CPubKey & pubkeyChild , ChainCode & ccChild , unsigned int nChild , const ChainCode & cc) const",113, 0, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CExtPubKey::Encode( unsigned char code [ BIP32_EXTKEY_SIZE ]) const",74, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CExtPubKey::Decode( const unsigned char code [ BIP32_EXTKEY_SIZE ])",75, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CExtPubKey::Derive( CExtPubKey & out , unsigned int _nChild) const",73, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"CPubKey::CheckLowS( const std :: vector<unsigned char> & vchSig)",104, 4, 0
repos/cpp/bitcoin/src/pubkey.cpp,"ECCVerifyHandle::ECCVerifyHandle()",87, 8, 0
repos/cpp/bitcoin/src/pubkey.cpp,"ECCVerifyHandle::~ECCVerifyHandle()",61, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::CNetAddr()",31, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::SetIP( const CNetAddr & ipIn)",43, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::SetRaw( Network network , const uint8_t * ip_in)",61, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::SetInternal( const std :: string & name)",90, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::SetSpecial( const std :: string & strName)",106, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::CNetAddr( const struct in_addr & ipv4Addr)",51, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::CNetAddr( const struct in6_addr & ipv6Addr , const uint32_t scope)",74, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetByte( int n) const",44, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsBindAny() const",42, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsIPv4() const",56, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsIPv6() const",53, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC1918() const",72, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC2544() const",84, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC3927() const",65, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC6598() const",83, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC5737() const",85, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC3849() const",101, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC3964() const",57, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC6052() const",82, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC4380() const",97, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC4862() const",71, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC4193() const",43, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC6145() const",79, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRFC4843() const",112, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsTor() const",64, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsLocal() const",80, 3, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsValid() const",92, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsRoutable() const",188, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::IsInternal() const",73, 3, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetNetwork() const",42, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::ToStringIP() const",118, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::ToString() const",39, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"operator ==( const CNetAddr & a , const CNetAddr & b)",54, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"operator <( const CNetAddr & a , const CNetAddr & b)",53, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetInAddr( struct in_addr * pipv4Addr) const",58, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetIn6Addr( struct in6_addr * pipv6Addr) const",60, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetGroup() const",103, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetHash() const",42, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"GetExtNetwork( const CNetAddr * addr)",47, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CNetAddr::GetReachabilityFrom( const CNetAddr * paddrPartner) const",140, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::CService()",31, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::CService( const CNetAddr & cip , unsigned short portIn)",93, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::CService( const struct in_addr & ipv4Addr , unsigned short portIn)",109, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::CService( const struct in6_addr & ipv6Addr , unsigned short portIn)",110, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::CService( const struct sockaddr_in & addr)",105, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::CService( const struct sockaddr_in6 & addr)",128, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::SetSockAddr( const struct sockaddr * paddr)",62, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::GetPort() const",41, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"operator ==( const CService & a , const CService & b)",85, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"operator <( const CService & a , const CService & b)",141, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::GetSockAddr( struct sockaddr * paddr , socklen_t * addrlen) const",77, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::GetKey() const",52, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::ToStringPort() const",43, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::ToStringIPPort() const",59, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CService::ToString() const",39, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::CSubNet()",41, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::CSubNet( const CNetAddr & addr , int32_t mask)",90, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::CSubNet( const CNetAddr & addr , const CNetAddr & mask)",90, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::CSubNet( const CNetAddr & addr)",43, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::Match( const CNetAddr & addr) const",56, 8, 0
repos/cpp/bitcoin/src/netaddress.cpp,"NetmaskBits( uint8_t x)",41, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::ToString() const",103, 12, 0
repos/cpp/bitcoin/src/netaddress.cpp,"CSubNet::IsValid() const",30, 0, 0
repos/cpp/bitcoin/src/netaddress.cpp,"operator ==( const CSubNet & a , const CSubNet & b)",94, 4, 0
repos/cpp/bitcoin/src/netaddress.cpp,"operator <( const CSubNet & a , const CSubNet & b)",104, 4, 0
repos/cpp/bitcoin/src/chainparamsbase.cpp,"SetupChainParamsBaseOptions()",170, 4, 0
repos/cpp/bitcoin/src/chainparamsbase.cpp,"BaseParams()",37, 0, 0
repos/cpp/bitcoin/src/chainparamsbase.cpp,"CreateBaseChainParams( const std :: string & chain)",87, 8, 0
repos/cpp/bitcoin/src/chainparamsbase.cpp,"SelectBaseParams( const std :: string & chain)",58, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"SetupCliArgs()",379, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"libevent_log_cb( int severity , const char * msg)",100, 0, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"CConnectionFailed::CConnectionFailed( const std :: string & msg)",64, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"AppInitRPC( int argc , char * argv [ ])",140, 16, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"HTTPReply::HTTPReply()",41, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"http_errorstring( int code)",64, 8, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"http_request_done( struct evhttp_request * req , void * ctx)",79, 8, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"http_error_cb( enum evhttp_request_error err , void * ctx)",68, 0, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"BaseRequestHandler::~BaseRequestHandler()",37, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"GetinfoRequestHandler::PrepareRequest( const std :: string & method , const std :: vector<std::string> & args)",102, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"GetinfoRequestHandler::ProcessReply( const UniValue & batch_in)",109, 8, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"DefaultRequestHandler::PrepareRequest( const std :: string & method , const std :: vector<std::string> & args)",102, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"DefaultRequestHandler::ProcessReply( const UniValue & reply)",58, 4, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"CallRPC( BaseRequestHandler * rh , const std :: string & strMethod , const std :: vector<std::string> & args)",218, 8, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"CommandLineRPC( int argc , char * argv [ ])",118, 28, 0
repos/cpp/bitcoin/src/bitcoin-cli.cpp,"main( int argc , char * argv [ ])",68, 8, 0
repos/cpp/bitcoin/src/bech32.cpp,"Cat( data x , const data & y)",43, 4, 0
repos/cpp/bitcoin/src/bech32.cpp,"PolyMod( const data & v)",105, 8, 0
repos/cpp/bitcoin/src/bech32.cpp,"LowerCase( unsigned char c)",57, 4, 0
repos/cpp/bitcoin/src/bech32.cpp,"ExpandHRP( const std :: string & hrp)",46, 4, 0
repos/cpp/bitcoin/src/bech32.cpp,"VerifyChecksum( const std :: string & hrp , const data & values)",98, 4, 0
repos/cpp/bitcoin/src/bech32.cpp,"CreateChecksum( const std :: string & hrp , const data & values)",83, 4, 0
repos/cpp/bitcoin/src/bech32.cpp,"bech32::Encode( const std :: string & hrp , const data & values)",65, 0, 0
repos/cpp/bitcoin/src/bech32.cpp,"bech32::Decode( const std :: string & str)",82, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::CScheduler()",97, 0, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::~CScheduler()",41, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"toPosixTime( const boost :: chrono :: system_clock :: time_point & t)",169, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::serviceQueue()",101, 16, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::stop( bool drain)",61, 8, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::schedule( CScheduler :: Function f , boost :: chrono :: system_clock :: time_point t)",93, 0, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::scheduleFromNow( CScheduler :: Function f , int64_t deltaMilliSeconds)",102, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"Repeat( CScheduler * s , CScheduler :: Function f , int64_t deltaMilliSeconds)",90, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::scheduleEvery( CScheduler :: Function f , int64_t deltaMilliSeconds)",90, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::getQueueInfo( boost :: chrono :: system_clock :: time_point & first , boost :: chrono :: system_clock :: time_point & last) const",82, 29, 0
repos/cpp/bitcoin/src/scheduler.cpp,"CScheduler::AreThreadsServicingQueue() const",57, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()",91, 4, 0
repos/cpp/bitcoin/src/scheduler.cpp,"SingleThreadedSchedulerClient::ProcessQueue()",105, 8, 0
repos/cpp/bitcoin/src/scheduler.cpp,"SingleThreadedSchedulerClient::AddToProcessQueue( std :: function<void()> func)",85, 0, 0
repos/cpp/bitcoin/src/scheduler.cpp,"SingleThreadedSchedulerClient::EmptyQueue()",56, 8, 0
repos/cpp/bitcoin/src/scheduler.cpp,"SingleThreadedSchedulerClient::CallbacksPending()",59, 0, 0
repos/cpp/bitcoin/src/clientversion.cpp,"FormatVersion( int nVersion)",127, 8, 0
repos/cpp/bitcoin/src/clientversion.cpp,"FormatFullVersion()",32, 0, 0
repos/cpp/bitcoin/src/clientversion.cpp,"FormatSubVersion( const std :: string & name , int nClientVersion , const std :: vector<std::string> & comments)",116, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CBlockIndexWorkComparator::operator ( )( const CBlockIndex * pa , const CBlockIndex * pb) const",82, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"FindForkInGlobalIndex( const CChain & chain , const CBlockLocator & locator)",86, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CheckFinalTx( const CTransaction & tx , int flags)",77, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"TestLockPointValidity( const LockPoints * lp)",90, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"CheckSequenceLocks( const CTxMemPool & pool , const CTransaction & tx , int flags , LockPoints * lp , bool useExistingLockPoints)",127, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"LimitMempoolSize( CTxMemPool & pool , size_t limit , unsigned long age)",93, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"FormatStateMessage( const CValidationState & state)",77, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",86, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",162, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",129, 17, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",173, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",174, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"AcceptToMemoryPool( CTxMemPool & pool , CValidationState & state , const CTransactionRef & tx , bool * pfMissingInputs , std :: list<CTransactionRef> * plTxnReplaced , bool bypass_limits , const CAmount nAbsurdFee , bool test_accept)",152, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"GetTransaction( const uint256 & hash , CTransactionRef & txOut , const Consensus :: Params & consensusParams , uint256 & hashBlock , bool fAllowSlow , CBlockIndex * blockIndex)",169, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"WriteBlockToDisk( const CBlock & block , CDiskBlockPos & pos , const CMessageHeader :: MessageStartChars & messageStart)",125, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ReadBlockFromDisk( CBlock & block , const CDiskBlockPos & pos , const Consensus :: Params & consensusParams)",106, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ReadBlockFromDisk( CBlock & block , const CBlockIndex * pindex , const Consensus :: Params & consensusParams)",109, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"ReadRawBlockFromDisk( std :: vector<uint8_t> & block , const CDiskBlockPos & pos , const CMessageHeader :: MessageStartChars & message_start)",137, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ReadRawBlockFromDisk( std :: vector<uint8_t> & block , const CBlockIndex * pindex , const CMessageHeader :: MessageStartChars & message_start)",138, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"GetBlockSubsidy( int nHeight , const Consensus :: Params & consensusParams)",97, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"IsInitialBlockDownload()",70, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"AlertNotify( const std :: string & strMessage)",87, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",183, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",113, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",106, 6, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::InvalidBlockFound( CBlockIndex * pindex , const CValidationState & state)",90, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"UpdateCoins( const CTransaction & tx , CCoinsViewCache & inputs , CTxUndo & txundo , int nHeight)",96, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"UpdateCoins( const CTransaction & tx , CCoinsViewCache & inputs , int nHeight)",79, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CScriptCheck::operator ( )()",170, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"GetSpendHeight( const CCoinsViewCache & inputs)",71, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"InitScriptExecutionCache()",170, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",291, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"UndoWriteToDisk( const CBlockUndo & blockundo , CDiskBlockPos & pos , const uint256 & hashBlock , const CMessageHeader :: MessageStartChars & messageStart)",151, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"UndoReadFromDisk( CBlockUndo & blockundo , const CBlockIndex * pindex)",106, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"AbortNode( const std :: string & strMessage , const std :: string & userMessage = "")",116, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"AbortNode( CValidationState & state , const std :: string & strMessage , const std :: string & userMessage = "")",113, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ApplyTxInUndo( Coin && undo , CCoinsViewCache & view , const COutPoint & out)",96, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::DisconnectBlock( const CBlock & block , const CBlockIndex * pindex , CCoinsViewCache & view)",127, 16, 0
repos/cpp/bitcoin/src/validation.cpp,"FlushBlockFile( bool fFinalize = false)",101, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"WriteUndoDataForBlock( const CBlockUndo & blockundo , CValidationState & state , CBlockIndex * pindex , const CChainParams & chainparams)",142, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ThreadScriptCheck()",38, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"ComputeBlockVersion( const CBlockIndex * pindexPrev , const Consensus :: Params & params)",129, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"WarningBitsConditionChecker::WarningBitsConditionChecker( int bitIn)",68, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"WarningBitsConditionChecker::BeginTime( const Consensus :: Params & params) const",84, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"WarningBitsConditionChecker::EndTime( const Consensus :: Params & params) const",116, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"WarningBitsConditionChecker::Period( const Consensus :: Params & params) const",107, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"WarningBitsConditionChecker::Threshold( const Consensus :: Params & params) const",116, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"WarningBitsConditionChecker::Condition( const CBlockIndex * pindex , const Consensus :: Params & params) const",94, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"IsScriptWitnessEnabled( const Consensus :: Params & params)",76, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",145, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ConnectBlock( const CBlock & block , CValidationState & state , CBlockIndex * pindex , CCoinsViewCache & view , const CChainParams & chainparams , bool fJustCheck)",339, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"FlushStateToDisk( const CChainParams & chainparams , CValidationState & state , FlushStateMode mode , int nManualPruneHeight)",162, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"FlushStateToDisk()",92, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"PruneAndFlush()",92, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"DoWarning( const std :: string & strWarning)",53, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"AppendWarning( std :: string & res , const std :: string & warn)",69, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"UpdateTip( const CBlockIndex * pindexNew , const CChainParams & chainParams)",149, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::DisconnectTip( CValidationState & state , const CChainParams & chainparams , DisconnectedBlockTransactions * disconnectpool)",137, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"PerBlockConnectTrace::PerBlockConnectTrace()",96, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"ConnectTrace::ConnectTrace( CTxMemPool & _pool)",103, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"ConnectTrace::~ConnectTrace()",106, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"ConnectTrace::BlockConnected( CBlockIndex * pindex , std :: shared_ptr<const CBlock> pblock)",85, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"ConnectTrace::GetBlocksConnected()",74, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"ConnectTrace::NotifyEntryRemoved( CTransactionRef txRemoved , MemPoolRemovalReason reason)",86, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ConnectTip( CValidationState & state , const CChainParams & chainparams , CBlockIndex * pindexNew , const std :: shared_ptr<const CBlock> & pblock , ConnectTrace & connectTrace , DisconnectedBlockTransactions & disconnectpool)",231, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::FindMostWorkChain()",125, 16, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::PruneBlockIndexCandidates()",114, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ActivateBestChainStep( CValidationState & state , const CChainParams & chainparams , CBlockIndex * pindexMostWork , const std :: shared_ptr<const CBlock> & pblock , bool & fInvalidFound , ConnectTrace & connectTrace)",221, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"LOCKS_EXCLUDED( cs_main)",74, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ActivateBestChain( CValidationState & state , const CChainParams & chainparams , std :: shared_ptr<const CBlock> pblock)",196, 16, 0
repos/cpp/bitcoin/src/validation.cpp,"ActivateBestChain( CValidationState & state , const CChainParams & chainparams , std :: shared_ptr<const CBlock> pblock)",121, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::PreciousBlock( CValidationState & state , const CChainParams & params , CBlockIndex * pindex)",106, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"PreciousBlock( CValidationState & state , const CChainParams & params , CBlockIndex * pindex)",95, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::InvalidateBlock( CValidationState & state , const CChainParams & chainparams , CBlockIndex * pindex)",168, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"InvalidateBlock( CValidationState & state , const CChainParams & chainparams , CBlockIndex * pindex)",102, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ResetBlockFailureFlags( CBlockIndex * pindex)",171, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"ResetBlockFailureFlags( CBlockIndex * pindex)",56, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::AddToBlockIndex( const CBlockHeader & block)",122, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ReceivedBlockTransactions( const CBlock & block , CBlockIndex * pindexNew , const CDiskBlockPos & pos , const Consensus :: Params & consensusParams)",175, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"FindBlockPos( CDiskBlockPos & pos , unsigned int nAddSize , unsigned int nHeight , uint64_t nTime , bool fKnown = false)",132, 20, 0
repos/cpp/bitcoin/src/validation.cpp,"FindUndoPos( CValidationState & state , int nFile , CDiskBlockPos & pos , unsigned int nAddSize)",127, 16, 0
repos/cpp/bitcoin/src/validation.cpp,"CheckBlockHeader( const CBlockHeader & block , CValidationState & state , const Consensus :: Params & consensusParams , bool fCheckPOW = true)",146, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CheckBlock( const CBlock & block , CValidationState & state , const Consensus :: Params & consensusParams , bool fCheckPOW , bool fCheckMerkleRoot)",213, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"IsWitnessEnabled( const CBlockIndex * pindexPrev , const Consensus :: Params & params)",125, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"IsNullDummyEnabled( const CBlockIndex * pindexPrev , const Consensus :: Params & params)",125, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"GetWitnessCommitmentIndex( const CBlock & block)",366, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"UpdateUncommittedBlockStructures( CBlock & block , const CBlockIndex * pindexPrev , const Consensus :: Params & consensusParams)",126, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"GenerateCoinbaseCommitment( CBlock & block , const CBlockIndex * pindexPrev , const Consensus :: Params & consensusParams)",142, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ContextualCheckBlockHeader( const CBlockHeader & block , CValidationState & state , const CChainParams & params , const CBlockIndex * pindexPrev , int64_t nAdjustedTime)",173, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ContextualCheckBlock( const CBlock & block , CValidationState & state , const Consensus :: Params & consensusParams , const CBlockIndex * pindexPrev)",160, 16, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::AcceptBlockHeader( const CBlockHeader & block , CValidationState & state , const CChainParams & chainparams , CBlockIndex ** ppindex)",144, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ProcessNewBlockHeaders( const std :: vector<CBlockHeader> & headers , CValidationState & state , const CChainParams & chainparams , const CBlockIndex ** ppindex , CBlockHeader * first_invalid)",186, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"SaveBlockToDisk( const CBlock & block , int nHeight , const CChainParams & chainparams , const CDiskBlockPos * dbp)",132, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::AcceptBlock( const std :: shared_ptr<const CBlock> & pblock , CValidationState & state , const CChainParams & chainparams , CBlockIndex ** ppindex , bool fRequested , const CDiskBlockPos * dbp , bool * fNewBlock)",216, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"ProcessNewBlock( const CChainParams & chainparams , const std :: shared_ptr<const CBlock> pblock , bool fForceProcessing , bool * fNewBlock)",138, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"TestBlockValidity( CValidationState & state , const CChainParams & chainparams , const CBlock & block , CBlockIndex * pindexPrev , bool fCheckPOW , bool fCheckMerkleRoot)",166, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CalculateCurrentUsage()",56, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"PruneOneBlockFile( const int fileNumber)",182, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"UnlinkPrunedFiles( const std :: set<int> & setFilesToPrune)",100, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"FindFilesToPruneManual( std :: set<int> & setFilesToPrune , int nManualPruneHeight)",129, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"PruneBlockFilesManual( int nManualPruneHeight)",92, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"FindFilesToPrune( std :: set<int> & setFilesToPrune , uint64_t nPruneAfterHeight)",125, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"CheckDiskSpace( uint64_t nAdditionalBytes , bool blocks_dir)",100, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"OpenDiskFile( const CDiskBlockPos & pos , const char * prefix , bool fReadOnly)",89, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"OpenBlockFile( const CDiskBlockPos & pos , bool fReadOnly)",64, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"OpenUndoFile( const CDiskBlockPos & pos , bool fReadOnly)",70, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"GetBlockPosFilename( const CDiskBlockPos & pos , const char * prefix)",75, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::InsertBlockIndex( const uint256 & hash)",70, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::LoadBlockIndex( const Consensus :: Params & consensus_params , CBlockTreeDB & blocktree)",161, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",102, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"LoadChainTip( const CChainParams & chainparams)",106, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CVerifyDB::CVerifyDB()",66, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CVerifyDB::~CVerifyDB()",46, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CVerifyDB::VerifyDB( const CChainParams & chainparams , CCoinsView * coinsview , int nCheckLevel , int nCheckDepth)",200, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::RollforwardBlock( const CBlockIndex * pindex , CCoinsViewCache & inputs , const CChainParams & params)",132, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::ReplayBlocks( const CChainParams & params , CCoinsView * view)",150, 16, 0
repos/cpp/bitcoin/src/validation.cpp,"ReplayBlocks( const CChainParams & params , CCoinsView * view)",66, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::RewindBlockIndex( const CChainParams & params)",184, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"RewindBlockIndex( const CChainParams & params)",108, 12, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::UnloadBlockIndex()",39, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"UnloadBlockIndex()",62, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"LoadBlockIndex( const CChainParams & chainparams)",66, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::LoadGenesisBlock( const CChainParams & chainparams)",88, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"LoadGenesisBlock( const CChainParams & chainparams)",55, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"LoadExternalBlockFile( const CChainParams & chainparams , FILE * fileIn , CDiskBlockPos * dbp)",178, 20, 0
repos/cpp/bitcoin/src/validation.cpp,"CChainState::CheckBlockIndex( const Consensus :: Params & consensusParams)",193, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"CBlockFileInfo::ToString() const",195, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"GetBlockFileInfo( size_t n)",43, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"VersionBitsTipState( const Consensus :: Params & params , Consensus :: DeploymentPos pos)",98, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"VersionBitsTipStatistics( const Consensus :: Params & params , Consensus :: DeploymentPos pos)",98, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"VersionBitsTipStateSinceHeight( const Consensus :: Params & params , Consensus :: DeploymentPos pos)",98, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"LoadMempool()",154, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"DumpMempool()",102, 8, 0
repos/cpp/bitcoin/src/validation.cpp,"GuessVerificationProgress( const ChainTxData & data , const CBlockIndex * pindex)",87, 0, 0
repos/cpp/bitcoin/src/validation.cpp,"CMainCleanup::CMainCleanup()",22, 4, 0
repos/cpp/bitcoin/src/validation.cpp,"CMainCleanup::~CMainCleanup()",56, 8, 0
repos/cpp/bitcoin/src/noui.cpp,"noui_ThreadSafeMessageBox( const std :: string & message , const std :: string & caption , unsigned int style)",107, 0, 0
repos/cpp/bitcoin/src/noui.cpp,"noui_ThreadSafeQuestion( const std :: string & , const std :: string & message , const std :: string & caption , unsigned int style)",159, 0, 0
repos/cpp/bitcoin/src/noui.cpp,"noui_InitMessage( const std :: string & message)",50, 0, 0
repos/cpp/bitcoin/src/noui.cpp,"noui_connect()",73, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::DestinationEncoder( const CChainParams & params)",82, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::operator ( )( const CKeyID & id) const",95, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::operator ( )( const CScriptID & id) const",95, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::operator ( )( const WitnessV0KeyHash & id) const",100, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::operator ( )( const WitnessV0ScriptHash & id) const",100, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::operator ( )( const WitnessUnknown & id) const",114, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"DestinationEncoder::operator ( )( const CNoDestination & no) const",74, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"DecodeDestination( const std :: string & str , const CChainParams & params)",137, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"DecodeSecret( const std :: string & str)",126, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"EncodeSecret( const CKey & key)",87, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"DecodeExtPubKey( const std :: string & str)",122, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"EncodeExtPubKey( const CExtPubKey & key)",91, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"DecodeExtKey( const std :: string & str)",122, 8, 0
repos/cpp/bitcoin/src/key_io.cpp,"EncodeExtKey( const CExtKey & key)",91, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"EncodeDestination( const CTxDestination & dest)",69, 4, 0
repos/cpp/bitcoin/src/key_io.cpp,"DecodeDestination( const std :: string & str)",57, 0, 0
repos/cpp/bitcoin/src/key_io.cpp,"IsValidDestinationString( const std :: string & str , const CChainParams & params)",82, 0, 0
repos/cpp/bitcoin/src/key_io.cpp,"IsValidDestinationString( const std :: string & str)",54, 0, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CBitcoinLevelDBLogger::Logv( const char * format , va_list ap)",89, 20, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"SetMaxOpenFiles( leveldb :: Options * options)",81, 4, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"GetOptions( size_t nCacheSize)",112, 4, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBWrapper::CDBWrapper( const fs :: path & path , size_t nCacheSize , bool fMemory , bool fWipe , bool obfuscate)",106, 0, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBWrapper::~CDBWrapper()",37, 4, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBWrapper::WriteBatch( CDBBatch & batch , bool fSync)",100, 8, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBWrapper::DynamicMemoryUsage() const",87, 8, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBWrapper::CreateObfuscateKey() const",81, 4, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBWrapper::IsEmpty()",52, 4, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBIterator::~CDBIterator()",46, 0, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBIterator::Valid() const",59, 0, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBIterator::SeekToFirst()",58, 0, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"CDBIterator::Next()",44, 0, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"dbwrapper_private::HandleError( const leveldb :: Status & status)",88, 4, 0
repos/cpp/bitcoin/src/dbwrapper.cpp,"dbwrapper_private::GetObfuscateKey( const CDBWrapper & w)",71, 0, 0
repos/cpp/bitcoin/src/checkpoints.cpp,"Checkpoints::GetLastCheckpoint( const CCheckpointData & data)",81, 8, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"MainSignalsInstance::MainSignalsInstance( CScheduler * pscheduler)",92, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::RegisterBackgroundSignalScheduler( CScheduler & scheduler)",78, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::UnregisterBackgroundSignalScheduler()",59, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::FlushBackgroundCallbacks()",53, 8, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::CallbacksPending()",62, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::RegisterWithMempoolSignals( CTxMemPool & pool)",100, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::UnregisterWithMempoolSignals( CTxMemPool & pool)",103, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"GetMainSignals()",31, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"RegisterValidationInterface( CValidationInterface * pwalletIn)",148, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"UnregisterValidationInterface( CValidationInterface * pwalletIn)",151, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"UnregisterAllValidationInterfaces()",81, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CallFunctionInValidationInterfaceQueue( std :: function<void()> func)",81, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"SyncWithValidationInterfaceQueue()",56, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::MempoolEntryRemoved( CTransactionRef ptx , MemPoolRemovalReason reason)",93, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::UpdatedBlockTip( const CBlockIndex * pindexNew , const CBlockIndex * pindexFork , bool fInitialDownload)",121, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::TransactionAddedToMempool( const CTransactionRef & ptx)",75, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::BlockConnected( const std :: shared_ptr<const CBlock> & pblock , const CBlockIndex * pindex , const std :: shared_ptr<const std::vector<CTransactionRef>> & pvtxConflicted)",183, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::BlockDisconnected( const std :: shared_ptr<const CBlock> & pblock)",84, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::ChainStateFlushed( const CBlockLocator & locator)",71, 4, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::Broadcast( int64_t nBestBlockTime , CConnman * connman)",74, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::BlockChecked( const CBlock & block , const CValidationState & state)",86, 0, 0
repos/cpp/bitcoin/src/validationinterface.cpp,"CMainSignals::NewPoWValidBlock( const CBlockIndex * pindex , const std :: shared_ptr<const CBlock> & block)",109, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CoinEntry::CoinEntry( const COutPoint * ptr)",103, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CoinEntry::Serialize( Stream & s) const",38, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CoinEntry::Unserialize( Stream & s)",34, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::CCoinsViewDB( size_t nCacheSize , bool fMemory , bool fWipe)",140, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::GetCoin( const COutPoint & outpoint , Coin & coin) const",74, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::HaveCoin( const COutPoint & outpoint) const",63, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::GetBestBlock() const",48, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::GetHeadBlocks() const",59, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::BatchWrite( CCoinsMap & mapCoins , const uint256 & hashBlock)",151, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::EstimateSize() const",56, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::CBlockTreeDB( size_t nCacheSize , bool fMemory , bool fWipe)",208, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::ReadBlockFileInfo( int nFile , CBlockFileInfo & info)",72, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::WriteReindexing( bool fReindexing)",55, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::ReadReindexing( bool & fReindexing)",55, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::ReadLastBlockFile( int & nFile)",51, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::Cursor() const",111, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDBCursor::GetKey( COutPoint & key) const",54, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDBCursor::GetValue( Coin & coin) const",52, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDBCursor::GetValueSize() const",54, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDBCursor::Valid() const",39, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDBCursor::Next()",111, 8, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::WriteBatchSync( const std :: vector<std::pair<int,const CBlockFileInfo*>> & fileInfo , int nLastFile , const std :: vector<const CBlockIndex*> & blockinfo)",170, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::WriteFlag( const std :: string & name , bool fValue)",69, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::ReadFlag( const std :: string & name , bool & fValue)",69, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CBlockTreeDB::LoadBlockIndexGuts( const Consensus :: Params & consensusParams , std :: function<CBlockIndex*(const uint256&)> insertBlockIndex)",142, 0, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoins::CCoins()",57, 4, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoins::Unserialize( Stream & s)",75, 8, 0
repos/cpp/bitcoin/src/txdb.cpp,"CCoinsViewDB::Upgrade()",104, 20, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::ThreadSafeMessageBox( const std :: string & message , const std :: string & caption , unsigned int style)",193, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::ThreadSafeQuestion( const std :: string & message , const std :: string & non_interactive_message , const std :: string & caption , unsigned int style)",258, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::InitMessage( const std :: string & message)",111, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::NotifyNumConnectionsChanged( int newNumConnections)",148, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::NotifyNetworkActiveChanged( bool networkActive)",139, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::NotifyAlertChanged()",92, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::LoadWallet( std :: shared_ptr<CWallet> wallet)",113, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::ShowProgress( const std :: string & title , int nProgress , bool resume_possible)",174, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::NotifyBlockTip( bool b , const CBlockIndex * i)",116, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::NotifyHeaderTip( bool b , const CBlockIndex * i)",118, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"CClientUIInterface::BannedListChanged()",90, 0, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"InitError( const std :: string & str)",78, 4, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"InitWarning( const std :: string & str)",80, 4, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"AmountHighWarn( const std :: string & optname)",58, 4, 0
repos/cpp/bitcoin/src/ui_interface.cpp,"AmountErrMsg( const char * const optname , const std :: string & strValue)",85, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlReply::TorControlReply()",35, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlReply::Clear()",23, 8, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::TorControlConnection( struct event_base * _base)",70, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::~TorControlConnection()",46, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::readcb( struct bufferevent * bev , void * ctx)",106, 20, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::eventcb( struct bufferevent * bev , short what , void * ctx)",83, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::Connect( const std :: string & target , const ConnectionCB & _connected , const ConnectionCB & _disconnected)",130, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::Disconnect()",40, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlConnection::Command( const std :: string & cmd , const ReplyHandlerCB & reply_handler)",96, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"SplitTorReplyLine( const std :: string & s)",75, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"ParseTorReplyMapping( const std :: string & s)",117, 24, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"ReadBinaryFile( const fs :: path & filename , size_t maxsize = std :: numeric_limits<size_t> :: max())",127, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"WriteBinaryFile( const fs :: path & filename , const std :: string & data)",79, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::TorController( struct event_base * _base , const std :: string & _target)",105, 8, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::~TorController()",34, 8, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::add_onion_cb( TorControlConnection & _conn , const TorControlReply & reply)",107, 12, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::auth_cb( TorControlConnection & _conn , const TorControlReply & reply)",120, 8, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"ComputeResponse( const std :: string & key , const std :: vector<uint8_t> & cookie , const std :: vector<uint8_t> & clientNonce , const std :: vector<uint8_t> & serverNonce)",187, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::authchallenge_cb( TorControlConnection & _conn , const TorControlReply & reply)",137, 16, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::protocolinfo_cb( TorControlConnection & _conn , const TorControlReply & reply)",147, 20, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::connected_cb( TorControlConnection & _conn)",102, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::disconnected_cb( TorControlConnection & _conn)",102, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::Reconnect()",92, 8, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::GetPrivateKeyFile()",47, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorController::reconnect_cb( evutil_socket_t fd , short what , void * arg)",76, 0, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"TorControlThread()",81, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"StartTorControl()",106, 4, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"InterruptTorControl()",46, 8, 0
repos/cpp/bitcoin/src/torcontrol.cpp,"StopTorControl()",33, 8, 0
repos/cpp/bitcoin/src/protocol.cpp,"CMessageHeader::CMessageHeader( const MessageStartChars & pchMessageStartIn)",75, 0, 0
repos/cpp/bitcoin/src/protocol.cpp,"CMessageHeader::CMessageHeader( const MessageStartChars & pchMessageStartIn , const char * pszCommand , unsigned int nMessageSizeIn)",128, 0, 0
repos/cpp/bitcoin/src/protocol.cpp,"CMessageHeader::GetCommand() const",84, 4, 0
repos/cpp/bitcoin/src/protocol.cpp,"CMessageHeader::IsValid( const MessageStartChars & pchMessageStartIn) const",118, 8, 0
repos/cpp/bitcoin/src/protocol.cpp,"GetDesirableServiceFlags( ServiceFlags services)",83, 4, 0
repos/cpp/bitcoin/src/protocol.cpp,"SetServiceFlagsIBDCache( bool state)",48, 4, 0
repos/cpp/bitcoin/src/protocol.cpp,"CAddress::CAddress()",34, 0, 0
repos/cpp/bitcoin/src/protocol.cpp,"CAddress::CAddress( CService ipIn , ServiceFlags nServicesIn)",77, 0, 0
repos/cpp/bitcoin/src/protocol.cpp,"CAddress::Init()",27, 4, 0
repos/cpp/bitcoin/src/protocol.cpp,"CInv::CInv()",20, 4, 0
repos/cpp/bitcoin/src/protocol.cpp,"CInv::CInv( int typeIn , const uint256 & hashIn)",78, 0, 0
repos/cpp/bitcoin/src/protocol.cpp,"operator <( const CInv & a , const CInv & b)",71, 4, 0
repos/cpp/bitcoin/src/protocol.cpp,"CInv::GetCommand() const",94, 8, 0
repos/cpp/bitcoin/src/protocol.cpp,"CInv::ToString() const",66, 8, 0
repos/cpp/bitcoin/src/protocol.cpp,"getAllNetMessageTypes()",56, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts( const CPubKey & pubkey)",79, 4, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::GetPubKey( const CKeyID & address , CPubKey & vchPubKeyOut) const",83, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::AddKeyPubKey( const CKey & key , const CPubKey & pubkey)",74, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::HaveKey( const CKeyID & address) const",58, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::GetKeys() const",49, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::GetKey( const CKeyID & address , CKey & keyOut) const",71, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::AddCScript( const CScript & redeemScript)",117, 8, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::HaveCScript( const CScriptID & hash) const",62, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::GetCScripts() const",56, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::GetCScript( const CScriptID & hash , CScript & redeemScriptOut) const",87, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"ExtractPubKey( const CScript & dest , CPubKey & pubKeyOut)",94, 4, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::AddWatchOnly( const CScript & dest)",55, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::RemoveWatchOnly( const CScript & dest)",78, 4, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::HaveWatchOnly( const CScript & dest) const",62, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"CBasicKeyStore::HaveWatchOnly() const",43, 0, 0
repos/cpp/bitcoin/src/keystore.cpp,"GetKeyForDestination( const CKeyStore & store , const CTxDestination & dest)",94, 8, 0
repos/cpp/bitcoin/src/keystore.cpp,"HaveKey( const CKeyStore & store , const CKey & key)",94, 4, 0
repos/cpp/bitcoin/src/hash.cpp,"ROTL32( uint32_t x , int8_t r)",45, 0, 0
repos/cpp/bitcoin/src/hash.cpp,"MurmurHash3( unsigned int nHashSeed , const std :: vector<unsigned char> & vDataToHash)",120, 4, 0
repos/cpp/bitcoin/src/hash.cpp,"BIP32Hash( const ChainCode & chainCode , unsigned int nChild , unsigned char header , const unsigned char data [ 32 ] , unsigned char output [ 64 ])",142, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPoolEntry::CTxMemPoolEntry( const CTransactionRef & _tx , const CAmount & _nFee , int64_t _nTime , unsigned int _entryHeight , bool _spendsCoinbase , int64_t _sigOpsCost , LockPoints lp)",147, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPoolEntry::UpdateFeeDelta( int64_t newFeeDelta)",58, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPoolEntry::UpdateLockPoints( const LockPoints & lp)",61, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPoolEntry::GetTxSize() const",60, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateForDescendants( txiter updateIt , cacheMap & cachedDescendants , const std :: set<uint256> & setExclude)",134, 12, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateTransactionsFromBlock( const std :: vector<uint256> & vHashesToUpdate)",96, 12, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::CalculateMemPoolAncestors( const CTxMemPoolEntry & entry , setEntries & setAncestors , uint64_t limitAncestorCount , uint64_t limitAncestorSize , uint64_t limitDescendantCount , uint64_t limitDescendantSize , std :: string & errString , bool fSearchForParents) const",284, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateAncestorsOf( bool add , txiter it , setEntries & setAncestors)",95, 8, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateEntryForAncestors( txiter it , const setEntries & setAncestors)",99, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateChildrenForRemoval( txiter it)",67, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateForRemoveFromMempool( const setEntries & entriesToRemove , bool updateDescendants)",110, 8, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPoolEntry::UpdateDescendantState( int64_t modifySize , CAmount modifyFee , int64_t modifyCount)",104, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPoolEntry::UpdateAncestorState( int64_t modifySize , CAmount modifyFee , int64_t modifyCount , int64_t modifySigOps)",124, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::CTxMemPool( CBlockPolicyEstimator * estimator)",71, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::isSpent( const COutPoint & outpoint) const",58, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetTransactionsUpdated() const",56, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::AddTransactionsUpdated( unsigned int n)",56, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::addUnchecked( const CTxMemPoolEntry & entry , setEntries & setAncestors , bool validFeeEstimate)",109, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::removeUnchecked( txiter it , MemPoolRemovalReason reason)",118, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::CalculateDescendants( txiter entryit , setEntries & setDescendants) const",88, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::removeRecursive( const CTransaction & origTx , MemPoolRemovalReason reason)",90, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::removeForReorg( const CCoinsViewCache * pcoins , unsigned int nMemPoolHeight , int flags)",129, 16, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::removeConflicts( const CTransaction & tx)",77, 16, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::removeForBlock( const std :: vector<CTransactionRef> & vtx , unsigned int nBlockHeight)",100, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::_clear()",42, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::clear()",25, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CheckInputsAndUpdateCoins( const CTransaction & tx , CCoinsViewCache & mempoolDuplicate , const int64_t spendheight)",124, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::check( const CCoinsViewCache * pcoins) const",147, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::CompareDepthAndScore( const uint256 & hasha , const uint256 & hashb)",82, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"DepthAndScoreComparator::operator ( )( const CTxMemPool :: indexed_transaction_set :: const_iterator & a , const CTxMemPool :: indexed_transaction_set :: const_iterator & b)",144, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetSortedDepthAndScore() const",108, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::queryHashes( std :: vector<uint256> & vtxid)",58, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"GetInfo( CTxMemPool :: indexed_transaction_set :: const_iterator it)",138, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::infoAll() const",55, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::get( const uint256 & hash) const",66, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::info( const uint256 & hash) const",66, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::PrioritiseTransaction( const uint256 & hash , const CAmount & nFeeDelta)",112, 12, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::ApplyDelta( const uint256 hash , CAmount & nFeeDelta) const",75, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::ClearPrioritisation( const uint256 hash)",57, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetConflictTx( const COutPoint & prevout) const",78, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetIter( const uint256 & txid) const",83, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetIterSet( const std :: set<uint256> & hashes) const",85, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::HasNoInputsOf( const CTransaction & tx) const",61, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CCoinsViewMemPool::CCoinsViewMemPool( CCoinsView * baseIn , const CTxMemPool & mempoolIn)",137, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CCoinsViewMemPool::GetCoin( const COutPoint & outpoint , Coin & coin) const",99, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::DynamicMemoryUsage() const",257, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::RemoveStaged( setEntries & stage , bool updateDescendants , MemPoolRemovalReason reason)",104, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::Expire( int64_t time)",101, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::addUnchecked( const CTxMemPoolEntry & entry , bool validFeeEstimate)",99, 4, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateChild( txiter entry , txiter child , bool add)",67, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::UpdateParent( txiter entry , txiter parent , bool add)",69, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetMemPoolParents( txiter entry) const",81, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetMemPoolChildren( txiter entry) const",82, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetMinFee( size_t sizelimit) const",108, 8, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::trackPackageRemoved( const CFeeRate & rate)",61, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::TrimToSize( size_t sizelimit , std :: vector<COutPoint> * pvNoSpendsRemaining)",131, 8, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::CalculateDescendantMaximum( txiter entry) const",79, 12, 0
repos/cpp/bitcoin/src/txmempool.cpp,"CTxMemPool::GetTransactionAncestry( const uint256 & txid , size_t & ancestors , size_t & descendants) const",109, 0, 0
repos/cpp/bitcoin/src/txmempool.cpp,"SaltedTxidHasher::SaltedTxidHasher()",143, 0, 0
repos/cpp/bitcoin/src/uint256.cpp,"base_blob<BITS>::base_blob( const std :: vector<unsigned char> & vch)",66, 0, 0
repos/cpp/bitcoin/src/uint256.cpp,"base_blob<BITS>::GetHex() const",124, 4, 0
repos/cpp/bitcoin/src/uint256.cpp,"base_blob<BITS>::SetHex( const char * psz)",61, 12, 0
repos/cpp/bitcoin/src/uint256.cpp,"base_blob<BITS>::SetHex( const std :: string & str)",53, 0, 0
repos/cpp/bitcoin/src/uint256.cpp,"base_blob<BITS>::ToString() const",46, 0, 0
repos/cpp/bitcoin/src/core_write.cpp,"ValueFromAmount( const CAmount & amount)",75, 12, 0
repos/cpp/bitcoin/src/core_write.cpp,"FormatScript( const CScript & script)",107, 16, 0
repos/cpp/bitcoin/src/core_write.cpp,"SighashToStr( unsigned char sighash_type)",57, 4, 0
repos/cpp/bitcoin/src/core_write.cpp,"ScriptToAsmStr( const CScript & script , const bool fAttemptSighashDecode)",133, 20, 0
repos/cpp/bitcoin/src/core_write.cpp,"EncodeHexTx( const CTransaction & tx , const int serializeFlags)",74, 0, 0
repos/cpp/bitcoin/src/core_write.cpp,"ScriptToUniv( const CScript & script , UniValue & out , bool include_address)",78, 0, 0
repos/cpp/bitcoin/src/core_write.cpp,"ScriptPubKeyToUniv( const CScript & scriptPubKey , UniValue & out , bool fIncludeHex)",77, 8, 0
repos/cpp/bitcoin/src/core_write.cpp,"TxToUniv( const CTransaction & tx , const uint256 & hashBlock , UniValue & entry , bool include_hex , int serialize_flags)",180, 8, 0
repos/cpp/bitcoin/src/shutdown.cpp,"StartShutdown()",29, 4, 0
repos/cpp/bitcoin/src/shutdown.cpp,"AbortShutdown()",30, 4, 0
repos/cpp/bitcoin/src/shutdown.cpp,"ShutdownRequested()",29, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrInfo::GetTriedBucket( const uint256 & nKey) const",134, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrInfo::GetNewBucket( const uint256 & nKey , const CNetAddr & src) const",146, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrInfo::GetBucketPosition( const uint256 & nKey , bool fNew , int nBucket) const",120, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrInfo::IsTerrible( int64_t nNow) const",147, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrInfo::GetChance( int64_t nNow) const",135, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Find( const CNetAddr & addr , int * pnId)",73, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Create( const CAddress & addr , const CNetAddr & addrSource , int * pnId)",89, 0, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::SwapRandom( unsigned int nRndPos1 , unsigned int nRndPos2)",72, 0, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Delete( int nId)",53, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::ClearNew( int nUBucket , int nUBucketPos)",64, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::MakeTried( CAddrInfo & info , int nId)",112, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Good_( const CService & addr , bool test_before_evict , int64_t nTime)",164, 8, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Add_( const CAddress & addr , const CNetAddr & source , int64_t nTimePenalty)",105, 8, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Attempt_( const CService & addr , bool fCountFailure , int64_t nTime)",88, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Select_( bool newOnly)",126, 16, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Check_()",111, 8, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::GetAddr_( std :: vector<CAddress> & vAddr)",74, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::Connected_( const CService & addr , int64_t nTime)",88, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::SetServices_( const CService & addr , ServiceFlags nServices)",88, 4, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::ResolveCollisions_()",155, 16, 0
repos/cpp/bitcoin/src/addrman.cpp,"CAddrMan::SelectTriedCollision_()",81, 4, 0
repos/cpp/bitcoin/src/bitcoind.cpp,"WaitForShutdown()",33, 4, 0
repos/cpp/bitcoin/src/bitcoind.cpp,"AppInit( int argc , char * argv [ ])",138, 16, 0
repos/cpp/bitcoin/src/bitcoind.cpp,"main( int argc , char * argv [ ])",64, 4, 0
repos/cpp/bitcoin/src/random.cpp,"RandFailure()",56, 4, 0
repos/cpp/bitcoin/src/random.cpp,"GetPerformanceCounter()",91, 4, 0
repos/cpp/bitcoin/src/random.cpp,"RDRandInit()",81, 4, 0
repos/cpp/bitcoin/src/random.cpp,"RDRandInit()",28, 0, 0
repos/cpp/bitcoin/src/random.cpp,"GetHWRand( unsigned char * ent32)",85, 26, 0
repos/cpp/bitcoin/src/random.cpp,"RandAddSeed()",56, 4, 0
repos/cpp/bitcoin/src/random.cpp,"RandAddSeedPerfmon()",116, 12, 0
repos/cpp/bitcoin/src/random.cpp,"GetDevURandom( unsigned char * ent32)",71, 8, 0
repos/cpp/bitcoin/src/random.cpp,"GetOSRand( unsigned char * ent32)",102, 4, 0
repos/cpp/bitcoin/src/random.cpp,"GetRandBytes( unsigned char * buf , int num)",47, 0, 0
repos/cpp/bitcoin/src/random.cpp,"RandAddSeedSleep()",63, 4, 0
repos/cpp/bitcoin/src/random.cpp,"AddDataToRng( void * data , size_t len)",79, 8, 0
repos/cpp/bitcoin/src/random.cpp,"GetStrongRandBytes( unsigned char * out , int num)",79, 8, 0
repos/cpp/bitcoin/src/random.cpp,"GetRand( uint64_t nMax)",76, 4, 0
repos/cpp/bitcoin/src/random.cpp,"GetRandInt( int nMax)",26, 4, 0
repos/cpp/bitcoin/src/random.cpp,"GetRandHash()",55, 4, 0
repos/cpp/bitcoin/src/random.cpp,"FastRandomContext::RandomSeed()",37, 0, 0
repos/cpp/bitcoin/src/random.cpp,"FastRandomContext::rand256()",58, 4, 0
repos/cpp/bitcoin/src/random.cpp,"FastRandomContext::randbytes( size_t len)",68, 0, 0
repos/cpp/bitcoin/src/random.cpp,"FastRandomContext::FastRandomContext( const uint256 & seed)",114, 0, 0
repos/cpp/bitcoin/src/random.cpp,"Random_SanityCheck()",116, 4, 0
repos/cpp/bitcoin/src/random.cpp,"FastRandomContext::FastRandomContext( bool fDeterministic)",124, 0, 0
repos/cpp/bitcoin/src/random.cpp,"FastRandomContext::operator =( FastRandomContext && from)",86, 4, 0
repos/cpp/bitcoin/src/random.cpp,"RandomInit()",18, 0, 0
repos/cpp/bitcoin/src/base58.cpp,"DecodeBase58( const char * psz , std :: vector<unsigned char> & vch)",142, 8, 0
repos/cpp/bitcoin/src/base58.cpp,"EncodeBase58( const unsigned char * pbegin , const unsigned char * pend)",140, 8, 0
repos/cpp/bitcoin/src/base58.cpp,"EncodeBase58( const std :: vector<unsigned char> & vch)",64, 0, 0
repos/cpp/bitcoin/src/base58.cpp,"DecodeBase58( const std :: string & str , std :: vector<unsigned char> & vchRet)",78, 0, 0
repos/cpp/bitcoin/src/base58.cpp,"EncodeBase58Check( const std :: vector<unsigned char> & vchIn)",77, 4, 0
repos/cpp/bitcoin/src/base58.cpp,"DecodeBase58Check( const char * psz , std :: vector<unsigned char> & vchRet)",81, 4, 0
repos/cpp/bitcoin/src/base58.cpp,"DecodeBase58Check( const std :: string & str , std :: vector<unsigned char> & vchRet)",83, 0, 0
repos/cpp/bitcoin/src/sync.cpp,"PrintLockContention( const char * pszName , const char * pszFile , int nLine)",78, 0, 0
repos/cpp/bitcoin/src/sync.cpp,"CLockLocation::CLockLocation( const char * pszName , const char * pszFile , int nLine , bool fTryIn)",84, 4, 0
repos/cpp/bitcoin/src/sync.cpp,"CLockLocation::ToString() const",98, 8, 0
repos/cpp/bitcoin/src/sync.cpp,"LockData::LockData()",36, 4, 0
repos/cpp/bitcoin/src/sync.cpp,"LockData::~LockData()",39, 4, 0
repos/cpp/bitcoin/src/sync.cpp,"potential_deadlock_detected( const std :: pair<void*,void*> & mismatch , const LockStack & s1 , const LockStack & s2)",133, 8, 0
repos/cpp/bitcoin/src/sync.cpp,"push_lock( void * c , const CLockLocation & locklocation)",95, 12, 0
repos/cpp/bitcoin/src/sync.cpp,"pop_lock()",28, 4, 0
repos/cpp/bitcoin/src/sync.cpp,"EnterCritical( const char * pszName , const char * pszFile , int nLine , void * cs , bool fTry)",93, 0, 0
repos/cpp/bitcoin/src/sync.cpp,"LeaveCritical()",21, 0, 0
repos/cpp/bitcoin/src/sync.cpp,"LocksHeld()",65, 4, 0
repos/cpp/bitcoin/src/sync.cpp,"AssertLockHeldInternal( const char * pszName , const char * pszFile , int nLine , void * cs)",131, 4, 0
repos/cpp/bitcoin/src/sync.cpp,"AssertLockNotHeldInternal( const char * pszName , const char * pszFile , int nLine , void * cs)",135, 12, 0
repos/cpp/bitcoin/src/sync.cpp,"DeleteLock( void * cs)",93, 8, 0
repos/cpp/bitcoin/src/blockencodings.cpp,"CBlockHeaderAndShortTxIDs::CBlockHeaderAndShortTxIDs( const CBlock & block , bool fUseWTXID)",103, 4, 0
repos/cpp/bitcoin/src/blockencodings.cpp,"CBlockHeaderAndShortTxIDs::FillShortTxIDSelector() const",85, 4, 0
repos/cpp/bitcoin/src/blockencodings.cpp,"CBlockHeaderAndShortTxIDs::GetShortID( const uint256 & txhash) const",95, 4, 0
repos/cpp/bitcoin/src/blockencodings.cpp,"PartiallyDownloadedBlock::InitData( const CBlockHeaderAndShortTxIDs & cmpctblock , const std :: vector<std::pair<uint256,CTransactionRef>> & extra_txn)",207, 4, 0
repos/cpp/bitcoin/src/blockencodings.cpp,"PartiallyDownloadedBlock::IsTxAvailable( size_t index) const",67, 0, 0
repos/cpp/bitcoin/src/blockencodings.cpp,"PartiallyDownloadedBlock::FillBlock( CBlock & block , const std :: vector<CTransactionRef> & vtx_missing)",259, 4, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GolombRiceEncode( BitStreamWriter<OStream> & bitwriter , uint8_t P , uint64_t x)",89, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GolombRiceDecode( BitStreamReader<IStream> & bitreader , uint8_t P)",81, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"MapIntoRange( uint64_t x , uint64_t n)",90, 4, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::HashToRange( const Element & element) const",62, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::BuildHashedSet( const ElementSet & elements) const",82, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::GCSFilter( uint64_t siphash_k0 , uint64_t siphash_k1 , uint8_t P , uint32_t M)",89, 4, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::GCSFilter( uint64_t siphash_k0 , uint64_t siphash_k1 , uint8_t P , uint32_t M , std :: vector<unsigned char> encoded_filter)",100, 4, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::GCSFilter( uint64_t siphash_k0 , uint64_t siphash_k1 , uint8_t P , uint32_t M , const ElementSet & elements)",86, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::MatchInternal( const uint64_t * element_hashes , size_t size) const",81, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::Match( const Element & element) const",52, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"GCSFilter::MatchAny( const ElementSet & elements) const",68, 4, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"BasicFilterElements( const CBlock & block , const CBlockUndo & block_undo)",79, 49, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"BlockFilter::BlockFilter( BlockFilterType filter_type , const CBlock & block , const CBlockUndo & block_undo)",105, 0, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"BlockFilter::GetHash() const",73, 4, 0
repos/cpp/bitcoin/src/blockfilter.cpp,"BlockFilter::ComputeHeader( const uint256 & prev_header) const",69, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsView::GetCoin( const COutPoint & outpoint , Coin & coin) const",88, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsView::GetBestBlock() const",63, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsView::GetHeadBlocks() const",90, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsView::BatchWrite( CCoinsMap & mapCoins , const uint256 & hashBlock)",93, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsView::Cursor() const",65, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsView::HaveCoin( const COutPoint & outpoint) const",59, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::CCoinsViewBacked( CCoinsView * viewIn)",74, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::GetCoin( const COutPoint & outpoint , Coin & coin) const",118, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::HaveCoin( const COutPoint & outpoint) const",102, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::GetBestBlock() const",80, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::GetHeadBlocks() const",95, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::SetBackend( CCoinsView & viewIn)",74, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::BatchWrite( CCoinsMap & mapCoins , const uint256 & hashBlock)",131, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::Cursor() const",78, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewBacked::EstimateSize() const",79, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"SaltedOutpointHasher::SaltedOutpointHasher()",151, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::CCoinsViewCache( CCoinsView * baseIn)",104, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::DynamicMemoryUsage() const",66, 4, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::FetchCoin( const COutPoint & outpoint) const",154, 4, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::GetCoin( const COutPoint & outpoint , Coin & coin) const",77, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::AddCoin( const COutPoint & outpoint , Coin && coin , bool possible_overwrite)",124, 4, 0
repos/cpp/bitcoin/src/coins.cpp,"AddCoins( CCoinsViewCache & cache , const CTransaction & tx , int nHeight , bool check)",101, 8, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::SpendCoin( const COutPoint & outpoint , Coin * moveout)",76, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::AccessCoin( const COutPoint & outpoint) const",75, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::HaveCoin( const COutPoint & outpoint) const",67, 4, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::HaveCoinInCache( const COutPoint & outpoint) const",73, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::GetBestBlock() const",48, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::SetBestBlock( const uint256 & hashBlockIn)",65, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::BatchWrite( CCoinsMap & mapCoins , const uint256 & hashBlockIn)",124, 16, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::Flush()",56, 4, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::Uncache( const COutPoint & hash)",66, 8, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::GetCacheSize() const",53, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::GetValueIn( const CTransaction & tx) const",66, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"CCoinsViewCache::HaveInputs( const CTransaction & tx) const",63, 0, 0
repos/cpp/bitcoin/src/coins.cpp,"AccessByTxid( const CCoinsViewCache & view , const uint256 & txid)",75, 0, 0
repos/cpp/bitcoin/src/rest.cpp,"CCoin::CCoin()",28, 4, 0
repos/cpp/bitcoin/src/rest.cpp,"CCoin::CCoin( Coin && in)",79, 4, 0
repos/cpp/bitcoin/src/rest.cpp,"CCoin::SerializationOp( Stream & s , Operation ser_action)",65, 4, 0
repos/cpp/bitcoin/src/rest.cpp,"RESTERR( HTTPRequest * req , enum HTTPStatusCode status , std :: string message)",87, 0, 0
repos/cpp/bitcoin/src/rest.cpp,"ParseDataFormat( std :: string & param , const std :: string & strReq)",80, 0, 0
repos/cpp/bitcoin/src/rest.cpp,"AvailableDataFormatsString()",58, 4, 0
repos/cpp/bitcoin/src/rest.cpp,"CheckWarmup( HTTPRequest * req)",109, 9, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_headers( HTTPRequest * req , const std :: string & strURIPart)",117, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_block( HTTPRequest * req , const std :: string & strURIPart , bool showTxDetails)",122, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_block_extended( HTTPRequest * req , const std :: string & strURIPart)",81, 0, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_block_notxdetails( HTTPRequest * req , const std :: string & strURIPart)",84, 0, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_chaininfo( HTTPRequest * req , const std :: string & strURIPart)",90, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_mempool_info( HTTPRequest * req , const std :: string & strURIPart)",90, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_mempool_contents( HTTPRequest * req , const std :: string & strURIPart)",90, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_tx( HTTPRequest * req , const std :: string & strURIPart)",122, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"rest_getutxos( HTTPRequest * req , const std :: string & strURIPart)",155, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"StartREST()",85, 8, 0
repos/cpp/bitcoin/src/rest.cpp,"InterruptREST()",21, 0, 0
repos/cpp/bitcoin/src/rest.cpp,"StopREST()",62, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"SetupBitcoinTxArgs()",164, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"AppInitRawTx( int argc , char * argv [ ])",108, 8, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"RegisterSetJson( const std :: string & key , const std :: string & rawJson)",80, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"RegisterSet( const std :: string & strInput)",72, 8, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"RegisterLoad( const std :: string & strInput)",74, 8, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"ExtractAndValidateValue( const std :: string & strValue)",68, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxVersion( CMutableTransaction & tx , const std :: string & cmdVal)",111, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxLocktime( CMutableTransaction & tx , const std :: string & cmdVal)",94, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxRBFOptIn( CMutableTransaction & tx , const std :: string & strInIdx)",102, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxAddInput( CMutableTransaction & tx , const std :: string & strInput)",96, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxAddOutAddr( CMutableTransaction & tx , const std :: string & strInput)",85, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxAddOutPubKey( CMutableTransaction & tx , const std :: string & strInput)",97, 12, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxAddOutMultiSig( CMutableTransaction & tx , const std :: string & strInput)",136, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxAddOutData( CMutableTransaction & tx , const std :: string & strInput)",85, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxAddOutScript( CMutableTransaction & tx , const std :: string & strInput)",116, 24, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxDelInput( CMutableTransaction & tx , const std :: string & strInIdx)",102, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxDelOutput( CMutableTransaction & tx , const std :: string & strOutIdx)",107, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"findSighashFlags( int & flags , const std :: string & flagStr)",69, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"AmountFromValue( const UniValue & value)",70, 8, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTxSign( CMutableTransaction & tx , const std :: string & flagStr)",130, 12, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"Secp256k1Init::Secp256k1Init()",22, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"Secp256k1Init::~Secp256k1Init()",23, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"MutateTx( CMutableTransaction & tx , const std :: string & command , const std :: string & commandVal)",74, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"OutputTxJSON( const CTransaction & tx)",49, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"OutputTxHash( const CTransaction & tx)",113, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"OutputTxHex( const CTransaction & tx)",48, 0, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"OutputTx( const CTransaction & tx)",47, 4, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"readStdin()",58, 8, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"CommandLineRawTx( int argc , char * argv [ ])",79, 12, 0
repos/cpp/bitcoin/src/bitcoin-tx.cpp,"main( int argc , char * argv [ ])",63, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"IteratorComparator::operator ( )( const I & a , const I & b) const",54, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"CNodeState::CNodeState( CAddress addrIn , std :: string addrNameIn)",94, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",75, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",110, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PushNodeVersion( CNode * pnode , CConnman * connman , int64_t nTime)",190, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",129, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",191, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",123, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",119, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",180, 20, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",111, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",107, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",108, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",211, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"UpdateLastBlockAnnounceTime( NodeId node , int64_t time_in_seconds)",71, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"IsOutboundDisconnectionCandidate( const CNode * node)",94, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::InitializeNode( CNode * pnode)",162, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::FinalizeNode( NodeId nodeid , bool & fUpdateConnectionTime)",85, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"GetNodeStateStats( NodeId nodeid , CNodeStateStats & stats)",101, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( g_cs_orphans)",113, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( g_cs_orphans)",108, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( g_cs_orphans)",82, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EraseOrphansFor( NodeId peer)",116, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"LimitOrphanTxSize( unsigned int nMaxOrphans)",103, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",184, 8, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",135, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::PeerLogicValidation( CConnman * connmanIn , CScheduler & scheduler , bool enable_bip61)",150, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::BlockConnected( const std :: shared_ptr<const CBlock> & pblock , const CBlockIndex * pindex , const std :: vector<CTransactionRef> & vtxConflicted)",166, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::NewPoWValidBlock( const CBlockIndex * pindex , const std :: shared_ptr<const CBlock> & pblock)",134, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::UpdatedBlockTip( const CBlockIndex * pindexNew , const CBlockIndex * pindexFork , bool fInitialDownload)",128, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::BlockChecked( const CBlock & block , const CValidationState & state)",142, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",113, 19, 0
repos/cpp/bitcoin/src/net_processing.cpp,"RelayTransaction( const CTransaction & tx , CConnman * connman)",72, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"RelayAddress( const CAddress & addr , bool fReachable , CConnman * connman)",161, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"ProcessGetBlockData( CNode * pfrom , const CChainParams & chainparams , const CInv & inv , CConnman * connman)",306, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"LOCKS_EXCLUDED( cs_main)",160, 0, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",93, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"SendBlockTransactions( const CBlock & block , const BlockTransactionsRequest & req , CNode * pfrom , CConnman * connman)",136, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"ProcessHeadersMessage( CNode * pfrom , CConnman * connman , const std :: vector<CBlockHeader> & headers , const CChainParams & chainparams , bool punish_duplicate_invalid)",231, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"ProcessMessage( CNode * pfrom , const std :: string & strCommand , CDataStream & vRecv , int64_t nTimeReceived , const CChainParams & chainparams , CConnman * connman , const std :: atomic<bool> & interruptMsgProc , bool enable_bip61)",417, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",195, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::ProcessMessages( CNode * pfrom , std :: atomic<bool> & interruptMsgProc)",208, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::ConsiderEviction( CNode * pto , int64_t time_in_seconds)",339, 16, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::EvictExtraOutboundPeers( int64_t time_in_seconds)",195, 20, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::CheckForStaleTipAndEvictPeers( const Consensus :: Params & consensusParams)",164, 12, 0
repos/cpp/bitcoin/src/net_processing.cpp,"CompareInvMempoolOrder::CompareInvMempoolOrder( CTxMemPool * _mempool)",58, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"CompareInvMempoolOrder::operator ( )( std :: set<uint256> :: iterator a , std :: set<uint256> :: iterator b)",82, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"PeerLogicValidation::SendMessages( CNode * pto)",224, 16, 0
repos/cpp/bitcoin/src/net_processing.cpp,"CNetProcessingCleanup::CNetProcessingCleanup()",31, 4, 0
repos/cpp/bitcoin/src/net_processing.cpp,"CNetProcessingCleanup::~CNetProcessingCleanup()",45, 8, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::base_uint( const std :: string & str)",110, 4, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::operator < <=( unsigned int shift)",66, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::operator > >=( unsigned int shift)",66, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::operator *=( uint32_t b32)",59, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::operator *=( const base_uint & b)",74, 12, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::operator /=( const base_uint & b)",79, 12, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::CompareTo( const base_uint<BITS> & b) const",63, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::EqualTo( uint64_t b) const",48, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::getdouble() const",42, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::GetHex() const",44, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::SetHex( const char * psz)",46, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::SetHex( const std :: string & str)",53, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::ToString() const",46, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"base_uint<BITS>::bits() const",55, 12, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"arith_uint256::SetCompact( uint32_t nCompact , bool * pfNegative , bool * pfOverflow)",96, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"arith_uint256::GetCompact( bool fNegative) const",89, 4, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"ArithToUint256( const arith_uint256 & a)",47, 0, 0
repos/cpp/bitcoin/src/arith_uint256.cpp,"UintToArith256( const uint256 & a)",47, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"GetWalletNameFromJSONRPCRequest( const JSONRPCRequest & request , std :: string & wallet_name)",94, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"GetWalletForJSONRPCRequest( const JSONRPCRequest & request)",116, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"HelpRequiringPassphrase( CWallet * const pwallet)",79, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"EnsureWalletIsAvailable( CWallet * const pwallet , bool avoidException)",111, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"EnsureWalletIsUnlocked( CWallet * const pwallet)",128, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"WalletTxToJSON( interfaces :: Chain & chain , interfaces :: Chain :: Lock & locked_chain , const CWalletTx & wtx , UniValue & entry)",131, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"LabelFromValue( const UniValue & value)",81, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getnewaddress( const JSONRPCRequest & request)",361, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getrawchangeaddress( const JSONRPCRequest & request)",198, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"setlabel( const JSONRPCRequest & request)",145, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"SendMoney( interfaces :: Chain :: Lock & locked_chain , CWallet * const pwallet , const CTxDestination & address , CAmount nValue , bool fSubtractFeeFromAmount , const CCoinControl & coin_control , mapValue_t mapValue)",228, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"sendtoaddress( const JSONRPCRequest & request)",210, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listaddressgroupings( const JSONRPCRequest & request)",95, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"signmessage( const JSONRPCRequest & request)",142, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getreceivedbyaddress( const JSONRPCRequest & request)",156, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getreceivedbylabel( const JSONRPCRequest & request)",156, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getbalance( const JSONRPCRequest & request)",176, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getunconfirmedbalance( const JSONRPCRequest & request)",81, 4, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"sendmany( const JSONRPCRequest & request)",252, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"addmultisigaddress( const JSONRPCRequest & request)",199, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"tallyitem::tallyitem()",49, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pwallet -> cs_wallet)",177, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listreceivedbyaddress( const JSONRPCRequest & request)",172, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listreceivedbylabel( const JSONRPCRequest & request)",172, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"MaybePushAddress( UniValue & entry , const CTxDestination & dest)",75, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"ListTransactions( interfaces :: Chain :: Lock & locked_chain , CWallet * const pwallet , const CWalletTx & wtx , int nMinDepth , bool fLong , UniValue & ret , const isminefilter & filter_ismine , const std :: string * filter_label)",224, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listtransactions( const JSONRPCRequest & request)",176, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listsinceblock( const JSONRPCRequest & request)",404, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"gettransaction( const JSONRPCRequest & request)",186, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"abandontransaction( const JSONRPCRequest & request)",122, 16, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"backupwallet( const JSONRPCRequest & request)",132, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"keypoolrefill( const JSONRPCRequest & request)",117, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"walletpassphrase( const JSONRPCRequest & request)",174, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"walletpassphrasechange( const JSONRPCRequest & request)",141, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"walletlock( const JSONRPCRequest & request)",129, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"encryptwallet( const JSONRPCRequest & request)",194, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"lockunspent( const JSONRPCRequest & request)",179, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listlockunspent( const JSONRPCRequest & request)",164, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"settxfee( const JSONRPCRequest & request)",144, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getwalletinfo( const JSONRPCRequest & request)",228, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listwalletdir( const JSONRPCRequest & request)",76, 16, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listwallets( const JSONRPCRequest & request)",79, 16, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"loadwallet( const JSONRPCRequest & request)",130, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"createwallet( const JSONRPCRequest & request)",197, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"unloadwallet( const JSONRPCRequest & request)",167, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"resendwallettransactions( const JSONRPCRequest & request)",122, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listunspent( const JSONRPCRequest & request)",178, 28, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"FundTransaction( CWallet * const pwallet , CMutableTransaction & tx , CAmount & fee_out , int & change_position , UniValue options)",137, 16, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"fundrawtransaction( const JSONRPCRequest & request)",250, 28, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"signrawtransactionwithwallet( const JSONRPCRequest & request)",154, 36, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"bumpfee( const JSONRPCRequest & request)",223, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"generate( const JSONRPCRequest & request)",137, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"rescanblockchain( const JSONRPCRequest & request)",152, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::ProcessSubScript( const CScript & subscript , UniValue & obj , bool include_addresses = false) const",116, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::DescribeWalletAddressVisitor( CWallet * _pwallet)",84, 4, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::operator ( )( const CNoDestination & dest) const",95, 4, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::operator ( )( const CKeyID & keyID) const",66, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::operator ( )( const CScriptID & scriptID) const",89, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::operator ( )( const WitnessV0KeyHash & id) const",65, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::operator ( )( const WitnessV0ScriptHash & id) const",74, 8, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddressVisitor::operator ( )( const WitnessUnknown & id) const",93, 4, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"DescribeWalletAddress( CWallet * pwallet , const CTxDestination & dest)",84, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"AddressBookDataToJSON( const CAddressBookData & data , const bool verbose)",88, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getaddressinfo( const JSONRPCRequest & request)",342, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"getaddressesbylabel( const JSONRPCRequest & request)",139, 12, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"listlabels( const JSONRPCRequest & request)",212, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"sethdseed( const JSONRPCRequest & request)",204, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"AddKeypathToMap( const CWallet * pwallet , const CKeyID & keyID , std :: map<CPubKey,KeyOriginInfo> & hd_keypaths)",113, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"FillPSBT( const CWallet * pwallet , PartiallySignedTransaction & psbtx , int sighash_type , bool sign , bool bip32derivs)",120, 0, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"walletprocesspsbt( const JSONRPCRequest & request)",182, 20, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"walletcreatefundedpsbt( const JSONRPCRequest & request)",250, 28, 0
repos/cpp/bitcoin/src/wallet/rpcwallet.cpp,"RegisterWalletRPCCommands( CRPCTable & t)",70, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"WalletInit::HasWalletSupport() const",58, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"WalletInit::AddWalletOptions() const",434, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"WalletInit::ParameterInteraction() const",161, 12, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"VerifyWallets( interfaces :: Chain & chain , const std :: vector<std::string> & wallet_files)",123, 12, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"WalletInit::Construct( InitInterfaces & interfaces) const",118, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"LoadWallets( interfaces :: Chain & chain , const std :: vector<std::string> & wallet_files)",109, 8, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"StartWallets( CScheduler & scheduler)",67, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"FlushWallets()",67, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"StopWallets()",67, 4, 0
repos/cpp/bitcoin/src/wallet/init.cpp,"UnloadWallets()",67, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"AddWallet( const std :: shared_ptr<CWallet> & wallet)",117, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"RemoveWallet( const std :: shared_ptr<CWallet> & wallet)",111, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"HasWallets()",31, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"GetWallets()",51, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"GetWallet( const std :: string & name)",63, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"ReleaseWallet( CWallet * wallet)",51, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"COutput::ToString() const",124, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"GetAffectedKeys( const CScript & spk , const SigningProvider & provider)",89, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetWalletTx( const uint256 & hash) const",76, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GenerateNewKey( WalletBatch & batch , bool internal)",125, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::DeriveNewChildKey( WalletBatch & batch , CKeyMetadata & metadata , CKey & secret , bool internal)",105, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddKeyPubKeyWithDB( WalletBatch & batch , const CKey & secret , const CPubKey & pubkey)",96, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddKeyPubKey( const CKey & secret , const CPubKey & pubkey)",70, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddCryptedKey( const CPubKey & vchPubKey , const std :: vector<unsigned char> & vchCryptedSecret)",96, 60, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadKeyMetadata( const CKeyID & keyID , const CKeyMetadata & meta)",77, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadScriptMetadata( const CScriptID & script_id , const CKeyMetadata & meta)",87, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadCryptedKey( const CPubKey & vchPubKey , const std :: vector<unsigned char> & vchCryptedSecret)",107, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::UpdateTimeFirstKey( int64_t nCreateTime)",80, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddCScript( const CScript & redeemScript)",85, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadCScript( const CScript & redeemScript)",236, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddWatchOnly( const CScript & dest)",67, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddWatchOnly( const CScript & dest , int64_t nCreateTime)",69, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::RemoveWatchOnly( const CScript & dest)",54, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadWatchOnly( const CScript & dest)",49, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::Unlock( const SecureString & strWalletPassphrase)",168, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ChangeWalletPassphrase( const SecureString & strOldWalletPassphrase , const SecureString & strNewWalletPassphrase)",211, 16, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ChainStateFlushed( const CBlockLocator & loc)",58, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetMinVersion( enum WalletFeature nVersion , WalletBatch * batch_in , bool fExplicit)",97, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetMaxVersion( int nVersion)",58, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetConflicts( const uint256 & txid) const",85, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::HasWalletSpend( const uint256 & txid) const",68, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::Flush( bool shutdown)",35, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SyncMetaData( std :: pair<TxSpends::iterator,TxSpends::iterator> range)",94, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsSpent( interfaces :: Chain :: Lock & locked_chain , const uint256 & hash , unsigned int n) const",104, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddToSpends( const COutPoint & outpoint , const uint256 & wtxid)",75, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddToSpends( const uint256 & wtxid)",64, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::EncryptWallet( const SecureString & strWalletPassphrase)",178, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ReorderTransactions()",78, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IncOrderPosNext( WalletBatch * batch)",65, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::MarkDirty()",68, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::MarkReplaced( const uint256 & originalHash , const uint256 & newHash)",98, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddToWallet( const CWalletTx & wtxIn , bool fFlushOnClose)",132, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadToWallet( const CWalletTx & wtxIn)",86, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddToWalletIfInvolvingMe( const CTransactionRef & ptx , const CBlockIndex * pIndex , int posInBlock , bool fUpdate)",281, 24, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::TransactionCanBeAbandoned( const uint256 & hashTx) const",108, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::MarkInputsDirty( const CTransactionRef & tx)",57, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AbandonTransaction( interfaces :: Chain :: Lock & locked_chain , const uint256 & hashTx)",111, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::MarkConflicted( const uint256 & hashBlock , const uint256 & hashTx)",112, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SyncTransaction( const CTransactionRef & ptx , const CBlockIndex * pindex , int posInBlock , bool update_tx)",119, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::TransactionAddedToMempool( const CTransactionRef & ptx)",70, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::TransactionRemovedFromMempool( const CTransactionRef & ptx)",74, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::BlockConnected( const std :: shared_ptr<const CBlock> & pblock , const CBlockIndex * pindex , const std :: vector<CTransactionRef> & vtxConflicted)",154, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::BlockDisconnected( const std :: shared_ptr<const CBlock> & pblock)",79, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::BlockUntilSyncedToCurrentChain()",122, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsMine( const CTxIn & txin) const",93, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetDebit( const CTxIn & txin , const isminefilter & filter) const",93, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsMine( const CTxOut & txout) const",54, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetCredit( const CTxOut & txout , const isminefilter & filter) const",82, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsChange( const CTxOut & txout) const",50, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsChange( const CScript & script) const",86, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetChange( const CTxOut & txout) const",82, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsMine( const CTransaction & tx) const",51, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsFromMe( const CTransaction & tx) const",53, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetDebit( const CTransaction & tx , const isminefilter & filter) const",86, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsAllFromMe( const CTransaction & tx , const isminefilter & filter) const",84, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetCredit( const CTransaction & tx , const isminefilter & filter) const",86, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetChange( const CTransaction & tx) const",86, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GenerateNewSeed()",64, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::DeriveNewSeed( const CKey & key)",87, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetHDSeed( const CPubKey & seed)",126, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetHDChain( const CHDChain & chain , bool memonly)",84, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsHDEnabled() const",38, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetWalletFlag( uint64_t flags)",91, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsWalletFlagSet( uint64_t flag)",45, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetWalletFlags( uint64_t overwriteFlags , bool memonly)",91, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetTxTime() const",37, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::DummySignInput( CTxIn & tx_in , const CTxOut & txout , bool use_max_sig) const",132, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::DummySignTx( CMutableTransaction & txNew , const std :: vector<CTxOut> & txouts , bool use_max_sig) const",113, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CalculateMaximumSignedTxSize( const CTransaction & tx , const CWallet * wallet , bool use_max_sig)",102, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CalculateMaximumSignedTxSize( const CTransaction & tx , const CWallet * wallet , const std :: vector<CTxOut> & txouts , bool use_max_sig)",137, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CalculateMaximumSignedInputSize( const CTxOut & txout , const CWallet * wallet , bool use_max_sig)",98, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetAmounts( std :: list<COutputEntry> & listReceived , std :: list<COutputEntry> & listSent , CAmount & nFee , const isminefilter & filter) const",111, 27, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::RescanFromTime( int64_t startTime , const WalletRescanReserver & reserver , bool update)",135, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ScanForWalletTransactions( const CBlockIndex * const pindexStart , const CBlockIndex * const pindexStop , const WalletRescanReserver & reserver , const CBlockIndex * & failed_block , const CBlockIndex * & stop_block , bool fUpdate)",248, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ReacceptWalletTransactions()",90, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::RelayWalletTransaction( interfaces :: Chain :: Lock & locked_chain , CConnman * connman)",97, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetConflicts() const",50, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetDebit( const isminefilter & filter) const",75, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetCredit( interfaces :: Chain :: Lock & locked_chain , const isminefilter & filter) const",102, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetImmatureCredit( interfaces :: Chain :: Lock & locked_chain , bool fUseCache) const",98, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetAvailableCredit( interfaces :: Chain :: Lock & locked_chain , bool fUseCache , const isminefilter & filter) const",127, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetImmatureWatchOnlyCredit( interfaces :: Chain :: Lock & locked_chain , const bool fUseCache) const",113, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::GetChange() const",45, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::InMempool() const",34, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::IsTrusted( interfaces :: Chain :: Lock & locked_chain) const",102, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::IsEquivalentTo( const CWalletTx & _tx) const",63, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ResendWalletTransactionsBefore( interfaces :: Chain :: Lock & locked_chain , int64_t nTime , CConnman * connman)",134, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ResendWalletTransactions( int64_t nBestBlockTime , CConnman * connman)",112, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetBalance( const isminefilter & filter , const int min_depth) const",109, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetUnconfirmedBalance() const",122, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetImmatureBalance() const",63, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetUnconfirmedWatchOnlyBalance() const",122, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetImmatureWatchOnlyBalance() const",72, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetLegacyBalance( const isminefilter & filter , int minDepth) const",102, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetAvailableBalance( const CCoinControl * coinControl) const",76, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AvailableCoins( interfaces :: Chain :: Lock & locked_chain , std :: vector<COutput> & vCoins , bool fOnlySafe , const CCoinControl * coinControl , const CAmount & nMinimumAmount , const CAmount & nMaximumAmount , const CAmount & nMinimumSumAmount , const uint64_t nMaximumCount , const int nMinDepth , const int nMaxDepth) const",321, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ListCoins( interfaces :: Chain :: Lock & locked_chain) const",117, 16, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::FindNonChangeParentOutput( const CTransaction & tx , int output) const",91, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SelectCoinsMinConf( const CAmount & nTargetValue , const CoinEligibilityFilter & eligibility_filter , std :: vector<OutputGroup> groups , std :: set<CInputCoin> & setCoinsRet , CAmount & nValueRet , const CoinSelectionParams & coin_selection_params , bool & bnb_used) const",207, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SelectCoins( const std :: vector<COutput> & vAvailableCoins , const CAmount & nTargetValue , std :: set<CInputCoin> & setCoinsRet , CAmount & nValueRet , const CCoinControl & coin_control , CoinSelectionParams & coin_selection_params , bool & bnb_used) const",271, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SignTransaction( CMutableTransaction & tx)",130, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::FundTransaction( CMutableTransaction & tx , CAmount & nFeeRet , int & nChangePosInOut , std :: string & strFailReason , bool lockUnspents , const std :: set<int> & setSubtractFeeFromOutputs , CCoinControl coinControl)",216, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::TransactionChangeType( OutputType change_type , const std :: vector<CRecipient> & vecSend)",106, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::CreateTransaction( interfaces :: Chain :: Lock & locked_chain , const std :: vector<CRecipient> & vecSend , CTransactionRef & tx , CReserveKey & reservekey , CAmount & nFeeRet , int & nChangePosInOut , std :: string & strFailReason , const CCoinControl & coin_control , bool sign)",224, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::CommitTransaction( CTransactionRef tx , mapValue_t mapValue , std :: vector<std::pair<std::string,std::string>> orderForm , CReserveKey & reservekey , CConnman * connman , CValidationState & state)",202, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadWallet( bool & fFirstRunRet)",190, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ZapSelectTx( std :: vector<uint256> & vHashIn , std :: vector<uint256> & vHashOut)",93, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ZapWalletTx( std :: vector<CWalletTx> & vWtx)",79, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::SetAddressBook( const CTxDestination & address , const std :: string & strName , const std :: string & strPurpose)",119, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::DelAddressBook( const CTxDestination & address)",104, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetLabelName( const CScript & scriptPubKey) const",86, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::NewKeyPool()",66, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::KeypoolCountExternalKeys()",69, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadKeyPool( int64_t nIndex , const CKeyPool & keypool)",71, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::TopUpKeyPool( unsigned int kpSize)",258, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ReserveKeyFromKeyPool( int64_t & nIndex , CKeyPool & keypool , bool fRequestedInternal)",148, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::KeepKey( int64_t nIndex)",50, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ReturnKey( int64_t nIndex , bool fInternal , const CPubKey & pubkey)",79, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetKeyFromPool( CPubKey & result , bool internal)",65, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"GetOldestKeyTimeInPool( const std :: set<int64_t> & setKeyPool , WalletBatch & batch)",97, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetOldestKeyPoolTime()",99, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetAddressBalances( interfaces :: Chain :: Lock & locked_chain)",105, 16, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetAddressGroupings()",120, 16, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetLabelAddresses( const std :: string & label) const",89, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CReserveKey::GetReservedKey( CPubKey & pubkey , bool internal)",74, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CReserveKey::KeepKey()",34, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CReserveKey::ReturnKey()",58, 8, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::MarkReserveKeysAsUsed( int64_t keypool_id)",149, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetScriptForMining( std :: shared_ptr<CReserveScript> & script)",78, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LockCoin( const COutPoint & output)",49, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::UnlockCoin( const COutPoint & output)",50, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::UnlockAllCoins()",49, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::IsLockedCoin( uint256 hash , unsigned int n) const",63, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ListLockedCoins( std :: vector<COutPoint> & vOutpts) const",69, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetKeyBirthTimes( interfaces :: Chain :: Lock & locked_chain , std :: map<CTxDestination,int64_t> & mapKeyBirth) const",144, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::ComputeTimeSmart( const CWalletTx & wtx) const",134, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::AddDestData( const CTxDestination & dest , const std :: string & key , const std :: string & value)",104, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::EraseDestData( const CTxDestination & dest , const std :: string & key)",80, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LoadDestData( const CTxDestination & dest , const std :: string & key , const std :: string & value)",105, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetDestData( const CTxDestination & dest , const std :: string & key , std :: string * value) const",104, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetDestValues( const std :: string & prefix) const",81, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::MarkPreSplitKeys()",105, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::Verify( interfaces :: Chain & chain , const WalletLocation & location , bool salvage_wallet , std :: string & error_string , std :: string & warning_string)",156, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::CreateWalletFromFile( interfaces :: Chain & chain , const WalletLocation & location , uint64_t wallet_creation_flags)",192, 12, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::postInitProcess()",73, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::BackupWallet( const std :: string & strDest)",55, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CKeyPool::CKeyPool()",25, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CKeyPool::CKeyPool( const CPubKey & vchPubKeyIn , bool internalIn)",64, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletKey::CWalletKey( int64_t nExpires)",47, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CMerkleTx::SetMerkleBranch( const CBlockIndex * pindex , int posInBlock)",75, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CMerkleTx::GetDepthInMainChain( interfaces :: Chain :: Lock & locked_chain) const",87, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CMerkleTx::GetBlocksToMaturity( interfaces :: Chain :: Lock & locked_chain) const",80, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CMerkleTx::IsImmatureCoinBase( interfaces :: Chain :: Lock & locked_chain) const",80, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWalletTx::AcceptToMemoryPool( interfaces :: Chain :: Lock & locked_chain , const CAmount & nAbsurdFee , CValidationState & state)",126, 0, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LearnRelatedScripts( const CPubKey & key , OutputType type)",97, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::LearnAllRelatedScripts( const CPubKey & key)",80, 4, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GroupOutputs( const std :: vector<COutput> & outputs , bool single_coin) const",121, 16, 0
repos/cpp/bitcoin/src/wallet/wallet.cpp,"CWallet::GetKeyOrigin( const CKeyID & keyID , KeyOriginInfo & info) const",77, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"CheckUniqueFileid( const BerkeleyEnvironment & env , const std :: string & filename , Db & db , WalletDatabaseFileId & fileid)",129, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"WalletDatabaseFileId::operator ==( const WalletDatabaseFileId & rhs) const",77, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"SplitWalletPath( const fs :: path & wallet_path , fs :: path & env_directory , std :: string & database_filename)",114, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"IsWalletLoaded( const fs :: path & wallet_path)",68, 4, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"GetWalletEnv( const fs :: path & wallet_path , std :: string & database_filename)",155, 4, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::Close()",121, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::Reset()",50, 4, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::BerkeleyEnvironment( const fs :: path & dir_path)",96, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::~BerkeleyEnvironment()",44, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::Open( bool retry)",133, 12, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::MakeMock()",123, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::Verify( const std :: string & strFile , recoverFunc_type recoverFunc , std :: string & out_backup_filename)",154, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::Recover( const fs :: path & file_path , void * callbackDataIn , bool(*recoverKVcallback)(void*callbackData,CDataStream ssKey,CDataStream ssValue) , std :: string & newFilename)",190, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::VerifyEnvironment( const fs :: path & file_path , std :: string & errorStr)",114, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::VerifyDatabaseFile( const fs :: path & file_path , std :: string & warningStr , std :: string & errorStr , BerkeleyEnvironment :: recoverFunc_type recoverFunc)",165, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::Salvage( const std :: string & strFile , bool fAggressive , std :: vector<BerkeleyEnvironment::KeyValPair> & vResult)",135, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::CheckpointLSN( const std :: string & strFile)",68, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::BerkeleyBatch( BerkeleyDatabase & database , const char * pszMode , bool fFlushOnCloseIn)",149, 20, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::Flush()",121, 4, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyDatabase::IncrementUpdateCounter()",48, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::Close()",41, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::CloseDb( const std :: string & strFile)",62, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::ReloadDbEnv()",62, 4, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::Rewrite( BerkeleyDatabase & database , const char * pszSkip)",110, 32, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyEnvironment::Flush( bool fShutdown)",185, 8, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyBatch::PeriodicFlush( BerkeleyDatabase & database)",93, 16, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyDatabase::Rewrite( const char * pszSkip)",52, 0, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyDatabase::Backup( const std :: string & strDest)",135, 20, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyDatabase::Flush( bool shutdown)",91, 12, 0
repos/cpp/bitcoin/src/wallet/db.cpp,"BerkeleyDatabase::ReloadDbEnv()",37, 0, 0
repos/cpp/bitcoin/src/wallet/feebumper.cpp,"EXCLUSIVE_LOCKS_REQUIRED( wallet -> cs_wallet)",206, 0, 0
repos/cpp/bitcoin/src/wallet/feebumper.cpp,"feebumper::TransactionCanBeBumped( const CWallet * wallet , const uint256 & txid)",91, 4, 0
repos/cpp/bitcoin/src/wallet/feebumper.cpp,"feebumper::CreateTransaction( const CWallet * wallet , const uint256 & txid , const CCoinControl & coin_control , CAmount total_fee , std :: vector<std::string> & errors , CAmount & old_fee , CAmount & new_fee , CMutableTransaction & mtx)",196, 64, 0
repos/cpp/bitcoin/src/wallet/feebumper.cpp,"feebumper::SignTransaction( CWallet * wallet , CMutableTransaction & mtx)",66, 0, 0
repos/cpp/bitcoin/src/wallet/feebumper.cpp,"feebumper::CommitTransaction( CWallet * wallet , const uint256 & txid , CMutableTransaction && mtx , std :: vector<std::string> & errors , uint256 & bumped_txid)",146, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCrypter::BytesToKeySHA512AES( const std :: vector<unsigned char> & chSalt , const SecureString & strKeyData , int count , unsigned char * key , unsigned char * iv) const",163, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCrypter::SetKeyFromPassphrase( const SecureString & strKeyData , const std :: vector<unsigned char> & chSalt , const unsigned int nRounds , const unsigned int nDerivationMethod)",176, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCrypter::SetKey( const CKeyingMaterial & chNewKey , const std :: vector<unsigned char> & chNewIV)",98, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCrypter::Encrypt( const CKeyingMaterial & vchPlaintext , std :: vector<unsigned char> & vchCiphertext) const",109, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCrypter::Decrypt( const std :: vector<unsigned char> & vchCiphertext , CKeyingMaterial & vchPlaintext) const",109, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"EncryptSecret( const CKeyingMaterial & vMasterKey , const CKeyingMaterial & vchPlaintext , const uint256 & nIV , std :: vector<unsigned char> & vchCiphertext)",161, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"DecryptSecret( const CKeyingMaterial & vMasterKey , const std :: vector<unsigned char> & vchCiphertext , const uint256 & nIV , CKeyingMaterial & vchPlaintext)",161, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"DecryptKey( const CKeyingMaterial & vMasterKey , const std :: vector<unsigned char> & vchCryptedSecret , const CPubKey & vchPubKey , CKey & key)",147, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::SetCrypted()",35, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::IsLocked() const",39, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::Lock()",31, 4, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::Unlock( const CKeyingMaterial & vMasterKeyIn)",129, 12, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::AddKeyPubKey( const CKey & key , const CPubKey & pubkey)",85, 4, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::AddCryptedKey( const CPubKey & vchPubKey , const std :: vector<unsigned char> & vchCryptedSecret)",114, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::HaveKey( const CKeyID & address) const",59, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::GetKey( const CKeyID & address , CKey & keyOut) const",82, 8, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::GetPubKey( const CKeyID & address , CPubKey & vchPubKeyOut) const",84, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::GetKeys() const",50, 0, 0
repos/cpp/bitcoin/src/wallet/crypter.cpp,"CCryptoKeyStore::EncryptKeys( CKeyingMaterial & vMasterKeyIn)",92, 8, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"DecodeDumpTime( const std :: string & str)",85, 4, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"EncodeDumpString( const std :: string & str)",62, 0, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"DecodeDumpString( const std :: string & str)",67, 12, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"GetWalletAddressesForKey( CWallet * const pwallet , const CKeyID & keyid , std :: string & strAddr , std :: string & strLabel)",128, 0, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"RescanWallet( CWallet & wallet , const WalletRescanReserver & reserver , int64_t time_begin = TIMESTAMP_MIN , bool update = true)",136, 0, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"importprivkey( const JSONRPCRequest & request)",192, 12, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"abortrescan( const JSONRPCRequest & request)",112, 16, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pwallet -> cs_wallet)",167, 0, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pwallet -> cs_wallet)",152, 0, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"importaddress( const JSONRPCRequest & request)",196, 12, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"importprunedfunds( const JSONRPCRequest & request)",334, 16, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"removeprunedfunds( const JSONRPCRequest & request)",183, 16, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"importpubkey( const JSONRPCRequest & request)",195, 12, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"importwallet( const JSONRPCRequest & request)",147, 8, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"dumpprivkey( const JSONRPCRequest & request)",134, 20, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"dumpwallet( const JSONRPCRequest & request)",175, 12, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pwallet -> cs_wallet)",147, 0, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"GetImportTimestamp( const UniValue & data , int64_t now)",152, 8, 0
repos/cpp/bitcoin/src/wallet/rpcdump.cpp,"importmulti( const JSONRPCRequest & mainRequest)",243, 36, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"operator ( )( const OutputGroup & a , const OutputGroup & b) const",70, 4, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"SelectCoinsBnB( std :: vector<OutputGroup> & utxo_pool , const CAmount & target_value , const CAmount & cost_of_change , std :: set<CInputCoin> & out_set , CAmount & value_ret , CAmount not_input_fees)",192, 0, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"ApproximateBestSubset( const std :: vector<OutputGroup> & groups , const CAmount & nTotalLower , const CAmount & nTargetValue , std :: vector<char> & vfBest , CAmount & nBest , int iterations = 1000)",131, 0, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"KnapsackSolver( const CAmount & nTargetValue , std :: vector<OutputGroup> & groups , std :: set<CInputCoin> & setCoinsRet , CAmount & nValueRet)",138, 0, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"OutputGroup::Insert( const CInputCoin & output , int depth , bool from_me , size_t ancestors , size_t descendants)",116, 0, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"OutputGroup::Discard( const CInputCoin & output)",83, 0, 0
repos/cpp/bitcoin/src/wallet/coinselection.cpp,"OutputGroup::EligibleForSpending( const CoinEligibilityFilter & eligibility_filter) const",98, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteName( const std :: string & strAddress , const std :: string & strName)",87, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::EraseName( const std :: string & strAddress)",96, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WritePurpose( const std :: string & strAddress , const std :: string & strPurpose)",93, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ErasePurpose( const std :: string & strAddress)",72, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteTx( const CWalletTx & wtx)",75, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::EraseTx( uint256 hash)",61, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteKey( const CPubKey & vchPubKey , const CPrivKey & vchPrivKey , const CKeyMetadata & keyMeta)",138, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteCryptedKey( const CPubKey & vchPubKey , const std :: vector<unsigned char> & vchCryptedSecret , const CKeyMetadata & keyMeta)",93, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteMasterKey( unsigned int nID , const CMasterKey & kMasterKey)",81, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteCScript( const uint160 & hash , const CScript & redeemScript)",87, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteWatchOnly( const CScript & dest , const CKeyMetadata & keyMeta)",83, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::EraseWatchOnly( const CScript & dest)",68, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteBestBlock( const CBlockLocator & locator)",147, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ReadBestBlock( CBlockLocator & locator)",96, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteOrderPosNext( int64_t nOrderPosNext)",64, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ReadPool( int64_t nPool , CKeyPool & keypool)",78, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WritePool( int64_t nPool , const CKeyPool & keypool)",73, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ErasePool( int64_t nPool)",64, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteMinVersion( int nVersion)",57, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"CWalletScanState::CWalletScanState()",72, 8, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pwallet -> cs_wallet)",124, 13, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::IsKeyType( const std :: string & strType)",56, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::LoadWallet( CWallet * pwallet)",121, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::FindWalletTx( std :: vector<uint256> & vTxHash , std :: vector<CWalletTx> & vWtx)",96, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ZapSelectTx( std :: vector<uint256> & vTxHashIn , std :: vector<uint256> & vTxHashOut)",124, 16, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ZapWalletTx( std :: vector<CWalletTx> & vWtx)",64, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"MaybeCompactWalletDB()",92, 8, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::Recover( const fs :: path & wallet_path , void * callbackDataIn , bool(*recoverKVcallback)(void*callbackData,CDataStream ssKey,CDataStream ssValue) , std :: string & out_backup_filename)",198, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::Recover( const fs :: path & wallet_path , std :: string & out_backup_filename)",89, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::RecoverKeysOnlyFilter( void * callbackData , CDataStream ssKey , CDataStream ssValue)",100, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::VerifyEnvironment( const fs :: path & wallet_path , std :: string & errorStr)",88, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::VerifyDatabaseFile( const fs :: path & wallet_path , std :: string & warningStr , std :: string & errorStr)",114, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteDestData( const std :: string & address , const std :: string & key , const std :: string & value)",110, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::EraseDestData( const std :: string & address , const std :: string & key)",91, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteHDChain( const CHDChain & chain)",54, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteWalletFlags( const uint64_t flags)",57, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::TxnBegin()",31, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::TxnCommit()",32, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::TxnAbort()",31, 4, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::ReadVersion( int & nVersion)",45, 0, 0
repos/cpp/bitcoin/src/wallet/walletdb.cpp,"WalletBatch::WriteVersion( int nVersion)",45, 0, 0
repos/cpp/bitcoin/src/wallet/fees.cpp,"GetRequiredFee( const CWallet & wallet , unsigned int nTxBytes)",69, 0, 0
repos/cpp/bitcoin/src/wallet/fees.cpp,"GetMinimumFee( const CWallet & wallet , unsigned int nTxBytes , const CCoinControl & coin_control , const CTxMemPool & pool , const CBlockPolicyEstimator & estimator , FeeCalculation * feeCalc)",191, 0, 0
repos/cpp/bitcoin/src/wallet/fees.cpp,"GetRequiredFeeRate( const CWallet & wallet)",56, 4, 0
repos/cpp/bitcoin/src/wallet/fees.cpp,"GetMinimumFeeRate( const CWallet & wallet , const CCoinControl & coin_control , const CTxMemPool & pool , const CBlockPolicyEstimator & estimator , FeeCalculation * feeCalc)",173, 0, 0
repos/cpp/bitcoin/src/wallet/fees.cpp,"GetDiscardRate( const CWallet & wallet , const CBlockPolicyEstimator & estimator)",128, 4, 0
repos/cpp/bitcoin/src/wallet/coincontrol.cpp,"CCoinControl::SetNull()",98, 4, 0
repos/cpp/bitcoin/src/wallet/walletutil.cpp,"GetWalletDir()",84, 8, 0
repos/cpp/bitcoin/src/wallet/walletutil.cpp,"IsBerkeleyBtree( const fs :: path & path)",113, 4, 0
repos/cpp/bitcoin/src/wallet/walletutil.cpp,"ListWalletDir()",120, 8, 0
repos/cpp/bitcoin/src/wallet/walletutil.cpp,"WalletLocation::WalletLocation( const std :: string & name)",56, 0, 0
repos/cpp/bitcoin/src/wallet/walletutil.cpp,"WalletLocation::Exists() const",68, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_test_fixture.cpp,"WalletTestingSetup::WalletTestingSetup( const std :: string & chainName)",96, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_test_fixture.cpp,"WalletTestingSetup::~WalletTestingSetup()",46, 4, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_default)",79, 4, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_custom)",78, 4, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_does_not_exist)",65, 0, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_is_not_directory)",67, 0, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_is_not_relative)",66, 0, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_no_trailing)",79, 4, 0
repos/cpp/bitcoin/src/wallet/test/init_tests.cpp,"BOOST_AUTO_TEST_CASE( walletinit_verify_walletdir_no_trailing2)",79, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"TestCrypter::TestPassphraseSingle( const std :: vector<unsigned char> & vchSalt , const SecureString & passphrase , uint32_t rounds , const std :: vector<unsigned char> & correctKey = std :: vector<unsigned char>() , const std :: vector<unsigned char> & correctIV = std :: vector<unsigned char>())",132, 12, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"TestCrypter::TestPassphrase( const std :: vector<unsigned char> & vchSalt , const SecureString & passphrase , uint32_t rounds , const std :: vector<unsigned char> & correctKey = std :: vector<unsigned char>() , const std :: vector<unsigned char> & correctIV = std :: vector<unsigned char>())",119, 0, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"TestCrypter::TestDecrypt( const CCrypter & crypt , const std :: vector<unsigned char> & vchCiphertext , \
 const std :: vector<unsigned char> & vchPlaintext = std :: vector<unsigned char>())",103, 24, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"TestCrypter::TestEncryptSingle( const CCrypter & crypt , const CKeyingMaterial & vchPlaintext , const std :: vector<unsigned char> & vchCiphertextCorrect = std :: vector<unsigned char>())",110, 23, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"TestCrypter::TestEncrypt( const CCrypter & crypt , const std :: vector<unsigned char> & vchPlaintextIn , \
 const std :: vector<unsigned char> & vchCiphertextCorrect = std :: vector<unsigned char>())",115, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( passphrase)",112, 32, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( encrypt)",115, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( decrypt)",114, 4, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"add_coin( const CAmount & nValue , int nInput , std :: vector<CInputCoin> & set)",86, 0, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"add_coin( const CAmount & nValue , int nInput , CoinSet & set)",70, 0, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"add_coin( const CAmount & nValue , int nAge = 6 * 24 , bool fIsFromMe = false , int nInput = 0)",108, 4, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"empty_wallet( void)",31, 0, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"equal_sets( CoinSet a , CoinSet b)",99, 4, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"make_hard_case( int utxos , std :: vector<CInputCoin> & utxo_pool)",95, 8, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"GroupCoins( const std :: vector<CInputCoin> & coins)",82, 0, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"GroupCoins( const std :: vector<COutput> & coins)",292, 4, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"BOOST_AUTO_TEST_CASE( bnb_search_test)",169, 4, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"BOOST_AUTO_TEST_CASE( knapsack_solver_test)",173, 8, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"BOOST_AUTO_TEST_CASE( ApproximateBestSubset)",155, 4, 0
repos/cpp/bitcoin/src/wallet/test/coinselector_tests.cpp,"BOOST_AUTO_TEST_CASE( SelectCoins_test)",159, 20, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"AddKey( CWallet & wallet , const CKey & key)",53, 0, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_FIXTURE_TEST_CASE( rescan , TestChain100Setup)",144, 8, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_FIXTURE_TEST_CASE( importwallet_rescan , TestChain100Setup)",126, 8, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_FIXTURE_TEST_CASE( coin_mark_dirty_immature_credit , TestChain100Setup)",78, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"AddTx( CWallet & wallet , uint32_t lockTime , int64_t mockTime , int64_t blockTime)",94, 0, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_AUTO_TEST_CASE( ComputeTimeSmart)",78, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_AUTO_TEST_CASE( LoadReceiveRequests)",52, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"ListCoinsTestingSetup::ListCoinsTestingSetup()",160, 8, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"ListCoinsTestingSetup::~ListCoinsTestingSetup()",29, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"ListCoinsTestingSetup::AddTx( CRecipient recipient)",124, 8, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_FIXTURE_TEST_CASE( ListCoins , ListCoinsTestingSetup)",92, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_FIXTURE_TEST_CASE( wallet_disableprivkeys , TestChain100Setup)",122, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"CalculateNestedKeyhashInputSize( bool use_max_sig)",137, 4, 0
repos/cpp/bitcoin/src/wallet/test/wallet_tests.cpp,"BOOST_FIXTURE_TEST_CASE( dummy_input_size_test , TestChain100Setup)",95, 4, 0
repos/cpp/bitcoin/src/wallet/test/psbt_wallet_tests.cpp,"BOOST_AUTO_TEST_CASE( psbt_updater_test)",1816, 4, 0
repos/cpp/bitcoin/src/wallet/test/psbt_wallet_tests.cpp,"BOOST_AUTO_TEST_CASE( parse_hd_keypath)",137, 4, 0
repos/cpp/bitcoin/src/wallet/test/init_test_fixture.cpp,"InitWalletDirTestingSetup::InitWalletDirTestingSetup( const std :: string & chainName)",113, 0, 0
repos/cpp/bitcoin/src/wallet/test/init_test_fixture.cpp,"InitWalletDirTestingSetup::~InitWalletDirTestingSetup()",56, 0, 0
repos/cpp/bitcoin/src/wallet/test/init_test_fixture.cpp,"InitWalletDirTestingSetup::SetWalletDir( const fs :: path & walletdir_path)",77, 0, 0
repos/cpp/bitcoin/src/support/cleanse.cpp,"memory_cleanse( void * ptr , size_t len)",82, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"align_up( size_t x , size_t align)",54, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Arena::Arena( void * base_in , size_t size_in , size_t alignment_in)",107, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Arena::~Arena()",16, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Arena::alloc( size_t size)",118, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Arena::free( void * ptr)",69, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Arena::stats() const",71, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"printchunk( char * base , size_t sz , bool used)",74, 8, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Arena::walk() const",54, 8, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Win32LockedPageAllocator::Win32LockedPageAllocator()",53, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Win32LockedPageAllocator::AllocateLocked( size_t len , bool * lockingSuccess)",87, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Win32LockedPageAllocator::FreeLocked( void * addr , size_t len)",66, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"Win32LockedPageAllocator::GetLimit()",56, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"PosixLockedPageAllocator::PosixLockedPageAllocator()",53, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"PosixLockedPageAllocator::AllocateLocked( size_t len , bool * lockingSuccess)",87, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"PosixLockedPageAllocator::FreeLocked( void * addr , size_t len)",66, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"PosixLockedPageAllocator::GetLimit()",49, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::LockedPool( std :: unique_ptr<LockedPageAllocator> allocator_in , LockingFailed_Callback lf_cb_in)",108, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::~LockedPool()",26, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::alloc( size_t size)",46, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::free( void * ptr)",87, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::stats() const",65, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::new_arena( size_t size , size_t align)",132, 8, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::LockedPageArena::LockedPageArena( LockedPageAllocator * allocator_in , void * base_in , size_t size_in , size_t align_in)",129, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPool::LockedPageArena::~LockedPageArena()",48, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPoolManager::LockedPoolManager( std :: unique_ptr<LockedPageAllocator> allocator_in)",89, 0, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPoolManager::LockingFailed()",61, 4, 0
repos/cpp/bitcoin/src/support/lockedpool.cpp,"LockedPoolManager::CreateInstance()",84, 4, 0
repos/cpp/bitcoin/src/bench/mempool_eviction.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pool . cs)",118, 0, 0
repos/cpp/bitcoin/src/bench/mempool_eviction.cpp,"MempoolEviction( benchmark :: State & state)",62, 4, 0
repos/cpp/bitcoin/src/bench/block_assemble.cpp,"PrepareBlock( const CScript & coinbase_scriptPubKey)",82, 0, 0
repos/cpp/bitcoin/src/bench/block_assemble.cpp,"MineBlock( const CScript & coinbase_scriptPubKey)",89, 4, 0
repos/cpp/bitcoin/src/bench/block_assemble.cpp,"AssembleBlock( benchmark :: State & state)",174, 12, 0
repos/cpp/bitcoin/src/bench/prevector.cpp,"nontrivial_t::nontrivial_t()",29, 4, 0
repos/cpp/bitcoin/src/bench/prevector.cpp,"nontrivial_t::SerializationOp( Stream & s , Operation ser_action)",81, 4, 0
repos/cpp/bitcoin/src/bench/prevector.cpp,"PrevectorDestructor( benchmark :: State & state)",57, 0, 0
repos/cpp/bitcoin/src/bench/prevector.cpp,"PrevectorClear( benchmark :: State & state)",52, 0, 0
repos/cpp/bitcoin/src/bench/prevector.cpp,"PrevectorResize( benchmark :: State & state)",53, 0, 0
repos/cpp/bitcoin/src/bench/prevector.cpp,"PrevectorDeserialize( benchmark :: State & state)",58, 0, 0
repos/cpp/bitcoin/src/bench/rollingbloom.cpp,"RollingBloom( benchmark :: State & state)",50, 0, 0
repos/cpp/bitcoin/src/bench/checkblock.cpp,"DeserializeBlockTest( benchmark :: State & state)",86, 12, 0
repos/cpp/bitcoin/src/bench/checkblock.cpp,"DeserializeAndCheckBlockTest( benchmark :: State & state)",99, 8, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"RIPEMD160( benchmark :: State & state)",65, 8, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"SHA1( benchmark :: State & state)",60, 8, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"SHA256( benchmark :: State & state)",62, 8, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"SHA256_32b( benchmark :: State & state)",48, 0, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"SHA256D64_1024( benchmark :: State & state)",52, 0, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"SHA512( benchmark :: State & state)",62, 8, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"SipHash_32b( benchmark :: State & state)",62, 8, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"FastRandom_32bit( benchmark :: State & state)",54, 0, 0
repos/cpp/bitcoin/src/bench/crypto_hash.cpp,"FastRandom_1bit( benchmark :: State & state)",53, 0, 0
repos/cpp/bitcoin/src/bench/gcs_filter.cpp,"ConstructGCSFilter( benchmark :: State & state)",64, 8, 0
repos/cpp/bitcoin/src/bench/gcs_filter.cpp,"MatchGCSFilter( benchmark :: State & state)",57, 8, 0
repos/cpp/bitcoin/src/bench/bech32.cpp,"Bech32Encode( benchmark :: State & state)",107, 4, 0
repos/cpp/bitcoin/src/bench/bech32.cpp,"Bech32Decode( benchmark :: State & state)",79, 4, 0
repos/cpp/bitcoin/src/bench/lockedpool.cpp,"BenchLockedPool( benchmark :: State & state)",60, 4, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::ConsolePrinter::header()",89, 4, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::ConsolePrinter::result( const State & state)",170, 4, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::ConsolePrinter::footer()",44, 0, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::PlotlyPrinter::PlotlyPrinter( std :: string plotly_url , int64_t width , int64_t height)",95, 0, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::PlotlyPrinter::header()",122, 14, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::PlotlyPrinter::result( const State & state)",78, 14, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::PlotlyPrinter::footer()",107, 4, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::BenchRunner::benchmarks()",75, 0, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::BenchRunner::BenchRunner( std :: string name , benchmark :: BenchFunction func , uint64_t num_iters_for_one_second)",120, 0, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::BenchRunner::RunAll( Printer & printer , uint64_t num_evals , double scaling , const std :: string & filter , bool is_list_only)",136, 0, 0
repos/cpp/bitcoin/src/bench/bench.cpp,"benchmark::State::UpdateTimer( const benchmark :: time_point current_time)",77, 0, 0
repos/cpp/bitcoin/src/bench/duplicate_inputs.cpp,"DuplicateInputs( benchmark :: State & state)",176, 4, 0
repos/cpp/bitcoin/src/bench/verify_script.cpp,"BuildCreditingTransaction( const CScript & scriptPubKey)",82, 0, 0
repos/cpp/bitcoin/src/bench/verify_script.cpp,"BuildSpendingTransaction( const CScript & scriptSig , const CMutableTransaction & txCredit)",115, 0, 0
repos/cpp/bitcoin/src/bench/verify_script.cpp,"VerifyScriptBench( benchmark :: State & state)",142, 4, 0
repos/cpp/bitcoin/src/bench/bench_bitcoin.cpp,"SetupBenchArgs()",218, 4, 0
repos/cpp/bitcoin/src/bench/bench_bitcoin.cpp,"SetDataDir()",84, 4, 0
repos/cpp/bitcoin/src/bench/bench_bitcoin.cpp,"main( int argc , char ** argv)",103, 4, 0
repos/cpp/bitcoin/src/bench/checkqueue.cpp,"CCheckQueueSpeedPrevectorJob( benchmark :: State & state)",72, 8, 0
repos/cpp/bitcoin/src/bench/merkle_root.cpp,"MerkleRoot( benchmark :: State & state)",83, 8, 0
repos/cpp/bitcoin/src/bench/examples.cpp,"Sleep100ms( benchmark :: State & state)",48, 0, 0
repos/cpp/bitcoin/src/bench/examples.cpp,"Trig( benchmark :: State & state)",42, 0, 0
repos/cpp/bitcoin/src/bench/base58.cpp,"Base58Encode( benchmark :: State & state)",78, 12, 0
repos/cpp/bitcoin/src/bench/base58.cpp,"Base58CheckEncode( benchmark :: State & state)",78, 12, 0
repos/cpp/bitcoin/src/bench/base58.cpp,"Base58Decode( benchmark :: State & state)",61, 4, 0
repos/cpp/bitcoin/src/bench/coin_selection.cpp,"addCoin( const CAmount & nValue , const CWallet & wallet , std :: vector<std::unique_ptr<CWalletTx>> & wtxs)",113, 0, 0
repos/cpp/bitcoin/src/bench/coin_selection.cpp,"CoinSelection( benchmark :: State & state)",145, 8, 0
repos/cpp/bitcoin/src/bench/coin_selection.cpp,"add_coin( const CAmount & nValue , int nInput , std :: vector<OutputGroup> & set)",108, 4, 0
repos/cpp/bitcoin/src/bench/coin_selection.cpp,"make_hard_case( int utxos , std :: vector<OutputGroup> & utxo_pool)",95, 8, 0
repos/cpp/bitcoin/src/bench/coin_selection.cpp,"BnBExhaustion( benchmark :: State & state)",102, 8, 0
repos/cpp/bitcoin/src/bench/ccoins_caching.cpp,"SetupDummyInputs( CBasicKeyStore & keystoreRet , CCoinsViewCache & coinsRet)",101, 4, 0
repos/cpp/bitcoin/src/bench/ccoins_caching.cpp,"CCoinsCaching( benchmark :: State & state)",99, 4, 0
repos/cpp/bitcoin/src/util/moneystr.cpp,"FormatMoney( const CAmount & n)",74, 4, 0
repos/cpp/bitcoin/src/util/moneystr.cpp,"ParseMoney( const std :: string & str , CAmount & nRet)",55, 0, 0
repos/cpp/bitcoin/src/util/moneystr.cpp,"ParseMoney( const char * pszIn , CAmount & nRet)",63, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"GetTime()",66, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"SetMockTime( int64_t nMockTimeIn)",61, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"GetMockTime()",54, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"GetTimeMillis()",101, 19, 0
repos/cpp/bitcoin/src/util/time.cpp,"GetTimeMicros()",101, 19, 0
repos/cpp/bitcoin/src/util/time.cpp,"GetSystemTimeInSeconds()",36, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"MilliSleep( int64_t n)",77, 1, 0
repos/cpp/bitcoin/src/util/time.cpp,"FormatISO8601DateTime( int64_t nTime)",136, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"FormatISO8601Date( int64_t nTime)",86, 4, 0
repos/cpp/bitcoin/src/util/time.cpp,"FormatISO8601Time( int64_t nTime)",75, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"SanitizeString( const std :: string & str , int rule)",64, 8, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"HexDigit( char c)",46, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"IsHex( const std :: string & str)",76, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"IsHexNumber( const std :: string & str)",76, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseHex( const char * psz)",53, 0, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseHex( const std :: string & str)",60, 0, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"SplitHostPort( std :: string in , int & portOut , std :: string & hostOut)",149, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"EncodeBase64( const unsigned char * pch , size_t len)",101, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"EncodeBase64( const std :: string & str)",72, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"DecodeBase64( const char * p , bool * pfInvalid)",111, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"DecodeBase64( const std :: string & str)",67, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"EncodeBase32( const unsigned char * pch , size_t len)",80, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"EncodeBase32( const std :: string & str)",72, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"DecodeBase32( const char * p , bool * pfInvalid)",111, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"DecodeBase32( const std :: string & str)",67, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParsePrechecks( const std :: string & str)",98, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseInt32( const std :: string & str , int32_t * out)",101, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseInt64( const std :: string & str , int64_t * out)",103, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseUInt32( const std :: string & str , uint32_t * out)",141, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseUInt64( const std :: string & str , uint64_t * out)",142, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseDouble( const std :: string & str , double * out)",92, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"FormatParagraph( const std :: string & in , size_t width , size_t indent)",80, 0, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"i64tostr( int64_t n)",32, 0, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"itostr( int n)",31, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"atoi64( const char * psz)",38, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"atoi64( const std :: string & str)",46, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"atoi( const std :: string & str)",33, 0, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ProcessMantissaDigit( char ch , int64_t & mantissa , int & mantissa_tzeros)",90, 0, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseFixedPoint( const std :: string & val , int decimals , int64_t * amount_out)",93, 8, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"ParseHDKeypath( const std :: string & keypath_str , std :: vector<uint32_t> & keypath)",106, 12, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"Downcase( std :: string & str)",98, 4, 0
repos/cpp/bitcoin/src/util/strencodings.cpp,"Capitalize( std :: string str)",40, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"locking_callback( int mode , int i , const char * file , int line)",93, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"CInit::CInit()",108, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"CInit::~CInit()",81, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"LockDirectory( const fs :: path & directory , const std :: string lockfile_name , bool probe_only)",112, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"ReleaseDirectoryLocks()",53, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"DirIsWritable( const fs :: path & directory)",54, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"InterpretBool( const std :: string & strValue)",55, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManagerHelper::EXCLUSIVE_LOCKS_REQUIRED( am . cs_args)",125, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManagerHelper::NetworkArg( const ArgsManager & am , const std :: string & arg)",88, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManagerHelper::AddArgs( std :: vector<std::string> & res , const MapArgs & map_args , const std :: string & arg)",111, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManagerHelper::GetArgHelper( const MapArgs & map_args , const std :: string & arg , bool getLast = false)",130, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManagerHelper::GetArg( const ArgsManager & am , const std :: string & arg)",100, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManagerHelper::EXCLUSIVE_LOCKS_REQUIRED( am . cs_args)",125, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"InterpretNegatedOption( std :: string & key , std :: string & val)",98, 12, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::ArgsManager()",77, 5, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetUnsuitableSectionOnlyArgs() const",114, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetUnrecognizedSections() const",73, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::SelectConfigNetwork( const std :: string & network)",66, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::ParseParameters( int argc , const char * const argv [ ] , std :: string & error)",100, 16, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::IsArgKnown( const std :: string & key) const",89, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetArgs( const std :: string & strArg) const",105, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::IsArgSet( const std :: string & strArg) const",60, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::IsArgNegated( const std :: string & strArg) const",92, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetArg( const std :: string & strArg , const std :: string & strDefault) const",96, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetArg( const std :: string & strArg , int64_t nDefault) const",86, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetBoolArg( const std :: string & strArg , bool fDefault) const",86, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::SoftSetArg( const std :: string & strArg , const std :: string & strValue)",85, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::SoftSetBoolArg( const std :: string & strArg , bool fValue)",73, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::ForceSetArg( const std :: string & strArg , const std :: string & strValue)",86, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::AddArg( const std :: string & name , const std :: string & help , const bool debug_only , const OptionsCategory & cat)",128, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::AddHiddenArgs( const std :: vector<std::string> & names)",71, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetHelpMessage() const",96, 16, 0
repos/cpp/bitcoin/src/util/system.cpp,"HelpRequested( const ArgsManager & args)",113, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"HelpMessageGroup( const std :: string & message)",59, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"HelpMessageOpt( const std :: string & option , const std :: string & message)",84, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"FormatException( const std :: exception * pex , const char * pszThread)",123, 12, 0
repos/cpp/bitcoin/src/util/system.cpp,"PrintExceptionContinue( const std :: exception * pex , const char * pszThread)",78, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetDefaultDataDir()",84, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetBlocksDir( bool fNetSpecific)",93, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetDataDir( bool fNetSpecific)",76, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"ClearDatadirCache()",51, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetConfigFile( const std :: string & confPath)",59, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"TrimString( const std :: string & str , const std :: string & pattern)",82, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetConfigOptions( std :: istream & stream , std :: string & error , std :: vector<std::pair<std::string,std::string>> & options , std :: set<std::string> & sections)",163, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::ReadConfigStream( std :: istream & stream , std :: string & error , bool ignore_invalid_keys)",103, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::ReadConfigFiles( std :: string & error , bool ignore_invalid_keys)",141, 16, 0
repos/cpp/bitcoin/src/util/system.cpp,"ArgsManager::GetChainName() const",83, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetPidFile()",86, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"CreatePidFile( const fs :: path & path , pid_t pid)",52, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"RenameOver( fs :: path src , fs :: path dest)",71, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"TryCreateDirectories( const fs :: path & p)",86, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"FileCommit( FILE * file)",116, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"TruncateFile( FILE * file , unsigned int length)",53, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"RaiseFileDescriptorLimit( int nMinFD)",57, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"AllocateFileRange( FILE * file , unsigned int offset , unsigned int length)",88, 8, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetSpecialFolderPath( int nFolder , bool fCreate)",87, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"runCommand( const std :: string & strCommand)",124, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"RenameThread( const char * name)",79, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"SetupEnvironment()",91, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"SetupNetworking()",92, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetNumCores()",48, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"CopyrightHolders( const std :: string & strPrefix)",118, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"GetStartupTime()",25, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"AbsPathForConfigVal( const fs :: path & path , bool net_specific)",70, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"ScheduleBatchPriority()",80, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"util::WinCmdLineArgs::WinCmdLineArgs()",78, 4, 0
repos/cpp/bitcoin/src/util/system.cpp,"util::WinCmdLineArgs::~WinCmdLineArgs()",34, 0, 0
repos/cpp/bitcoin/src/util/system.cpp,"util::WinCmdLineArgs::get()",45, 0, 0
repos/cpp/bitcoin/src/util/bytevectorhash.cpp,"ByteVectorHash::ByteVectorHash()",73, 4, 0
repos/cpp/bitcoin/src/util/bytevectorhash.cpp,"ByteVectorHash::operator ( )( const std :: vector<unsigned char> & input) const",81, 0, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"HelpMessageDialog::HelpMessageDialog( interfaces :: Node & node , QWidget * parent , bool about)",114, 4, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"HelpMessageDialog::~HelpMessageDialog()",40, 0, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"HelpMessageDialog::printToConsole()",95, 4, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"HelpMessageDialog::showOrPrint()",93, 4, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"HelpMessageDialog::on_okButton_accepted()",47, 0, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"ShutdownWindow::ShutdownWindow( QWidget * parent , Qt :: WindowFlags f)",78, 8, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"ShutdownWindow::showShutdownWindow( BitcoinGUI * window)",111, 4, 0
repos/cpp/bitcoin/src/qt/utilitydialog.cpp,"ShutdownWindow::closeEvent( QCloseEvent * event)",52, 0, 0
repos/cpp/bitcoin/src/qt/networkstyle.cpp,"NetworkStyle::NetworkStyle( const QString & _appName , const int iconColorHueShift , const int iconColorSaturationReduction , const char * _titleAddText)",149, 0, 0
repos/cpp/bitcoin/src/qt/networkstyle.cpp,"NetworkStyle::instantiate( const QString & networkId)",72, 0, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::TransactionView( const PlatformStyle * platformStyle , QWidget * parent)",160, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::setModel( WalletModel * _model)",158, 20, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::chooseDate( int idx)",84, 16, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::chooseType( int idx)",44, 8, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::chooseWatchonly( int idx)",103, 8, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::changedSearch()",67, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::changedAmount()",113, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::exportClicked()",149, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::contextualMenu( const QPoint & point)",99, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::abandonTx()",91, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::bumpFee()",91, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::copyAddress()",84, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::copyLabel()",82, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::copyAmount()",92, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::copyTxID()",83, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::copyTxHex()",82, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::copyTxPlainText()",88, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::editLabel()",95, 8, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::showDetails()",83, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::openThirdPartyTxUrl( QString url)",144, 9, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::createDateRangeWidget()",94, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::dateRangeChanged()",51, 12, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::focusTransaction( const QModelIndex & idx)",71, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::focusTransaction( const uint256 & txid)",85, 8, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::resizeEvent( QResizeEvent * event)",79, 4, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::eventFilter( QObject * obj , QEvent * event)",97, 13, 0
repos/cpp/bitcoin/src/qt/transactionview.cpp,"TransactionView::updateWatchOnlyColumn( bool fHaveWatchOnly)",89, 4, 0
repos/cpp/bitcoin/src/qt/paymentrequestplus.cpp,"SSLVerifyError::SSLVerifyError( std :: string err)",75, 4, 0
repos/cpp/bitcoin/src/qt/paymentrequestplus.cpp,"PaymentRequestPlus::parse( const QByteArray & data)",142, 8, 0
repos/cpp/bitcoin/src/qt/paymentrequestplus.cpp,"PaymentRequestPlus::SerializeToString( std :: string * output) const",70, 0, 0
repos/cpp/bitcoin/src/qt/paymentrequestplus.cpp,"PaymentRequestPlus::IsInitialized() const",47, 0, 0
repos/cpp/bitcoin/src/qt/paymentrequestplus.cpp,"PaymentRequestPlus::getMerchant( X509_STORE * certStore , QString & merchant) const",156, 12, 0
repos/cpp/bitcoin/src/qt/paymentrequestplus.cpp,"PaymentRequestPlus::getPayTo() const",99, 8, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::SignVerifyMessageDialog( const PlatformStyle * _platformStyle , QWidget * parent)",105, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::~SignVerifyMessageDialog()",52, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::setModel( WalletModel * _model)",60, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::setAddress_SM( const QString & address)",68, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::setAddress_VM( const QString & address)",68, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::showTab_SM( bool fShow)",53, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::showTab_VM( bool fShow)",53, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_addressBookButton_SM_clicked()",112, 8, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_pasteButton_SM_clicked()",58, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_signMessageButton_SM_clicked()",152, 8, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_copySignatureButton_SM_clicked()",66, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_clearButton_SM_clicked()",58, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_addressBookButton_VM_clicked()",110, 8, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_verifyMessageButton_VM_clicked()",157, 8, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::on_clearButton_VM_clicked()",58, 0, 0
repos/cpp/bitcoin/src/qt/signverifymessagedialog.cpp,"SignVerifyMessageDialog::eventFilter( QObject * object , QEvent * event)",87, 4, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::TransactionFilterProxy( QObject * parent)",66, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::filterAcceptsRow( int sourceRow , const QModelIndex & sourceParent) const",100, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setDateRange( const QDateTime & from , const QDateTime & to)",86, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setSearchString( const QString & search_string)",75, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setTypeFilter( quint32 modes)",58, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setMinAmount( const CAmount & minimum)",66, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setWatchOnlyFilter( WatchOnlyFilter filter)",72, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setLimit( int limit)",49, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::setShowInactive( bool _showInactive)",65, 0, 0
repos/cpp/bitcoin/src/qt/transactionfilterproxy.cpp,"TransactionFilterProxy::rowCount( const QModelIndex & parent) const",77, 8, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"GetLangTerritory()",98, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"initTranslations( QTranslator & qtTranslatorBase , QTranslator & qtTranslator , QTranslator & translatorBase , QTranslator & translator)",141, 0, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"DebugMessageHandler( QtMsgType type , const QMessageLogContext & context , const QString & msg)",96, 0, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::getReturnValue() const",55, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinCore::BitcoinCore( interfaces :: Node & node)",51, 0, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinCore::handleRunawayException( const std :: exception * e)",80, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinCore::initialize()",70, 8, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinCore::shutdown()",64, 8, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::BitcoinApplication( interfaces :: Node & node , int & argc , char ** argv)",88, 0, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::setupPlatformStyle()",89, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::~BitcoinApplication()",53, 8, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::createPaymentServer()",47, 0, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::createOptionsModel( bool resetSettings)",69, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::createWindow( const NetworkStyle * networkStyle)",87, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::createSplashScreen( const NetworkStyle * networkStyle)",90, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::startThread()",106, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::parameterSetup()",76, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::requestInitialize()",55, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::requestShutdown()",70, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::addWallet( WalletModel * walletModel)",89, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::removeWallet()",99, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::initializeResult( bool success)",131, 8, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::shutdownResult()",72, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::handleRunawayException( const QString & message)",175, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"BitcoinApplication::getMainWinId() const",45, 0, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"SetupUIArgs()",188, 4, 0
repos/cpp/bitcoin/src/qt/bitcoin.cpp,"main( int argc , char * argv [ ])",163, 12, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"QRImageWidget::QRImageWidget( QWidget * parent)",84, 4, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"QRImageWidget::exportImage()",36, 0, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"QRImageWidget::mousePressEvent( QMouseEvent * event)",56, 0, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"QRImageWidget::saveImage()",114, 4, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"QRImageWidget::copyImage()",56, 4, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"QRImageWidget::contextMenuEvent( QContextMenuEvent * event)",63, 0, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::ReceiveRequestDialog( QWidget * parent)",93, 4, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::~ReceiveRequestDialog()",46, 0, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::setModel( WalletModel * _model)",116, 8, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::setInfo( const SendCoinsRecipient & _info)",68, 0, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::update()",146, 8, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::on_btnCopyURI_clicked()",60, 4, 0
repos/cpp/bitcoin/src/qt/receiverequestdialog.cpp,"ReceiveRequestDialog::on_btnCopyAddress_clicked()",55, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::BitcoinGUI( interfaces :: Node & node , const PlatformStyle * _platformStyle , const NetworkStyle * networkStyle , QWidget * parent)",308, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::~BitcoinGUI()",90, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::createActions()",156, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::createMenuBar()",83, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::createToolBars()",160, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setClientModel( ClientModel * _clientModel)",136, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::addWallet( WalletModel * walletModel)",81, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::removeWallet( WalletModel * walletModel)",59, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setCurrentWallet( const QString & name)",55, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setCurrentWalletBySelectorIndex( int index)",75, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::removeAllWallets()",37, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setWalletActionsEnabled( bool enabled)",55, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::createTrayIcon( const NetworkStyle * networkStyle)",101, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::createTrayIconMenu()",111, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::trayIconActivated( QSystemTrayIcon :: ActivationReason reason)",77, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::macosDockIconActivated()",42, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::optionsClicked()",55, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::aboutClicked()",47, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showDebugWindow()",39, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showDebugWindowActivateConsole()",54, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showHelpMessageClicked()",42, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::openClicked()",42, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::gotoOverviewPage()",54, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::gotoHistoryPage()",53, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::gotoReceiveCoinsPage()",58, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::gotoSendCoinsPage( QString addr)",59, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::gotoSignMessageTab( QString addr)",60, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::gotoVerifyMessageTab( QString addr)",62, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::updateNetworkState()",141, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setNumConnections( int count)",46, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setNetworkActive( bool networkActive)",54, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::updateHeadersSyncProgressLabel()",156, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::openOptionsDialogWithTab( OptionsDialog :: Tab tab)",66, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setNumBlocks( int count , const QDateTime & blockDate , double nVerificationProgress , bool header)",164, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::message( const QString & title , const QString & message , unsigned int style , bool * ret)",103, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::changeEvent( QEvent * e)",113, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::closeEvent( QCloseEvent * event)",95, 12, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showEvent( QShowEvent * event)",61, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::incomingTransaction( const QString & date , int unit , const CAmount & amount , const QString & type , const QString & address , const QString & label , const QString & walletName)",185, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::dragEnterEvent( QDragEnterEvent * event)",56, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::dropEvent( QDropEvent * event)",58, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::eventFilter( QObject * object , QEvent * event)",114, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::handlePaymentRequest( const SendCoinsRecipient & recipient)",75, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setHDStatus( bool privkeyDisabled , int hdEnabled)",210, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setEncryptionStatus( int status)",147, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::updateWalletStatus()",88, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::updateProxyIcon()",135, 12, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showNormalIfMinimized( bool fToggleHidden)",88, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::toggleHidden()",33, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::detectShutdown()",36, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showProgress( const QString & title , int nProgress)",67, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::setTrayIconVisible( bool fHideTrayIcon)",56, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::showModalOverlay()",86, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"ThreadSafeMessageBox( BitcoinGUI * gui , const std :: string & message , const std :: string & caption , unsigned int style)",126, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::subscribeToCoreSignals()",106, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"BitcoinGUI::unsubscribeFromCoreSignals()",46, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::UnitDisplayStatusBarControl( const PlatformStyle * platformStyle)",95, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::mousePressEvent( QMouseEvent * event)",70, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::createContextMenu()",91, 4, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::setOptionsModel( OptionsModel * _optionsModel)",122, 8, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::updateDisplayUnit( int newUnits)",66, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::onDisplayUnitsClicked( const QPoint & point)",77, 0, 0
repos/cpp/bitcoin/src/qt/bitcoingui.cpp,"UnitDisplayStatusBarControl::onMenuSelection( QAction * action)",67, 0, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"TxViewDelegate::TxViewDelegate( const PlatformStyle * _platformStyle , QObject * parent = nullptr)",91, 4, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"TxViewDelegate::paint( QPainter * painter , const QStyleOptionViewItem & option , const QModelIndex & index) const",124, 8, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"TxViewDelegate::sizeHint( const QStyleOptionViewItem & option , const QModelIndex & index) const",94, 4, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::OverviewPage( const PlatformStyle * platformStyle , QWidget * parent)",246, 4, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::handleTransactionClicked( const QModelIndex & index)",70, 0, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::handleOutOfSyncWarningClicks()",50, 0, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::~OverviewPage()",30, 0, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::setBalance( const interfaces :: WalletBalances & balances)",222, 8, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::updateWatchOnlyLabels( bool showWatchOnly)",113, 4, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::setClientModel( ClientModel * model)",88, 8, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::setWalletModel( WalletModel * model)",118, 8, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::updateDisplayUnit()",77, 8, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::updateAlerts( const QString & warnings)",60, 4, 0
repos/cpp/bitcoin/src/qt/overviewpage.cpp,"OverviewPage::showOutOfSyncWarning( bool fShow)",52, 0, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::QValidatedLineEdit( QWidget * parent)",91, 4, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::setValid( bool _valid)",47, 0, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::focusInEvent( QFocusEvent * evt)",56, 0, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::focusOutEvent( QFocusEvent * evt)",57, 0, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::markValid()",68, 4, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::clear()",33, 0, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::setEnabled( bool enabled)",65, 8, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::checkValidity()",82, 12, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::setCheckValidator( const QValidator * v)",64, 0, 0
repos/cpp/bitcoin/src/qt/qvalidatedlineedit.cpp,"QValidatedLineEdit::isValid()",78, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinaddressvalidator.cpp,"BitcoinAddressEntryValidator::BitcoinAddressEntryValidator( QObject * parent)",78, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinaddressvalidator.cpp,"BitcoinAddressEntryValidator::validate( QString & input , int & pos) const",89, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinaddressvalidator.cpp,"BitcoinAddressCheckValidator::BitcoinAddressCheckValidator( QObject * parent)",78, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinaddressvalidator.cpp,"BitcoinAddressCheckValidator::validate( QString & input , int & pos) const",89, 0, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::TrafficGraphWidget( QWidget * parent)",78, 4, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::setClientModel( ClientModel * model)",60, 0, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::getGraphRangeMins() const",50, 0, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::paintPath( QPainterPath & path , QQueue<float> & samples)",79, 0, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::paintEvent( QPaintEvent *)",115, 8, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::updateRates()",85, 4, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::setGraphRangeMins( int mins)",62, 4, 0
repos/cpp/bitcoin/src/qt/trafficgraphwidget.cpp,"TrafficGraphWidget::clear()",65, 8, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookSortFilterProxyModel::AddressBookSortFilterProxyModel( const QString & type , QObject * parent)",74, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookSortFilterProxyModel::filterAcceptsRow( int row , const QModelIndex & parent) const",84, 8, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::AddressBookPage( const PlatformStyle * platformStyle , Mode _mode , Tabs _tab , QWidget * parent)",174, 8, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::~AddressBookPage()",36, 0, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::setModel( AddressTableModel * _model)",120, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::on_copyAddress_clicked()",71, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::onCopyLabelAction()",69, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::onEditAction()",79, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::on_newAddress_clicked()",71, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::on_deleteAddress_clicked()",71, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::selectionChanged()",69, 12, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::done( int retval)",97, 4, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::on_exportButton_clicked()",110, 12, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::contextualMenu( const QPoint & point)",58, 0, 0
repos/cpp/bitcoin/src/qt/addressbookpage.cpp,"AddressBookPage::selectNewAddress( const QModelIndex & parent , int begin , int)",106, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"FreespaceChecker::FreespaceChecker( Intro * _intro)",50, 0, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"FreespaceChecker::check()",132, 16, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::Intro( QWidget * parent)",125, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::~Intro()",57, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::getDataDirectory()",38, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::setDataDirectory( const QString & dataDir)",53, 0, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::getDefaultDataDirectory()",61, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::pickDataDirectory( interfaces :: Node & node)",212, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::setStatus( int status , const QString & message , quint64 bytesAvailable)",99, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::on_dataDirectory_textChanged( const QString & dataDirStr)",68, 0, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::on_ellipsisButton_clicked()",134, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::on_dataDirDefault_clicked()",49, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::on_dataDirCustom_clicked()",42, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::startThread()",77, 4, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::checkPath( const QString & dataDir)",46, 0, 0
repos/cpp/bitcoin/src/qt/intro.cpp,"Intro::getPathToCheck()",59, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::OptionsModel( interfaces :: Node & node , QObject * parent , bool resetSettings)",90, 0, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::addOverriddenOption( const std :: string & option)",129, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::Init( bool resetSettings)",154, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"CopySettings( QSettings & dst , const QSettings & src)",63, 0, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"BackupSettings( const fs :: path & filename , const QSettings & src)",89, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::Reset()",73, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::rowCount( const QModelIndex & parent) const",61, 0, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"GetProxySetting( QSettings & settings , const QString & name)",120, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"SetProxySetting( QSettings & settings , const QString & name , const ProxySetting & ip_port)",99, 0, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"GetDefaultProxyAddress()",85, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::data( const QModelIndex & index , int role) const",75, 12, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::setData( const QModelIndex & index , const QVariant & value , int role)",88, 0, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::setDisplayUnit( const QVariant & value)",57, 0, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::getProxySettings( QNetworkProxy & proxy) const",80, 8, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::setRestartRequired( bool fRequired)",61, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::isRestartRequired() const",63, 4, 0
repos/cpp/bitcoin/src/qt/optionsmodel.cpp,"OptionsModel::checkAndMigrate()",133, 8, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::WalletModelTransaction( const QList<SendCoinsRecipient> & _recipients)",95, 0, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::getRecipients() const",72, 0, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::getWtx()",79, 0, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::getTransactionSize()",58, 0, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::getTransactionFee() const",58, 0, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::setTransactionFee( const CAmount & newFee)",70, 0, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::reassignAmounts( int nChangePosRet)",100, 4, 0
repos/cpp/bitcoin/src/qt/walletmodeltransaction.cpp,"WalletModelTransaction::getTotalTransactionAmount() const",66, 0, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"Notificator::Notificator( const QString & _programName , QSystemTrayIcon * _trayIcon , QWidget * _parent)",102, 0, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"Notificator::~Notificator()",28, 0, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"FreedesktopImage::FreedesktopImage()",26, 4, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"FreedesktopImage::FreedesktopImage( const QImage & img)",74, 4, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"operator < <( QDBusArgument & a , const FreedesktopImage & i)",100, 4, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"operator > >( const QDBusArgument & a , FreedesktopImage & i)",100, 4, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"FreedesktopImage::metaType()",54, 4, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"FreedesktopImage::toVariant( const QImage & img)",58, 4, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"Notificator::notifyDBus( Class cls , const QString & title , const QString & text , const QIcon & icon , int millisTimeout)",121, 0, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"Notificator::notifySystray( Class cls , const QString & title , const QString & text , const QIcon & icon , int millisTimeout)",124, 0, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"Notificator::notifyMacUserNotificationCenter( Class cls , const QString & title , const QString & text , const QIcon & icon)",125, 0, 0
repos/cpp/bitcoin/src/qt/notificator.cpp,"Notificator::notify( Class cls , const QString & title , const QString & text , const QIcon & icon , int millisTimeout)",117, 0, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::ModalOverlay( QWidget * parent)",88, 4, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::~ModalOverlay()",30, 0, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::eventFilter( QObject * obj , QEvent * ev)",65, 12, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::event( QEvent * ev)",57, 8, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::setKnownBestHeight( int count , const QDateTime & blockDate)",77, 0, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::tipUpdate( int count , const QDateTime & blockDate , double nVerificationProgress)",117, 12, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::toggleVisibility()",38, 0, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::showHide( bool hide , bool userRequested)",108, 4, 0
repos/cpp/bitcoin/src/qt/modaloverlay.cpp,"ModalOverlay::closeClicked()",34, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::ClientModel( interfaces :: Node & node , OptionsModel * _optionsModel , QObject * parent)",97, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::~ClientModel()",34, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getNumConnections( unsigned int flags) const",71, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getHeaderTipHeight() const",72, 8, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getHeaderTipTime() const",54, 8, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::updateTimer()",89, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::updateNumConnections( int numConnections)",59, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::updateNetworkActive( bool networkActive)",58, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::updateAlert()",50, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getBlockSource() const",53, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getStatusBarWarnings() const",62, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getOptionsModel()",45, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getPeerTableModel()",49, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getBanTableModel()",47, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::formatFullVersion() const",56, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::formatSubVersion() const",50, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::isReleaseVersion() const",43, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::formatClientStartupTime() const",63, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::dataDir() const",54, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::blocksDir() const",56, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::updateBanlist()",34, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ShowProgress( ClientModel * clientmodel , const std :: string & title , int nProgress)",92, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"NotifyNumConnectionsChanged( ClientModel * clientmodel , int newNumConnections)",100, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"NotifyNetworkActiveChanged( ClientModel * clientmodel , bool networkActive)",88, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"NotifyAlertChanged( ClientModel * clientmodel)",81, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"BannedListChanged( ClientModel * clientmodel)",83, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"BlockTipChanged( ClientModel * clientmodel , bool initialSync , int height , int64_t blockTime , double verificationProgress , bool fHeader)",146, 0, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::subscribeToCoreSignals()",141, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::unsubscribeFromCoreSignals()",60, 4, 0
repos/cpp/bitcoin/src/qt/clientmodel.cpp,"ClientModel::getProxyInfo( std :: string & ip_port) const",84, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"getConfTargetForIndex( int index)",58, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"getIndexForConfTarget( int target)",60, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::SendCoinsDialog( const PlatformStyle * _platformStyle , QWidget * parent)",152, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::setClientModel( ClientModel * _clientModel)",108, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::setModel( WalletModel * _model)",162, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::~SendCoinsDialog()",101, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::on_sendButton_clicked()",123, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::clear()",57, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::reject()",31, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::accept()",31, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::addEntry()",116, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::updateTabsAndLabels()",44, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::removeEntry( SendCoinsEntry * entry)",65, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::setupTabChain( QWidget * prev)",97, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::setAddress( const QString & address)",97, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::pasteEntry( const SendCoinsRecipient & rv)",97, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::handlePaymentRequest( const SendCoinsRecipient & rv)",73, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::setBalance( const interfaces :: WalletBalances & balances)",127, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::updateDisplayUnit()",79, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::processSendCoinsReturn( const WalletModel :: SendCoinsReturn & sendCoinsReturn , const QString & msgArg)",197, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::minimizeFeeSection( bool fMinimize)",84, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::on_buttonChooseFee_clicked()",51, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::on_buttonMinimizeFee_clicked()",53, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::useAvailableBalance( SendCoinsEntry * entry)",93, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::updateFeeSectionControls()",79, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::updateFeeMinimizedLabel()",146, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::updateCoinControlState( CCoinControl & ctrl)",100, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::updateSmartFeeLabel()",136, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardQuantity()",65, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardAmount()",117, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardFee()",135, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardAfterFee()",145, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardBytes()",86, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardLowOutput()",66, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlClipboardChange()",141, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlFeatureChanged( bool checked)",62, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlButtonClicked()",49, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlChangeChecked( int state)",73, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlChangeEdited( const QString & text)",267, 16, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendCoinsDialog::coinControlUpdateLabels()",97, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendConfirmationDialog::SendConfirmationDialog( const QString & title , const QString & text , int _secDelay , QWidget * parent)",121, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendConfirmationDialog::exec()",35, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendConfirmationDialog::countDown()",41, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsdialog.cpp,"SendConfirmationDialog::updateYesButton()",80, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::AmountSpinBox( QWidget * parent)",89, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::validate( QString & text , int & pos) const",84, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::fixup( QString & input) const",98, 12, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::value( bool * valid_out = 0) const",43, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::setValue( const CAmount & value)",109, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::SetAllowEmpty( bool allow)",35, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::SetMinValue( const CAmount & value)",43, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::SetMaxValue( const CAmount & value)",43, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::stepBy( int steps)",55, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::setDisplayUnit( int unit)",37, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::setSingleStep( const CAmount & step)",44, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::minimumSizeHint() const",135, 12, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::parse( const QString & text , bool * valid_out = 0) const",67, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::event( QEvent * event)",146, 16, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"AmountSpinBox::stepEnabled() const",75, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::BitcoinAmountField( QWidget * parent)",131, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::clear()",33, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setEnabled( bool fEnabled)",51, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::validate()",36, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setValid( bool valid)",46, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::eventFilter( QObject * object , QEvent * event)",69, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setupTabChain( QWidget * prev)",58, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::value( bool * valid_out) const",57, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setValue( const CAmount & value)",56, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::SetAllowEmpty( bool allow)",51, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::SetMinValue( const CAmount & value)",59, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::SetMaxValue( const CAmount & value)",59, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setReadOnly( bool fReadOnly)",53, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::unitChanged( int idx)",71, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setDisplayUnit( int newUnit)",53, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinamountfield.cpp,"BitcoinAmountField::setSingleStep( const CAmount & step)",60, 0, 0
repos/cpp/bitcoin/src/qt/qvaluecombobox.cpp,"QValueComboBox::QValueComboBox( QWidget * parent)",138, 4, 0
repos/cpp/bitcoin/src/qt/qvaluecombobox.cpp,"QValueComboBox::value() const",43, 4, 0
repos/cpp/bitcoin/src/qt/qvaluecombobox.cpp,"QValueComboBox::setValue( const QVariant & value)",53, 0, 0
repos/cpp/bitcoin/src/qt/qvaluecombobox.cpp,"QValueComboBox::setRole( int _role)",40, 0, 0
repos/cpp/bitcoin/src/qt/qvaluecombobox.cpp,"QValueComboBox::handleSelectionChanged( int idx)",53, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCExecutor::RPCExecutor( interfaces :: Node & node)",67, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"QtRPCTimerBase::QtRPCTimerBase( std :: function<void()> & _func , int64_t millis)",66, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"QtRPCTimerBase::~QtRPCTimerBase()",25, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"QtRPCTimerInterface::~QtRPCTimerInterface()",30, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"QtRPCTimerInterface::Name()",40, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"QtRPCTimerInterface::NewTimer( std :: function<void()> & func , int64_t millis)",72, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::RPCParseCommandLine( interfaces :: Node * node , std :: string & strResult , const std :: string & strCommand , const bool fExecute , std :: string * const pstrFilteredOut , const std :: string * walletID)",203, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCExecutor::request( const QString & command , const QString & walletID)",134, 8, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::RPCConsole( interfaces :: Node & node , const PlatformStyle * _platformStyle , QWidget * parent)",108, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::~RPCConsole()",67, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::eventFilter( QObject * obj , QEvent * event)",93, 8, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setClientModel( ClientModel * model)",134, 8, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::addWallet( WalletModel * const walletModel)",117, 8, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::removeWallet( WalletModel * const walletModel)",72, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"categoryClass( int category)",64, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::fontBigger()",36, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::fontSmaller()",36, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setFontSize( int newSize)",134, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::clear( bool clearHistory)",221, 24, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::keyPressEvent( QKeyEvent * event)",69, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::message( int category , const QString & message , bool html)",97, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::updateNetworkState()",110, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setNumConnections( int count)",46, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setNetworkActive( bool networkActive)",54, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setNumBlocks( int count , const QDateTime & blockDate , double nVerificationProgress , bool headers)",113, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setMempoolSize( long numberOfTxs , size_t dynUsage)",87, 8, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::on_lineEdit_returnPressed()",105, 12, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::browseHistory( int offset)",66, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::startExecutor()",128, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::on_tabWidget_currentChanged( int index)",60, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::on_openDebugLogfileButton_clicked()",53, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::scrollToEnd()",69, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::on_sldGraphRange_valueChanged( int value)",78, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setTrafficGraphRange( int mins)",71, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::updateTrafficStats( quint64 totalBytesIn , quint64 totalBytesOut)",81, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::peerSelected( const QItemSelection & selected , const QItemSelection & deselected)",120, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::peerLayoutAboutToChange()",112, 8, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::peerLayoutChanged()",110, 12, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::updateNodeDetail( const CNodeCombinedStats * stats)",157, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::resizeEvent( QResizeEvent * event)",50, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::showEvent( QShowEvent * event)",59, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::hideEvent( QHideEvent * event)",59, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::showPeersTableContextMenu( const QPoint & point)",64, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::showBanTableContextMenu( const QPoint & point)",62, 0, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::disconnectSelectedNode()",97, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::banSelectedNode( int bantime)",98, 0, 1
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::unbanSelectedNode()",97, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::clearSelectedNode()",81, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::showOrHideBanTableIfRequired()",66, 4, 0
repos/cpp/bitcoin/src/qt/rpcconsole.cpp,"RPCConsole::setTabFocus( enum TabTypes tabType)",52, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"MakeSingleColorImage( QImage & img , const QColor & colorbase)",106, 12, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"ColorizeIcon( const QIcon & ico , const QColor & colorbase)",62, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"ColorizeImage( const QString & filename , const QColor & colorbase)",71, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"ColorizeIcon( const QString & filename , const QColor & colorbase)",74, 4, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::PlatformStyle( const QString & _name , bool _imagesOnButtons , bool _colorizeIcons , bool _useExtraSpacing)",125, 8, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::SingleColorImage( const QString & filename) const",70, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::SingleColorIcon( const QString & filename) const",68, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::SingleColorIcon( const QIcon & icon) const",62, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::TextColorIcon( const QString & filename) const",66, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::TextColorIcon( const QIcon & icon) const",60, 0, 0
repos/cpp/bitcoin/src/qt/platformstyle.cpp,"PlatformStyle::instantiate( const QString & platformId)",75, 0, 0
repos/cpp/bitcoin/src/qt/transactiondesc.cpp,"TransactionDesc::FormatTxStatus( const interfaces :: WalletTx & wtx , const interfaces :: WalletTxStatus & status , bool inMempool , int numBlocks)",163, 12, 0
repos/cpp/bitcoin/src/qt/transactiondesc.cpp,"TransactionDesc::toHTML( interfaces :: Node & node , interfaces :: Wallet & wallet , TransactionRecord * rec , int unit)",443, 8, 0
repos/cpp/bitcoin/src/qt/coincontroltreewidget.cpp,"CoinControlTreeWidget::CoinControlTreeWidget( QWidget * parent)",64, 0, 0
repos/cpp/bitcoin/src/qt/coincontroltreewidget.cpp,"CoinControlTreeWidget::keyPressEvent( QKeyEvent * event)",164, 12, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::SplashScreen( interfaces :: Node & node , Qt :: WindowFlags f , const NetworkStyle * networkStyle)",128, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::~SplashScreen()",34, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::eventFilter( QObject * obj , QEvent * ev)",61, 0, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::finish()",73, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"InitMessage( SplashScreen * splash , const std :: string & message)",74, 0, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"ShowProgress( SplashScreen * splash , const std :: string & title , int nProgress , bool resume_possible)",110, 0, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::ConnectWallet( std :: unique_ptr<interfaces::Wallet> wallet)",122, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::subscribeToCoreSignals()",143, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::unsubscribeFromCoreSignals()",62, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::showMessage( const QString & message , int alignment , const QColor & color)",91, 0, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::paintEvent( QPaintEvent * event)",51, 4, 0
repos/cpp/bitcoin/src/qt/splashscreen.cpp,"SplashScreen::closeEvent( QCloseEvent * event)",77, 4, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::EditAddressDialog( Mode _mode , QWidget * parent)",99, 4, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::~EditAddressDialog()",40, 0, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::setModel( AddressTableModel * _model)",69, 4, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::loadRow( int row)",41, 0, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::saveCurrentRow()",49, 16, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::accept()",111, 16, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::getDuplicateAddressWarning() const",79, 12, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::getAddress() const",46, 0, 0
repos/cpp/bitcoin/src/qt/editaddressdialog.cpp,"EditAddressDialog::setAddress( const QString & _address)",60, 0, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::AskPassphraseDialog( Mode _mode , QWidget * parent)",186, 12, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::~AskPassphraseDialog()",44, 0, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::setModel( WalletModel * _model)",56, 0, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::accept()",196, 17, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::textChanged()",127, 8, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::event( QEvent * event)",77, 12, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::toggleShowPassword( bool show)",70, 4, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::eventFilter( QObject * object , QEvent * event)",101, 12, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"SecureClearQLineEdit( QLineEdit * edit)",77, 4, 0
repos/cpp/bitcoin/src/qt/askpassphrasedialog.cpp,"AskPassphraseDialog::secureClearPassFields()",50, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::dateTimeStr( const QDateTime & date)",100, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::dateTimeStr( qint64 nTime)",62, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::fixedPitchFont()",64, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::DummyAddress( const CChainParams & params)",96, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::setupAddressWidget( QValidatedLineEdit * widget , QWidget * parent)",85, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::parseBitcoinURI( const QUrl & uri , SendCoinsRecipient * out)",93, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::parseBitcoinURI( QString uri , SendCoinsRecipient * out)",59, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatBitcoinURI( const SendCoinsRecipient & info)",133, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::isDust( interfaces :: Node & node , const QString & address , const CAmount & amount)",83, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::HtmlEscape( const QString & str , bool fMultiLine)",56, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::HtmlEscape( const std :: string & str , bool fMultiLine)",64, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::copyEntryData( QAbstractItemView * view , int column , int role)",78, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::getEntryData( QAbstractItemView * view , int column)",69, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::getSaveFileName( QWidget * parent , const QString & caption , const QString & dir , const QString & filter , QString * selectedSuffixOut)",126, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::getOpenFileName( QWidget * parent , const QString & caption , const QString & dir , const QString & filter , QString * selectedSuffixOut)",126, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::blockingGUIThreadConnection()",51, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::checkPoint( const QPoint & p , const QWidget * w)",62, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::isObscured( QWidget * w)",68, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::bringToFront( QWidget * w)",103, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::openDebugLogfile()",87, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::openBitcoinConf()",91, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::ToolTipToRichTextFilter::ToolTipToRichTextFilter( int _size_threshold , QObject * parent)",89, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::ToolTipToRichTextFilter::eventFilter( QObject * obj , QEvent * evt)",107, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::connectViewHeadersSignals()",140, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::disconnectViewHeadersSignals()",143, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::setViewHeaderResizeMode( int logicalIndex , QHeaderView :: ResizeMode resizeMode)",117, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::resizeColumn( int nColumnIndex , int width)",81, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::getColumnsWidth()",75, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::getAvailableWidthForColumn( int column)",102, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::adjustTableColumnsWidth()",99, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::stretchColumnWidth( int column)",70, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::on_sectionResized( int logicalIndex , int oldSize , int newSize)",101, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::on_geometriesChanged()",100, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer( QTableView * table , int lastColMinimumWidth , int allColsMinimumWidth , QObject * parent)",155, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::StartupShortcutPath()",116, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::GetStartOnSystemStartup()",46, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::SetStartOnSystemStartup( bool fAutoStart)",160, 12, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::GetAutostartDir()",69, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::GetAutostartFilePath()",67, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::GetStartOnSystemStartup()",59, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::SetStartOnSystemStartup( bool fAutoStart)",167, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::findStartupItemInList( LSSharedFileListRef list , CFURLRef findUrl)",106, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::GetStartOnSystemStartup()",115, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::SetStartOnSystemStartup( bool fAutoStart)",136, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::GetStartOnSystemStartup()",49, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::SetStartOnSystemStartup( bool fAutoStart)",64, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::setClipboard( const QString & str)",68, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::qstringToBoostPath( const QString & path)",49, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::boostPathToQString( const fs :: path & path)",50, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatDurationStr( int secs)",67, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatServicesStr( quint64 mask)",77, 16, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatPingTime( double dPingTime)",188, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatTimeOffset( int64_t nTimeOffset)",82, 2, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatNiceTimeOffset( qint64 secs)",154, 8, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::formatBytes( uint64_t bytes)",74, 4, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::calculateIdealFontSize( int width , const QString & text , QFont font , qreal minPointSize , qreal font_size)",112, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::ClickableLabel::mouseReleaseEvent( QMouseEvent * event)",59, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::ClickableProgressBar::mouseReleaseEvent( QMouseEvent * event)",65, 0, 0
repos/cpp/bitcoin/src/qt/guiutil.cpp,"GUIUtil::ItemDelegate::eventFilter( QObject * object , QEvent * event)",71, 8, 0
repos/cpp/bitcoin/src/qt/transactiondescdialog.cpp,"TransactionDescDialog::TransactionDescDialog( const QModelIndex & idx , QWidget * parent)",102, 4, 0
repos/cpp/bitcoin/src/qt/transactiondescdialog.cpp,"TransactionDescDialog::~TransactionDescDialog()",48, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::WalletModel( std :: unique_ptr<interfaces::Wallet> wallet , interfaces :: Node & node , const PlatformStyle * platformStyle , OptionsModel * _optionsModel , QObject * parent)",177, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::~WalletModel()",34, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::updateStatus()",66, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::pollBalanceChanged()",78, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::checkBalanceChanged( const interfaces :: WalletBalances & new_balances)",86, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::updateTransaction()",61, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::updateAddressBook( const QString & address , const QString & label , bool isMine , const QString & purpose , int status)",82, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::updateWatchOnlyFlag( bool fHaveWatchonly)",59, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::validateAddress( const QString & address)",60, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::prepareTransaction( WalletModelTransaction & transaction , const CCoinControl & coinControl)",131, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::sendCoins( WalletModelTransaction & transaction)",161, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::getOptionsModel()",45, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::getAddressTableModel()",55, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::getTransactionTableModel()",63, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::getRecentRequestsTableModel()",69, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::getEncryptionStatus() const",71, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::setWalletEncrypted( bool encrypted , const SecureString & passphrase)",85, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::setWalletLocked( bool locked , const SecureString & passPhrase)",79, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::changePassphrase( const SecureString & oldPass , const SecureString & newPass)",93, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"NotifyUnload( WalletModel * walletModel)",76, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"NotifyKeyStoreStatusChanged( WalletModel * walletmodel)",82, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"NotifyAddressBookChanged( WalletModel * walletmodel , const CTxDestination & address , const std :: string & label , bool isMine , const std :: string & purpose , ChangeType status)",181, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"NotifyTransactionChanged( WalletModel * walletmodel , const uint256 & hash , ChangeType status)",103, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"ShowProgress( WalletModel * walletmodel , const std :: string & title , int nProgress)",92, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"NotifyWatchonlyChanged( WalletModel * walletmodel , bool fHaveWatchonly)",88, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::subscribeToCoreSignals()",138, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::unsubscribeFromCoreSignals()",50, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::requestUnlock()",90, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::UnlockContext::UnlockContext( WalletModel * _wallet , bool _valid , bool _relock)",92, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::UnlockContext::~UnlockContext()",45, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::UnlockContext::CopyFrom( const UnlockContext & rhs)",68, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::loadReceiveRequests( std :: vector<std::string> & vReceiveRequests)",82, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::saveReceiveRequest( const std :: string & sAddress , const int64_t nId , const std :: string & sRequest)",114, 0, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::bumpFee( uint256 hash , uint256 & new_hash)",117, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::isWalletEnabled()",71, 3, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::privateKeysDisabled() const",72, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::getWalletName() const",62, 4, 0
repos/cpp/bitcoin/src/qt/walletmodel.cpp,"WalletModel::isMultiwallet()",43, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::WalletFrame( const PlatformStyle * _platformStyle , BitcoinGUI * _gui)",82, 0, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::~WalletFrame()",28, 0, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::setClientModel( ClientModel * _clientModel)",60, 0, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::addWallet( WalletModel * walletModel)",108, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::setCurrentWallet( const QString & name)",57, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::removeWallet( const QString & name)",56, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::removeAllWallets()",79, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::handlePaymentRequest( const SendCoinsRecipient & recipient)",76, 0, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::showOutOfSyncWarning( bool fShow)",79, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::gotoOverviewPage()",79, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::gotoHistoryPage()",79, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::gotoReceiveCoinsPage()",79, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::gotoSendCoinsPage( QString addr)",79, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::gotoSignMessageTab( QString addr)",51, 0, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::gotoVerifyMessageTab( QString addr)",53, 0, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::encryptWallet( bool status)",50, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::backupWallet()",50, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::changePassphrase()",50, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::unlockWallet()",50, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::usedSendingAddresses()",50, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::usedReceivingAddresses()",50, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::currentWalletView()",68, 4, 0
repos/cpp/bitcoin/src/qt/walletframe.cpp,"WalletFrame::outOfSyncWarningClicked()",44, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::OptionsDialog( QWidget * parent , bool enableWallet)",166, 12, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::~OptionsDialog()",32, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::setModel( OptionsModel * _model)",142, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::setCurrentTab( OptionsDialog :: Tab tab)",77, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::setMapper()",84, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::setOkButtonState( bool fState)",50, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::on_resetButton_clicked()",135, 12, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::on_openBitcoinConfButton_clicked()",107, 8, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::on_okButton_clicked()",42, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::on_cancelButton_clicked()",46, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::on_hideTrayIcon_stateChanged( int fState)",61, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::togglePruneWarning( bool enabled)",66, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::showRestartWarning( bool fPersistent)",90, 8, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::clearStatusLabel()",47, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::updateProxyValidationState()",177, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"OptionsDialog::updateDefaultProxyNets()",131, 4, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"ProxyAddressValidator::ProxyAddressValidator( QObject * parent)",64, 0, 0
repos/cpp/bitcoin/src/qt/optionsdialog.cpp,"ProxyAddressValidator::validate( QString & input , int & pos) const",87, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableEntry::AddressTableEntry()",27, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableEntry::AddressTableEntry( Type _type , const QString & _label , const QString & _address)",83, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableEntryLessThan::operator ( )( const AddressTableEntry & a , const AddressTableEntry & b) const",82, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableEntryLessThan::operator ( )( const AddressTableEntry & a , const QString & b) const",72, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableEntryLessThan::operator ( )( const QString & a , const AddressTableEntry & b) const",72, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"translateTransactionType( const QString & strPurpose , bool isMine)",96, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTablePriv::AddressTablePriv( AddressTableModel * _parent)",59, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTablePriv::refreshAddressTable( interfaces :: Wallet & wallet)",108, 8, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTablePriv::updateEntry( const QString & address , const QString & label , bool isMine , const QString & purpose , int status)",116, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTablePriv::size()",42, 8, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTablePriv::index( int idx)",56, 8, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::AddressTableModel( WalletModel * parent)",60, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::~AddressTableModel()",40, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::rowCount( const QModelIndex & parent) const",65, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::columnCount( const QModelIndex & parent) const",68, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::data( const QModelIndex & index , int role) const",87, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::setData( const QModelIndex & index , const QVariant & value , int role)",110, 16, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::headerData( int section , Qt :: Orientation orientation , int role) const",97, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::flags( const QModelIndex & index) const",87, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::index( int row , int column , const QModelIndex & parent) const",91, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::updateEntry( const QString & address , const QString & label , bool isMine , const QString & purpose , int status)",79, 8, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::addRow( const QString & type , const QString & label , const QString & address , const OutputType address_type)",132, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::removeRows( int row , int count , const QModelIndex & parent)",89, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::labelForAddress( const QString & address) const",73, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::purposeForAddress( const QString & address) const",75, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::getAddressData( const QString & address , std :: string * name , std :: string * purpose) const",97, 4, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::lookupAddress( const QString & address) const",77, 32, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::GetDefaultAddressType() const",119, 0, 0
repos/cpp/bitcoin/src/qt/addresstablemodel.cpp,"AddressTableModel::emitDataChanged( int idx)",101, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::SendCoinsEntry( const PlatformStyle * _platformStyle , QWidget * parent)",122, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::~SendCoinsEntry()",34, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::on_pasteButton_clicked()",59, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::on_addressBookButton_clicked()",106, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::on_payTo_textChanged( const QString & address)",66, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::setModel( WalletModel * _model)",121, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::clear()",69, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::checkSubtractFeeFromAmount()",57, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::deleteClicked()",37, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::useAvailableBalanceClicked()",50, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::validate( interfaces :: Node & node)",86, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::getValue()",105, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::setupTabChain( QWidget * prev)",84, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::setValue( const SendCoinsRecipient & value)",125, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::setAddress( const QString & address)",56, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::setAmount( const CAmount & amount)",54, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::isClear()",107, 4, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::setFocus()",32, 0, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::updateDisplayUnit()",86, 8, 0
repos/cpp/bitcoin/src/qt/sendcoinsentry.cpp,"SendCoinsEntry::updateLabel( const QString & address)",87, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"ipcServerName()",65, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::ipcParseCommandLine( interfaces :: Node & node , int argc , char * argv [ ])",109, 12, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::ipcSendCommandLine()",72, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::PaymentServer( QObject * parent , bool startLocalServer)",105, 12, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::~PaymentServer()",49, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::eventFilter( QObject * object , QEvent * event)",73, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::uiReady()",50, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::handleURIOrFile( const QString & s)",127, 20, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::handleURIConnection()",106, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::setOptionsModel( OptionsModel * _optionsModel)",65, 0, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"X509StoreDeleter::operator ( )( X509_STORE * b)",39, 6, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"X509Deleter::operator ( )( X509 * b)",49, 6, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"ReportInvalidCertificate( const QSslCertificate & cert)",290, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::LoadRootCAs( X509_STORE * _store)",129, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::initNetManager()",116, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::readPaymentRequestFromFile( const QString & filename , PaymentRequestPlus & request)",101, 0, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::processPaymentRequest( const PaymentRequestPlus & request , SendCoinsRecipient & recipient)",125, 12, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::fetchRequest( const QUrl & url)",82, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::fetchPaymentACK( WalletModel * walletModel , const SendCoinsRecipient & recipient , QByteArray transaction)",207, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::netRequestFinished( QNetworkReply * reply)",94, 12, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::reportSslErrors( QNetworkReply * reply , const QList<QSslError> & errs)",91, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::handlePaymentACK( const QString & paymentACKMsg)",129, 4, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::verifyNetwork( interfaces :: Node & node , const payments :: PaymentDetails & requestDetails)",120, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::verifyExpired( const payments :: PaymentDetails & requestDetails)",121, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::verifySize( qint64 requestSize)",108, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::verifyAmount( const CAmount & requestAmount)",118, 8, 0
repos/cpp/bitcoin/src/qt/paymentserver.cpp,"PaymentServer::getCertStore()",42, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::WalletView( const PlatformStyle * _platformStyle , QWidget * parent)",175, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::~WalletView()",26, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::setBitcoinGUI( BitcoinGUI * gui)",118, 8, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::setClientModel( ClientModel * _clientModel)",59, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::setWalletModel( WalletModel * _walletModel)",139, 8, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::processNewTransaction( const QModelIndex & parent , int start , int)",148, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::gotoOverviewPage()",36, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::gotoHistoryPage()",40, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::gotoReceiveCoinsPage()",40, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::gotoSendCoinsPage( QString addr)",49, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::gotoSignMessageTab( QString addr)",105, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::gotoVerifyMessageTab( QString addr)",105, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::handlePaymentRequest( const SendCoinsRecipient & recipient)",75, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::showOutOfSyncWarning( bool fShow)",50, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::updateEncryptionStatus()",42, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::encryptWallet( bool status)",105, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::backupWallet()",122, 8, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::changePassphrase()",68, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::unlockWallet()",68, 8, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::usedSendingAddresses()",53, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::usedReceivingAddresses()",55, 4, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::showProgress( const QString & title , int nProgress)",67, 0, 0
repos/cpp/bitcoin/src/qt/walletview.cpp,"WalletView::requestedSyncWarningInfo()",44, 0, 0
repos/cpp/bitcoin/src/qt/openuridialog.cpp,"OpenURIDialog::OpenURIDialog( QWidget * parent)",49, 4, 0
repos/cpp/bitcoin/src/qt/openuridialog.cpp,"OpenURIDialog::~OpenURIDialog()",32, 0, 0
repos/cpp/bitcoin/src/qt/openuridialog.cpp,"OpenURIDialog::getURI()",32, 0, 0
repos/cpp/bitcoin/src/qt/openuridialog.cpp,"OpenURIDialog::accept()",49, 4, 0
repos/cpp/bitcoin/src/qt/openuridialog.cpp,"OpenURIDialog::on_selectFileButton_clicked()",115, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::ReceiveCoinsDialog( const PlatformStyle * _platformStyle , QWidget * parent)",112, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::setModel( WalletModel * _model)",142, 8, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::~ReceiveCoinsDialog()",42, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::clear()",33, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::reject()",34, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::accept()",34, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::updateDisplayUnit()",83, 8, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::on_receiveButton_clicked()",119, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::on_recentRequestsView_doubleClicked( const QModelIndex & index)",87, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::recentRequestsView_selectionChanged( const QItemSelection & selected , const QItemSelection & deselected)",127, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::on_showRequestButton_clicked()",101, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::on_removeRequestButton_clicked()",113, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::resizeEvent( QResizeEvent * event)",80, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::keyPressEvent( QKeyEvent * event)",97, 8, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::selectedRow()",101, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::copyColumnToClipboard( int column)",140, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::showMenu( const QPoint & point)",55, 0, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::copyURI()",92, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::copyLabel()",60, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::copyMessage()",62, 4, 0
repos/cpp/bitcoin/src/qt/receivecoinsdialog.cpp,"ReceiveCoinsDialog::copyAmount()",61, 4, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"CSVModelWriter::CSVModelWriter( const QString & _filename , QObject * parent)",76, 0, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"CSVModelWriter::setModel( const QAbstractItemModel * _model)",64, 0, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"CSVModelWriter::addColumn( const QString & title , int column , int role)",75, 0, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"writeValue( QTextStream & f , const QString & value)",61, 0, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"writeSep( QTextStream & f)",37, 0, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"writeNewline( QTextStream & f)",41, 0, 0
repos/cpp/bitcoin/src/qt/csvmodelwriter.cpp,"CSVModelWriter::write()",86, 12, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"NodeLessThan::operator ( )( const CNodeCombinedStats & left , const CNodeCombinedStats & right) const",101, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTablePriv::refreshPeers( interfaces :: Node & node)",110, 12, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTablePriv::size() const",39, 8, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTablePriv::index( int idx)",54, 8, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::PeerTableModel( interfaces :: Node & node , ClientModel * parent)",117, 4, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::~PeerTableModel()",34, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::startAutoRefresh()",40, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::stopAutoRefresh()",39, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::rowCount( const QModelIndex & parent) const",62, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::columnCount( const QModelIndex & parent) const",65, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::data( const QModelIndex & index , int role) const",117, 12, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::headerData( int section , Qt :: Orientation orientation , int role) const",94, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::flags( const QModelIndex & index) const",69, 4, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::index( int row , int column , const QModelIndex & parent) const",88, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::getNodeStats( int idx)",64, 0, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::refresh()",37, 4, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::getRowByNodeId( NodeId nodeid)",73, 4, 0
repos/cpp/bitcoin/src/qt/peertablemodel.cpp,"PeerTableModel::sort( int column , Qt :: SortOrder order)",59, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BannedNodeLessThan::operator ( )( const CCombinedBan & left , const CCombinedBan & right) const",95, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTablePriv::refreshBanlist( interfaces :: Node & node)",112, 12, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTablePriv::size() const",37, 8, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTablePriv::index( int idx)",52, 8, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::BanTableModel( interfaces :: Node & node , ClientModel * parent)",76, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::~BanTableModel()",32, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::rowCount( const QModelIndex & parent) const",61, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::columnCount( const QModelIndex & parent) const",64, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::data( const QModelIndex & index , int role) const",77, 4, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::headerData( int section , Qt :: Orientation orientation , int role) const",93, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::flags( const QModelIndex & index) const",69, 4, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::index( int row , int column , const QModelIndex & parent) const",87, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::refresh()",37, 4, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::sort( int column , Qt :: SortOrder order)",58, 0, 0
repos/cpp/bitcoin/src/qt/bantablemodel.cpp,"BanTableModel::shouldShow()",33, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TxLessThan::operator ( )( const TransactionRecord & a , const TransactionRecord & b) const",82, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TxLessThan::operator ( )( const TransactionRecord & a , const uint256 & b) const",72, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TxLessThan::operator ( )( const uint256 & a , const TransactionRecord & b) const",72, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::TransactionTablePriv( TransactionTableModel * _parent)",68, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::refreshWallet( interfaces :: Wallet & wallet)",87, 20, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::updateWallet( interfaces :: Wallet & wallet , const uint256 & hash , int status , bool showTransaction)",134, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::size()",36, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::index( interfaces :: Wallet & wallet , int idx)",106, 12, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::describe( interfaces :: Node & node , interfaces :: Wallet & wallet , TransactionRecord * rec , int unit)",107, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTablePriv::getTxHex( interfaces :: Wallet & wallet , TransactionRecord * rec)",73, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::TransactionTableModel( const PlatformStyle * _platformStyle , WalletModel * parent)",170, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::~TransactionTableModel()",48, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::updateAmountColumnTitle()",108, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::updateTransaction( const QString & hash , int status , bool showTransaction)",101, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::updateConfirmations()",83, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::rowCount( const QModelIndex & parent) const",69, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::columnCount( const QModelIndex & parent) const",72, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::formatTxStatus( const TransactionRecord * wtx) const",151, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::formatTxDate( const TransactionRecord * wtx) const",80, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::lookupAddress( const std :: string & address , bool tooltip) const",107, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::formatTxType( const TransactionRecord * wtx) const",80, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::txAddressDecoration( const TransactionRecord * wtx) const",88, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::formatTxToAddress( const TransactionRecord * wtx , bool tooltip) const",105, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::addressColor( const TransactionRecord * wtx) const",116, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::formatTxAmount( const TransactionRecord * wtx , bool showUnconfirmed , BitcoinUnits :: SeparatorStyle separators) const",145, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::txStatusDecoration( const TransactionRecord * wtx) const",87, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::txWatchonlyDecoration( const TransactionRecord * wtx) const",90, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::formatTooltip( const TransactionRecord * rec) const",101, 7, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::data( const QModelIndex & index , int role) const",130, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::headerData( int section , Qt :: Orientation orientation , int role) const",105, 16, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::index( int row , int column , const QModelIndex & parent) const",95, 0, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::updateDisplayUnit()",73, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionNotification::TransactionNotification()",33, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionNotification::TransactionNotification( uint256 _hash , ChangeType _status , bool _showTransaction)",87, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionNotification::invoke( QObject * ttm)",100, 8, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"NotifyTransactionChanged( TransactionTableModel * ttm , const uint256 & hash , ChangeType status)",119, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"ShowProgress( TransactionTableModel * ttm , const std :: string & title , int nProgress)",125, 16, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::subscribeToCoreSignals()",137, 4, 0
repos/cpp/bitcoin/src/qt/transactiontablemodel.cpp,"TransactionTableModel::unsubscribeFromCoreSignals()",57, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::BitcoinUnits( QObject * parent)",45, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::availableUnits()",57, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::valid( int unit)",35, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::longName( int unit)",56, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::shortName( int unit)",49, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::description( int unit)",102, 4, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::factor( int unit)",38, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::decimals( int unit)",37, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::format( int unit , const CAmount & nIn , bool fPlus , SeparatorStyle separators)",98, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::formatWithUnit( int unit , const CAmount & amount , bool plussign , SeparatorStyle separators)",112, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::formatHtmlWithUnit( int unit , const CAmount & amount , bool plussign , SeparatorStyle separators)",116, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::parse( int unit , const QString & value , CAmount * val_out)",75, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::getAmountColumnTitle( int unit)",65, 8, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::rowCount( const QModelIndex & parent) const",60, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::data( const QModelIndex & index , int role) const",70, 0, 0
repos/cpp/bitcoin/src/qt/bitcoinunits.cpp,"BitcoinUnits::maxMoney()",33, 0, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CCoinControlWidgetItem::operator <( const QTreeWidgetItem & other) const",149, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::CoinControlDialog( const PlatformStyle * _platformStyle , QWidget * parent)",147, 8, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::~CoinControlDialog()",75, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::setModel( WalletModel * _model)",78, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::buttonBoxClicked( QAbstractButton * button)",75, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::buttonSelectAllClicked()",91, 8, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::showMenu( const QPoint & point)",188, 8, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::copyAmount()",93, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::copyLabel()",122, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::copyAddress()",124, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::copyTransactionHash()",89, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::lockCoin()",165, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::unlockCoin()",165, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardQuantity()",65, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardAmount()",117, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardFee()",135, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardAfterFee()",145, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardBytes()",86, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardLowOutput()",66, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::clipboardChange()",141, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::sortView( int column , Qt :: SortOrder order)",71, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::headerSectionClicked( int logicalIndex)",196, 12, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::radioTreeMode( bool checked)",52, 0, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::radioListMode( bool checked)",52, 0, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::viewItemChanged( QTreeWidgetItem * item , int column)",213, 4, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::updateLabelLocked()",72, 7, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::updateLabels( WalletModel * model , QDialog * dialog)",178, 8, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::coinControl()",47, 0, 0
repos/cpp/bitcoin/src/qt/coincontroldialog.cpp,"CoinControlDialog::updateView()",144, 12, 0
repos/cpp/bitcoin/src/qt/winshutdownmonitor.cpp,"WinShutdownMonitor::nativeEventFilter( const QByteArray & eventType , void * pMessage , long * pnResult)",113, 16, 0
repos/cpp/bitcoin/src/qt/winshutdownmonitor.cpp,"WinShutdownMonitor::registerShutdownBlockReason( const QString & strReason , const HWND & mainWinId)",137, 4, 0
repos/cpp/bitcoin/src/qt/transactionrecord.cpp,"TransactionRecord::showTransaction()",68, 4, 0
repos/cpp/bitcoin/src/qt/transactionrecord.cpp,"TransactionRecord::decomposeTransaction( const interfaces :: WalletTx & wtx)",131, 12, 0
repos/cpp/bitcoin/src/qt/transactionrecord.cpp,"TransactionRecord::updateStatus( const interfaces :: WalletTxStatus & wtx , int numBlocks)",91, 0, 0
repos/cpp/bitcoin/src/qt/transactionrecord.cpp,"TransactionRecord::statusUpdateNeeded( int numBlocks) const",69, 4, 0
repos/cpp/bitcoin/src/qt/transactionrecord.cpp,"TransactionRecord::getTxHash() const",52, 4, 0
repos/cpp/bitcoin/src/qt/transactionrecord.cpp,"TransactionRecord::getOutputIndex() const",46, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::RecentRequestsTableModel( WalletModel * parent)",132, 4, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::~RecentRequestsTableModel()",54, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::rowCount( const QModelIndex & parent) const",72, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::columnCount( const QModelIndex & parent) const",75, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::data( const QModelIndex & index , int role) const",155, 16, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::setData( const QModelIndex & index , const QVariant & value , int role)",98, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::headerData( int section , Qt :: Orientation orientation , int role) const",104, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::updateAmountColumnTitle()",60, 4, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::getAmountTitle()",178, 4, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::index( int row , int column , const QModelIndex & parent) const",98, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::removeRows( int row , int count , const QModelIndex & parent)",101, 12, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::flags( const QModelIndex & index) const",78, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::addNewRequest( const SendCoinsRecipient & recipient)",98, 4, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::addNewRequest( const std :: string & recipient)",75, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::addNewRequest( RecentRequestEntry & recipient)",76, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::sort( int column , Qt :: SortOrder order)",114, 4, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestsTableModel::updateDisplayUnit()",51, 0, 0
repos/cpp/bitcoin/src/qt/recentrequeststablemodel.cpp,"RecentRequestEntryLessThan::operator ( )( RecentRequestEntry & left , RecentRequestEntry & right) const",103, 0, 0
repos/cpp/bitcoin/src/qt/test/util.cpp,"ConfirmMessage( QString * text , int msec)",78, 16, 0
repos/cpp/bitcoin/src/qt/test/paymentservertests.cpp,"parse_b64der_cert( const char * cert_data)",63, 4, 0
repos/cpp/bitcoin/src/qt/test/paymentservertests.cpp,"handleRequest( PaymentServer * server , std :: vector<unsigned char> & data)",97, 0, 0
repos/cpp/bitcoin/src/qt/test/paymentservertests.cpp,"PaymentServerTests::paymentServerTests()",104, 4, 0
repos/cpp/bitcoin/src/qt/test/paymentservertests.cpp,"RecipientCatcher::getRecipient( const SendCoinsRecipient & r)",65, 0, 0
repos/cpp/bitcoin/src/qt/test/test_main.cpp,"main( int argc , char * argv [ ])",137, 4, 0
repos/cpp/bitcoin/src/qt/test/rpcnestedtests.cpp,"rpcNestedTest_rpc( const JSONRPCRequest & request)",65, 0, 0
repos/cpp/bitcoin/src/qt/test/rpcnestedtests.cpp,"RPCNestedTests::rpcNestedTests()",199, 4, 0
repos/cpp/bitcoin/src/qt/test/compattests.cpp,"CompatTests::bswapTests()",48, 0, 1
repos/cpp/bitcoin/src/qt/test/uritests.cpp,"URITests::uriTests()",124, 4, 0
repos/cpp/bitcoin/src/qt/test/addressbooktests.cpp,"EditAddressAndSubmit( EditAddressDialog * dialog , const QString & label , const QString & address , QString expected_msg)",77, 4, 0
repos/cpp/bitcoin/src/qt/test/addressbooktests.cpp,"TestAddAddressesToSendBook()",121, 4, 0
repos/cpp/bitcoin/src/qt/test/addressbooktests.cpp,"AddressBookTests::addressBookTests()",124, 8, 0
repos/cpp/bitcoin/src/qt/test/wallettests.cpp,"ConfirmSend( QString * text = nullptr , bool cancel = false)",107, 16, 0
repos/cpp/bitcoin/src/qt/test/wallettests.cpp,"SendCoins( CWallet & wallet , SendCoinsDialog & sendCoinsDialog , const CTxDestination & address , CAmount amount , bool rbf)",141, 4, 0
repos/cpp/bitcoin/src/qt/test/wallettests.cpp,"FindTx( const QAbstractItemModel & model , const uint256 & txid)",76, 8, 0
repos/cpp/bitcoin/src/qt/test/wallettests.cpp,"BumpFee( TransactionView & view , const uint256 & txid , bool expectDisabled , std :: string expectError , bool cancel)",116, 0, 0
repos/cpp/bitcoin/src/qt/test/wallettests.cpp,"TestGUI()",135, 12, 0
repos/cpp/bitcoin/src/qt/test/wallettests.cpp,"WalletTests::walletTests()",119, 8, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"QuadRound( __m128i & state0 , __m128i & state1 , uint64_t k1 , uint64_t k0)",114, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"QuadRound( __m128i & state0 , __m128i & state1 , __m128i m , uint64_t k1 , uint64_t k0)",125, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"ShiftMessageA( __m128i & m0 , __m128i m1)",83, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"ShiftMessageC( __m128i & m0 , __m128i m1 , __m128i & m2)",96, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"ShiftMessageB( __m128i & m0 , __m128i m1 , __m128i & m2)",95, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"Shuffle( __m128i & s0 , __m128i & s1)",77, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"Unshuffle( __m128i & s0 , __m128i & s1)",79, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"Load( const unsigned char * in)",77, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"Save( unsigned char * out , __m128i s)",80, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"sha256_shani::Transform( uint32_t * s , const unsigned char * chunk , size_t blocks)",77, 8, 0
repos/cpp/bitcoin/src/crypto/sha256_shani.cpp,"sha256d64_shani::Transform_2way( unsigned char * out , const unsigned char * in)",76, 4, 0
repos/cpp/bitcoin/src/crypto/siphash.cpp,"CSipHasher::CSipHasher( uint64_t k0 , uint64_t k1)",49, 0, 0
repos/cpp/bitcoin/src/crypto/siphash.cpp,"CSipHasher::Write( uint64_t data)",57, 4, 0
repos/cpp/bitcoin/src/crypto/siphash.cpp,"CSipHasher::Write( const unsigned char * data , size_t size)",70, 0, 0
repos/cpp/bitcoin/src/crypto/siphash.cpp,"CSipHasher::Finalize() const",57, 4, 0
repos/cpp/bitcoin/src/crypto/siphash.cpp,"SipHashUint256( uint64_t k0 , uint64_t k1 , const uint256 & val)",70, 0, 0
repos/cpp/bitcoin/src/crypto/siphash.cpp,"SipHashUint256Extra( uint64_t k0 , uint64_t k1 , const uint256 & val , uint32_t extra)",91, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128Encrypt::AES128Encrypt( const unsigned char key [ 16 ])",58, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128Encrypt::~AES128Encrypt()",34, 4, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128Encrypt::Encrypt( unsigned char ciphertext [ 16 ] , const unsigned char plaintext [ 16 ]) const",99, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128Decrypt::AES128Decrypt( const unsigned char key [ 16 ])",58, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128Decrypt::~AES128Decrypt()",34, 4, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128Decrypt::Decrypt( unsigned char plaintext [ 16 ] , const unsigned char ciphertext [ 16 ]) const",99, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256Encrypt::AES256Encrypt( const unsigned char key [ 32 ])",58, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256Encrypt::~AES256Encrypt()",34, 4, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256Encrypt::Encrypt( unsigned char ciphertext [ 16 ] , const unsigned char plaintext [ 16 ]) const",99, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256Decrypt::AES256Decrypt( const unsigned char key [ 32 ])",58, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256Decrypt::~AES256Decrypt()",34, 4, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256Decrypt::Decrypt( unsigned char plaintext [ 16 ] , const unsigned char ciphertext [ 16 ]) const",99, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"CBCEncrypt( const T & enc , const unsigned char iv [ AES_BLOCKSIZE ] , const unsigned char * data , int size , bool pad , unsigned char * out)",142, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"CBCDecrypt( const T & dec , const unsigned char iv [ AES_BLOCKSIZE ] , const unsigned char * data , int size , bool pad , unsigned char * out)",142, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256CBCEncrypt::AES256CBCEncrypt( const unsigned char key [ AES256_KEYSIZE ] , const unsigned char ivIn [ AES_BLOCKSIZE ] , bool padIn)",129, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256CBCEncrypt::Encrypt( const unsigned char * data , int size , unsigned char * out) const",93, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256CBCEncrypt::~AES256CBCEncrypt()",38, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256CBCDecrypt::AES256CBCDecrypt( const unsigned char key [ AES256_KEYSIZE ] , const unsigned char ivIn [ AES_BLOCKSIZE ] , bool padIn)",129, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256CBCDecrypt::Decrypt( const unsigned char * data , int size , unsigned char * out) const",93, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES256CBCDecrypt::~AES256CBCDecrypt()",38, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128CBCEncrypt::AES128CBCEncrypt( const unsigned char key [ AES128_KEYSIZE ] , const unsigned char ivIn [ AES_BLOCKSIZE ] , bool padIn)",129, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128CBCEncrypt::~AES128CBCEncrypt()",38, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128CBCEncrypt::Encrypt( const unsigned char * data , int size , unsigned char * out) const",93, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128CBCDecrypt::AES128CBCDecrypt( const unsigned char key [ AES128_KEYSIZE ] , const unsigned char ivIn [ AES_BLOCKSIZE ] , bool padIn)",129, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128CBCDecrypt::~AES128CBCDecrypt()",38, 0, 0
repos/cpp/bitcoin/src/crypto/aes.cpp,"AES128CBCDecrypt::Decrypt( const unsigned char * data , int size , unsigned char * out) const",93, 0, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"rotl32( uint32_t v , int c)",98, 0, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"ChaCha20::SetKey( const unsigned char * k , size_t keylen)",61, 0, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"ChaCha20::ChaCha20()",37, 4, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"ChaCha20::ChaCha20( const unsigned char * k , size_t keylen)",58, 0, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"ChaCha20::SetIV( uint64_t iv)",34, 0, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"ChaCha20::Seek( uint64_t pos)",34, 0, 0
repos/cpp/bitcoin/src/crypto/chacha20.cpp,"ChaCha20::Output( unsigned char * c , size_t bytes)",83, 4, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Ch( uint64_t x , uint64_t y , uint64_t z)",85, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Maj( uint64_t x , uint64_t y , uint64_t z)",92, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Sigma0( uint64_t x)",111, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Sigma1( uint64_t x)",111, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::sigma0( uint64_t x)",98, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::sigma1( uint64_t x)",99, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Round( uint64_t a , uint64_t b , uint64_t c , uint64_t & d , uint64_t e , uint64_t f , uint64_t g , uint64_t & h , uint64_t k , uint64_t w)",140, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Initialize( uint64_t * s)",36, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"sha512::Transform( uint64_t * s , const unsigned char * chunk)",97, 4, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"CSHA512::CSHA512()",30, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"CSHA512::Write( const unsigned char * data , size_t len)",63, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"CSHA512::Finalize( unsigned char hash [ OUTPUT_SIZE ])",56, 0, 0
repos/cpp/bitcoin/src/crypto/sha512.cpp,"CSHA512::Reset()",27, 4, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::K( uint32_t x)",62, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Add( __m256i x , __m256i y)",76, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Add( __m256i x , __m256i y , __m256i z)",82, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Add( __m256i x , __m256i y , __m256i z , __m256i w)",101, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Add( __m256i x , __m256i y , __m256i z , __m256i w , __m256i v)",115, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Inc( __m256i & x , __m256i y)",71, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Inc( __m256i & x , __m256i y , __m256i z)",85, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Inc( __m256i & x , __m256i y , __m256i z , __m256i w)",99, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Xor( __m256i x , __m256i y)",76, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Xor( __m256i x , __m256i y , __m256i z)",82, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Or( __m256i x , __m256i y)",74, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::And( __m256i x , __m256i y)",76, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::ShR( __m256i x , int n)",73, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::ShL( __m256i x , int n)",73, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Ch( __m256i x , __m256i y , __m256i z)",89, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Maj( __m256i x , __m256i y , __m256i z)",96, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Sigma0( __m256i x)",132, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Sigma1( __m256i x)",131, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::sigma0( __m256i x)",115, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::sigma1( __m256i x)",117, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Round( __m256i a , __m256i b , __m256i c , __m256i & d , __m256i e , __m256i f , __m256i g , __m256i & h , __m256i k)",150, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Read8( const unsigned char * chunk , int offset)",167, 4, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Write8( unsigned char * out , int offset , __m256i v)",162, 4, 0
repos/cpp/bitcoin/src/crypto/sha256_avx2.cpp,"sha256d64_avx2::Transform_8way( unsigned char * out , const unsigned char * in)",109, 4, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::Round( uint32_t a , uint32_t & b , uint32_t c , uint32_t d , uint32_t & e , uint32_t f , uint32_t k , uint32_t w)",116, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::f1( uint32_t b , uint32_t c , uint32_t d)",85, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::f2( uint32_t b , uint32_t c , uint32_t d)",77, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::f3( uint32_t b , uint32_t c , uint32_t d)",91, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::left( uint32_t x)",66, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::Initialize( uint32_t * s)",36, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"sha1::Transform( uint32_t * s , const unsigned char * chunk)",83, 4, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"CSHA1::CSHA1()",26, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"CSHA1::Write( const unsigned char * data , size_t len)",59, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"CSHA1::Finalize( unsigned char hash [ OUTPUT_SIZE ])",54, 0, 0
repos/cpp/bitcoin/src/crypto/sha1.cpp,"CSHA1::Reset()",25, 4, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::f1( uint32_t x , uint32_t y , uint32_t z)",77, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::f2( uint32_t x , uint32_t y , uint32_t z)",86, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::f3( uint32_t x , uint32_t y , uint32_t z)",80, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::f4( uint32_t x , uint32_t y , uint32_t z)",86, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::f5( uint32_t x , uint32_t y , uint32_t z)",80, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::Initialize( uint32_t * s)",36, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::rol( uint32_t x , int i)",78, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::Round( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t f , uint32_t x , uint32_t k , int r)",123, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R11( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",145, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R21( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R31( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R41( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R51( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R12( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R22( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R32( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R42( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",156, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::R52( uint32_t & a , uint32_t b , uint32_t & c , uint32_t d , uint32_t e , uint32_t x , int r)",145, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"ripemd160::Transform( uint32_t * s , const unsigned char * chunk)",125, 4, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"CRIPEMD160::CRIPEMD160()",36, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"CRIPEMD160::Write( const unsigned char * data , size_t len)",69, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"CRIPEMD160::Finalize( unsigned char hash [ OUTPUT_SIZE ])",59, 0, 0
repos/cpp/bitcoin/src/crypto/ripemd160.cpp,"CRIPEMD160::Reset()",32, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse4.cpp,"sha256_sse4::Transform( uint32_t * s , const unsigned char * chunk , size_t blocks)",203, 8, 0
repos/cpp/bitcoin/src/crypto/hmac_sha512.cpp,"CHMAC_SHA512::CHMAC_SHA512( const unsigned char * key , size_t keylen)",68, 0, 0
repos/cpp/bitcoin/src/crypto/hmac_sha512.cpp,"CHMAC_SHA512::Finalize( unsigned char hash [ OUTPUT_SIZE ])",61, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::K( uint32_t x)",59, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Add( __m128i x , __m128i y)",73, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Add( __m128i x , __m128i y , __m128i z)",82, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Add( __m128i x , __m128i y , __m128i z , __m128i w)",101, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Add( __m128i x , __m128i y , __m128i z , __m128i w , __m128i v)",115, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Inc( __m128i & x , __m128i y)",71, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Inc( __m128i & x , __m128i y , __m128i z)",85, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Inc( __m128i & x , __m128i y , __m128i z , __m128i w)",99, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Xor( __m128i x , __m128i y)",73, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Xor( __m128i x , __m128i y , __m128i z)",82, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Or( __m128i x , __m128i y)",71, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::And( __m128i x , __m128i y)",73, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::ShR( __m128i x , int n)",70, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::ShL( __m128i x , int n)",70, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Ch( __m128i x , __m128i y , __m128i z)",89, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Maj( __m128i x , __m128i y , __m128i z)",96, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Sigma0( __m128i x)",132, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Sigma1( __m128i x)",131, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::sigma0( __m128i x)",115, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::sigma1( __m128i x)",117, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Round( __m128i a , __m128i b , __m128i c , __m128i & d , __m128i e , __m128i f , __m128i g , __m128i & h , __m128i k)",150, 0, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Read4( const unsigned char * chunk , int offset)",105, 4, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Write4( unsigned char * out , int offset , __m128i v)",100, 4, 0
repos/cpp/bitcoin/src/crypto/sha256_sse41.cpp,"sha256d64_sse41::Transform_4way( unsigned char * out , const unsigned char * in)",109, 4, 0
repos/cpp/bitcoin/src/crypto/hmac_sha256.cpp,"CHMAC_SHA256::CHMAC_SHA256( const unsigned char * key , size_t keylen)",68, 0, 0
repos/cpp/bitcoin/src/crypto/hmac_sha256.cpp,"CHMAC_SHA256::Finalize( unsigned char hash [ OUTPUT_SIZE ])",61, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Ch( uint32_t x , uint32_t y , uint32_t z)",85, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Maj( uint32_t x , uint32_t y , uint32_t z)",92, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Sigma0( uint32_t x)",110, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Sigma1( uint32_t x)",109, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::sigma0( uint32_t x)",99, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::sigma1( uint32_t x)",101, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Round( uint32_t a , uint32_t b , uint32_t c , uint32_t & d , uint32_t e , uint32_t f , uint32_t g , uint32_t & h , uint32_t k)",128, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Initialize( uint32_t * s)",36, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::Transform( uint32_t * s , const unsigned char * chunk , size_t blocks)",97, 8, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"sha256::TransformD64( unsigned char * out , const unsigned char * in)",99, 4, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"TransformD64Wrapper( unsigned char * out , const unsigned char * in)",70, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"SelfTest()",122, 8, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"cpuid( uint32_t leaf , uint32_t subleaf , uint32_t & a , uint32_t & b , uint32_t & c , uint32_t & d)",103, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"AVXEnabled()",51, 4, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"SHA256AutoDetect()",89, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"CSHA256::CSHA256()",30, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"CSHA256::Write( const unsigned char * data , size_t len)",63, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"CSHA256::Finalize( unsigned char hash [ OUTPUT_SIZE ])",56, 0, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"CSHA256::Reset()",27, 4, 0
repos/cpp/bitcoin/src/crypto/sha256.cpp,"SHA256D64( unsigned char * out , const unsigned char * in , size_t blocks)",75, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"CConnmanTest::AddNode( CNode & node)",40, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"CConnmanTest::ClearNodes()",50, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"operator < <( std :: ostream & os , const uint256 & num)",63, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"BasicTestingSetup::BasicTestingSetup( const std :: string & chainName)",145, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"BasicTestingSetup::~BasicTestingSetup()",40, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"BasicTestingSetup::SetDataDir( const std :: string & name)",64, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestingSetup::TestingSetup( const std :: string & chainName)",114, 16, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestingSetup::~TestingSetup()",60, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestChain100Setup::TestChain100Setup()",95, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestChain100Setup::CreateAndProcessBlock( const std :: vector<CMutableTransaction> & txns , const CScript & scriptPubKey)",116, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestChain100Setup::~TestChain100Setup()",40, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestMemPoolEntryHelper::FromTx( const CMutableTransaction & tx)",80, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"TestMemPoolEntryHelper::FromTx( const CTransactionRef & tx)",74, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin.cpp,"getBlock13b8a()",6177, 4, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"BOOST_AUTO_TEST_CASE( MempoolRemoveTest)",97, 4, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"EXCLUSIVE_LOCKS_REQUIRED( pool . cs)",115, 4, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"BOOST_AUTO_TEST_CASE( MempoolIndexingTest)",163, 4, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"BOOST_AUTO_TEST_CASE( MempoolAncestorIndexingTest)",74, 8, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"BOOST_AUTO_TEST_CASE( MempoolSizeLimitTest)",141, 4, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"make_tx( std :: vector<CAmount> && output_values , std :: vector<CTransactionRef> && inputs = std :: vector<CTransactionRef>() , std :: vector<uint32_t> && input_indices = std :: vector<uint32_t>())",202, 0, 0
repos/cpp/bitcoin/src/test/mempool_tests.cpp,"BOOST_AUTO_TEST_CASE( MempoolAncestryTests)",144, 8, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_criticalsection)",45, 8, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_ParseHex)",157, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_HexStr)",143, 8, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_FormatISO8601DateTime)",82, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_FormatISO8601Date)",68, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_FormatISO8601Time)",67, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestArgsManager::TestArgsManager()",55, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestArgsManager::GetOverrideArgs()",100, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestArgsManager::GetConfigArgs()",96, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestArgsManager::ReadConfigString( const std :: string str_config)",62, 8, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestArgsManager::SetNetworkOnlyArg( const std :: string arg)",50, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestArgsManager::SetupArgs( int argv , const char * args [ ])",66, 12, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_ParseParameters)",141, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_GetBoolArg)",73, 8, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_GetBoolArgEdgeCases)",78, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_ReadConfigStream)",129, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_GetArg)",77, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_GetChainName)",80, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_FormatMoney)",74, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_ParseMoney)",59, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_IsHex)",72, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_IsHexNumber)",80, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_seed_insecure_rand)",71, 8, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( util_TimingResistantEqual)",80, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( strprintf_numbers)",83, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( gettime)",51, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_IsDigit)",48, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ParseInt32)",110, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ParseInt64)",97, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ParseUInt32)",77, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ParseUInt64)",90, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ParseDouble)",71, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_FormatParagraph)",393, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_FormatSubVersion)",183, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ParseFixedPoint)",72, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestOtherThread( fs :: path dirname , std :: string lockname , bool * result)",82, 0, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"TestOtherProcess( fs :: path dirname , std :: string lockname , int fd)",77, 0, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_LockDirectory)",100, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_DirIsWritable)",60, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ToLower)",51, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_ToUpper)",42, 4, 0
repos/cpp/bitcoin/src/test/util_tests.cpp,"BOOST_AUTO_TEST_CASE( test_Capitalize)",67, 4, 0
repos/cpp/bitcoin/src/test/sighash_tests.cpp,"SignatureHashOld( CScript scriptCode , const CTransaction & txTo , unsigned int nIn , int nHashType)",111, 0, 0
repos/cpp/bitcoin/src/test/sighash_tests.cpp,"RandomScript( CScript & script)",128, 4, 0
repos/cpp/bitcoin/src/test/sighash_tests.cpp,"RandomTransaction( CMutableTransaction & tx , bool fSingle)",105, 8, 0
repos/cpp/bitcoin/src/test/sighash_tests.cpp,"BOOST_AUTO_TEST_CASE( sighash_test)",103, 4, 0
repos/cpp/bitcoin/src/test/sighash_tests.cpp,"BOOST_AUTO_TEST_CASE( sighash_from_data)",117, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"CAddrManTest::CAddrManTest( bool makeDeterministic = true)",64, 12, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"CAddrManTest::MakeDeterministic()",49, 8, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"CAddrManTest::Find( const CNetAddr & addr , int * pnId = nullptr)",63, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"CAddrManTest::Create( const CAddress & addr , const CNetAddr & addrSource , int * pnId = nullptr)",93, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"CAddrManTest::Delete( int nId)",31, 8, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"CAddrManTest::SimConnFail( CService & addr)",88, 9, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"ResolveIP( const char * ip)",94, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"ResolveIP( std :: string ip)",42, 0, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"ResolveService( const char * ip , int port = 0)",105, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"ResolveService( std :: string ip , int port = 0)",61, 0, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_simple)",78, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_ports)",79, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_select)",93, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_new_collisions)",72, 8, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_tried_collisions)",72, 8, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_find)",79, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_create)",77, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_delete)",77, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_getaddr)",95, 8, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( caddrinfo_get_tried_bucket)",86, 12, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( caddrinfo_get_new_bucket)",131, 44, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_selecttriedcollision)",76, 8, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_noevict)",78, 4, 0
repos/cpp/bitcoin/src/test/addrman_tests.cpp,"BOOST_AUTO_TEST_CASE( addrman_evictionworks)",78, 4, 0
repos/cpp/bitcoin/src/test/amount_tests.cpp,"BOOST_AUTO_TEST_CASE( MoneyRangeTest)",66, 4, 0
repos/cpp/bitcoin/src/test/amount_tests.cpp,"BOOST_AUTO_TEST_CASE( GetFeeTest)",96, 4, 0
repos/cpp/bitcoin/src/test/amount_tests.cpp,"BOOST_AUTO_TEST_CASE( BinaryOperatorTest)",41, 0, 0
repos/cpp/bitcoin/src/test/amount_tests.cpp,"BOOST_AUTO_TEST_CASE( ToStringTest)",64, 4, 0
repos/cpp/bitcoin/src/test/bswap_tests.cpp,"BOOST_AUTO_TEST_CASE( bswap_tests)",51, 0, 1
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"DoubleEquals( double a , double b , double epsilon)",61, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"CreateBlockIndexWithNbits( uint32_t nbits)",62, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"RejectDifficultyMismatch( double difficulty , double expected_difficulty)",86, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"TestDifficulty( uint32_t nbits , double expected_difficulty)",71, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"BOOST_AUTO_TEST_CASE( get_difficulty_for_very_low_target)",57, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"BOOST_AUTO_TEST_CASE( get_difficulty_for_low_target)",52, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"BOOST_AUTO_TEST_CASE( get_difficulty_for_mid_target)",52, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"BOOST_AUTO_TEST_CASE( get_difficulty_for_high_target)",53, 0, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"BOOST_AUTO_TEST_CASE( get_difficulty_for_very_high_target)",61, 4, 0
repos/cpp/bitcoin/src/test/blockchain_tests.cpp,"BOOST_AUTO_TEST_CASE( get_difficulty_for_null_tip)",50, 0, 0
repos/cpp/bitcoin/src/test/pow_tests.cpp,"BOOST_AUTO_TEST_CASE( get_next_work)",124, 4, 0
repos/cpp/bitcoin/src/test/pow_tests.cpp,"BOOST_AUTO_TEST_CASE( get_next_work_pow_limit)",124, 4, 0
repos/cpp/bitcoin/src/test/pow_tests.cpp,"BOOST_AUTO_TEST_CASE( get_next_work_lower_limit_actual)",124, 4, 0
repos/cpp/bitcoin/src/test/pow_tests.cpp,"BOOST_AUTO_TEST_CASE( get_next_work_upper_limit_actual)",124, 4, 0
repos/cpp/bitcoin/src/test/pow_tests.cpp,"BOOST_AUTO_TEST_CASE( GetBlockProofEquivalentTime_test)",111, 8, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"ip( uint32_t i)",61, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"BOOST_AUTO_TEST_CASE( outbound_slow_chain_eviction)",140, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"AddRandomOutboundPeer( std :: vector<CNode*> & vNodes , PeerLogicValidation & peerLogic)",153, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"BOOST_AUTO_TEST_CASE( stale_tip_peer_management)",80, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"BOOST_AUTO_TEST_CASE( DoS_banning)",96, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"BOOST_AUTO_TEST_CASE( DoS_banscore)",96, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"BOOST_AUTO_TEST_CASE( DoS_bantime)",94, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"RandomOrphan()",63, 4, 0
repos/cpp/bitcoin/src/test/denialofservice_tests.cpp,"BOOST_AUTO_TEST_CASE( DoS_mapOrphans)",84, 8, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"is_null_key( const std :: vector<unsigned char> & key)",65, 0, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( dbwrapper)",99, 8, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( dbwrapper_batch)",105, 8, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( dbwrapper_iterator)",108, 8, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( existing_data_no_obfuscate)",109, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( existing_data_reindex)",98, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( iterator_ordering)",113, 12, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"StringContentsSerializer::StringContentsSerializer()",34, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"StringContentsSerializer::StringContentsSerializer( const std :: string & inp)",76, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"StringContentsSerializer::operator +=( const std :: string & s)",65, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"StringContentsSerializer::operator +=( const StringContentsSerializer & s)",103, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"StringContentsSerializer::SerializationOp( Stream & s , Operation ser_action)",67, 4, 0
repos/cpp/bitcoin/src/test/dbwrapper_tests.cpp,"BOOST_AUTO_TEST_CASE( iterator_string_ordering)",117, 16, 0
repos/cpp/bitcoin/src/test/sync_tests.cpp,"TestPotentialDeadLockDetected( MutexType & mutex1 , MutexType & mutex2)",73, 0, 0
repos/cpp/bitcoin/src/test/sync_tests.cpp,"BOOST_AUTO_TEST_CASE( potential_deadlock_detected)",53, 4, 0
repos/cpp/bitcoin/src/test/base32_tests.cpp,"BOOST_AUTO_TEST_CASE( base32_testvectors)",121, 4, 0
repos/cpp/bitcoin/src/test/compress_tests.cpp,"TestEncode( uint64_t in)",55, 4, 0
repos/cpp/bitcoin/src/test/compress_tests.cpp,"TestDecode( uint64_t in)",55, 4, 0
repos/cpp/bitcoin/src/test/compress_tests.cpp,"TestPair( uint64_t dec , uint64_t enc)",51, 0, 0
repos/cpp/bitcoin/src/test/compress_tests.cpp,"BOOST_AUTO_TEST_CASE( compress_amounts)",56, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"CallRPC( std :: string args)",77, 8, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_rawparams)",414, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_togglenetwork)",74, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_rawsign)",175, 6, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_createraw_op_return)",330, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_format_monetary_values)",90, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"ValueFromString( const std :: string & str)",56, 0, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_parse_monetary_values)",189, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( json_parse_errors)",149, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_ban)",130, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_convert_values_generatetoaddress)",124, 4, 0
repos/cpp/bitcoin/src/test/rpc_tests.cpp,"BOOST_AUTO_TEST_CASE( rpc_getblockstats_calculate_percentiles_by_weight)",86, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"operator ==( const Coin & a , const Coin & b)",49, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewTest::GetCoin( const COutPoint & outpoint , Coin & coin) const",81, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewTest::GetBestBlock() const",69, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewTest::BatchWrite( CCoinsMap & mapCoins , const uint256 & hashBlock)",90, 16, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewCacheTest::CCoinsViewCacheTest( CCoinsView * _base)",80, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewCacheTest::SelfTest() const",83, 8, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewCacheTest::map() const",50, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CCoinsViewCacheTest::usage() const",55, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( coins_cache_simulation_test)",146, 12, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"FindRandomFrom( const std :: set<COutPoint> & utxoSet)",75, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( updatecoins_simulation_test)",127, 12, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( ccoins_serialization)",157, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"SetCoinsValue( CAmount value , Coin & coin)",53, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"InsertCoinsMapEntry( CCoinsMap & map , CAmount value , char flags)",77, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"GetCoinsMapEntry( const CCoinsMap & map , CAmount & value , char & flags)",73, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"WriteCoinsViewEntry( CCoinsView & view , CAmount value , char flags)",70, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"SingleEntryCacheTest::SingleEntryCacheTest( CAmount base_value , CAmount cache_value , char cache_flags)",88, 8, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CheckAccessCoin( CAmount base_value , CAmount cache_value , CAmount expected_value , char cache_flags , char expected_flags)",132, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( ccoins_access)",81, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CheckSpendCoins( CAmount base_value , CAmount cache_value , CAmount expected_value , char cache_flags , char expected_flags)",132, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( ccoins_spend)",80, 4, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CheckAddCoinBase( CAmount base_value , CAmount cache_value , CAmount modify_value , CAmount expected_value , char cache_flags , char expected_flags , bool coinbase)",170, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CheckAddCoin( Args && ... args)",67, 8, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( ccoins_add)",87, 5, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"CheckWriteCoins( CAmount parent_value , CAmount child_value , CAmount expected_value , char parent_flags , char child_flags , char expected_flags)",146, 0, 0
repos/cpp/bitcoin/src/test/coins_tests.cpp,"BOOST_AUTO_TEST_CASE( ccoins_write)",119, 20, 0
repos/cpp/bitcoin/src/test/reverselock_tests.cpp,"BOOST_AUTO_TEST_CASE( reverselock_basics)",69, 8, 0
repos/cpp/bitcoin/src/test/reverselock_tests.cpp,"BOOST_AUTO_TEST_CASE( reverselock_errors)",77, 4, 0
repos/cpp/bitcoin/src/test/arith_uint256_tests.cpp,"arith_uint256V( const std :: vector<unsigned char> & vch)",82, 0, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"RegtestingSetup::RegtestingSetup()",67, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"TestSubscriber::TestSubscriber( uint256 tip)",66, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"TestSubscriber::UpdatedBlockTip( const CBlockIndex * pindexNew , const CBlockIndex * pindexFork , bool fInitialDownload)",118, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"TestSubscriber::BlockConnected( const std :: shared_ptr<const CBlock> & block , const CBlockIndex * pindex , const std :: vector<CTransactionRef> & txnConflicted)",155, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"TestSubscriber::BlockDisconnected( const std :: shared_ptr<const CBlock> & block)",80, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"Block( const uint256 & prev_hash)",77, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"FinalizeBlock( std :: shared_ptr<CBlock> pblock)",91, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"GoodBlock( const uint256 & prev_hash)",72, 0, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"BadBlock( const uint256 & prev_hash)",96, 4, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"BuildChain( const uint256 & root , int height , const unsigned int invalid_rate , const unsigned int branch_rate , const unsigned int max_size , std :: vector<std::shared_ptr<const CBlock>> & blocks)",195, 0, 0
repos/cpp/bitcoin/src/test/validation_block_tests.cpp,"BOOST_AUTO_TEST_CASE( processnewblock_signals_ordering)",148, 4, 0
repos/cpp/bitcoin/src/test/timedata_tests.cpp,"BOOST_AUTO_TEST_CASE( util_MedianFilter)",44, 4, 0
repos/cpp/bitcoin/src/test/descriptor_tests.cpp,"CheckUnparsable( const std :: string & prv , const std :: string & pub)",69, 0, 0
repos/cpp/bitcoin/src/test/descriptor_tests.cpp,"MaybeUseHInsteadOfApostrophy( std :: string ret)",58, 0, 0
repos/cpp/bitcoin/src/test/descriptor_tests.cpp,"Check( const std :: string & prv , const std :: string & pub , int flags , const std :: vector<std::vector<std::string>> & scripts , const std :: set<std::vector<uint32_t>> & paths = ONLY_EMPTY)",183, 0, 0
repos/cpp/bitcoin/src/test/descriptor_tests.cpp,"BOOST_AUTO_TEST_CASE( descriptor_test)",2038, 4, 0
repos/cpp/bitcoin/src/test/blockfilter_tests.cpp,"BOOST_AUTO_TEST_CASE( gcsfilter_test)",64, 4, 0
repos/cpp/bitcoin/src/test/blockfilter_tests.cpp,"BOOST_AUTO_TEST_CASE( blockfilter_basic_test)",119, 4, 0
repos/cpp/bitcoin/src/test/blockfilter_tests.cpp,"BOOST_AUTO_TEST_CASE( blockfilters_json_test)",103, 8, 0
repos/cpp/bitcoin/src/test/pmt_tests.cpp,"CPartialMerkleTreeTester::Damage()",58, 8, 0
repos/cpp/bitcoin/src/test/pmt_tests.cpp,"BOOST_AUTO_TEST_CASE( pmt_test1)",106, 12, 0
repos/cpp/bitcoin/src/test/pmt_tests.cpp,"BOOST_AUTO_TEST_CASE( pmt_malleability)",115, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"read_json( const std :: string & jsondata)",43, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"FormatScriptError( ScriptError_t err)",101, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"ParseScriptError( const std :: string & name)",79, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BuildCreditingTransaction( const CScript & scriptPubKey , int nValue = 0)",91, 0, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BuildSpendingTransaction( const CScript & scriptSig , const CScriptWitness & scriptWitness , const CTransaction & txCredit)",138, 0, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"DoTest( const CScript & scriptPubKey , const CScript & scriptSig , const CScriptWitness & scriptWitness , int flags , const std :: string & message , int scriptError , CAmount nValue = 0)",244, 12, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"NegateSignatureS( std :: vector<unsigned char> & vchSig)",131, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"KeyData::KeyData()",79, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::DoPush()",46, 12, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::DoPush( const std :: vector<unsigned char> & data)",56, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::TestBuilder( const CScript & script_ , const std :: string & comment_ , int flags_ , bool P2SH = false , WitnessMode wm = WitnessMode :: NONE , int witnessversion = 0 , CAmount nValue_ = 0)",295, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::ScriptError( ScriptError_t err)",48, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::Add( const CScript & _script)",45, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::Num( int num)",41, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::Push( const std :: string & hex)",46, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::Push( const CScript & _script)",77, 9, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::PushSig( const CKey & key , int nHashType = SIGHASH_ALL , unsigned int lenR = 32 , unsigned int lenS = 32 , SigVersion sigversion = SigVersion :: BASE , CAmount amount = 0)",181, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::PushWitSig( const CKey & key , CAmount amount = - 1 , int nHashType = SIGHASH_ALL , unsigned int lenR = 32 , unsigned int lenS = 32 , SigVersion sigversion = SigVersion :: WITNESS_V0)",191, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::Push( const CPubKey & pubkey)",74, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::PushRedeem()",86, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::PushWitRedeem()",80, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::EditPush( unsigned int pos , const std :: string & hexin , const std :: string & hexout)",132, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::DamagePush( unsigned int pos)",46, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::Test()",126, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::AsWit()",45, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::GetJSON()",72, 12, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"TestBuilder::GetComment() const",35, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"JSONPrettyPrint( const UniValue & univalue)",97, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_build)",271, 32, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_json_test)",132, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_PushData)",169, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_cltv_truncated)",146, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"sign_multisig( const CScript & scriptPubKey , const std :: vector<CKey> & keys , const CTransaction & transaction)",107, 0, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"sign_multisig( const CScript & scriptPubKey , const CKey & key , const CTransaction & transaction)",93, 0, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_CHECKMULTISIG12)",154, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_CHECKMULTISIG23)",158, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"CombineSignatures( const CTxOut & txout , const CMutableTransaction & tx , const SignatureData & scriptSig1 , const SignatureData & scriptSig2)",150, 0, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_combineSigs)",114, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_push)",184, 8, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_IsPushOnly_on_invalid_scripts)",80, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_GetScriptAsm)",170, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"ScriptFromHex( const char * hex)",53, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_FindAndDelete)",81, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_HasValidOps)",99, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( script_can_append_self)",164, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( bitcoinconsensus_verify_script_returns_true)",171, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( bitcoinconsensus_verify_script_tx_index_err)",171, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( bitcoinconsensus_verify_script_tx_size)",175, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( bitcoinconsensus_verify_script_tx_serialization)",171, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( bitcoinconsensus_verify_script_amount_required_err)",171, 4, 0
repos/cpp/bitcoin/src/test/script_tests.cpp,"BOOST_AUTO_TEST_CASE( bitcoinconsensus_verify_script_invalid_flags)",171, 4, 0
repos/cpp/bitcoin/src/test/hash_tests.cpp,"BOOST_AUTO_TEST_CASE( murmurhash3)",95, 0, 0
repos/cpp/bitcoin/src/test/hash_tests.cpp,"BOOST_AUTO_TEST_CASE( siphash)",186, 4, 0
repos/cpp/bitcoin/src/test/txindex_tests.cpp,"BOOST_FIXTURE_TEST_CASE( txindex_initial_sync , TestChain100Setup)",100, 8, 0
repos/cpp/bitcoin/src/test/script_standard_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_Solver_success)",100, 4, 0
repos/cpp/bitcoin/src/test/script_standard_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_Solver_failure)",88, 4, 0
repos/cpp/bitcoin/src/test/script_standard_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_ExtractDestination)",120, 4, 0
repos/cpp/bitcoin/src/test/script_standard_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_ExtractDestinations)",100, 4, 0
repos/cpp/bitcoin/src/test/script_standard_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_GetScriptFor_)",112, 4, 0
repos/cpp/bitcoin/src/test/script_standard_tests.cpp,"BOOST_AUTO_TEST_CASE( script_standard_IsMine)",99, 8, 0
repos/cpp/bitcoin/src/test/test_bitcoin_main.cpp,"Shutdown( void * parg)",39, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin_main.cpp,"StartShutdown()",34, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin_main.cpp,"ShutdownRequested()",25, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"ComputeMerkleRootFromBranch( const uint256 & leaf , const std :: vector<uint256> & vMerkleBranch , uint32_t nIndex)",126, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"MerkleComputation( const std :: vector<uint256> & leaves , uint256 * proot , bool * pmutated , uint32_t branchpos , std :: vector<uint256> * pbranch)",151, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"ComputeMerkleBranch( const std :: vector<uint256> & leaves , uint32_t position)",105, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"BlockMerkleBranch( const CBlock & block , uint32_t position)",86, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"BlockBuildMerkleTree( const CBlock & block , bool * fMutated , std :: vector<uint256> & vMerkleTree)",108, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"BlockGetMerkleBranch( const CBlock & block , const std :: vector<uint256> & vMerkleTree , int nIndex)",123, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"ctz( uint32_t i)",36, 0, 0
repos/cpp/bitcoin/src/test/merkle_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_test)",123, 12, 0
repos/cpp/bitcoin/src/test/bip32_tests.cpp,"TestVector::TestVector( std :: string strHexMasterIn)",86, 4, 0
repos/cpp/bitcoin/src/test/bip32_tests.cpp,"TestVector::operator ( )( std :: string pub , std :: string prv , unsigned int nChild)",84, 4, 0
repos/cpp/bitcoin/src/test/bip32_tests.cpp,"RunTest( const TestVector & test)",106, 8, 0
repos/cpp/bitcoin/src/test/bip32_tests.cpp,"BOOST_AUTO_TEST_CASE( bip32_test1)",36, 0, 0
repos/cpp/bitcoin/src/test/bip32_tests.cpp,"BOOST_AUTO_TEST_CASE( bip32_test2)",36, 0, 0
repos/cpp/bitcoin/src/test/bip32_tests.cpp,"BOOST_AUTO_TEST_CASE( bip32_test3)",36, 0, 0
repos/cpp/bitcoin/src/test/random_tests.cpp,"BOOST_AUTO_TEST_CASE( osrandom_tests)",39, 4, 0
repos/cpp/bitcoin/src/test/random_tests.cpp,"BOOST_AUTO_TEST_CASE( fastrandom_tests)",87, 8, 0
repos/cpp/bitcoin/src/test/random_tests.cpp,"BOOST_AUTO_TEST_CASE( fastrandom_randbits)",64, 12, 0
repos/cpp/bitcoin/src/test/random_tests.cpp,"BOOST_AUTO_TEST_CASE( stdrandom_test)",79, 12, 0
repos/cpp/bitcoin/src/test/random_tests.cpp,"BOOST_AUTO_TEST_CASE( shuffle_stat_test)",132, 8, 0
repos/cpp/bitcoin/src/test/base58_tests.cpp,"BOOST_AUTO_TEST_CASE( base58_EncodeBase58)",156, 4, 0
repos/cpp/bitcoin/src/test/base58_tests.cpp,"BOOST_AUTO_TEST_CASE( base58_DecodeBase58)",156, 4, 0
repos/cpp/bitcoin/src/test/multisig_tests.cpp,"sign_multisig( const CScript & scriptPubKey , const std :: vector<CKey> & keys , const CTransaction & transaction , int whichIn)",120, 0, 0
repos/cpp/bitcoin/src/test/multisig_tests.cpp,"BOOST_AUTO_TEST_CASE( multisig_verify)",178, 16, 0
repos/cpp/bitcoin/src/test/multisig_tests.cpp,"BOOST_AUTO_TEST_CASE( multisig_IsStandard)",197, 4, 0
repos/cpp/bitcoin/src/test/multisig_tests.cpp,"BOOST_AUTO_TEST_CASE( multisig_Sign)",156, 4, 0
repos/cpp/bitcoin/src/test/base64_tests.cpp,"BOOST_AUTO_TEST_CASE( base64_testvectors)",101, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin_fuzzy.cpp,"read_stdin( std :: vector<uint8_t> & data)",61, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin_fuzzy.cpp,"test_one_input( std :: vector<uint8_t> buffer)",90, 12, 0
repos/cpp/bitcoin/src/test/test_bitcoin_fuzzy.cpp,"initialize()",56, 4, 0
repos/cpp/bitcoin/src/test/test_bitcoin_fuzzy.cpp,"LLVMFuzzerTestOneInput( const uint8_t * data , size_t size)",74, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin_fuzzy.cpp,"LLVMFuzzerInitialize( int * argc , char ** * argv)",63, 0, 0
repos/cpp/bitcoin/src/test/test_bitcoin_fuzzy.cpp,"main( int argc , char ** argv)",80, 4, 0
repos/cpp/bitcoin/src/test/skiplist_tests.cpp,"BOOST_AUTO_TEST_CASE( skiplist_test)",85, 8, 0
repos/cpp/bitcoin/src/test/skiplist_tests.cpp,"BOOST_AUTO_TEST_CASE( getlocator_test)",147, 8, 0
repos/cpp/bitcoin/src/test/skiplist_tests.cpp,"BOOST_AUTO_TEST_CASE( findearliestatleast_test)",97, 12, 0
repos/cpp/bitcoin/src/test/skiplist_tests.cpp,"BOOST_AUTO_TEST_CASE( findearliestatleast_edge_test)",118, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"ParseScriptFlags( std :: string strFlags)",81, 12, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"FormatScriptFlags( unsigned int flags)",83, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( tx_valid)",132, 49, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( tx_invalid)",126, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( basic_transaction_tests)",1587, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"SetupDummyInputs( CBasicKeyStore & keystoreRet , CCoinsViewCache & coinsRet)",101, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( test_Get)",99, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"CreateCreditAndSpend( const CKeyStore & keystore , const CScript & outscript , CTransactionRef & output , CMutableTransaction & input , bool success = true)",160, 0, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"CheckWithFlag( const CTransactionRef & output , const CMutableTransaction & input , int flags , bool success)",194, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"PushAll( const std :: vector<valtype> & values)",63, 8, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"ReplaceRedeemScript( CScript & script , const CScript & redeemScript)",98, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( test_big_witness_transaction)",127, 8, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"CombineSignatures( const CMutableTransaction & input1 , const CMutableTransaction & input2 , const CTransactionRef tx)",149, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( test_witness)",133, 4, 0
repos/cpp/bitcoin/src/test/transaction_tests.cpp,"BOOST_AUTO_TEST_CASE( test_IsStandard)",231, 4, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"TestBlockSubsidyHalvings( const Consensus :: Params & consensusParams)",115, 4, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"TestBlockSubsidyHalvings( int nSubsidyHalvingInterval)",71, 4, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"BOOST_AUTO_TEST_CASE( block_subsidy_test)",73, 4, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"BOOST_AUTO_TEST_CASE( subsidy_limit_test)",82, 8, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"ReturnFalse()",44, 0, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"ReturnTrue()",42, 0, 0
repos/cpp/bitcoin/src/test/main_tests.cpp,"BOOST_AUTO_TEST_CASE( test_combiner_all)",56, 4, 0
repos/cpp/bitcoin/src/test/streams_tests.cpp,"BOOST_AUTO_TEST_CASE( streams_vector_writer)",80, 4, 0
repos/cpp/bitcoin/src/test/streams_tests.cpp,"BOOST_AUTO_TEST_CASE( streams_vector_reader)",78, 4, 0
repos/cpp/bitcoin/src/test/streams_tests.cpp,"BOOST_AUTO_TEST_CASE( bitstream_reader_writer)",88, 4, 0
repos/cpp/bitcoin/src/test/streams_tests.cpp,"BOOST_AUTO_TEST_CASE( streams_serializedata_xor)",67, 12, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestTime( int nHeight)",76, 0, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::BeginTime( const Consensus :: Params & params) const",98, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::EndTime( const Consensus :: Params & params) const",96, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::Period( const Consensus :: Params & params) const",80, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::Threshold( const Consensus :: Params & params) const",82, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::Condition( const CBlockIndex * pindex , const Consensus :: Params & params) const",133, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::GetStateFor( const CBlockIndex * pindexPrev) const",159, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestConditionChecker::GetStateSinceHeightFor( const CBlockIndex * pindexPrev) const",170, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"TestAlwaysActiveConditionChecker::BeginTime( const Consensus :: Params & params) const",123, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::VersionBitsTester()",36, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::Reset()",68, 12, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::~VersionBitsTester()",27, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::Mine( unsigned int height , int32_t nTime , int32_t nVersion)",84, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::TestStateSinceHeight( int height)",192, 16, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::TestDefined()",192, 16, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::TestStarted()",192, 16, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::TestLockedIn()",192, 16, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::TestActive()",192, 16, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::TestFailed()",192, 16, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"VersionBitsTester::Tip()",78, 4, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"BOOST_AUTO_TEST_CASE( versionbits_test)",157, 27, 0
repos/cpp/bitcoin/src/test/versionbits_tests.cpp,"BOOST_AUTO_TEST_CASE( versionbits_computeblockversion)",119, 8, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestVector( const Hasher & h , const In & in , const Out & out)",100, 16, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestSHA1( const std :: string & in , const std :: string & hexout)",117, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestSHA256( const std :: string & in , const std :: string & hexout)",121, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestSHA512( const std :: string & in , const std :: string & hexout)",121, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestRIPEMD160( const std :: string & in , const std :: string & hexout)",127, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestHMACSHA256( const std :: string & hexkey , const std :: string & hexin , const std :: string & hexout)",109, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestHMACSHA512( const std :: string & hexkey , const std :: string & hexin , const std :: string & hexout)",109, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestAES128( const std :: string & hexkey , const std :: string & hexin , const std :: string & hexout)",103, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestAES256( const std :: string & hexkey , const std :: string & hexin , const std :: string & hexout)",103, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestAES128CBC( const std :: string & hexkey , const std :: string & hexiv , bool pad , const std :: string & hexin , const std :: string & hexout)",142, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestAES256CBC( const std :: string & hexkey , const std :: string & hexiv , bool pad , const std :: string & hexin , const std :: string & hexout)",142, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"TestChaCha20( const std :: string & hexkey , uint64_t nonce , uint64_t seek , const std :: string & hexout)",110, 0, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"LongTestString()",41, 8, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( ripemd160_testvectors)",101, 4, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( sha1_testvectors)",91, 4, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( sha256_testvectors)",99, 4, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( sha512_testvectors)",84, 15, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( hmac_sha256_testvectors)",88, 19, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( hmac_sha512_testvectors)",88, 19, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( aes_testvectors)",156, 4, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( aes_cbc_testvectors)",123, 18, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( chacha20_testvector)",121, 17, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( countbits_tests)",77, 16, 0
repos/cpp/bitcoin/src/test/crypto_tests.cpp,"BOOST_AUTO_TEST_CASE( sha256d64)",71, 12, 0
repos/cpp/bitcoin/src/test/sanity_tests.cpp,"BOOST_AUTO_TEST_CASE( basic_sanity)",76, 2, 0
repos/cpp/bitcoin/src/test/txvalidation_tests.cpp,"BOOST_FIXTURE_TEST_CASE( tx_mempool_reject_coinbase , TestChain100Setup)",94, 4, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"HasReason::HasReason( const std :: string & reason)",72, 4, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"HasReason::operator ( )( const std :: runtime_error & e) const",74, 8, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"AssemblerForTest( const CChainParams & params)",69, 0, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"CreateBlockIndex( int nHeight)",49, 0, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",99, 0, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"EXCLUSIVE_LOCKS_REQUIRED( :: mempool . cs)",179, 0, 0
repos/cpp/bitcoin/src/test/miner_tests.cpp,"BOOST_AUTO_TEST_CASE( CreateNewBlock_validity)",222, 4, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"ResetArgs( const std :: string & strArg)",81, 6, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"SetupArgs( const std :: vector<std::string> & args)",64, 8, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"BOOST_AUTO_TEST_CASE( boolarg)",62, 4, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"BOOST_AUTO_TEST_CASE( stringarg)",65, 4, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"BOOST_AUTO_TEST_CASE( intarg)",53, 4, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"BOOST_AUTO_TEST_CASE( doubledash)",62, 4, 0
repos/cpp/bitcoin/src/test/getarg_tests.cpp,"BOOST_AUTO_TEST_CASE( boolargno)",53, 4, 0
repos/cpp/bitcoin/src/test/key_properties.cpp,"RC_BOOST_PROP( key_uniqueness ,(const CKey&key1,const CKey&key2))",68, 0, 0
repos/cpp/bitcoin/src/test/key_properties.cpp,"RC_BOOST_PROP( key_generates_correct_pubkey ,(const CKey&key))",63, 0, 0
repos/cpp/bitcoin/src/test/key_properties.cpp,"RC_BOOST_PROP( key_set_symmetry ,(const CKey&key))",58, 4, 0
repos/cpp/bitcoin/src/test/key_properties.cpp,"RC_BOOST_PROP( key_sign_symmetry ,(const CKey&key,const uint256&hash))",73, 0, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"RegtestingSetup::RegtestingSetup()",67, 4, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BuildBlockTestCase()",101, 4, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( SimpleRoundTripTest)",133, 12, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"TestHeaderAndShortIDs::TestHeaderAndShortIDs( const CBlockHeaderAndShortTxIDs & orig)",76, 4, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"TestHeaderAndShortIDs::TestHeaderAndShortIDs( const CBlock & block)",73, 8, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"TestHeaderAndShortIDs::GetShortID( const uint256 & txhash) const",59, 8, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"TestHeaderAndShortIDs::SerializationOp( Stream & s , Operation ser_action)",67, 4, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( NonCoinbasePreforwardRTTest)",170, 8, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( SufficientPreforwardRTTest)",158, 8, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( EmptyBlockRoundTripTest)",106, 8, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( TransactionsRequestSerializationTest)",77, 4, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( TransactionsRequestDeserializationMaxTest)",66, 0, 0
repos/cpp/bitcoin/src/test/blockencodings_tests.cpp,"BOOST_AUTO_TEST_CASE( TransactionsRequestDeserializationOverflowTest)",101, 8, 0
repos/cpp/bitcoin/src/test/fs_tests.cpp,"BOOST_AUTO_TEST_CASE( fsbridge_fstream)",86, 8, 0
repos/cpp/bitcoin/src/test/txvalidationcache_tests.cpp,"ToMemPool( const CMutableTransaction & tx)",106, 30, 0
repos/cpp/bitcoin/src/test/txvalidationcache_tests.cpp,"BOOST_FIXTURE_TEST_CASE( tx_mempool_block_doublespend , TestChain100Setup)",100, 8, 0
repos/cpp/bitcoin/src/test/txvalidationcache_tests.cpp,"ValidateCheckInputsForAllFlags( const CTransaction & tx , uint32_t failing_flags , bool add_to_cache)",127, 12, 0
repos/cpp/bitcoin/src/test/txvalidationcache_tests.cpp,"BOOST_FIXTURE_TEST_CASE( checkinputs_test , TestChain100Setup)",174, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::local_check_equal( A a , B b)",41, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::local_check( bool b)",29, 4, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::test()",95, 13, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::resize( Size s)",50, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::reserve( Size s)",50, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::insert( Size position , const T & value)",67, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::insert( Size position , Size count , const T & value)",74, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::insert_range( Size position , I first , I last)",73, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::erase( Size position)",59, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::erase( Size first , Size last)",84, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::update( Size pos , const T & value)",44, 4, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::push_back( const T & value)",38, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::pop_back()",32, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::clear()",29, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::assign( Size n , const T & value)",42, 4, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::size() const",35, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::capacity() const",38, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::shrink_to_fit()",36, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::swap()",43, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::move()",50, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::copy()",39, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::~prevector_tester()",79, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"prevector_tester::prevector_tester()",51, 8, 0
repos/cpp/bitcoin/src/test/prevector_tests.cpp,"BOOST_AUTO_TEST_CASE( PrevectorTestInt)",108, 16, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"Serialize( const CScript & s)",64, 4, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"Verify( const CScript & scriptSig , const CScript & scriptPubKey , bool fStrict , ScriptError & err)",185, 4, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"BOOST_AUTO_TEST_CASE( sign)",168, 12, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"BOOST_AUTO_TEST_CASE( norecurse)",79, 4, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"BOOST_AUTO_TEST_CASE( set)",135, 8, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"BOOST_AUTO_TEST_CASE( is)",136, 4, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"BOOST_AUTO_TEST_CASE( switchover)",80, 4, 0
repos/cpp/bitcoin/src/test/script_p2sh_tests.cpp,"BOOST_AUTO_TEST_CASE( AreInputsStandard)",131, 4, 0
repos/cpp/bitcoin/src/test/bech32_tests.cpp,"CaseInsensitiveEqual( const std :: string & s1 , const std :: string & s2)",79, 0, 0
repos/cpp/bitcoin/src/test/bech32_tests.cpp,"BOOST_AUTO_TEST_CASE( bip173_testvectors_valid)",102, 8, 0
repos/cpp/bitcoin/src/test/bech32_tests.cpp,"BOOST_AUTO_TEST_CASE( bip173_testvectors_invalid)",103, 8, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"ResolveIP( const char * ip)",42, 0, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"ResolveSubNet( const char * subnet)",49, 0, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"CreateInternal( const char * host)",49, 0, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( netbase_networks)",101, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( netbase_properties)",88, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"TestSplitHost( std :: string test , std :: string host , int port)",72, 0, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( netbase_splithost)",87, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"TestParse( std :: string src , std :: string canon)",58, 0, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( netbase_lookupnumeric)",94, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( onioncat_test)",110, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( subnet_test)",101, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( netbase_getgroup)",167, 4, 0
repos/cpp/bitcoin/src/test/netbase_tests.cpp,"BOOST_AUTO_TEST_CASE( netbase_parsenetwork)",65, 4, 0
repos/cpp/bitcoin/src/test/limitedmap_tests.cpp,"BOOST_AUTO_TEST_CASE( limitedmap_test)",68, 8, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( bloom_create_insert_serialize)",154, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( bloom_create_insert_serialize_with_tweak)",154, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( bloom_create_insert_key)",99, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( bloom_match)",1587, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_1)",134, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_2)",2839, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_2_with_update_none)",2839, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_3_and_serialize)",501, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_4)",5161, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_4_test_p2pubkey_only)",5161, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( merkle_block_4_test_update_none)",5161, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"RandomData()",59, 4, 0
repos/cpp/bitcoin/src/test/bloom_tests.cpp,"BOOST_AUTO_TEST_CASE( rolling_bloom)",98, 4, 0
repos/cpp/bitcoin/src/test/scheduler_tests.cpp,"microTask( CScheduler & s , boost :: mutex & mutex , int & counter , int delta , boost :: chrono :: system_clock :: time_point rescheduleTime)",139, 0, 0
repos/cpp/bitcoin/src/test/scheduler_tests.cpp,"MicroSleep( uint64_t n)",67, 4, 0
repos/cpp/bitcoin/src/test/scheduler_tests.cpp,"BOOST_AUTO_TEST_CASE( manythreads)",120, 8, 0
repos/cpp/bitcoin/src/test/scheduler_tests.cpp,"BOOST_AUTO_TEST_CASE( singlethreadedscheduler_ordered)",88, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"verify( const CScriptNum10 & bignum , const CScriptNum & scriptnum)",91, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"CheckCreateVch( const int64_t & num)",54, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"CheckCreateInt( const int64_t & num)",132, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"CheckAdd( const int64_t & num1 , const int64_t & num2)",93, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"CheckNegate( const int64_t & num)",52, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"CheckSubtract( const int64_t & num1 , const int64_t & num2)",87, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"CheckCompare( const int64_t & num1 , const int64_t & num2)",70, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"RunCreate( const int64_t & num)",69, 4, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"RunOperators( const int64_t & num1 , const int64_t & num2)",67, 0, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"BOOST_AUTO_TEST_CASE( creation)",73, 8, 0
repos/cpp/bitcoin/src/test/scriptnum_tests.cpp,"BOOST_AUTO_TEST_CASE( operators)",73, 8, 0
repos/cpp/bitcoin/src/test/torcontrol_tests.cpp,"CheckSplitTorReplyLine( std :: string input , std :: string command , std :: string args)",93, 0, 0
repos/cpp/bitcoin/src/test/torcontrol_tests.cpp,"BOOST_AUTO_TEST_CASE( util_SplitTorReplyLine)",94, 8, 0
repos/cpp/bitcoin/src/test/torcontrol_tests.cpp,"CheckParseTorReplyMapping( std :: string input , std :: map<std::string,std::string> expected)",101, 0, 0
repos/cpp/bitcoin/src/test/torcontrol_tests.cpp,"BOOST_AUTO_TEST_CASE( util_ParseTorReplyMapping)",116, 8, 0
repos/cpp/bitcoin/src/test/key_tests.cpp,"BOOST_AUTO_TEST_CASE( key_test1)",181, 4, 0
repos/cpp/bitcoin/src/test/key_tests.cpp,"BOOST_AUTO_TEST_CASE( key_signature_tests)",117, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"BOOST_AUTO_TEST_CASE( test_cuckoocache_no_fakes)",61, 8, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"test_cache( size_t megabytes , double load)",81, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"normalize_hit_rate( double hits , double load)",59, 0, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"BOOST_AUTO_TEST_CASE( cuckoocache_hit_rate_ok)",102, 8, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"test_cache_erase( size_t megabytes)",106, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"BOOST_AUTO_TEST_CASE( cuckoocache_erase_ok)",84, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"test_cache_erase_parallel( size_t megabytes)",106, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"BOOST_AUTO_TEST_CASE( cuckoocache_erase_parallel_ok)",93, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"test_cache_generations()",101, 4, 0
repos/cpp/bitcoin/src/test/cuckoocache_tests.cpp,"BOOST_AUTO_TEST_CASE( cuckoocache_generations)",81, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FakeCheck::operator ( )()",22, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FakeCheck::swap( FakeCheck & x)",31, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FakeCheckCheckCompletion::operator ( )()",57, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FakeCheckCheckCompletion::swap( FakeCheckCheckCompletion & x)",46, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FailingCheck::FailingCheck( bool _fails)",49, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FailingCheck::FailingCheck()",36, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FailingCheck::operator ( )()",23, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FailingCheck::swap( FailingCheck & x)",35, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"UniqueCheck::UniqueCheck( size_t check_id_in)",63, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"UniqueCheck::UniqueCheck()",35, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"UniqueCheck::operator ( )()",42, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"UniqueCheck::swap( UniqueCheck & x)",68, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"MemoryCheck::operator ( )()",22, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"MemoryCheck::MemoryCheck()",21, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"MemoryCheck::MemoryCheck( const MemoryCheck & x)",80, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"MemoryCheck::MemoryCheck( bool b_)",71, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"MemoryCheck::~MemoryCheck()",71, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"MemoryCheck::swap( MemoryCheck & x)",54, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FrozenCleanupCheck::operator ( )()",22, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FrozenCleanupCheck::FrozenCleanupCheck()",28, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FrozenCleanupCheck::~FrozenCleanupCheck()",83, 12, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"FrozenCleanupCheck::swap( FrozenCleanupCheck & x)",82, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"Correct_Queue_range( std :: vector<size_t> range)",116, 12, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Correct_Zero)",51, 0, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Correct_One)",50, 0, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Correct_Max)",50, 0, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Correct_Random)",134, 4, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Catches_Failure)",69, 12, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Recovers_From_Failure)",72, 12, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_UniqueCheck)",62, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_Memory)",84, 20, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueue_FrozenCleanup)",88, 8, 0
repos/cpp/bitcoin/src/test/checkqueue_tests.cpp,"BOOST_AUTO_TEST_CASE( test_CheckQueueControl_Locks)",84, 20, 0
repos/cpp/bitcoin/src/test/policyestimator_tests.cpp,"BOOST_AUTO_TEST_CASE( BlockPolicyEstimates)",126, 8, 0
repos/cpp/bitcoin/src/test/raii_event_tests.cpp,"tag_malloc( size_t sz)",37, 0, 0
repos/cpp/bitcoin/src/test/raii_event_tests.cpp,"tag_free( void * mem)",34, 0, 0
repos/cpp/bitcoin/src/test/raii_event_tests.cpp,"BOOST_AUTO_TEST_CASE( raii_event_creation)",72, 8, 0
repos/cpp/bitcoin/src/test/raii_event_tests.cpp,"BOOST_AUTO_TEST_CASE( raii_event_order)",72, 8, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"ArrayToString( const unsigned char A [ ] , unsigned int width)",78, 0, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"uint160S( const char * str)",41, 0, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"uint160S( const std :: string & str)",48, 0, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"BOOST_AUTO_TEST_CASE( basics)",69, 0, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"BOOST_AUTO_TEST_CASE( comparison)",50, 8, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"BOOST_AUTO_TEST_CASE( methods)",120, 0, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"BOOST_AUTO_TEST_CASE( conversion)",69, 4, 0
repos/cpp/bitcoin/src/test/uint256_tests.cpp,"BOOST_AUTO_TEST_CASE( operator_with_self)",54, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"CSerializeMethodsTestSingle::CSerializeMethodsTestSingle( int intvalin , bool boolvalin , std :: string stringvalin , const char * charstrvalin , const CTransactionRef & txvalin)",235, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"CSerializeMethodsTestSingle::SerializationOp( Stream & s , Operation ser_action)",67, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"CSerializeMethodsTestSingle::operator ==( const CSerializeMethodsTestSingle & rhs)",61, 16, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"CSerializeMethodsTestMany::SerializationOp( Stream & s , Operation ser_action)",67, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( sizes)",75, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( floats_conversion)",78, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( doubles_conversion)",86, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( floats)",125, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( doubles)",125, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( varints)",82, 8, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( varints_bitpatterns)",137, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( compactsize)",83, 8, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"isCanonicalException( const std :: ios_base :: failure & ex)",81, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( noncanonical)",94, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( insert_delete)",51, 4, 0
repos/cpp/bitcoin/src/test/serialize_tests.cpp,"BOOST_AUTO_TEST_CASE( class_methods)",96, 4, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"BOOST_AUTO_TEST_CASE( arena_tests)",87, 4, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"TestLockedPageAllocator::TestLockedPageAllocator( int count_in , int lockedcount_in)",111, 4, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"TestLockedPageAllocator::AllocateLocked( size_t len , bool * lockingSuccess)",119, 12, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"TestLockedPageAllocator::FreeLocked( void * addr , size_t len)",53, 4, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"TestLockedPageAllocator::GetLimit()",51, 8, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"BOOST_AUTO_TEST_CASE( lockedpool_tests_mock)",88, 4, 0
repos/cpp/bitcoin/src/test/allocator_tests.cpp,"BOOST_AUTO_TEST_CASE( lockedpool_tests_live)",88, 4, 0
repos/cpp/bitcoin/src/test/merkleblock_tests.cpp,"BOOST_AUTO_TEST_CASE( merkleblock_construct_from_txids_found)",113, 4, 0
repos/cpp/bitcoin/src/test/merkleblock_tests.cpp,"BOOST_AUTO_TEST_CASE( merkleblock_construct_from_txids_not_found)",113, 4, 0
repos/cpp/bitcoin/src/test/key_io_tests.cpp,"BOOST_AUTO_TEST_CASE( key_io_valid_parse)",165, 12, 0
repos/cpp/bitcoin/src/test/key_io_tests.cpp,"BOOST_AUTO_TEST_CASE( key_io_valid_gen)",132, 4, 0
repos/cpp/bitcoin/src/test/key_io_tests.cpp,"BOOST_AUTO_TEST_CASE( key_io_invalid)",160, 4, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"CAddrManSerializationMock::MakeDeterministic()",49, 8, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"CAddrManUncorrupted::Serialize( CDataStream & s) const",50, 4, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"CAddrManCorrupted::Serialize( CDataStream & s) const",95, 8, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"AddrmanToStream( CAddrManSerializationMock & _addrman)",72, 0, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"BOOST_AUTO_TEST_CASE( cnode_listen_port)",69, 4, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"BOOST_AUTO_TEST_CASE( caddrdb_read)",84, 4, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"BOOST_AUTO_TEST_CASE( caddrdb_read_corrupted)",90, 4, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"BOOST_AUTO_TEST_CASE( cnode_simple_test)",137, 4, 0
repos/cpp/bitcoin/src/test/net_tests.cpp,"BOOST_AUTO_TEST_CASE( ipv4_peer_with_ipv6_addrMe_test)",136, 4, 0
repos/cpp/bitcoin/src/test/sigopcount_tests.cpp,"Serialize( const CScript & s)",64, 4, 0
repos/cpp/bitcoin/src/test/sigopcount_tests.cpp,"BOOST_AUTO_TEST_CASE( GetSigOpCount)",90, 4, 0
repos/cpp/bitcoin/src/test/sigopcount_tests.cpp,"VerifyWithFlag( const CTransaction & output , const CMutableTransaction & input , int flags)",192, 4, 0
repos/cpp/bitcoin/src/test/sigopcount_tests.cpp,"BuildTxs( CMutableTransaction & spendingTx , CCoinsViewCache & coins , CMutableTransaction & creationTx , const CScript & scriptPubKey , const CScript & scriptSig , const CScriptWitness & witness)",197, 0, 0
repos/cpp/bitcoin/src/test/sigopcount_tests.cpp,"BOOST_AUTO_TEST_CASE( GetTxSigOpCost)",132, 8, 0
repos/cpp/bitcoin/src/test/gen/crypto_gen.cpp,"MultisigKeys()",106, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"CDiskTxPos::SerializationOp( Stream & s , Operation ser_action)",67, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"CDiskTxPos::CDiskTxPos( const CDiskBlockPos & blockIn , unsigned int nTxOffsetIn)",142, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"CDiskTxPos::CDiskTxPos()",19, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"CDiskTxPos::SetNull()",34, 8, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::DB::DB( size_t n_cache_size , bool f_memory , bool f_wipe)",88, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::DB::ReadTxPos( const uint256 & txid , CDiskTxPos & pos) const",72, 0, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::DB::WriteTxs( const std :: vector<std::pair<uint256,CDiskTxPos>> & v_pos)",85, 0, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"WriteTxIndexMigrationBatches( CDBWrapper & newdb , CDBWrapper & olddb , CDBBatch & batch_newdb , CDBBatch & batch_olddb , const std :: pair<unsigned char,uint256> & begin_key , const std :: pair<unsigned char,uint256> & end_key)",93, 41, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::DB::MigrateData( CBlockTreeDB & block_tree_db , const CBlockLocator & best_locator)",100, 12, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::TxIndex( size_t n_cache_size , bool f_memory , bool f_wipe)",68, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::~TxIndex()",23, 0, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::Init()",80, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::WriteBlock( const CBlock & block , const CBlockIndex * pindex)",83, 4, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::GetDB() const",56, 0, 0
repos/cpp/bitcoin/src/index/txindex.cpp,"TxIndex::FindTx( const uint256 & tx_hash , uint256 & block_hash , CTransactionRef & tx) const",93, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"FatalError( const char * fmt , const Args & ... args)",77, 8, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::DB::DB( const fs :: path & path , size_t n_cache_size , bool f_memory , bool f_wipe , bool f_obfuscate)",109, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::DB::ReadBestBlock( CBlockLocator & locator) const",64, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::DB::WriteBestBlock( const CBlockLocator & locator)",65, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::~BaseIndex()",24, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::Init()",70, 4, 0
repos/cpp/bitcoin/src/index/base.cpp,"EXCLUSIVE_LOCKS_REQUIRED( cs_main)",106, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::ThreadSync()",88, 12, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::WriteBestBlock( const CBlockIndex * block_index)",72, 4, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::BlockConnected( const std :: shared_ptr<const CBlock> & block , const CBlockIndex * pindex , const std :: vector<CTransactionRef> & txn_conflicted)",102, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::ChainStateFlushed( const CBlockLocator & locator)",106, 4, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::BlockUntilSyncedToCurrentChain()",86, 4, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::Interrupt()",28, 0, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::Start()",80, 4, 0
repos/cpp/bitcoin/src/index/base.cpp,"BaseIndex::Stop()",41, 4, 0
repos/cpp/bitcoin/src/zmq/zmqabstractnotifier.cpp,"CZMQAbstractNotifier::~CZMQAbstractNotifier()",46, 0, 0
repos/cpp/bitcoin/src/zmq/zmqabstractnotifier.cpp,"CZMQAbstractNotifier::NotifyBlock( const CBlockIndex *)",76, 0, 0
repos/cpp/bitcoin/src/zmq/zmqabstractnotifier.cpp,"CZMQAbstractNotifier::NotifyTransaction( const CTransaction &)",82, 0, 0
repos/cpp/bitcoin/src/zmq/zmqrpc.cpp,"getzmqnotifications( const JSONRPCRequest & request)",90, 12, 0
repos/cpp/bitcoin/src/zmq/zmqrpc.cpp,"RegisterZMQRPCCommands( CRPCTable & t)",42, 0, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"zmq_send_multipart( void * sock , const void * data , size_t size , ...)",78, 0, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQAbstractPublishNotifier::Initialize( void * pcontext)",141, 8, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQAbstractPublishNotifier::Shutdown()",89, 4, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQAbstractPublishNotifier::SendMessage( const char * command , const void * data , size_t size)",123, 4, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQPublishHashBlockNotifier::NotifyBlock( const CBlockIndex * pindex)",74, 0, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQPublishHashTransactionNotifier::NotifyTransaction( const CTransaction & transaction)",92, 0, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQPublishRawBlockNotifier::NotifyBlock( const CBlockIndex * pindex)",89, 4, 0
repos/cpp/bitcoin/src/zmq/zmqpublishnotifier.cpp,"CZMQPublishRawTransactionNotifier::NotifyTransaction( const CTransaction & transaction)",91, 0, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"zmqError( const char * str)",82, 4, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::CZMQNotificationInterface()",75, 0, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::~CZMQNotificationInterface()",98, 4, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::GetActiveNotifiers() const",93, 0, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::Create()",142, 12, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::Initialize()",123, 12, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::Shutdown()",116, 12, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::UpdatedBlockTip( const CBlockIndex * pindexNew , const CBlockIndex * pindexFork , bool fInitialDownload)",132, 0, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::TransactionAddedToMempool( const CTransactionRef & ptx)",97, 4, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::BlockConnected( const std :: shared_ptr<const CBlock> & pblock , const CBlockIndex * pindexConnected , const std :: vector<CTransactionRef> & vtxConflicted)",179, 0, 0
repos/cpp/bitcoin/src/zmq/zmqnotificationinterface.cpp,"CZMQNotificationInterface::BlockDisconnected( const std :: shared_ptr<const CBlock> & pblock)",95, 0, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::PendingWalletTxImpl::PendingWalletTxImpl( CWallet & wallet)",88, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::PendingWalletTxImpl::get()",57, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::PendingWalletTxImpl::getVirtualSize()",83, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::PendingWalletTxImpl::commit( WalletValueMap value_map , WalletOrderForm order_form , std :: string & reject_reason)",125, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::MakeWalletTx( interfaces :: Chain :: Lock & locked_chain , CWallet & wallet , const CWalletTx & wtx)",120, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::MakeWalletTxStatus( interfaces :: Chain :: Lock & locked_chain , const CWalletTx & wtx)",102, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::EXCLUSIVE_LOCKS_REQUIRED( wallet . cs_wallet)",70, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::WalletImpl( const std :: shared_ptr<CWallet> & wallet)",118, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::encryptWallet( const SecureString & wallet_passphrase)",71, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::isCrypted()",63, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::lock()",53, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::unlock( const SecureString & wallet_passphrase)",111, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::isLocked()",61, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::changeWalletPassphrase( const SecureString & old_wallet_passphrase , const SecureString & new_wallet_passphrase)",94, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::abortRescan()",60, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::backupWallet( const std :: string & filename)",104, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getWalletName()",72, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getKeyFromPool( bool internal , CPubKey & pub_key)",66, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getPubKey( const CKeyID & address , CPubKey & pub_key)",118, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getPrivKey( const CKeyID & address , CKey & key)",105, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::isSpendable( const CTxDestination & dest)",112, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::haveWatchOnly()",72, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::setAddressBook( const CTxDestination & dest , const std :: string & name , const std :: string & purpose)",114, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::delAddressBook( const CTxDestination & dest)",61, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getAddress( const CTxDestination & dest , std :: string * name , isminetype * is_mine , std :: string * purpose)",54, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getAddresses()",114, 12, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::learnRelatedScripts( const CPubKey & key , OutputType type)",120, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::addDestData( const CTxDestination & dest , const std :: string & key , const std :: string & value)",108, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::eraseDestData( const CTxDestination & dest , const std :: string & key)",84, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getDestValues( const std :: string & prefix)",79, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::lockCoin( const COutPoint & output)",53, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::unlockCoin( const COutPoint & output)",54, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::isLockedCoin( const COutPoint & output)",61, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::listLockedCoins( std :: vector<COutPoint> & outputs)",67, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::createTransaction( const std :: vector<CRecipient> & recipients , const CCoinControl & coin_control , bool sign , int & change_pos , CAmount & fee , std :: string & fail_reason)",115, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::transactionCanBeAbandoned( const uint256 & txid)",118, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::abandonTransaction( const uint256 & txid)",65, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::transactionCanBeBumped( const uint256 & txid)",67, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::createBumpTransaction( const uint256 & txid , const CCoinControl & coin_control , CAmount total_fee , std :: vector<std::string> & errors , CAmount & old_fee , CAmount & new_fee , CMutableTransaction & mtx)",120, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::signBumpTransaction( CMutableTransaction & mtx)",119, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::commitBumpTransaction( const uint256 & txid , CMutableTransaction && mtx , std :: vector<std::string> & errors , uint256 & bumped_txid)",101, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getTx( const uint256 & txid)",56, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getWalletTx( const uint256 & txid)",70, 12, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getWalletTxs()",86, 12, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::tryGetTxStatus( const uint256 & txid , interfaces :: WalletTxStatus & tx_status , int & num_blocks)",72, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getWalletTxDetails( const uint256 & txid , WalletTxStatus & tx_status , WalletOrderForm & order_form , bool & in_mempool , int & num_blocks)",71, 12, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getBalances()",95, 12, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::tryGetBalances( WalletBalances & balances , int & num_blocks)",76, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getBalance()",68, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getAvailableBalance( const CCoinControl & coin_control)",75, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::txinIsMine( const CTxIn & txin)",54, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::txoutIsMine( const CTxOut & txout)",57, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getDebit( const CTxIn & txin , isminefilter filter)",70, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getCredit( const CTxOut & txout , isminefilter filter)",73, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::listCoins()",94, 20, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getCoins( const std :: vector<COutPoint> & outputs)",107, 20, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getRequiredFee( unsigned int tx_bytes)",106, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getMinimumFee( unsigned int tx_bytes , const CCoinControl & coin_control , int * returned_target , FeeReason * reason)",104, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getConfirmTarget()",83, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::hdEnabled()",65, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::IsWalletFlagSet( uint64_t flag)",92, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getDefaultAddressType()",92, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::getDefaultChangeType()",90, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::handleUnload( UnloadFn fn)",64, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::handleShowProgress( ShowProgressFn fn)",76, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::handleStatusChanged( StatusChangedFn fn)",100, 8, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::handleAddressBookChanged( AddressBookChangedFn fn)",116, 16, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::handleTransactionChanged( TransactionChangedFn fn)",92, 12, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletImpl::handleWatchOnlyChanged( WatchOnlyChangedFn fn)",84, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::WalletClientImpl( Chain & chain , std :: vector<std::string> wallet_filenames)",78, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::registerRpcs()",83, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::verify()",82, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::load()",78, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::start( CScheduler & scheduler)",83, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::flush()",53, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::stop()",51, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::WalletClientImpl::~WalletClientImpl()",54, 4, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::MakeWallet( const std :: shared_ptr<CWallet> & wallet)",118, 0, 0
repos/cpp/bitcoin/src/interfaces/wallet.cpp,"interfaces::MakeWalletClient( Chain & chain , std :: vector<std::string> wallet_filenames)",103, 0, 0
repos/cpp/bitcoin/src/interfaces/chain.cpp,"interfaces::ChainImpl::lock( bool try_lock)",104, 8, 0
repos/cpp/bitcoin/src/interfaces/chain.cpp,"interfaces::ChainImpl::assumeLocked()",92, 4, 0
repos/cpp/bitcoin/src/interfaces/chain.cpp,"interfaces::MakeChain()",71, 0, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::NodeImpl()",53, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::parseParameters( int argc , const char * const argv [ ] , std :: string & error)",90, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::readConfigFiles( std :: string & error)",101, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::softSetArg( const std :: string & arg , const std :: string & value)",120, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::softSetBoolArg( const std :: string & arg , bool value)",114, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::selectParams( const std :: string & network)",86, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getNetwork()",77, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::initLogging()",51, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::initParameterInteraction()",77, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getWarnings( const std :: string & type)",92, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getLogCategories()",81, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::baseInitialize()",96, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::appInitMain()",70, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::appShutdown()",32, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::startShutdown()",55, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::shutdownRequested()",70, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::mapPort( bool use_upnp)",41, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::setupServerArgs()",66, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getProxy( Network net , proxyType & proxy_info)",101, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getNodeCount( CConnman :: NumConnections flags)",65, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getNodesStats( NodesStats & stats)",100, 24, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getBanned( banmap_t & banmap)",46, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::ban( const CNetAddr & net_addr , BanReason reason , int64_t ban_time_offset)",91, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::unban( const CSubNet & ip)",43, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::disconnect( NodeId id)",50, 12, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getTotalBytesRecv()",100, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getTotalBytesSent()",100, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getMempoolSize()",66, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getMempoolDynamicUsage()",88, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getHeaderTip( int & height , int64_t & block_time)",65, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getNumBlocks()",39, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getLastBlockTime()",98, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getVerificationProgress()",66, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::isInitialBlockDownload()",80, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getReindex()",54, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getImporting()",58, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::setNetworkActive( bool active)",49, 12, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getNetworkActive()",92, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getMaxTxFee()",58, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::estimateSmartFee( int num_blocks , bool conservative , int * returned_target = nullptr)",106, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getDustRelayFee()",67, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::executeRpc( const std :: string & command , const UniValue & params , const std :: string & uri)",109, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::listRpcCommands()",94, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::rpcSetTimerInterfaceIfUnset( RPCTimerInterface * iface)",112, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::rpcUnsetTimerInterface( RPCTimerInterface * iface)",102, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getUnspentOutput( const COutPoint & output , Coin & coin)",72, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getWalletDir()",40, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::listWalletDir()",54, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::getWallets()",70, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleInitMessage( InitMessageFn fn)",74, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleMessageBox( MessageBoxFn fn)",76, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleQuestion( QuestionFn fn)",74, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleShowProgress( ShowProgressFn fn)",76, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleLoadWallet( LoadWalletFn fn)",129, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleNotifyNumConnectionsChanged( NotifyNumConnectionsChangedFn fn)",106, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleNotifyNetworkActiveChanged( NotifyNetworkActiveChangedFn fn)",104, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleNotifyAlertChanged( NotifyAlertChangedFn fn)",88, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleBannedListChanged( BannedListChangedFn fn)",86, 4, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleNotifyBlockTip( NotifyBlockTipFn fn)",120, 8, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::NodeImpl::handleNotifyHeaderTip( NotifyHeaderTipFn fn)",106, 12, 0
repos/cpp/bitcoin/src/interfaces/node.cpp,"interfaces::MakeNode()",68, 0, 0
repos/cpp/bitcoin/src/interfaces/handler.cpp,"interfaces::HandlerImpl::HandlerImpl( boost :: signals2 :: connection connection)",106, 4, 0
repos/cpp/bitcoin/src/interfaces/handler.cpp,"interfaces::HandlerImpl::disconnect()",62, 4, 0
repos/cpp/bitcoin/src/interfaces/handler.cpp,"interfaces::MakeHandler( boost :: signals2 :: connection connection)",77, 0, 0
repos/cpp/bitcoin/src/univalue/gen/gen.cpp,"initJsonEscape()",94, 4, 0
repos/cpp/bitcoin/src/univalue/gen/gen.cpp,"outputEscape()",61, 0, 1
repos/cpp/bitcoin/src/univalue/gen/gen.cpp,"main( int argc , char * argv [ ])",34, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_read.cpp,"json_isdigit( int ch)",41, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_read.cpp,"hatoui( const char * first , const char * last , unsigned int & out)",63, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_read.cpp,"getJsonToken( std :: string & tokenVal , unsigned int & consumed , const char * raw , const char * end)",76, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_read.cpp,"UniValue::read( const char * raw , size_t size)",76, 12, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"ParsePrechecks( const std :: string & str)",108, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"ParseInt32( const std :: string & str , int32_t * out)",101, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"ParseInt64( const std :: string & str , int64_t * out)",102, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"ParseDouble( const std :: string & str , double * out)",92, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::getKeys() const",77, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::getValues() const",86, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_bool() const",77, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_str() const",76, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_int() const",78, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_int64() const",78, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_real() const",76, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_obj() const",77, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_get.cpp,"UniValue::get_array() const",76, 8, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::clear()",23, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setNull()",25, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setBool( bool val_)",34, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"validNumStr( const std :: string & s)",90, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setNumStr( const std :: string & val_)",50, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setInt( uint64_t val_)",37, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setInt( int64_t val_)",36, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setFloat( double val_)",42, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setStr( const std :: string & val_)",47, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setArray()",26, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::setObject()",27, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::push_back( const UniValue & val_)",47, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::push_backV( const std :: vector<UniValue> & vec)",60, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::__pushKV( const std :: string & key , const UniValue & val_)",70, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::pushKV( const std :: string & key , const UniValue & val_)",68, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::pushKVs( const UniValue & obj)",49, 4, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::getObjMap( std :: map<std::string,UniValue> & kv) const",67, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::findKey( const std :: string & key , size_t & retIdx) const",69, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::checkObject( const std :: map<std::string,UniValue::VType> & t) const",81, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::operator [ ]( const std :: string & key) const",67, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"UniValue::operator [ ]( size_t index) const",57, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"uvTypeName( UniValue :: VType t)",42, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue.cpp,"find_value( const UniValue & obj , const std :: string & name)",73, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_write.cpp,"json_escape( const std :: string & inS)",55, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_write.cpp,"UniValue::write( unsigned int prettyIndent , unsigned int indentLevel) const",60, 28, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_write.cpp,"indentStr( unsigned int prettyIndent , unsigned int indentLevel , std :: string & s)",91, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_write.cpp,"UniValue::writeArray( unsigned int prettyIndent , unsigned int indentLevel , std :: string & s) const",101, 0, 0
repos/cpp/bitcoin/src/univalue/lib/univalue_write.cpp,"UniValue::writeObject( unsigned int prettyIndent , unsigned int indentLevel , std :: string & s) const",102, 0, 0
repos/cpp/bitcoin/src/univalue/test/no_nul.cpp,"main( int argc , char * argv [ ])",41, 4, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"BOOST_AUTO_TEST_CASE( univalue_constructor)",50, 4, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"BOOST_AUTO_TEST_CASE( univalue_typecheck)",63, 4, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"BOOST_AUTO_TEST_CASE( univalue_set)",52, 4, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"BOOST_AUTO_TEST_CASE( univalue_array)",52, 4, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"BOOST_AUTO_TEST_CASE( univalue_object)",65, 4, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"BOOST_AUTO_TEST_CASE( univalue_readwrite)",71, 7, 0
repos/cpp/bitcoin/src/univalue/test/object.cpp,"main( int argc , char * argv [ ])",34, 0, 0
repos/cpp/bitcoin/src/univalue/test/test_json.cpp,"main( int argc , char * argv [ ])",78, 8, 0
repos/cpp/bitcoin/src/univalue/test/unitester.cpp,"rtrim( std :: string s)",46, 4, 0
repos/cpp/bitcoin/src/univalue/test/unitester.cpp,"runtest( std :: string filename , const std :: string & jdata)",68, 0, 0
repos/cpp/bitcoin/src/univalue/test/unitester.cpp,"runtest_file( const char * filename_)",59, 16, 0
repos/cpp/bitcoin/src/univalue/test/unitester.cpp,"unescape_unicode_test()",55, 4, 0
repos/cpp/bitcoin/src/univalue/test/unitester.cpp,"main( int argc , char * argv [ ])",72, 4, 0
repos/cpp/bitcoin/src/compat/strnlen.cpp,"strnlen( const char * start , size_t max_len)",66, 4, 0
repos/cpp/bitcoin/src/compat/glibcxx_sanity.cpp,"sanity_test_widen( char testchar)",84, 4, 0
repos/cpp/bitcoin/src/compat/glibcxx_sanity.cpp,"sanity_test_list( unsigned int size)",45, 4, 0
repos/cpp/bitcoin/src/compat/glibcxx_sanity.cpp,"sanity_test_range_fmt()",41, 4, 0
repos/cpp/bitcoin/src/compat/glibcxx_sanity.cpp,"glibcxx_sanity_test()",87, 4, 0
repos/cpp/bitcoin/src/compat/glibc_compat.cpp,"memcpy( void * a , const void * b , size_t c)",58, 0, 0
repos/cpp/bitcoin/src/compat/glibc_compat.cpp,"__fdelt_warn( FDELT_TYPE a)",49, 0, 0
repos/cpp/bitcoin/src/compat/glibc_compat.cpp,"__wrap___divmoddi4( int64_t u , int64_t v , int64_t * rp)",73, 0, 0
repos/cpp/bitcoin/src/compat/glibc_compat.cpp,"__wrap_log2f( float x)",39, 0, 0
repos/cpp/bitcoin/src/compat/glibc_sanity.cpp,"memcpy_int( void * a , const void * b , size_t c)",51, 0, 0
repos/cpp/bitcoin/src/compat/glibc_sanity.cpp,"sanity_test_memcpy()",65, 4, 0
repos/cpp/bitcoin/src/compat/glibc_sanity.cpp,"sanity_test_fdelt()",30, 4, 0
repos/cpp/bitcoin/src/compat/glibc_sanity.cpp,"glibc_sanity_test()",39, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"set_success( ScriptError * ret)",42, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"set_error( ScriptError * ret , const ScriptError serror)",66, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CastToBool( const valtype & vch)",53, 12, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"popstack( std :: vector<valtype> & stack)",61, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"IsCompressedOrUncompressedPubKey( const valtype & vchPubKey)",78, 12, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"IsCompressedPubKey( const valtype & vchPubKey)",72, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"IsValidSignatureEncoding( const std :: vector<unsigned char> & sig)",86, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"IsLowDERSignature( const valtype & vchSig , ScriptError * serror)",95, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"IsDefinedHashtypeSignature( const valtype & vchSig)",85, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CheckSignatureEncoding( const std :: vector<unsigned char> & vchSig , unsigned int flags , ScriptError * serror)",134, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CheckPubKeyEncoding( const valtype & vchPubKey , unsigned int flags , const SigVersion & sigversion , ScriptError * serror)",133, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CheckMinimalPush( const valtype & data , opcodetype opcode)",98, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"FindAndDelete( CScript & script , const CScript & b)",96, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"EvalScript( std :: vector<std::vector<unsigned char>> & stack , const CScript & script , unsigned int flags , const BaseSignatureChecker & checker , SigVersion sigversion , ScriptError * serror)",189, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CTransactionSignatureSerializer::CTransactionSignatureSerializer( const T & txToIn , const CScript & scriptCodeIn , unsigned int nInIn , int nHashTypeIn)",121, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CTransactionSignatureSerializer::SerializeScriptCode( S & s) const",68, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CTransactionSignatureSerializer::SerializeInput( S & s , unsigned int nInput) const",86, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CTransactionSignatureSerializer::SerializeOutput( S & s , unsigned int nOutput) const",71, 12, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CTransactionSignatureSerializer::Serialize( S & s) const",90, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GetPrevoutHash( const T & txTo)",40, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GetSequenceHash( const T & txTo)",40, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GetOutputsHash( const T & txTo)",42, 4, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"PrecomputedTransactionData::PrecomputedTransactionData( const T & txTo)",70, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"SignatureHash( const CScript & scriptCode , const T & txTo , unsigned int nIn , int nHashType , const CAmount & amount , SigVersion sigversion , const PrecomputedTransactionData * cache)",184, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GenericTransactionSignatureChecker<T>::VerifySignature( const std :: vector<unsigned char> & vchSig , const CPubKey & pubkey , const uint256 & sighash) const",155, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GenericTransactionSignatureChecker<T>::CheckSig( const std :: vector<unsigned char> & vchSigIn , const std :: vector<unsigned char> & vchPubKey , const CScript & scriptCode , SigVersion sigversion) const",198, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GenericTransactionSignatureChecker<T>::CheckLockTime( const CScriptNum & nLockTime) const",93, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"GenericTransactionSignatureChecker<T>::CheckSequence( const CScriptNum & nSequence) const",127, 8, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"VerifyWitnessProgram( const CScriptWitness & witness , int witversion , const std :: vector<unsigned char> & program , unsigned int flags , const BaseSignatureChecker & checker , ScriptError * serror)",201, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"VerifyScript( const CScript & scriptSig , const CScript & scriptPubKey , const CScriptWitness * witness , unsigned int flags , const BaseSignatureChecker & checker , ScriptError * serror)",182, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"WitnessSigOps( int witversion , const std :: vector<unsigned char> & witprogram , const CScriptWitness & witness)",121, 0, 0
repos/cpp/bitcoin/src/script/interpreter.cpp,"CountWitnessSigOps( const CScript & scriptSig , const CScript & scriptPubKey , const CScriptWitness * witness , unsigned int flags)",132, 0, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"TxInputStream::TxInputStream( int nTypeIn , int nVersionIn , const unsigned char * txTo , size_t txToLen)",92, 4, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"TxInputStream::read( char * pch , size_t nSize)",94, 12, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"TxInputStream::operator > >( T && obj)",39, 4, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"TxInputStream::GetVersion() const",49, 4, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"TxInputStream::GetType() const",43, 4, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"set_error( bitcoinconsensus_error * ret , bitcoinconsensus_error serror)",81, 0, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"verify_flags( unsigned int flags)",71, 4, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"verify_script( const unsigned char * scriptPubKey , unsigned int scriptPubKeyLen , CAmount amount , const unsigned char * txTo , unsigned int txToLen , unsigned int nIn , unsigned int flags , bitcoinconsensus_error * err)",206, 8, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"bitcoinconsensus_verify_script_with_amount( const unsigned char * scriptPubKey , unsigned int scriptPubKeyLen , int64_t amount , const unsigned char * txTo , unsigned int txToLen , unsigned int nIn , unsigned int flags , bitcoinconsensus_error * err)",128, 0, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"bitcoinconsensus_verify_script( const unsigned char * scriptPubKey , unsigned int scriptPubKeyLen , const unsigned char * txTo , unsigned int txToLen , unsigned int nIn , unsigned int flags , bitcoinconsensus_error * err)",102, 35, 0
repos/cpp/bitcoin/src/script/bitcoinconsensus.cpp,"bitcoinconsensus_version()",40, 0, 0
repos/cpp/bitcoin/src/script/ismine.cpp,"PermitsUncompressed( IsMineSigVersion sigversion)",88, 4, 0
repos/cpp/bitcoin/src/script/ismine.cpp,"HaveKeys( const std :: vector<valtype> & pubkeys , const CKeyStore & keystore)",78, 0, 0
repos/cpp/bitcoin/src/script/ismine.cpp,"IsMineInner( const CKeyStore & keystore , const CScript & scriptPubKey , IsMineSigVersion sigversion)",139, 8, 0
repos/cpp/bitcoin/src/script/ismine.cpp,"IsMine( const CKeyStore & keystore , const CScript & scriptPubKey)",74, 0, 0
repos/cpp/bitcoin/src/script/ismine.cpp,"IsMine( const CKeyStore & keystore , const CTxDestination & dest)",73, 0, 0
repos/cpp/bitcoin/src/script/script.cpp,"GetOpName( opcodetype opcode)",70, 4, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::GetSigOpCount( bool fAccurate) const",81, 8, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::GetSigOpCount( const CScript & scriptSig) const",68, 0, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::IsPayToScriptHash() const",56, 4, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::IsPayToWitnessScriptHash() const",64, 4, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::IsWitnessProgram( int & version , std :: vector<unsigned char> & program) const",88, 0, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::IsPushOnly( const_iterator pc) const",80, 8, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::IsPushOnly() const",38, 4, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScriptWitness::ToString() const",54, 4, 0
repos/cpp/bitcoin/src/script/script.cpp,"CScript::HasValidOps() const",104, 8, 0
repos/cpp/bitcoin/src/script/script.cpp,"GetScriptOp( CScriptBase :: const_iterator & pc , CScriptBase :: const_iterator end , opcodetype & opcodeRet , std :: vector<unsigned char> * pvchRet)",143, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"MutableTransactionSignatureCreator::MutableTransactionSignatureCreator( const CMutableTransaction * txToIn , unsigned int nInIn , const CAmount & amountIn , int nHashTypeIn)",270, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"MutableTransactionSignatureCreator::CreateSig( const SigningProvider & provider , std :: vector<unsigned char> & vchSig , const CKeyID & address , const CScript & scriptCode , SigVersion sigversion) const",199, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"GetCScript( const SigningProvider & provider , const SignatureData & sigdata , const CScriptID & scriptid , CScript & script)",130, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"GetPubKey( const SigningProvider & provider , const SignatureData & sigdata , const CKeyID & address , CPubKey & pubkey)",125, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"CreateSig( const BaseSignatureCreator & creator , SignatureData & sigdata , const SigningProvider & provider , std :: vector<unsigned char> & sig_out , const CPubKey & pubkey , const CScript & scriptcode , SigVersion sigversion)",226, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignStep( const SigningProvider & provider , const BaseSignatureCreator & creator , const CScript & scriptPubKey , std :: vector<valtype> & ret , txnouttype & whichTypeRet , SigVersion sigversion , SignatureData & sigdata)",125, 12, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PushAll( const std :: vector<valtype> & values)",63, 8, 0
repos/cpp/bitcoin/src/script/sign.cpp,"ProduceSignature( const SigningProvider & provider , const BaseSignatureCreator & creator , const CScript & fromPubKey , SignatureData & sigdata)",224, 8, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTInputSigned( PSBTInput & input)",84, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignPSBTInput( const SigningProvider & provider , PartiallySignedTransaction & psbt , int index , int sighash)",110, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignatureExtractorChecker::SignatureExtractorChecker( SignatureData & sigdata , BaseSignatureChecker & checker)",125, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignatureExtractorChecker::CheckSig( const std :: vector<unsigned char> & scriptSig , const std :: vector<unsigned char> & vchPubKey , const CScript & scriptCode , SigVersion sigversion) const",187, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"Stacks::Stacks( const SignatureData & data)",111, 8, 0
repos/cpp/bitcoin/src/script/sign.cpp,"DataFromTransaction( const CMutableTransaction & tx , unsigned int nIn , const CTxOut & txout)",138, 16, 0
repos/cpp/bitcoin/src/script/sign.cpp,"UpdateInput( CTxIn & input , const SignatureData & data)",58, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignatureData::MergeSignatureData( SignatureData sigdata)",127, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignSignature( const SigningProvider & provider , const CScript & fromPubKey , CMutableTransaction & txTo , unsigned int nIn , const CAmount & amount , int nHashType)",162, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"SignSignature( const SigningProvider & provider , const CTransaction & txFrom , CMutableTransaction & txTo , unsigned int nIn , int nHashType)",140, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"DummySignatureChecker::DummySignatureChecker()",31, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"DummySignatureChecker::CheckSig( const std :: vector<unsigned char> & scriptSig , const std :: vector<unsigned char> & vchPubKey , const CScript & scriptCode , SigVersion sigversion) const",190, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"DummySignatureCreator::DummySignatureCreator( char r_len , char s_len)",86, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"DummySignatureCreator::Checker() const",83, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"DummySignatureCreator::CreateSig( const SigningProvider & provider , std :: vector<unsigned char> & vchSig , const CKeyID & keyid , const CScript & scriptCode , SigVersion sigversion) const",174, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"LookupHelper( const M & map , const K & key , V & value)",56, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"IsSolvable( const SigningProvider & provider , const CScript & script)",159, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PartiallySignedTransaction::PartiallySignedTransaction( const CTransaction & tx)",88, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PartiallySignedTransaction::IsNull() const",72, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PartiallySignedTransaction::Merge( const PartiallySignedTransaction & psbt)",79, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PartiallySignedTransaction::IsSane() const",48, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTInput::IsNull() const",172, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTInput::FillSignatureData( SignatureData & sigdata) const",73, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTInput::FromSignatureData( const SignatureData & sigdata)",79, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTInput::Merge( const PSBTInput & input)",130, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTInput::IsSane() const",88, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTOutput::FillSignatureData( SignatureData & sigdata) const",72, 8, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTOutput::FromSignatureData( const SignatureData & sigdata)",69, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTOutput::IsNull() const",102, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"PSBTOutput::Merge( const PSBTOutput & output)",106, 4, 0
repos/cpp/bitcoin/src/script/sign.cpp,"HidingSigningProvider::GetCScript( const CScriptID & scriptid , CScript & script) const",89, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"HidingSigningProvider::GetPubKey( const CKeyID & keyid , CPubKey & pubkey) const",82, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"HidingSigningProvider::GetKey( const CKeyID & keyid , CKey & key) const",73, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"HidingSigningProvider::GetKeyOrigin( const CKeyID & keyid , KeyOriginInfo & info) const",89, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"FlatSigningProvider::GetCScript( const CScriptID & scriptid , CScript & script) const",139, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"FlatSigningProvider::GetPubKey( const CKeyID & keyid , CPubKey & pubkey) const",129, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"FlatSigningProvider::GetKeyOrigin( const CKeyID & keyid , KeyOriginInfo & info) const",134, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"FlatSigningProvider::GetKey( const CKeyID & keyid , CKey & key) const",114, 0, 0
repos/cpp/bitcoin/src/script/sign.cpp,"Merge( const FlatSigningProvider & a , const FlatSigningProvider & b)",86, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptID::CScriptID( const CScript & in)",84, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"WitnessV0ScriptHash::WitnessV0ScriptHash( const CScript & in)",61, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"GetTxnOutputType( txnouttype t)",67, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"MatchPayToPubkey( const CScript & script , valtype & pubkey)",152, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"MatchPayToPubkeyHash( const CScript & script , valtype & pubkeyhash)",161, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"IsSmallInteger( opcodetype opcode)",56, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"MatchMultisig( const CScript & script , unsigned int & required , std :: vector<valtype> & pubkeys)",104, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"Solver( const CScript & scriptPubKey , std :: vector<std::vector<unsigned char>> & vSolutionsRet)",119, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"ExtractDestination( const CScript & scriptPubKey , CTxDestination & addressRet)",81, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"ExtractDestinations( const CScript & scriptPubKey , txnouttype & typeRet , std :: vector<CTxDestination> & addressRet , int & nRequiredRet)",135, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::CScriptVisitor( CScript * scriptin)",70, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::operator ( )( const CNoDestination & dest) const",56, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::operator ( )( const CKeyID & keyID) const",97, 8, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::operator ( )( const CScriptID & scriptID) const",69, 8, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::operator ( )( const WitnessV0KeyHash & id) const",54, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::operator ( )( const WitnessV0ScriptHash & id) const",57, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"CScriptVisitor::operator ( )( const WitnessUnknown & id) const",118, 8, 0
repos/cpp/bitcoin/src/script/standard.cpp,"GetScriptForDestination( const CTxDestination & dest)",60, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"GetScriptForRawPubKey( const CPubKey & pubKey)",97, 4, 0
repos/cpp/bitcoin/src/script/standard.cpp,"GetScriptForMultisig( int nRequired , const std :: vector<CPubKey> & keys)",78, 0, 0
repos/cpp/bitcoin/src/script/standard.cpp,"GetScriptForWitness( const CScript & redeemscript)",111, 8, 0
repos/cpp/bitcoin/src/script/standard.cpp,"IsValidDestination( const CTxDestination & dest)",54, 0, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"CSignatureCache::CSignatureCache()",41, 8, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"CSignatureCache::ComputeEntry( uint256 & entry , const uint256 & hash , const std :: vector<unsigned char> & vchSig , const CPubKey & pubkey)",158, 8, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"CSignatureCache::Get( const uint256 & entry , const bool erase)",67, 8, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"CSignatureCache::Set( uint256 & entry)",67, 8, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"CSignatureCache::setup_bytes( size_t n)",40, 8, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"InitSignatureCache()",170, 4, 0
repos/cpp/bitcoin/src/script/sigcache.cpp,"CachingTransactionSignatureChecker::VerifySignature( const std :: vector<unsigned char> & vchSig , const CPubKey & pubkey , const uint256 & sighash) const",152, 0, 0
repos/cpp/bitcoin/src/script/script_error.cpp,"ScriptErrorString( const ScriptError serror)",103, 12, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"FormatKeyPath( const KeyPath & path)",48, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::OriginString() const",120, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::OriginPubkeyProvider( KeyOriginInfo info , std :: unique_ptr<PubkeyProvider> provider)",151, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::GetPubKey( int pos , const SigningProvider & arg , CPubKey * key , KeyOriginInfo & info) const",106, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::IsRange() const",68, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::GetSize() const",70, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::ToString() const",106, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"OriginPubkeyProvider::ToPrivateString( const SigningProvider & arg , std :: string & ret) const",86, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ConstPubkeyProvider::ConstPubkeyProvider( const CPubKey & pubkey)",69, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ConstPubkeyProvider::GetPubKey( int pos , const SigningProvider & arg , CPubKey * key , KeyOriginInfo & info) const",106, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ConstPubkeyProvider::IsRange() const",52, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ConstPubkeyProvider::GetSize() const",64, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ConstPubkeyProvider::ToString() const",95, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ConstPubkeyProvider::ToPrivateString( const SigningProvider & arg , std :: string & ret) const",86, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::GetExtKey( const SigningProvider & arg , CExtKey & ret) const",118, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::IsHardened() const",59, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::BIP32PubkeyProvider( const CExtPubKey & extkey , KeyPath path , DeriveType derive)",148, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::IsRange() const",73, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::GetSize() const",51, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::GetPubKey( int pos , const SigningProvider & arg , CPubKey * key , KeyOriginInfo & info) const",106, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::ToString() const",77, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"BIP32PubkeyProvider::ToPrivateString( const SigningProvider & arg , std :: string & out) const",86, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::ToStringExtra() const",61, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::DescriptorImpl( std :: vector<std::unique_ptr<PubkeyProvider>> pubkeys , std :: unique_ptr<DescriptorImpl> script , const std :: string & name)",224, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::IsSolvable() const",59, 12, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::IsRange() const",54, 12, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::ToStringHelper( const SigningProvider * arg , std :: string & out , bool priv) const",87, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::ToString() const",45, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::ExpandHelper( int pos , const SigningProvider & arg , Span<const unsigned char> * cache_read , std :: vector<CScript> & output_scripts , FlatSigningProvider & out , std :: vector<unsigned char> * cache_write) const",209, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::Expand( int pos , const SigningProvider & provider , std :: vector<CScript> & output_scripts , FlatSigningProvider & out , std :: vector<unsigned char> * cache = nullptr) const",179, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"DescriptorImpl::ExpandFromCache( int pos , const std :: vector<unsigned char> & cache , std :: vector<CScript> & output_scripts , FlatSigningProvider & out) const",151, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"Singleton( T elem)",39, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"AddressDescriptor::ToStringExtra() const",92, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"AddressDescriptor::MakeScripts( const std :: vector<CPubKey> & , const CScript * , FlatSigningProvider &) const",181, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"AddressDescriptor::AddressDescriptor( CTxDestination destination)",125, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"AddressDescriptor::IsSolvable() const",52, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"RawDescriptor::ToStringExtra() const",100, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"RawDescriptor::MakeScripts( const std :: vector<CPubKey> & , const CScript * , FlatSigningProvider &) const",151, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"RawDescriptor::RawDescriptor( CScript script)",98, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"RawDescriptor::IsSolvable() const",52, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"PKDescriptor::MakeScripts( const std :: vector<CPubKey> & keys , const CScript * , FlatSigningProvider &) const",178, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"PKDescriptor::PKDescriptor( std :: unique_ptr<PubkeyProvider> prov)",113, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"PKHDescriptor::MakeScripts( const std :: vector<CPubKey> & keys , const CScript * , FlatSigningProvider &) const",188, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"PKHDescriptor::PKHDescriptor( std :: unique_ptr<PubkeyProvider> prov)",115, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"WPKHDescriptor::MakeScripts( const std :: vector<CPubKey> & keys , const CScript * , FlatSigningProvider &) const",206, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"WPKHDescriptor::WPKHDescriptor( std :: unique_ptr<PubkeyProvider> prov)",117, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ComboDescriptor::MakeScripts( const std :: vector<CPubKey> & keys , const CScript * , FlatSigningProvider & out) const",128, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ComboDescriptor::ComboDescriptor( std :: unique_ptr<PubkeyProvider> prov)",119, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"MultisigDescriptor::ToStringExtra() const",88, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"MultisigDescriptor::MakeScripts( const std :: vector<CPubKey> & keys , const CScript * , FlatSigningProvider &) const",187, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"MultisigDescriptor::MultisigDescriptor( int threshold , std :: vector<std::unique_ptr<PubkeyProvider>> providers)",173, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"SHDescriptor::MakeScripts( const std :: vector<CPubKey> & , const CScript * script , FlatSigningProvider &) const",193, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"SHDescriptor::SHDescriptor( std :: unique_ptr<DescriptorImpl> desc)",102, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"WSHDescriptor::MakeScripts( const std :: vector<CPubKey> & , const CScript * script , FlatSigningProvider &) const",203, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"WSHDescriptor::WSHDescriptor( std :: unique_ptr<DescriptorImpl> desc)",104, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"Const( const std :: string & str , Span<const char> & sp)",93, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"Func( const std :: string & str , Span<const char> & sp)",150, 4, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"Expr( Span<const char> & sp)",63, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"Split( const Span<const char> & sp , char sep)",74, 0, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ParseKeyPath( const std :: vector<Span<const char>> & split , KeyPath & out)",103, 8, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ParsePubkeyInner( const Span<const char> & sp , bool permit_uncompressed , FlatSigningProvider & out)",137, 12, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ParsePubkey( const Span<const char> & sp , bool permit_uncompressed , FlatSigningProvider & out)",124, 0, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"ParseScript( Span<const char> & sp , ParseScriptContext ctx , FlatSigningProvider & out)",116, 0, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"InferPubkey( const CPubKey & pubkey , ParseScriptContext , const SigningProvider & provider)",120, 0, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"InferScript( const CScript & script , ParseScriptContext ctx , const SigningProvider & provider)",124, 0, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"Parse( const std :: string & descriptor , FlatSigningProvider & out)",91, 0, 0
repos/cpp/bitcoin/src/script/descriptor.cpp,"InferDescriptor( const CScript & script , const SigningProvider & provider)",100, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"COutPoint::ToString() const",76, 4, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTxIn::CTxIn( COutPoint prevoutIn , CScript scriptSigIn , uint32_t nSequenceIn)",77, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTxIn::CTxIn( uint256 hashPrevTx , uint32_t nOut , CScript scriptSigIn , uint32_t nSequenceIn)",91, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTxIn::ToString() const",77, 8, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTxOut::CTxOut( const CAmount & nValueIn , CScript scriptPubKeyIn)",64, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTxOut::ToString() const",131, 4, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CMutableTransaction::CMutableTransaction()",102, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CMutableTransaction::CMutableTransaction( const CTransaction & tx)",145, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CMutableTransaction::GetHash() const",80, 4, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::ComputeHash() const",80, 4, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::ComputeWitnessHash() const",49, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::CTransaction()",129, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::CTransaction( const CMutableTransaction & tx)",197, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::CTransaction( CMutableTransaction && tx)",214, 0, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::GetValueOut() const",86, 12, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::GetTotalSize() const",56, 4, 0
repos/cpp/bitcoin/src/primitives/transaction.cpp,"CTransaction::ToString() const",97, 4, 0
repos/cpp/bitcoin/src/primitives/block.cpp,"CBlockHeader::GetHash() const",38, 0, 0
repos/cpp/bitcoin/src/primitives/block.cpp,"CBlock::ToString() const",130, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCServer::OnStarted( std :: function<void()> slot)",55, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCServer::OnStopped( std :: function<void()> slot)",55, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCTypeCheck( const UniValue & params , const std :: list<UniValueType> & typesExpected , bool fAllowNull)",64, 18, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCTypeCheckArgument( const UniValue & value , const UniValueType & typeExpected)",140, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCTypeCheckObj( const UniValue & o , const std :: map<std::string,UniValueType> & typesExpected , bool fAllowNull , bool fStrict)",94, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"AmountFromValue( const UniValue & value)",80, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"ParseHashV( const UniValue & v , std :: string strName)",146, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"ParseHashO( const UniValue & o , std :: string strKey)",58, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"ParseHexV( const UniValue & v , std :: string strName)",109, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"ParseHexO( const UniValue & o , std :: string strKey)",76, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"CRPCTable::help( const std :: string & strCommand , const JSONRPCRequest & helpreq) const",96, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"help( const JSONRPCRequest & jsonRequest)",132, 20, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"stop( const JSONRPCRequest & jsonRequest)",79, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"uptime( const JSONRPCRequest & jsonRequest)",104, 24, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"CRPCTable::CRPCTable()",87, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"CRPCTable::operator [ ]( const std :: string & name) const",91, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"CRPCTable::appendCommand( const std :: string & name , const CRPCCommand * pcmd)",91, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"StartRPC()",44, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"InterruptRPC()",48, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"StopRPC()",44, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"IsRPCRunning()",24, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"SetRPCWarmupStatus( const std :: string & newStatus)",54, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"SetRPCWarmupFinished()",28, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCIsInWarmup( std :: string * outStatus)",43, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"JSONRPCRequest::parse( const UniValue & valRequest)",112, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"IsDeprecatedRPCEnabled( const std :: string & method)",98, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"JSONRPCExecOne( JSONRPCRequest jreq , const UniValue & req)",88, 37, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"JSONRPCExecBatch( const JSONRPCRequest & jreq , const UniValue & vReq)",79, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"transformNamedArguments( const JSONRPCRequest & in , const std :: vector<std::string> & argNames)",121, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"CRPCTable::execute( const JSONRPCRequest & request) const",82, 12, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"CRPCTable::listCommands() const",69, 19, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"HelpExampleCli( const std :: string & methodname , const std :: string & args)",83, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"HelpExampleRpc( const std :: string & methodname , const std :: string & args)",133, 8, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCSetTimerInterfaceIfUnset( RPCTimerInterface * iface)",59, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCSetTimerInterface( RPCTimerInterface * iface)",52, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCUnsetTimerInterface( RPCTimerInterface * iface)",54, 0, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCRunLater( const std :: string & name , std :: function<void()> func , int64_t nSeconds)",118, 4, 0
repos/cpp/bitcoin/src/rpc/server.cpp,"RPCSerializationFlags()",79, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"HexToPubKey( const std :: string & hex_in)",89, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"AddrToPubKey( CKeyStore * const keystore , const std :: string & addr_in)",113, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"CreateMultisigRedeemscript( const int required , const std :: vector<CPubKey> & pubkeys)",162, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::DescribeAddressVisitor()",41, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::operator ( )( const CNoDestination & dest) const",58, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::operator ( )( const CKeyID & keyID) const",51, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::operator ( )( const CScriptID & scriptID) const",57, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::operator ( )( const WitnessV0KeyHash & id) const",69, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::operator ( )( const WitnessV0ScriptHash & id) const",69, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddressVisitor::operator ( )( const WitnessUnknown & id) const",83, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"DescribeAddress( const CTxDestination & dest)",65, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"Section::Section( const std :: string & left , const std :: string & right)",63, 4, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"Sections::PushSection( const Section & s)",58, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"Sections::Push( const RPCArg & arg , const size_t current_indent = 5 , const OuterType outer_type = OuterType :: NAMED_ARG)",154, 12, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"Sections::ToString() const",76, 16, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"RPCHelpMan::RPCHelpMan( const std :: string & name , const std :: string & description , const std :: vector<RPCArg> & args)",113, 0, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"RPCHelpMan::ToString() const",140, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"RPCArg::ToDescriptionString( const bool implicitly_required) const",109, 16, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"RPCArg::ToStringObj( const bool oneline) const",73, 8, 0
repos/cpp/bitcoin/src/rpc/util.cpp,"RPCArg::ToString( const bool oneline) const",81, 4, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"validateaddress( const JSONRPCRequest & request)",146, 16, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"createmultisig( const JSONRPCRequest & request)",210, 12, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"verifymessage( const JSONRPCRequest & request)",172, 20, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"signmessagewithprivkey( const JSONRPCRequest & request)",136, 20, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"setmocktime( const JSONRPCRequest & request)",131, 20, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"RPCLockedMemoryInfo()",69, 4, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"RPCMallocInfo()",43, 4, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"getmemoryinfo( const JSONRPCRequest & request)",208, 12, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"EnableOrDisableLogCategories( UniValue cats , bool enable)",90, 12, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"logging( const JSONRPCRequest & request)",147, 20, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"echo( const JSONRPCRequest & request)",139, 16, 0
repos/cpp/bitcoin/src/rpc/misc.cpp,"RegisterMiscRPCCommands( CRPCTable & t)",70, 4, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"TxToJSON( const CTransaction & tx , const uint256 hashBlock , UniValue & entry)",91, 16, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"getrawtransaction( const JSONRPCRequest & request)",157, 20, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"gettxoutproof( const JSONRPCRequest & request)",160, 20, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"verifytxoutproof( const JSONRPCRequest & request)",145, 20, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"ConstructTransaction( const UniValue & inputs_in , const UniValue & outputs_in , const UniValue & locktime , const UniValue & rbf)",143, 0, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"createrawtransaction( const JSONRPCRequest & request)",234, 36, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"decoderawtransaction( const JSONRPCRequest & request)",186, 20, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"decodescript( const JSONRPCRequest & request)",147, 12, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"TxInErrorToJSON( const CTxIn & txin , UniValue & vErrorsRet , const std :: string & strMessage)",107, 8, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"combinerawtransaction( const JSONRPCRequest & request)",152, 8, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"SignTransaction( interfaces :: Chain & chain , CMutableTransaction & mtx , const UniValue & prevTxsUnival , CBasicKeyStore * keystore , bool is_temp_keystore , const UniValue & hashType)",183, 0, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"signrawtransactionwithkey( const JSONRPCRequest & request)",168, 36, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"signrawtransaction( const JSONRPCRequest & request)",106, 8, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"sendrawtransaction( const JSONRPCRequest & request)",140, 12, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"testmempoolaccept( const JSONRPCRequest & request)",151, 16, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"WriteHDKeypath( std :: vector<uint32_t> & keypath)",66, 0, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"decodepsbt( const JSONRPCRequest & request)",147, 12, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"combinepsbt( const JSONRPCRequest & request)",153, 20, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"finalizepsbt( const JSONRPCRequest & request)",142, 12, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"createpsbt( const JSONRPCRequest & request)",234, 36, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"converttopsbt( const JSONRPCRequest & request)",187, 20, 0
repos/cpp/bitcoin/src/rpc/rawtransaction.cpp,"RegisterRawTransactionRPCCommands( CRPCTable & t)",70, 4, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"getconnectioncount( const JSONRPCRequest & request)",110, 8, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"ping( const JSONRPCRequest & request)",137, 16, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"getpeerinfo( const JSONRPCRequest & request)",151, 12, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"addnode( const JSONRPCRequest & request)",214, 20, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"disconnectnode( const JSONRPCRequest & request)",154, 20, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"getaddednodeinfo( const JSONRPCRequest & request)",191, 20, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"getnettotals( const JSONRPCRequest & request)",117, 12, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"GetNetworksInfo()",93, 8, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"getnetworkinfo( const JSONRPCRequest & request)",163, 12, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"setban( const JSONRPCRequest & request)",285, 20, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"listbanned( const JSONRPCRequest & request)",110, 8, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"clearbanned( const JSONRPCRequest & request)",110, 8, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"setnetworkactive( const JSONRPCRequest & request)",137, 20, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"getnodeaddresses( const JSONRPCRequest & request)",268, 20, 0
repos/cpp/bitcoin/src/rpc/net.cpp,"RegisterNetRPCCommands( CRPCTable & t)",70, 4, 0
repos/cpp/bitcoin/src/rpc/client.cpp,"CRPCConvertTable::convert( const std :: string & method , int idx)",65, 8, 0
repos/cpp/bitcoin/src/rpc/client.cpp,"CRPCConvertTable::convert( const std :: string & method , const std :: string & name)",72, 8, 0
repos/cpp/bitcoin/src/rpc/client.cpp,"CRPCConvertTable::CRPCConvertTable()",78, 44, 0
repos/cpp/bitcoin/src/rpc/client.cpp,"ParseNonRFCJSONValue( const std :: string & strVal)",77, 8, 0
repos/cpp/bitcoin/src/rpc/client.cpp,"RPCConvertValues( const std :: string & strMethod , const std :: vector<std::string> & strParams)",99, 0, 0
repos/cpp/bitcoin/src/rpc/client.cpp,"RPCConvertNamedValues( const std :: string & strMethod , const std :: vector<std::string> & strParams)",142, 12, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"JSONRPCRequestObj( const std :: string & strMethod , const UniValue & params , const UniValue & id)",101, 0, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"JSONRPCReplyObj( const UniValue & result , const UniValue & error , const UniValue & id)",92, 0, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"JSONRPCReply( const UniValue & result , const UniValue & error , const UniValue & id)",92, 0, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"JSONRPCError( int code , const std :: string & message)",60, 0, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"GetAuthCookieFile( bool temp = false)",71, 4, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"GenerateAuthCookie( std :: string * cookie_out)",119, 8, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"GetAuthCookie( std :: string * cookie_out)",45, 4, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"DeleteAuthCookie()",126, 8, 0
repos/cpp/bitcoin/src/rpc/protocol.cpp,"JSONRPCProcessBatchReply( const UniValue & in , size_t num)",79, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"GetDifficulty( const CBlockIndex * blockindex)",71, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"blockheaderToJSON( const CBlockIndex * blockindex)",88, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"blockToJSON( const CBlock & block , const CBlockIndex * blockindex , bool txDetails)",120, 4, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getblockcount( const JSONRPCRequest & request)",83, 16, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getbestblockhash( const JSONRPCRequest & request)",95, 16, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"RPCNotifyBlockChange( bool ibd , const CBlockIndex * pindex)",64, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"waitfornewblock( const JSONRPCRequest & request)",189, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"waitforblock( const JSONRPCRequest & request)",163, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"waitforblockheight( const JSONRPCRequest & request)",163, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"syncwithvalidationinterfacequeue( const JSONRPCRequest & request)",140, 16, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getdifficulty( const JSONRPCRequest & request)",108, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"EntryDescriptionString()",205, 4, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"EXCLUSIVE_LOCKS_REQUIRED( :: mempool . cs)",105, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"mempoolToJSON( bool fVerbose)",55, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getrawmempool( const JSONRPCRequest & request)",158, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getmempoolancestors( const JSONRPCRequest & request)",158, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getmempooldescendants( const JSONRPCRequest & request)",158, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getmempoolentry( const JSONRPCRequest & request)",135, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getblockhash( const JSONRPCRequest & request)",110, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getblockheader( const JSONRPCRequest & request)",153, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"GetBlockChecked( const CBlockIndex * pblockindex)",81, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getblock( const JSONRPCRequest & request)",185, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CCoinsStats::CCoinsStats()",121, 4, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"ApplyStats( CCoinsStats & stats , CHashWriter & ss , const uint256 & hash , const std :: map<uint32_t,Coin> & outputs)",122, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"GetUTXOStats( CCoinsView * view , CCoinsStats & stats)",68, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"pruneblockchain( const JSONRPCRequest & request)",179, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"gettxoutsetinfo( const JSONRPCRequest & request)",102, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"gettxout( const JSONRPCRequest & request)",209, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"verifychain( const JSONRPCRequest & request)",173, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"SoftForkMajorityDesc( int version , CBlockIndex * pindex , const Consensus :: Params & consensusParams)",113, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"SoftForkDesc( const std :: string & name , int version , CBlockIndex * pindex , const Consensus :: Params & consensusParams)",130, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"BIP9SoftForkDesc( const Consensus :: Params & consensusParams , Consensus :: DeploymentPos id)",104, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"BIP9SoftForkDescPushBack( UniValue & bip9_softforks , const Consensus :: Params & consensusParams , Consensus :: DeploymentPos id)",134, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getblockchaininfo( const JSONRPCRequest & request)",161, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CompareBlocksByHeight::operator ( )( const CBlockIndex * a , const CBlockIndex * b) const",77, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getchaintips( const JSONRPCRequest & request)",146, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"mempoolInfoToJSON()",121, 4, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getmempoolinfo( const JSONRPCRequest & request)",190, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"preciousblock( const JSONRPCRequest & request)",142, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"invalidateblock( const JSONRPCRequest & request)",141, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"reconsiderblock( const JSONRPCRequest & request)",136, 20, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getchaintxstats( const JSONRPCRequest & request)",173, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CalculateTruncatedMedian( std :: vector<T> & scores)",62, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CalculatePercentilesByWeight( CAmount result [ NUM_GETBLOCKSTATS_PERCENTILES ] , std :: vector<std::pair<CAmount,int64_t>> & scores , int64_t total_weight)",153, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"SetHasKeys( const std :: set<T> & set)",70, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"SetHasKeys( const std :: set<T> & set , const Tk & key , const Args & ... args)",90, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"getblockstats( const JSONRPCRequest & request)",179, 4, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"savemempool( const JSONRPCRequest & request)",108, 16, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"FindScriptPubKey( std :: atomic<int> & scan_progress , const std :: atomic<bool> & should_abort , int64_t & count , CCoinsViewCursor * cursor , const std :: set<CScript> & needles , std :: map<COutPoint,Coin> & out_results)",212, 0, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CoinsViewScanReserver::CoinsViewScanReserver()",65, 4, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CoinsViewScanReserver::reserve()",57, 8, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"CoinsViewScanReserver::~CoinsViewScanReserver()",61, 12, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"scantxoutset( const JSONRPCRequest & request)",163, 36, 0
repos/cpp/bitcoin/src/rpc/blockchain.cpp,"RegisterBlockchainRPCCommands( CRPCTable & t)",70, 4, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"ParseConfirmTarget( const UniValue & value)",125, 8, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"GetNetworkHashPS( int lookup , int height)",103, 4, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"getnetworkhashps( const JSONRPCRequest & request)",165, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"generateBlocks( std :: shared_ptr<CReserveScript> coinbaseScript , int nGenerate , uint64_t nMaxTries , bool keepScript)",148, 8, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"generatetoaddress( const JSONRPCRequest & request)",146, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"getmininginfo( const JSONRPCRequest & request)",121, 12, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"prioritisetransaction( const JSONRPCRequest & request)",159, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"BIP22ValidationResult( const CValidationState & state)",73, 8, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"gbt_vb_name( const Consensus :: DeploymentPos pos)",76, 4, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"getblocktemplate( const JSONRPCRequest & request)",348, 12, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"submitblock_StateCatcher::submitblock_StateCatcher( const uint256 & hashIn)",102, 4, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"submitblock_StateCatcher::BlockChecked( const CBlock & block , const CValidationState & stateIn)",87, 4, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"submitblock( const JSONRPCRequest & request)",164, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"submitheader( const JSONRPCRequest & request)",132, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"estimatesmartfee( const JSONRPCRequest & request)",139, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"estimaterawfee( const JSONRPCRequest & request)",175, 20, 0
repos/cpp/bitcoin/src/rpc/mining.cpp,"RegisterMiningRPCCommands( CRPCTable & t)",70, 4, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"GetDustThreshold( const CTxOut & txout , const CFeeRate & dustRelayFeeIn)",79, 4, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"IsDust( const CTxOut & txout , const CFeeRate & dustRelayFeeIn)",69, 4, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"IsStandard( const CScript & scriptPubKey , txnouttype & whichType)",86, 15, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"IsStandardTx( const CTransaction & tx , std :: string & reason)",80, 8, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"AreInputsStandard( const CTransaction & tx , const CCoinsViewCache & mapInputs)",119, 12, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"IsWitnessStandard( const CTransaction & tx , const CCoinsViewCache & mapInputs)",119, 12, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"GetVirtualTransactionSize( int64_t nWeight , int64_t nSigOpCost)",111, 4, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"GetVirtualTransactionSize( const CTransaction & tx , int64_t nSigOpCost)",78, 0, 0
repos/cpp/bitcoin/src/policy/policy.cpp,"GetVirtualTransactionInputSize( const CTxIn & txin , int64_t nSigOpCost)",83, 4, 0
repos/cpp/bitcoin/src/policy/feerate.cpp,"CFeeRate::CFeeRate( const CAmount & nFeePaid , size_t nBytes_)",70, 4, 0
repos/cpp/bitcoin/src/policy/feerate.cpp,"CFeeRate::GetFee( size_t nBytes_) const",70, 4, 0
repos/cpp/bitcoin/src/policy/feerate.cpp,"CFeeRate::ToString() const",98, 4, 0
repos/cpp/bitcoin/src/policy/rbf.cpp,"SignalsOptInRBF( const CTransaction & tx)",57, 8, 0
repos/cpp/bitcoin/src/policy/rbf.cpp,"IsRBFOptIn( const CTransaction & tx , CTxMemPool & pool)",107, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"StringForFeeEstimateHorizon( FeeEstimateHorizon horizon)",79, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"StringForFeeReason( FeeReason reason)",80, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"FeeModeFromString( const std :: string & mode_string , FeeEstimateMode & fee_estimate_mode)",93, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::GetMaxConfirms() const",75, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::TxConfirmStats( const std :: vector<double> & defaultBuckets , const std :: map<double,unsigned int> & defaultBucketMap , unsigned int maxPeriods , double _decay , unsigned int _scale)",92, 31, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::resizeInMemoryCounters( size_t newbuckets)",107, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::ClearCurrent( unsigned int nBlockHeight)",72, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::Record( int blocksToConfirm , double val)",67, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::UpdateMovingAverages()",58, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::EstimateMedianVal( int confTarget , double sufficientTxVal , double successBreakPoint , bool requireGreater , unsigned int nBlockHeight , EstimationResult * result) const",183, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::Write( CAutoFile & fileout) const",53, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::Read( CAutoFile & filein , int nFileVersion , size_t numBuckets)",129, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::NewTx( unsigned int nBlockHeight , double val)",74, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"TxConfirmStats::removeTx( unsigned int entryHeight , unsigned int nBestSeenHeight , unsigned int bucketindex , bool inBlock)",126, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::removeTx( uint256 hash , bool inBlock)",106, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::CBlockPolicyEstimator()",139, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::~CBlockPolicyEstimator()",48, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::processTransaction( const CTxMemPoolEntry & entry , bool validFeeEstimate)",100, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::processBlockTx( unsigned int nBlockHeight , const CTxMemPoolEntry * entry)",102, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::processBlock( unsigned int nBlockHeight , std :: vector<const CTxMemPoolEntry*> & entries)",169, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::estimateFee( int confTarget) const",93, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::estimateRawFee( int confTarget , double successThreshold , FeeEstimateHorizon horizon , EstimationResult * result) const",148, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::HighestTargetTracked( FeeEstimateHorizon horizon) const",107, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::BlockSpan() const",54, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::HistoricalBlockSpan() const",78, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::MaxUsableEstimate() const",113, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::estimateCombinedFee( unsigned int confTarget , double successThreshold , bool checkShorterHorizon , EstimationResult * result) const",171, 16, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::estimateConservativeFee( unsigned int doubleTarget , EstimationResult * result) const",149, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::estimateSmartFee( int confTarget , FeeCalculation * feeCalc , bool conservative) const",115, 0, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::Write( CAutoFile & fileout) const",106, 8, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::Read( CAutoFile & filein)",147, 12, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"CBlockPolicyEstimator::FlushUnconfirmed()",134, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"FeeFilterRounder::FeeFilterRounder( const CFeeRate & minIncrementalFee)",124, 4, 0
repos/cpp/bitcoin/src/policy/fees.cpp,"FeeFilterRounder::round( CAmount currentMinFee)",91, 4, 0
repos/cpp/bitcoin/src/consensus/merkle.cpp,"ComputeMerkleRoot( std :: vector<uint256> hashes , bool * mutated)",76, 8, 0
repos/cpp/bitcoin/src/consensus/merkle.cpp,"BlockMerkleRoot( const CBlock & block , bool * mutated)",60, 0, 0
repos/cpp/bitcoin/src/consensus/merkle.cpp,"BlockWitnessMerkleRoot( const CBlock & block , bool * mutated)",67, 0, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"IsFinalTx( const CTransaction & tx , int nBlockHeight , int64_t nBlockTime)",115, 4, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"CalculateSequenceLocks( const CTransaction & tx , int flags , std :: vector<int> * prevHeights , const CBlockIndex & block)",160, 12, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"EvaluateSequenceLocks( const CBlockIndex & block , std :: pair<int,int64_t> lockPair)",87, 0, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"SequenceLocks( const CTransaction & tx , int flags , std :: vector<int> * prevHeights , const CBlockIndex & block)",111, 0, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"GetLegacySigOpCount( const CTransaction & tx)",60, 8, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"GetP2SHSigOpCount( const CTransaction & tx , const CCoinsViewCache & inputs)",86, 0, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"GetTransactionSigOpCost( const CTransaction & tx , const CCoinsViewCache & inputs , int flags)",115, 8, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"CheckTransaction( const CTransaction & tx , CValidationState & state , bool fCheckDuplicateInputs)",127, 4, 0
repos/cpp/bitcoin/src/consensus/tx_verify.cpp,"Consensus::CheckTxInputs( const CTransaction & tx , CValidationState & state , const CCoinsViewCache & inputs , int nSpendHeight , CAmount & txfee)",144, 0, 0
