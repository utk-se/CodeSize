File, Function, Length, Total Width, Leading Space(s), Leading Tab(s)
repos/cpp/electron/native_mate/native_mate/persistent_dictionary.cc,"mate::PersistentDictionary::PersistentDictionary()",1, 48, 0, 0
repos/cpp/electron/native_mate/native_mate/persistent_dictionary.cc,"mate::PersistentDictionary::PersistentDictionary( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object)",5, 73, 43, 0
repos/cpp/electron/native_mate/native_mate/persistent_dictionary.cc,"mate::PersistentDictionary::~PersistentDictionary()",1, 49, 0, 0
repos/cpp/electron/native_mate/native_mate/persistent_dictionary.cc,"mate::PersistentDictionary::GetHandle() const",3, 64, 0, 0
repos/cpp/electron/native_mate/native_mate/persistent_dictionary.cc,"mate::Converter<PersistentDictionary>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , PersistentDictionary * out)",8, 74, 45, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::WrappableBase::WrappableBase()",1, 54, 0, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::WrappableBase::~WrappableBase()",8, 62, 2, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::WrappableBase::GetWrapper() const",6, 59, 4, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::WrappableBase::InitWith( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper)",15, 79, 2, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::WrappableBase::FirstWeakCallback( const v8 :: WeakCallbackInfo<WrappableBase> & data)",6, 55, 4, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::WrappableBase::SecondWeakCallback( const v8 :: WeakCallbackInfo<WrappableBase> & data)",5, 55, 4, 0
repos/cpp/electron/native_mate/native_mate/wrappable.cc,"mate::internal::FromV8Impl( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val)",8, 67, 0, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::Promise()",3, 23, 4, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::Promise( v8 :: Isolate * isolate)",4, 51, 2, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::~Promise()",2, 22, 0, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::Create( v8 :: Isolate * isolate)",3, 48, 0, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::Create()",3, 53, 2, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::RejectWithErrorMessage( const std :: string & string)",6, 68, 2, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Promise::GetHandle() const",3, 51, 0, 0
repos/cpp/electron/native_mate/native_mate/promise.cc,"mate::Converter<Promise>::ToV8( v8 :: Isolate * isolate , Promise val)",4, 68, 0, 0
repos/cpp/electron/native_mate/native_mate/function_template.cc,"mate::internal::CallbackHolderBase::CallbackHolderBase( v8 :: Isolate * isolate)",5, 64, 2, 0
repos/cpp/electron/native_mate/native_mate/function_template.cc,"mate::internal::CallbackHolderBase::~CallbackHolderBase()",3, 44, 0, 0
repos/cpp/electron/native_mate/native_mate/function_template.cc,"mate::internal::CallbackHolderBase::GetHandle( v8 :: Isolate * isolate)",3, 78, 0, 0
repos/cpp/electron/native_mate/native_mate/function_template.cc,"mate::internal::CallbackHolderBase::FirstWeakCallback( const v8 :: WeakCallbackInfo<CallbackHolderBase> & data)",5, 60, 4, 0
repos/cpp/electron/native_mate/native_mate/function_template.cc,"mate::internal::CallbackHolderBase::SecondWeakCallback( const v8 :: WeakCallbackInfo<CallbackHolderBase> & data)",4, 60, 4, 0
repos/cpp/electron/native_mate/native_mate/object_template_builder.cc,"mate::ObjectTemplateBuilder::ObjectTemplateBuilder( v8 :: Isolate * isolate , v8 :: Local<v8::ObjectTemplate> templ)",5, 46, 0, 0
repos/cpp/electron/native_mate/native_mate/object_template_builder.cc,"mate::ObjectTemplateBuilder::~ObjectTemplateBuilder()",2, 50, 0, 0
repos/cpp/electron/native_mate/native_mate/object_template_builder.cc,"mate::ObjectTemplateBuilder::SetImpl( const base :: StringPiece & name , v8 :: Local<v8::Data> val)",5, 62, 4, 0
repos/cpp/electron/native_mate/native_mate/object_template_builder.cc,"mate::ObjectTemplateBuilder::SetPropertyImpl( const base :: StringPiece & name , v8 :: Local<v8::FunctionTemplate> getter , v8 :: Local<v8::FunctionTemplate> setter)",7, 75, 4, 0
repos/cpp/electron/native_mate/native_mate/object_template_builder.cc,"mate::ObjectTemplateBuilder::MakeDestroyable()",5, 76, 2, 0
repos/cpp/electron/native_mate/native_mate/object_template_builder.cc,"mate::ObjectTemplateBuilder::Build()",5, 63, 0, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::V8TypeAsString( v8 :: Isolate * isolate , v8 :: Local<v8::Value> value)",10, 79, 0, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::Arguments()",6, 39, 6, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::Arguments( const v8 :: FunctionCallbackInfo<v8::Value> & info)",6, 70, 0, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::~Arguments()",2, 26, 0, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::PeekNext() const",5, 51, 0, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::ThrowError() const",8, 75, 6, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::ThrowError( const std :: string & message) const",5, 79, 0, 0
repos/cpp/electron/native_mate/native_mate/arguments.cc,"mate::Arguments::ThrowTypeError( const std :: string & message) const",6, 53, 2, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::FromMaybe( Maybe<T> maybe , U * out)",6, 43, 2, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<bool>::ToV8( Isolate * isolate , bool val)",3, 65, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<bool>::FromV8( Isolate * isolate , Local<Value> val , bool * out)",6, 78, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<unsignedlong>::ToV8( Isolate * isolate , unsigned long val)",4, 65, 44, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<unsignedlong>::FromV8( Isolate * isolate , Local<Value> val , unsigned long * out)",7, 74, 2, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<int32_t>::ToV8( Isolate * isolate , int32_t val)",3, 71, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<int32_t>::FromV8( Isolate * isolate , Local<Value> val , int32_t * out)",8, 50, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<uint32_t>::ToV8( Isolate * isolate , uint32_t val)",3, 73, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<uint32_t>::FromV8( Isolate * isolate , Local<Value> val , uint32_t * out)",8, 51, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<int64_t>::ToV8( Isolate * isolate , int64_t val)",3, 71, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<int64_t>::FromV8( Isolate * isolate , Local<Value> val , int64_t * out)",9, 75, 2, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<uint64_t>::ToV8( Isolate * isolate , uint64_t val)",3, 73, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<uint64_t>::FromV8( Isolate * isolate , Local<Value> val , uint64_t * out)",7, 74, 2, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<float>::ToV8( Isolate * isolate , float val)",3, 67, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<float>::FromV8( Isolate * isolate , Local<Value> val , float * out)",6, 80, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<double>::ToV8( Isolate * isolate , double val)",3, 69, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<double>::FromV8( Isolate * isolate , Local<Value> val , double * out)",8, 49, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<constchar*>::ToV8( Isolate * isolate , const char * val)",3, 79, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<base::StringPiece>::ToV8( Isolate * isolate , const base :: StringPiece & val)",5, 81, 2, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<std::string>::ToV8( Isolate * isolate , const std :: string & val)",4, 68, 42, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<std::string>::FromV8( Isolate * isolate , Local<Value> val , std :: string * out)",12, 56, 36, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Function>>::ToV8( Isolate * isolate , Local<Function> val)",4, 69, 46, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Function>>::FromV8( Isolate * isolate , Local<Value> val , Local<Function> * out)",8, 64, 40, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Object>>::ToV8( Isolate * isolate , Local<Object> val)",4, 65, 44, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Object>>::FromV8( Isolate * isolate , Local<Value> val , Local<Object> * out)",8, 60, 38, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<String>>::ToV8( Isolate * isolate , Local<String> val)",4, 65, 44, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<String>>::FromV8( Isolate * isolate , Local<Value> val , Local<String> * out)",8, 60, 38, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<External>>::ToV8( Isolate * isolate , Local<External> val)",4, 69, 46, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<External>>::FromV8( Isolate * isolate , v8 :: Local<Value> val , Local<External> * out)",8, 64, 40, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Array>>::ToV8( Isolate * isolate , Local<Array> val)",3, 81, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Array>>::FromV8( Isolate * isolate , v8 :: Local<Value> val , Local<Array> * out)",8, 59, 37, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Value>>::ToV8( Isolate * isolate , Local<Value> val)",3, 81, 0, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Promise>>::ToV8( Isolate * isolate , Local<Promise> val)",4, 69, 47, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::Converter<Local<Value>>::FromV8( Isolate * isolate , Local<Value> val , Local<Value> * out)",6, 58, 37, 0
repos/cpp/electron/native_mate/native_mate/converter.cc,"mate::StringToSymbol( v8 :: Isolate * isolate , const base :: StringPiece & val)",6, 71, 33, 0
repos/cpp/electron/native_mate/native_mate/dictionary.cc,"mate::Dictionary::Dictionary()",1, 45, 0, 0
repos/cpp/electron/native_mate/native_mate/dictionary.cc,"mate::Dictionary::Dictionary( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object)",2, 75, 0, 0
repos/cpp/electron/native_mate/native_mate/dictionary.cc,"mate::Dictionary::CreateEmpty( v8 :: Isolate * isolate)",3, 59, 0, 0
repos/cpp/electron/native_mate/native_mate/dictionary.cc,"mate::Dictionary::GetHandle() const",3, 54, 0, 0
repos/cpp/electron/native_mate/native_mate/dictionary.cc,"mate::Converter<Dictionary>::ToV8( v8 :: Isolate * isolate , Dictionary val)",4, 71, 0, 0
repos/cpp/electron/native_mate/native_mate/dictionary.cc,"mate::Converter<Dictionary>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , Dictionary * out)",8, 64, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"SetCloseOnExec( int fd)",8, 49, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"CloseSocket( int fd)",4, 78, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"WriteToSocket( int fd , const char * message , size_t length)",22, 81, 8, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"TimeDeltaToTimeVal( const base :: TimeDelta & delta)",6, 80, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"WaitSocketForRead( int fd , const base :: TimeDelta & timeout)",9, 67, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ReadFromSocket( int fd , char * buf , size_t bufsize , const base :: TimeDelta & timeout)",31, 81, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"SetupSockAddr( const std :: string & path , struct sockaddr_un * addr)",6, 74, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"SetupSocketOnly()",10, 79, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"SetupSocket( const std :: string & path , int * sock , struct sockaddr_un * addr)",4, 81, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ReadLink( const base :: FilePath & path)",9, 64, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"UnlinkPath( const base :: FilePath & path)",7, 56, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"SymlinkPath( const base :: FilePath & target , const base :: FilePath & path)",15, 79, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ParseLockPath( const base :: FilePath & path , std :: string * hostname , int * pid)",25, 76, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"DisplayProfileInUseError( const base :: FilePath & lock_path , const std :: string & hostname , int pid)",5, 63, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"IsChromeProcess( pid_t pid)",10, 73, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ScopedSocket::ScopedSocket()",1, 40, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ScopedSocket::~ScopedSocket()",1, 31, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ScopedSocket::fd()",1, 27, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ScopedSocket::Reset()",4, 29, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ScopedSocket::Close()",5, 24, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"GenerateCookie()",3, 51, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"CheckCookie( const base :: FilePath & path , const base :: FilePath & cookie)",3, 77, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"IsAppSandboxed()",14, 75, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ConnectSocket( ScopedSocket * socket , const base :: FilePath & socket_path , const base :: FilePath & cookie_path)",46, 81, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ReplaceOldSingletonLock( const base :: FilePath & symlink_content , const base :: FilePath & lock_path)",32, 81, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::SocketReader::SocketReader( ProcessSingleton :: LinuxWatcher * parent , scoped_refptr<base::SingleThreadTaskRunner> ui_task_runner , int fd)",16, 79, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::SocketReader::~SocketReader()",1, 42, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::SocketReader::CleanupAndDeleteSelf()",6, 46, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::LinuxWatcher( ProcessSingleton * parent)",2, 81, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::~LinuxWatcher()",1, 62, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::OnSocketCanReadWithoutBlocking( int socket)",17, 81, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::StartListening( int socket)",7, 72, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::HandleMessage( const std :: string & current_dir , const std :: vector<std::string> & argv , SocketReader * reader)",19, 80, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::RemoveSocketReader( SocketReader * reader)",9, 80, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::SocketReader::OnSocketCanReadWithoutBlocking()",63, 81, 8, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::LinuxWatcher::SocketReader::FinishWithACK( const char * message , size_t length)",17, 79, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::ProcessSingleton( const base :: FilePath & user_data_dir , const NotificationCallback & notification_callback)",16, 74, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::~ProcessSingleton()",7, 57, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::NotifyOtherProcess()",5, 72, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::NotifyOtherProcessWithTimeout( const base :: CommandLine & cmd_line , int retry_attempts , const base :: TimeDelta & timeout , bool kill_unresponsive)",130, 81, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::NotifyOtherProcessOrCreate()",5, 80, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::StartListeningOnSocket()",7, 76, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::OnBrowserReady()",6, 42, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::NotifyOtherProcessWithTimeoutOrCreate( const base :: CommandLine & command_line , int retry_attempts , const base :: TimeDelta & timeout)",45, 81, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::OverrideCurrentPidForTesting( base :: ProcessId pid)",3, 75, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::OverrideKillCallbackForTesting( const base :: Callback<void(int)> & callback)",4, 55, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::DisablePromptForTesting()",3, 51, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::Create()",98, 81, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::Cleanup()",5, 35, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::IsSameChromeInstance( pid_t pid)",11, 57, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::KillProcessByLockPath()",21, 75, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_posix.cc,"ProcessSingleton::KillProcess( int pid)",8, 76, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"GetNSSCertDatabaseForResourceContext( content :: ResourceContext * context , const base :: Callback<void(net::NSSCertDatabase*)> & callback)",18, 79, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::Create( content :: BrowserContext * browser_context , const CreationCallback & callback)",8, 79, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::CertificateManagerModel( net :: NSSCertDatabase * nss_cert_database , bool is_user_db_available)",6, 81, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::~CertificateManagerModel()",1, 55, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::ImportFromPKCS12( PK11SlotInfo * slot_info , const std :: string & data , const base :: string16 & password , bool is_extractable , net :: ScopedCERTCertificateList * imported_certs)",9, 79, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::ImportUserCert( const std :: string & data)",3, 71, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::ImportCACerts( const net :: ScopedCERTCertificateList & certificates , net :: NSSCertDatabase :: TrustBits trust_bits , net :: NSSCertDatabase :: ImportCertFailureList * not_imported)",6, 74, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::ImportServerCert( const net :: ScopedCERTCertificateList & certificates , net :: NSSCertDatabase :: TrustBits trust_bits , net :: NSSCertDatabase :: ImportCertFailureList * not_imported)",6, 77, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::SetCertTrust( CERTCertificate * cert , net :: CertType type , net :: NSSCertDatabase :: TrustBits trust_bits)",6, 57, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::Delete( CERTCertificate * cert)",3, 62, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::DidGetCertDBOnUIThread( net :: NSSCertDatabase * cert_db , bool is_user_db_available , const CreationCallback & callback)",10, 67, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::DidGetCertDBOnIOThread( const CreationCallback & callback , net :: NSSCertDatabase * cert_db)",11, 76, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/certificate_manager_model.cc,"CertificateManagerModel::GetCertDBOnIOThread( content :: ResourceContext * context , const CreationCallback & callback)",10, 79, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"AutoLockMutex::AutoLockMutex( HANDLE mutex)",4, 63, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"AutoLockMutex::~AutoLockMutex()",4, 44, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"AutoUnlockMutex::AutoUnlockMutex( HANDLE mutex)",4, 59, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"AutoUnlockMutex::~AutoUnlockMutex()",4, 63, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"BrowserWindowEnumeration( HWND window , LPARAM param)",6, 68, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"CommandLineStringToArgv( const std :: wstring & command_line_string)",11, 71, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ParseCommandLine( const COPYDATASTRUCT * cds , base :: CommandLine :: StringVector * parsed_command_line , base :: FilePath * current_directory)",58, 81, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessLaunchNotification( const ProcessSingleton :: NotificationCallback & notification_callback , UINT message , WPARAM wparam , LPARAM lparam , LRESULT * result)",24, 78, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"TerminateAppWithError()",5, 76, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::ProcessSingleton( const base :: FilePath & user_data_dir , const NotificationCallback & notification_callback)",11, 81, 6, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::~ProcessSingleton()",5, 54, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::NotifyOtherProcess()",44, 78, 4, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::NotifyOtherProcessOrCreate()",9, 80, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::StartListeningOnSocket()",1, 51, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::OnBrowserReady()",1, 43, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::Create()",57, 81, 23, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::Cleanup()",1, 36, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/process_singleton_win.cc,"ProcessSingleton::OverrideShouldKillRemoteProcessCallbackForTesting( const ShouldKillRemoteProcessCallback & display_dialog_callback)",4, 74, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::GetInstance()",3, 70, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::OnWindowMapped( unsigned long xid)",6, 68, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::OnWindowUnmapped( unsigned long xid)",6, 70, 0, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::GlobalMenuBarRegistrarX11()",15, 80, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::~GlobalMenuBarRegistrarX11()",8, 76, 8, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::RegisterXID( unsigned long xid)",16, 80, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::UnregisterXID( unsigned long xid)",16, 79, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::OnProxyCreated( GObject * source , GAsyncResult * result)",20, 72, 2, 0
repos/cpp/electron/chromium_src/chrome/browser/ui/views/frame/global_menu_bar_registrar_x11.cc,"GlobalMenuBarRegistrarX11::OnNameOwnerChanged( GObject * , GParamSpec *)",9, 80, 51, 0
repos/cpp/electron/atom/node/osfhandle.cc,"node::ReferenceSymbols()",33, 81, 2, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::BrowserProcessImpl()",3, 43, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::~BrowserProcessImpl()",3, 44, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::ApplyProxyModeFromCommandLine( ValueMapPrefStore * pref_store)",37, 81, 8, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::PostEarlyInitialization()",12, 81, 2, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::PreCreateThreads( const base :: CommandLine & command_line)",26, 73, 2, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::PostDestroyThreads()",3, 48, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::PostMainMessageLoopRun()",4, 74, 2, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::IsShuttingDown()",3, 44, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::GetMetricsServicesManager()",3, 50, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::metrics_service()",3, 65, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::rappor_service()",3, 66, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::profile_manager()",3, 56, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::local_state()",4, 49, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::system_request_context()",3, 77, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::shared_url_loader_factory()",3, 72, 2, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::variations_service()",3, 74, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::platform_part()",3, 66, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::extension_event_router_forwarder()",3, 57, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::notification_ui_manager()",3, 71, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::notification_platform_bridge()",3, 81, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::io_thread()",4, 44, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::system_network_context_manager()",4, 55, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::network_quality_tracker()",3, 80, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::watchdog_thread()",3, 56, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::browser_policy_connector()",3, 49, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::policy_service()",3, 62, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::icon_manager()",3, 50, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::gpu_mode_manager()",3, 57, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::print_preview_dialog_controller()",3, 56, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::background_printing_manager()",3, 52, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::intranet_redirect_detector()",3, 77, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::download_status_updater()",3, 71, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::download_request_limiter()",3, 73, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::background_mode_manager()",3, 71, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::status_tray()",3, 48, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::safe_browsing_service()",3, 46, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::safe_browsing_detection_service()",3, 56, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::subresource_filter_ruleset_service()",3, 59, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::optimization_guide_service()",3, 51, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::net_log()",4, 55, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::component_updater()",3, 42, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::supervised_user_whitelist_installer()",3, 60, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::media_file_system_registry()",3, 76, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::webrtc_log_uploader()",3, 63, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::network_time_tracker()",3, 79, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::gcm_driver()",3, 51, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::GetTabManager()",3, 72, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::CachedDefaultWebClientState()",3, 52, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::pref_service_factory() const",4, 79, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::SetApplicationLocale( const std :: string & locale)",3, 75, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::GetApplicationLocale()",3, 64, 0, 0
repos/cpp/electron/atom/browser/browser_process_impl.cc,"BrowserProcessImpl::print_job_manager()",9, 69, 0, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"MediaStreamTypeToString( content :: MediaStreamType type)",10, 69, 0, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::MediaAccessAllowed( const content :: MediaStreamRequest & request , content :: MediaResponseCallback callback , bool allowed)",9, 73, 2, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::OnPointerLockResponse( content :: WebContents * web_contents , bool allowed)",4, 79, 0, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::OnPermissionResponse( base :: Callback<void(bool)> callback , blink :: mojom :: PermissionStatus status)",7, 67, 26, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::WebContentsPermissionHelper( content :: WebContents * web_contents)",3, 58, 0, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::~WebContentsPermissionHelper()",1, 63, 0, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::RequestPermission( content :: PermissionType permission , const base :: Callback<void(bool)> & callback , bool user_gesture , const base :: DictionaryValue * details)",13, 78, 6, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::CheckPermission( content :: PermissionType permission , const base :: DictionaryValue * details) const",10, 81, 2, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::RequestFullscreenPermission( const base :: Callback<void(bool)> & callback)",6, 72, 6, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::RequestMediaAccessPermission( const content :: MediaStreamRequest & request , content :: MediaResponseCallback response_callback)",23, 81, 2, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::RequestWebNotificationPermission( const base :: Callback<void(bool)> & callback)",4, 71, 2, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::RequestPointerLockPermission( bool user_gesture)",6, 74, 6, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::RequestOpenExternalPermission( const base :: Callback<void(bool)> & callback , bool user_gesture , const GURL & url)",10, 75, 6, 0
repos/cpp/electron/atom/browser/web_contents_permission_helper.cc,"atom::WebContentsPermissionHelper::CheckMediaAccessPermission( const GURL & security_origin , content :: MediaStreamType type) const",10, 76, 2, 0
repos/cpp/electron/atom/browser/native_browser_view_views.cc,"atom::NativeBrowserViewViews::NativeBrowserViewViews( InspectableWebContents * inspectable_web_contents)",3, 54, 4, 0
repos/cpp/electron/atom/browser/native_browser_view_views.cc,"atom::NativeBrowserViewViews::~NativeBrowserViewViews()",1, 53, 0, 0
repos/cpp/electron/atom/browser/native_browser_view_views.cc,"atom::NativeBrowserViewViews::SetAutoResizeFlags( uint8_t flags)",3, 65, 0, 0
repos/cpp/electron/atom/browser/native_browser_view_views.cc,"atom::NativeBrowserViewViews::SetBounds( const gfx :: Rect & bounds)",4, 66, 0, 0
repos/cpp/electron/atom/browser/native_browser_view_views.cc,"atom::NativeBrowserViewViews::SetBackgroundColor( SkColor color)",5, 65, 0, 0
repos/cpp/electron/atom/browser/native_browser_view_views.cc,"atom::NativeBrowserView::Create( InspectableWebContents * inspectable_web_contents)",4, 63, 2, 0
repos/cpp/electron/atom/browser/atom_javascript_dialog_manager.cc,"atom::AtomJavaScriptDialogManager::AtomJavaScriptDialogManager( api :: WebContents * api_web_contents)",3, 58, 0, 0
repos/cpp/electron/atom/browser/atom_javascript_dialog_manager.cc,"atom::AtomJavaScriptDialogManager::RunJavaScriptDialog( content :: WebContents * web_contents , content :: RenderFrameHost * rfh , JavaScriptDialogType dialog_type , const base :: string16 & message_text , const base :: string16 & default_prompt_text , DialogClosedCallback callback , bool * did_suppress_message)",51, 78, 6, 0
repos/cpp/electron/atom/browser/atom_javascript_dialog_manager.cc,"atom::AtomJavaScriptDialogManager::RunBeforeUnloadDialog( content :: WebContents * web_contents , content :: RenderFrameHost * rfh , bool is_reload , DialogClosedCallback callback)",9, 75, 2, 0
repos/cpp/electron/atom/browser/atom_javascript_dialog_manager.cc,"atom::AtomJavaScriptDialogManager::CancelDialogs( content :: WebContents * web_contents , bool reset_state)",3, 49, 0, 0
repos/cpp/electron/atom/browser/atom_javascript_dialog_manager.cc,"atom::AtomJavaScriptDialogManager::OnMessageBoxCallback( DialogClosedCallback callback , const std :: string & origin , int code , bool checkbox_checked)",9, 56, 0, 0
repos/cpp/electron/atom/browser/relauncher_linux.cc,"relauncher::internal::RelauncherSynchronizeWithParent()",29, 69, 2, 0
repos/cpp/electron/atom/browser/relauncher_linux.cc,"relauncher::internal::LaunchProgram( const StringVector & relauncher_args , const StringVector & argv)",15, 80, 2, 0
repos/cpp/electron/atom/browser/unresponsive_suppressor.cc,"atom::IsUnresponsiveEventSuppressed()",3, 39, 0, 0
repos/cpp/electron/atom/browser/unresponsive_suppressor.cc,"atom::UnresponsiveSuppressor::UnresponsiveSuppressor()",3, 51, 0, 0
repos/cpp/electron/atom/browser/unresponsive_suppressor.cc,"atom::UnresponsiveSuppressor::~UnresponsiveSuppressor()",3, 52, 0, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::WebContentsZoomController( content :: WebContents * web_contents)",6, 74, 2, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::~WebContentsZoomController()",1, 59, 0, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::AddObserver( WebContentsZoomController :: Observer * observer)",4, 53, 4, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::RemoveObserver( WebContentsZoomController :: Observer * observer)",4, 53, 4, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::SetEmbedderZoomController( WebContentsZoomController * controller)",4, 59, 0, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::SetZoomLevel( double level)",35, 79, 4, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::GetZoomLevel()",5, 67, 13, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::SetDefaultZoomFactor( double factor)",3, 70, 0, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::GetDefaultZoomFactor()",3, 59, 0, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::SetTemporaryZoomLevel( double level)",8, 80, 2, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::UsesTemporaryZoomLevel()",7, 76, 2, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::SetZoomMode( ZoomMode new_mode)",83, 79, 10, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::ResetZoomModeOnNavigationIfNeeded( const GURL & url)",18, 76, 2, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::DidFinishNavigation( content :: NavigationHandle * navigation_handle)",13, 81, 2, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::WebContentsDestroyed()",7, 57, 0, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::RenderFrameHostChanged( content :: RenderFrameHost * old_host , content :: RenderFrameHost * new_host)",11, 75, 2, 0
repos/cpp/electron/atom/browser/web_contents_zoom_controller.cc,"atom::WebContentsZoomController::SetZoomFactorOnNavigationIfNeeded( const GURL & url)",32, 79, 2, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::GetHash( const base :: FilePath & partition_path)",4, 64, 2, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::RegisterPrefs( PrefRegistrySimple * registry)",4, 70, 0, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::ZoomLevelDelegate( PrefService * pref_service , const base :: FilePath & partition_path)",6, 75, 37, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::~ZoomLevelDelegate()",1, 43, 0, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::SetDefaultZoomLevelPref( double level)",8, 78, 2, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::GetDefaultZoomLevelPref() const",10, 81, 2, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::OnZoomLevelChanged( const content :: HostZoomMap :: ZoomLevelChange & change)",25, 78, 6, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::ExtractPerHostZoomLevels( const base :: DictionaryValue * host_zoom_dictionary)",40, 79, 4, 0
repos/cpp/electron/atom/browser/zoom_level_delegate.cc,"atom::ZoomLevelDelegate::InitHostZoomMap( content :: HostZoomMap * host_zoom_map)",24, 79, 0, 0
repos/cpp/electron/atom/browser/fake_location_provider.cc,"atom::FakeLocationProvider::FakeLocationProvider()",7, 67, 6, 0
repos/cpp/electron/atom/browser/fake_location_provider.cc,"atom::FakeLocationProvider::SetUpdateCallback( const LocationProviderUpdateCallback & callback)",4, 54, 4, 0
repos/cpp/electron/atom/browser/fake_location_provider.cc,"atom::FakeLocationProvider::StartProvider( bool high_accuracy)",1, 64, 0, 0
repos/cpp/electron/atom/browser/fake_location_provider.cc,"atom::FakeLocationProvider::StopProvider()",1, 45, 0, 0
repos/cpp/electron/atom/browser/fake_location_provider.cc,"atom::FakeLocationProvider::GetPosition()",3, 72, 0, 0
repos/cpp/electron/atom/browser/fake_location_provider.cc,"atom::FakeLocationProvider::OnPermissionGranted()",8, 72, 4, 0
repos/cpp/electron/atom/browser/session_preferences.cc,"atom::SessionPreferences::SessionPreferences( content :: BrowserContext * context)",3, 75, 0, 0
repos/cpp/electron/atom/browser/session_preferences.cc,"atom::SessionPreferences::~SessionPreferences()",1, 45, 0, 0
repos/cpp/electron/atom/browser/session_preferences.cc,"atom::SessionPreferences::FromBrowserContext( content :: BrowserContext * context)",4, 79, 2, 0
repos/cpp/electron/atom/browser/session_preferences.cc,"atom::SessionPreferences::AppendExtraCommandLineSwitches( content :: BrowserContext * context , base :: CommandLine * command_line)",21, 75, 6, 0
repos/cpp/electron/atom/browser/atom_resource_dispatcher_host_delegate.cc,"atom::OnPdfResourceIntercepted( const GURL & original_url , int render_process_host_id , int render_frame_id , const content :: ResourceRequestInfo :: WebContentsGetter & web_contents_getter)",38, 81, 6, 0
repos/cpp/electron/atom/browser/atom_resource_dispatcher_host_delegate.cc,"atom::AtomResourceDispatcherHostDelegate::AtomResourceDispatcherHostDelegate()",1, 76, 0, 0
repos/cpp/electron/atom/browser/atom_resource_dispatcher_host_delegate.cc,"atom::AtomResourceDispatcherHostDelegate::ShouldInterceptResourceAsStream( net :: URLRequest * request , const std :: string & mime_type , GURL * origin , std :: string * payload)",28, 74, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::SIGCHLDHandler( int signal)",1, 35, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::GracefulShutdownHandler( int signal)",20, 75, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::SIGHUPHandler( int signal)",4, 35, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::SIGINTHandler( int signal)",4, 35, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::SIGTERMHandler( int signal)",4, 35, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::ShutdownDetector::ShutdownDetector( int shutdown_fd)",4, 52, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::ShutdownFDReadError()",5, 43, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::ShutdownFDClosedError()",5, 43, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::ExitPosted()",5, 43, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::ShutdownDetector::ThreadMain()",46, 79, 4, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::AtomBrowserMainParts::HandleSIGCHLD()",8, 75, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts_posix.cc,"atom::AtomBrowserMainParts::HandleShutdownSignals()",47, 81, 2, 0
repos/cpp/electron/atom/browser/io_thread.cc,"IOThread::IOThread( net_log :: ChromeNetLog * net_log , SystemNetworkContextManager * system_network_context_manager)",9, 80, 19, 0
repos/cpp/electron/atom/browser/io_thread.cc,"IOThread::~IOThread()",3, 47, 2, 0
repos/cpp/electron/atom/browser/io_thread.cc,"IOThread::Init()",23, 81, 2, 0
repos/cpp/electron/atom/browser/io_thread.cc,"IOThread::CleanUp()",6, 69, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate_views.cc,"atom::CommonWebContentsDelegate::HandleKeyboardEvent( content :: WebContents * source , const content :: NativeWebKeyboardEvent & event)",18, 73, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate_views.cc,"atom::CommonWebContentsDelegate::ShowAutofillPopup( content :: RenderFrameHost * frame_host , content :: RenderFrameHost * embedder_frame_host , bool offscreen , const gfx :: RectF & bounds , const std :: vector<base::string16> & values , const std :: vector<base::string16> & labels)",15, 74, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate_views.cc,"atom::CommonWebContentsDelegate::HideAutofillPopup()",4, 54, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate_views.cc,"atom::CommonWebContentsDelegate::GetDevToolsWindowIcon()",7, 68, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate_views.cc,"atom::CommonWebContentsDelegate::GetDevToolsWindowWMClass( std :: string * name , std :: string * class_name)",6, 58, 0, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::GetInstance()",3, 72, 0, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::AtomWebUIControllerFactory()",1, 60, 0, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::~AtomWebUIControllerFactory()",1, 61, 0, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::GetWebUIType( content :: BrowserContext * browser_context , const GURL & url) const",14, 65, 0, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::UseWebUIForURL( content :: BrowserContext * browser_context , const GURL & url) const",5, 73, 2, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::UseWebUIBindingsForURL( content :: BrowserContext * browser_context , const GURL & url) const",5, 57, 0, 0
repos/cpp/electron/atom/browser/atom_web_ui_controller_factory.cc,"atom::AtomWebUIControllerFactory::CreateWebUIControllerForURL( content :: WebUI * web_ui , const GURL & url) const",31, 81, 56, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::CreateDownloadPath( const GURL & url , const std :: string & content_disposition , const std :: string & suggested_filename , const std :: string & mime_type , const base :: FilePath & default_download_path)",14, 81, 34, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::AtomDownloadManagerDelegate( content :: DownloadManager * manager)",3, 61, 4, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::~AtomDownloadManagerDelegate()",8, 68, 4, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::GetItemSavePath( download :: DownloadItem * item , base :: FilePath * path)",10, 80, 0, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::GetItemSaveDialogOptions( download :: DownloadItem * item , file_dialog :: DialogSettings * options)",11, 60, 0, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::OnDownloadPathGenerated( uint32_t download_id , const content :: DownloadTargetCallback & callback , const base :: FilePath & default_path)",58, 81, 6, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::Shutdown()",4, 47, 0, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::DetermineDownloadTarget( download :: DownloadItem * download , const content :: DownloadTargetCallback & callback)",43, 80, 6, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::ShouldOpenDownload( download :: DownloadItem * download , const content :: DownloadOpenDelayedCallback & callback)",5, 60, 4, 0
repos/cpp/electron/atom/browser/atom_download_manager_delegate.cc,"atom::AtomDownloadManagerDelegate::GetNextId( const content :: DownloadIdCallback & callback)",5, 68, 2, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::SpecialStoragePolicy()",1, 48, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::~SpecialStoragePolicy()",1, 49, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::IsStorageProtected( const GURL & origin)",3, 68, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::IsStorageUnlimited( const GURL & origin)",3, 68, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::IsStorageDurable( const GURL & origin)",3, 66, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::HasIsolatedStorage( const GURL & origin)",3, 68, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::IsStorageSessionOnly( const GURL & origin)",3, 70, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::HasSessionOnlyOrigins()",3, 53, 0, 0
repos/cpp/electron/atom/browser/special_storage_policy.cc,"atom::SpecialStoragePolicy::CreateDeleteCookieOnExitPredicate()",3, 70, 2, 0
repos/cpp/electron/atom/browser/cookie_change_notifier.cc,"atom::CookieChangeNotifier::CookieChangeNotifier( AtomBrowserContext * browser_context)",4, 80, 0, 0
repos/cpp/electron/atom/browser/cookie_change_notifier.cc,"atom::CookieChangeNotifier::RegisterCookieChangeCallback( const base :: Callback<void(const CookieDetails*)> & cb)",6, 60, 4, 0
repos/cpp/electron/atom/browser/cookie_change_notifier.cc,"atom::CookieChangeNotifier::StartListening()",19, 76, 6, 0
repos/cpp/electron/atom/browser/cookie_change_notifier.cc,"atom::CookieChangeNotifier::OnConnectionError()",6, 51, 2, 0
repos/cpp/electron/atom/browser/cookie_change_notifier.cc,"atom::CookieChangeNotifier::OnCookieChange( const net :: CanonicalCookie & cookie , network :: mojom :: CookieChangeCause cause)",9, 77, 6, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::RemoveWhitespace( const std :: string & str)",7, 55, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::MakePartitionName( const std :: string & input)",3, 58, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::AtomBrowserContext( const std :: string & partition , bool in_memory , const base :: DictionaryValue & options)",53, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::~AtomBrowserContext()",9, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::InitPrefs()",28, 72, 2, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::SetUserAgent( const std :: string & user_agent)",3, 71, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::CreateRequestContext( content :: ProtocolHandlerMap * protocol_handlers , content :: URLRequestInterceptorScopedVector protocol_interceptors)",8, 73, 39, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::CreateMediaRequestContext()",3, 80, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetRequestContext()",3, 72, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetNetworkContext()",3, 76, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetPath() const",3, 53, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetCachePath() const",4, 58, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::IsOffTheRecord() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::CanUseHttpCache() const",3, 51, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetMaxCacheSize() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetResourceContext()",3, 69, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetMediaDeviceIDSalt()",5, 70, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::CreateZoomLevelDelegate( const base :: FilePath & partition_path)",7, 73, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetDownloadManagerDelegate()",8, 80, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetGuestManager()",5, 76, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetPermissionControllerDelegate()",5, 58, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetSpecialStoragePolicy()",3, 79, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetUserAgent() const",3, 55, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetBlobReader()",8, 58, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetPushMessagingService()",3, 79, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetSSLHostStateDelegate()",3, 79, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetBackgroundFetchDelegate()",3, 51, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetBackgroundSyncController()",3, 52, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetBrowsingDataRemoverDelegate()",3, 55, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::CreateRequestContextForStoragePartition( const base :: FilePath & partition_path , bool in_memory , content :: ProtocolHandlerMap * protocol_handlers , content :: URLRequestInterceptorScopedVector request_interceptors)",8, 71, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::CreateMediaRequestContextForStoragePartition( const base :: FilePath & partition_path , bool in_memory)",6, 66, 0, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::GetResolveProxyHelper()",6, 76, 4, 0
repos/cpp/electron/atom/browser/atom_browser_context.cc,"atom::AtomBrowserContext::From( const std :: string & partition , bool in_memory , const base :: DictionaryValue & options)",13, 77, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::FileSystem::FileSystem()",1, 18, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::FileSystem::FileSystem( const std :: string & type , const std :: string & file_system_name , const std :: string & root_url , const std :: string & file_system_path)",8, 50, 13, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::RegisterFileSystem( content :: WebContents * web_contents , const base :: FilePath & path)",21, 81, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CreateFileSystemStruct( content :: WebContents * web_contents , const std :: string & file_system_id , const std :: string & file_system_path , const std :: string & type)",11, 73, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CreateFileSystemValue( const FileSystem & file_system)",10, 80, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::WriteToFile( const base :: FilePath & path , const std :: string & content)",6, 75, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::AppendToFile( const base :: FilePath & path , const std :: string & content)",6, 76, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::GetPrefService( content :: WebContents * web_contents)",4, 67, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::GetAddedFileSystemPaths( content :: WebContents * web_contents)",16, 75, 10, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::IsDevToolsFileSystemAdded( content :: WebContents * web_contents , const std :: string & file_system_path)",5, 78, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::CommonWebContentsDelegate()",5, 74, 10, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::~CommonWebContentsDelegate()",1, 59, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::InitWithWebContents( content :: WebContents * web_contents , AtomBrowserContext * browser_context , bool is_guest)",23, 75, 6, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::SetOwnerWindow( NativeWindow * owner_window)",3, 77, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::SetOwnerWindow( content :: WebContents * web_contents , NativeWindow * owner_window)",21, 73, 44, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::ResetManagedWebContents( bool async)",20, 77, 12, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::GetWebContents() const",5, 74, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::GetDevToolsWebContents() const",6, 74, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::GetOffScreenWebContentsView() const",3, 65, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::OpenURLFromTab( content :: WebContents * source , const content :: OpenURLParams & params)",15, 76, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::CanOverscrollContent() const",3, 63, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::OpenColorChooser( content :: WebContents * web_contents , SkColor color , const std :: vector<blink::mojom::ColorSuggestionPtr> & suggestions)",10, 72, 4, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::RunFileChooser( content :: RenderFrameHost * render_frame_host , const content :: FileChooserParams & params)",7, 79, 4, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::EnumerateDirectory( content :: WebContents * guest , int request_id , const base :: FilePath & path)",7, 81, 51, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::EnterFullscreenModeForTab( content :: WebContents * source , const GURL & origin , const blink :: WebFullscreenOptions & options)",10, 75, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::ExitFullscreenModeForTab( content :: WebContents * source)",8, 75, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::IsFullscreenForTabOrPending( const content :: WebContents * source) const",4, 61, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::GetSecurityStyle( content :: WebContents * web_contents , content :: SecurityStyleExplanations * security_style_explanations)",11, 72, 42, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsSaveToFile( const std :: string & url , const std :: string & content , bool save_as)",30, 79, 51, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsAppendToFile( const std :: string & url , const std :: string & content)",14, 77, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsRequestFileSystems()",28, 81, 31, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsAddFileSystem( const std :: string & type , const base :: FilePath & file_system_path)",33, 80, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsRemoveFileSystem( const base :: FilePath & file_system_path)",17, 80, 36, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsIndexPath( int request_id , const std :: string & file_system_path , const std :: string & excluded_folders_message)",35, 80, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsStopIndexing( int request_id)",7, 71, 0, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::DevToolsSearchInPath( int request_id , const std :: string & file_system_path , const std :: string & query)",14, 80, 2, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::OnDevToolsIndexingWorkCalculated( int request_id , const std :: string & file_system_path , int total_work)",11, 80, 36, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::OnDevToolsIndexingWorked( int request_id , const std :: string & file_system_path , int worked)",11, 80, 36, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::OnDevToolsIndexingDone( int request_id , const std :: string & file_system_path)",10, 80, 36, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::OnDevToolsSearchCompleted( int request_id , const std :: string & file_system_path , const std :: vector<std::string> & file_paths)",14, 80, 36, 0
repos/cpp/electron/atom/browser/common_web_contents_delegate.cc,"atom::CommonWebContentsDelegate::SetHtmlApiFullscreen( bool enter_fullscreen)",18, 78, 0, 0
repos/cpp/electron/atom/browser/atom_quota_permission_context.cc,"atom::AtomQuotaPermissionContext::AtomQuotaPermissionContext()",1, 60, 0, 0
repos/cpp/electron/atom/browser/atom_quota_permission_context.cc,"atom::AtomQuotaPermissionContext::~AtomQuotaPermissionContext()",1, 61, 0, 0
repos/cpp/electron/atom/browser/atom_quota_permission_context.cc,"atom::AtomQuotaPermissionContext::RequestQuotaPermission( const content :: StorageQuotaParams & params , int render_process_id , const PermissionCallback & callback)",6, 59, 2, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::WebViewGuestDelegate( content :: WebContents * embedder , api :: WebContents * api_web_contents)",3, 79, 43, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::~WebViewGuestDelegate()",3, 48, 0, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::AttachToIframe( content :: WebContents * embedder_web_contents , int embedder_frame_id)",28, 80, 6, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::DidDetach()",3, 41, 0, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::GetOwnerWebContents() const",3, 74, 0, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::OnZoomLevelChanged( content :: WebContents * web_contents , double level , bool is_temporary)",15, 79, 4, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::OnZoomControllerWebContentsDestroyed()",3, 68, 0, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::ResetZoomController()",6, 53, 4, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::GetOwnerRenderWidgetHost()",3, 78, 0, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::GetOwnerSiteInstance()",3, 70, 0, 0
repos/cpp/electron/atom/browser/web_view_guest_delegate.cc,"atom::WebViewGuestDelegate::CreateNewGuestWindow( const content :: WebContents :: CreateParams & create_params)",19, 74, 2, 0
repos/cpp/electron/atom/browser/microtasks_runner.cc,"atom::MicrotasksRunner::MicrotasksRunner( v8 :: Isolate * isolate)",1, 80, 0, 0
repos/cpp/electron/atom/browser/microtasks_runner.cc,"atom::MicrotasksRunner::WillProcessTask( const base :: PendingTask & pending_task)",1, 81, 0, 0
repos/cpp/electron/atom/browser/microtasks_runner.cc,"atom::MicrotasksRunner::DidProcessTask( const base :: PendingTask & pending_task)",4, 79, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::GetExpandedWindowSize( const NativeWindow * window , gfx :: Size size)",13, 78, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NativeWindow( const mate :: Dictionary & options , NativeWindow * parent)",12, 78, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::~NativeWindow()",8, 79, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::InitFromOptions( const mate :: Dictionary & options)",107, 77, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::IsClosed() const",3, 38, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetSize( const gfx :: Size & size , bool animate)",3, 66, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetSize()",3, 36, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetPosition( const gfx :: Point & position , bool animate)",3, 75, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetPosition()",3, 41, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetContentSize( const gfx :: Size & size , bool animate)",3, 73, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetContentSize()",3, 43, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetContentBounds( const gfx :: Rect & bounds , bool animate)",3, 77, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetContentBounds()",3, 51, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::IsNormal()",3, 62, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetSizeConstraints( const extensions :: SizeConstraints & window_constraints)",15, 80, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetSizeConstraints() const",15, 81, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetContentSizeConstraints( const extensions :: SizeConstraints & size_constraints)",4, 59, 4, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetContentSizeConstraints() const",3, 78, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetMinimumSize( const gfx :: Size & size)",5, 59, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetMinimumSize() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetMaximumSize( const gfx :: Size & size)",5, 59, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetMaximumSize() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetContentMinimumSize() const",3, 56, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetContentMaximumSize() const",10, 73, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetSheetOffset( const double offsetX , const double offsetY)",4, 80, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetSheetOffsetX()",3, 41, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetSheetOffsetY()",3, 41, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetRepresentedFilename( const std :: string & filename)",1, 74, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetRepresentedFilename()",3, 53, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetDocumentEdited( bool edited)",1, 53, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::IsDocumentEdited()",3, 40, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetFocusable( bool focusable)",1, 51, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetMenu( AtomMenuModel * menu)",1, 51, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetParentWindow( NativeWindow * parent)",3, 59, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetAutoHideCursor( bool auto_hide)",1, 56, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SelectPreviousTab()",1, 42, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SelectNextTab()",1, 38, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::MergeAllWindows()",1, 40, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::MoveTabToNewWindow()",1, 43, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::ToggleTabBar()",1, 37, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::AddTabbedWindow( NativeWindow * window)",3, 59, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetVibrancy( const std :: string & filename)",1, 63, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetTouchBar( const std :: vector<mate::PersistentDictionary> & items)",2, 61, 4, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::RefreshTouchBarItem( const std :: string & item_id)",1, 70, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetEscapeTouchBarItem( const mate :: PersistentDictionary & item)",2, 47, 4, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetAutoHideMenuBar( bool auto_hide)",1, 57, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::IsMenuBarAutoHide()",3, 41, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetMenuBarVisibility( bool visible)",1, 57, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::IsMenuBarVisible()",3, 40, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetWindowButtonVisibility( bool visible)",3, 61, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetAspectRatio()",3, 40, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetAspectRatioExtraSize()",3, 52, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::SetAspectRatio( double aspect_ratio , const gfx :: Size & extra_size)",5, 65, 34, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::PreviewFile( const std :: string & path , const std :: string & display_name)",2, 67, 31, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::CloseFilePreview()",1, 41, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowRequestPreferredWith( int * width)",4, 66, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowCloseButtonClicked()",18, 60, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowClosed()",10, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowEndSession()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowBlur()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowFocus()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowShow()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowHide()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowMaximize()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowUnmaximize()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowMinimize()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowRestore()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowWillResize( const gfx :: Rect & new_bounds , bool * prevent_default)",5, 71, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowWillMove( const gfx :: Rect & new_bounds , bool * prevent_default)",5, 69, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowResize()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowMove()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowMoved()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowEnterFullScreen()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowScrollTouchBegin()",4, 52, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowScrollTouchEnd()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowSwipe( const std :: string & direction)",4, 69, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowSheetBegin()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowSheetEnd()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowLeaveFullScreen()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowEnterHtmlFullScreen()",4, 55, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowLeaveHtmlFullScreen()",4, 55, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowAlwaysOnTopChanged()",4, 54, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowExecuteAppCommand( const std :: string & command)",4, 79, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyTouchBarItemInteraction( const std :: string & item_id , const base :: DictionaryValue & details)",6, 53, 4, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyNewWindowForTab()",4, 52, 2, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::NotifyWindowMessage( UINT message , WPARAM w_param , LPARAM l_param)",6, 57, 39, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetWidget()",3, 43, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindow::GetWidget() const",3, 55, 0, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindowRelay::CreateForWebContents( content :: WebContents * web_contents , base :: WeakPtr<NativeWindow> window)",8, 78, 28, 0
repos/cpp/electron/atom/browser/native_window.cc,"atom::NativeWindowRelay::NativeWindowRelay( base :: WeakPtr<NativeWindow> window)",2, 73, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::LaunchXdgUtility( const std :: vector<std::string> & argv , int * exit_code)",16, 78, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::SetDefaultWebClient( const std :: string & protocol)",16, 71, 2, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::Focus()",9, 56, 2, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::AddRecentDocument( const base :: FilePath & path)",1, 63, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::ClearRecentDocuments()",1, 40, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::SetAppUserModelID( const base :: string16 & name)",1, 63, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::SetAsDefaultProtocolClient( const std :: string & protocol , mate :: Arguments * args)",4, 70, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::IsDefaultProtocolClient( const std :: string & protocol , mate :: Arguments * args)",26, 80, 2, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::RemoveAsDefaultProtocolClient( const std :: string & protocol , mate :: Arguments * args)",4, 73, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::SetBadgeCount( int count)",9, 41, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::SetLoginItemSettings( LoginItemSettings settings)",1, 66, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::GetLoginItemSettings( const LoginItemSettings & options)",4, 58, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::GetExecutableFileVersion() const",3, 56, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::GetExecutableFileProductName() const",3, 60, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::IsUnityRunning()",3, 33, 0, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::ShowAboutPanel()",28, 75, 4, 0
repos/cpp/electron/atom/browser/browser_linux.cc,"atom::Browser::SetAboutPanelOptions( const base :: DictionaryValue & options)",10, 75, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::GetInstance()",5, 40, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::GetWindows()",3, 52, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::IsEmpty()",3, 42, 2, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::AddWindow( NativeWindow * window)",9, 56, 2, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::RemoveWindow( NativeWindow * window)",13, 69, 2, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::WindowCloseCancelled( NativeWindow * window)",4, 62, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::AddObserver( WindowListObserver * observer)",3, 61, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::RemoveObserver( WindowListObserver * observer)",3, 64, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::CloseAllWindows()",9, 50, 2, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::DestroyAllWindows()",5, 51, 4, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::WindowList()",1, 28, 0, 0
repos/cpp/electron/atom/browser/window_list.cc,"atom::WindowList::~WindowList()",1, 29, 0, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"GetAsString( const base :: Value * val , const base :: StringPiece & path , std :: string * out)",12, 71, 4, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"GetAsString( const base :: Value * val , const base :: StringPiece & path , base :: string16 * out)",12, 71, 4, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"GetAsInteger( const base :: Value * val , const base :: StringPiece & path , int * out)",14, 57, 6, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::WebContentsPreferences( content :: WebContents * web_contents , const mate :: Dictionary & web_preferences)",46, 77, 4, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::~WebContentsPreferences()",4, 76, 2, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::SetDefaultBoolIfUndefined( const base :: StringPiece & key , bool val)",12, 66, 6, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::IsEnabled( const base :: StringPiece & name , bool default_value) const",8, 70, 0, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::Merge( const base :: DictionaryValue & extend)",4, 81, 4, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::Clear()",4, 64, 4, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::GetPreference( const base :: StringPiece & name , std :: string * value) const",4, 74, 0, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::IsRemoteModuleEnabled() const",3, 61, 0, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::GetPreloadPath( base :: FilePath :: StringType * path) const",23, 74, 2, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::GetWebContentsFromProcessID( int process_id)",9, 75, 0, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::From( content :: WebContents * web_contents)",6, 54, 0, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::AppendCommandLineSwitches( base :: CommandLine * command_line)",138, 81, 2, 0
repos/cpp/electron/atom/browser/web_contents_preferences.cc,"atom::WebContentsPreferences::OverrideWebkitPrefs( content :: WebPreferences * prefs)",51, 81, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::WindowsEnumerationHandler( HWND hwnd , LPARAM param)",12, 67, 0, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::GetProcessExecPath( base :: string16 * exe)",9, 56, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::GetProtocolLaunchPath( mate :: Arguments * args , base :: string16 * exe)",14, 76, 30, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::FormatCommandLineString( base :: string16 * exe , const std :: vector<base::string16> & launch_args)",13, 79, 29, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::Focus()",5, 75, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::AddRecentDocument( const base :: FilePath & path)",14, 71, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::ClearRecentDocuments()",9, 80, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::SetAppUserModelID( const base :: string16 & name)",3, 62, 0, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::SetUserTasks( const std :: vector<UserTask> & tasks)",23, 65, 0, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::RemoveAsDefaultProtocolClient( const std :: string & protocol , mate :: Arguments * args)",61, 80, 6, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::SetAsDefaultProtocolClient( const std :: string & protocol , mate :: Arguments * args)",43, 80, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::IsDefaultProtocolClient( const std :: string & protocol , mate :: Arguments * args)",34, 80, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::SetBadgeCount( int count)",3, 41, 0, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::SetLoginItemSettings( LoginItemSettings settings)",13, 81, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::GetLoginItemSettings( const LoginItemSettings & options)",16, 81, 2, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::GetAppUserModelID()",3, 38, 0, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::GetExecutableFileVersion() const",11, 63, 4, 0
repos/cpp/electron/atom/browser/browser_win.cc,"atom::Browser::GetExecutableFileProductName() const",3, 60, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::WebContentsDestroyed( int process_id)",8, 64, 6, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::PermissionRequestResponseCallbackWrapper( const AtomPermissionManager :: StatusCallback & callback , const std :: vector<blink::mojom::PermissionStatus> & vector)",5, 65, 4, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::PendingRequest::PendingRequest( content :: RenderFrameHost * render_frame_host , const std :: vector<content::PermissionType> & permissions , const StatusesCallback & callback)",8, 78, 8, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::PendingRequest::SetPermissionStatus( int permission_id , blink :: mojom :: PermissionStatus status)",19, 71, 6, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::PendingRequest::render_process_id() const",1, 63, 2, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::PendingRequest::IsComplete() const",1, 62, 2, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::PendingRequest::RunCallback() const",1, 56, 2, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::AtomPermissionManager()",1, 50, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::~AtomPermissionManager()",1, 51, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::SetPermissionRequestHandler( const RequestHandler & handler)",13, 70, 4, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::SetPermissionCheckHandler( const CheckHandler & handler)",4, 55, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::RequestPermission( content :: PermissionType permission , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin , bool user_gesture , const base :: Callback<void(blink::mojom::PermissionStatus)> & response_callback)",11, 80, 38, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::RequestPermissionWithDetails( content :: PermissionType permission , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin , bool user_gesture , const base :: DictionaryValue * details , const StatusCallback & response_callback)",12, 81, 6, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::RequestPermissions( const std :: vector<content::PermissionType> & permissions , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin , bool user_gesture , const StatusesCallback & response_callback)",10, 81, 39, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::RequestPermissionsWithDetails( const std :: vector<content::PermissionType> & permissions , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin , bool user_gesture , const base :: DictionaryValue * details , const StatusesCallback & response_callback)",50, 75, 2, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::OnPermissionResponse( int request_id , int permission_id , blink :: mojom :: PermissionStatus status)",14, 64, 2, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::ResetPermission( content :: PermissionType permission , const GURL & requesting_origin , const GURL & embedding_origin)",3, 80, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::GetPermissionStatus( content :: PermissionType permission , const GURL & requesting_origin , const GURL & embedding_origin)",6, 75, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::SubscribePermissionStatusChange( content :: PermissionType permission , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin , const base :: Callback<void(blink::mojom::PermissionStatus)> & callback)",7, 76, 4, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::UnsubscribePermissionStatusChange( int subscription_id)",2, 63, 0, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::CheckPermissionWithDetails( content :: PermissionType permission , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin , const base :: DictionaryValue * details) const",13, 73, 2, 0
repos/cpp/electron/atom/browser/atom_permission_manager.cc,"atom::AtomPermissionManager::GetPermissionStatusForFrame( content :: PermissionType permission , content :: RenderFrameHost * render_frame_host , const GURL & requesting_origin)",6, 52, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::FlipWindowStyle( HWND handle , bool on , DWORD flag)",8, 57, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowClientView::NativeWindowClientView( views :: Widget * widget , views :: View * root_view , NativeWindowViews * window)",4, 65, 6, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowClientView::CanClose()",4, 47, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::NativeWindowViews( const mate :: Dictionary & options , NativeWindow * parent)",193, 81, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::~NativeWindowViews()",14, 75, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetContentView( views :: View * view)",14, 71, 10, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Close()",8, 44, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::CloseImmediately()",3, 45, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Focus( bool focus)",11, 50, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsFocused()",3, 38, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Show()",14, 76, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::ShowInactive()",10, 41, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Hide()",13, 71, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsVisible()",3, 38, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsEnabled()",7, 52, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IncrementChildModals()",4, 49, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::DecrementChildModals()",6, 49, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetEnabled( bool enable)",6, 50, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::ShouldBeEnabled()",3, 52, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetEnabledInternal( bool enable)",21, 78, 6, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Maximize()",18, 79, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Unmaximize()",10, 79, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMaximized()",3, 40, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Minimize()",7, 70, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Restore()",3, 36, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMinimized()",3, 40, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetFullScreen( bool fullscreen)",54, 79, 10, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsFullscreen() const",3, 47, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetBounds( const gfx :: Rect & bounds , bool animate)",12, 78, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetBounds()",8, 46, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetContentBounds()",3, 77, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetContentSize()",8, 64, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetNormalBounds()",3, 49, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetContentSizeConstraints( const extensions :: SizeConstraints & size_constraints)",16, 80, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetResizable( bool resizable)",21, 77, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::MoveTop()",7, 77, 17, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsResizable()",7, 79, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetMovable( bool movable)",3, 51, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMovable()",7, 45, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetMinimizable( bool minimizable)",6, 72, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMinimizable()",7, 78, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetMaximizable( bool maximizable)",6, 72, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMaximizable()",7, 78, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetFullScreenable( bool fullscreenable)",3, 65, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsFullScreenable()",3, 45, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetClosable( bool closable)",10, 76, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsClosable()",15, 61, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetAlwaysOnTop( bool top , const std :: string & level , int relativeLevel , std :: string * error)",9, 65, 39, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsAlwaysOnTop()",3, 42, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Center()",3, 37, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::Invalidate()",3, 64, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetTitle( const std :: string & title)",4, 61, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetTitle()",3, 44, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::FlashFrame( bool flash)",15, 61, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetSkipTaskbar( bool skip)",19, 65, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetSimpleFullScreen( bool simple_fullscreen)",3, 70, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsSimpleFullScreen()",3, 47, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetKiosk( bool kiosk)",3, 47, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsKiosk()",3, 36, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetBackgroundColor( SkColor background_color)",15, 78, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetHasShadow( bool has_shadow)",5, 73, 25, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::HasShadow()",4, 68, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetOpacity( const double opacity)",13, 67, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetOpacity()",3, 41, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetIgnoreMouseEvents( bool ignore , bool forward)",28, 81, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetContentProtection( bool enable)",6, 64, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetFocusable( bool focusable)",12, 72, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetMenu( AtomMenuModel * menu_model)",47, 75, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetBrowserView( NativeBrowserView * view)",20, 79, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetParentWindow( NativeWindow * parent)",32, 79, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetNativeView() const",3, 59, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetNativeWindow() const",3, 63, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetProgressBar( double progress , NativeWindow :: ProgressState state)",10, 76, 39, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetOverlayIcon( const gfx :: Image & overlay , const std :: string & description)",6, 78, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetAutoHideMenuBar( bool auto_hide)",3, 61, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMenuBarAutoHide()",3, 46, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetMenuBarVisibility( bool visible)",3, 61, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsMenuBarVisible()",3, 45, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetVisibleOnAllWorkspaces( bool visible , bool visibleOnFullScreen)",4, 78, 50, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::IsVisibleOnAllWorkspaces()",12, 81, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetAcceleratedWidget() const",3, 73, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetNativeWindowHandle() const",3, 70, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::ContentBoundsToWindowBounds( const gfx :: Rect & bounds) const",21, 81, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::WindowBoundsToContentBounds( const gfx :: Rect & bounds) const",28, 81, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::UpdateDraggableRegions( std :: unique_ptr<SkRegion> region)",4, 48, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetIcon( HICON window_icon , HICON app_icon)",11, 69, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::SetIcon( const gfx :: ImageSkia & icon)",5, 79, 6, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::OnWidgetActivationChanged( views :: Widget * changed_widget , bool active)",16, 81, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::OnWidgetBoundsChanged( views :: Widget * changed_widget , const gfx :: Rect & bounds)",32, 79, 6, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::DeleteDelegate()",11, 69, 4, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetInitiallyFocusedView()",3, 60, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::CanResize() const",3, 44, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::CanMaximize() const",3, 46, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::CanMinimize() const",7, 46, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetWindowTitle() const",3, 59, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetContentsView()",3, 52, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::ShouldDescendIntoChildForEventHandling( gfx :: NativeView child , const gfx :: Point & location)",17, 81, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::CreateClientView( views :: Widget * widget)",3, 80, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::CreateNonClientFrameView( views :: Widget * widget)",16, 72, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::OnWidgetMove()",3, 41, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::HandleKeyboardEvent( content :: WebContents * , const content :: NativeWebKeyboardEvent & event)",14, 79, 47, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::OnMouseEvent( ui :: MouseEvent * event)",9, 73, 2, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindowViews::GetRestoredState()",8, 60, 0, 0
repos/cpp/electron/atom/browser/native_window_views.cc,"atom::NativeWindow::Create( const mate :: Dictionary & options , NativeWindow * parent)",4, 68, 0, 0
repos/cpp/electron/atom/browser/pref_store_delegate.cc,"atom::PrefStoreDelegate::PrefStoreDelegate( base :: WeakPtr<AtomBrowserContext> browser_context)",3, 55, 4, 0
repos/cpp/electron/atom/browser/pref_store_delegate.cc,"atom::PrefStoreDelegate::~PrefStoreDelegate()",4, 57, 4, 0
repos/cpp/electron/atom/browser/pref_store_delegate.cc,"atom::PrefStoreDelegate::UpdateCommandLinePrefStore( PrefStore * command_line_prefs)",6, 62, 8, 0
repos/cpp/electron/atom/browser/auto_updater.cc,"auto_updater::AutoUpdater::GetDelegate()",3, 39, 0, 0
repos/cpp/electron/atom/browser/auto_updater.cc,"auto_updater::AutoUpdater::SetDelegate( Delegate * delegate)",3, 52, 0, 0
repos/cpp/electron/atom/browser/auto_updater.cc,"auto_updater::AutoUpdater::GetFeedURL()",3, 40, 0, 0
repos/cpp/electron/atom/browser/auto_updater.cc,"auto_updater::AutoUpdater::SetFeedURL( mate :: Arguments * args)",1, 55, 0, 0
repos/cpp/electron/atom/browser/auto_updater.cc,"auto_updater::AutoUpdater::CheckForUpdates()",1, 39, 0, 0
repos/cpp/electron/atom/browser/auto_updater.cc,"auto_updater::AutoUpdater::QuitAndInstall()",1, 38, 0, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::AppCommandToString( int command_id)",112, 55, 4, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::IsScreenReaderActive()",5, 66, 2, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::NativeWindowViews::ExecuteWindowsCommand( int command_id)",6, 64, 0, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::NativeWindowViews::PreHandleMSG( UINT message , WPARAM w_param , LPARAM l_param , LRESULT * result)",106, 80, 8, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::NativeWindowViews::HandleSizeEvent( WPARAM w_param , LPARAM l_param)",51, 81, 2, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::NativeWindowViews::SetForwardMouseMessages( bool forward)",25, 78, 4, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::NativeWindowViews::SubclassProc( HWND hwnd , UINT msg , WPARAM w_param , LPARAM l_param , UINT_PTR subclass_id , DWORD_PTR ref_data)",28, 81, 6, 0
repos/cpp/electron/atom/browser/native_window_views_win.cc,"atom::NativeWindowViews::MouseHookProc( int n_code , WPARAM w_param , LPARAM l_param)",30, 80, 2, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::LoginHandler( net :: URLRequest * request , const net :: AuthChallengeInfo & auth_info , net :: NetworkDelegate :: AuthCallback callback , net :: AuthCredentials * credentials , const content :: ResourceRequestInfo * resource_request_info)",24, 79, 6, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::~LoginHandler()",1, 33, 0, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::Login( const base :: string16 & username , const base :: string16 & password)",9, 73, 6, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::CancelAuth()",7, 80, 6, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::NotifyRequestDestroyed()",5, 46, 0, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::GetWebContents() const",4, 61, 0, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::DoCancelAuth()",6, 72, 8, 0
repos/cpp/electron/atom/browser/login_handler.cc,"atom::LoginHandler::DoLogin( const base :: string16 & username , const base :: string16 & password)",9, 69, 8, 0
repos/cpp/electron/atom/browser/node_debugger.cc,"atom::NodeDebugger::NodeDebugger( node :: Environment * env)",1, 66, 0, 0
repos/cpp/electron/atom/browser/node_debugger.cc,"atom::NodeDebugger::~NodeDebugger()",1, 33, 0, 0
repos/cpp/electron/atom/browser/node_debugger.cc,"atom::NodeDebugger::Start()",40, 74, 2, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::WebViewManager()",1, 36, 0, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::~WebViewManager()",1, 37, 0, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::AddGuest( int guest_instance_id , int element_instance_id , content :: WebContents * embedder , content :: WebContents * web_contents)",11, 76, 2, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::RemoveGuest( int guest_instance_id)",13, 73, 2, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::GetEmbedder( int guest_instance_id)",6, 75, 0, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::GetGuestByInstanceID( int owner_process_id , int element_instance_id)",13, 72, 2, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::ForEachGuest( content :: WebContents * embedder_web_contents , const GuestCallback & callback)",8, 79, 0, 0
repos/cpp/electron/atom/browser/web_view_manager.cc,"atom::WebViewManager::GetWebViewManager( content :: WebContents * web_contents)",10, 53, 2, 0
repos/cpp/electron/atom/browser/atom_navigation_throttle.cc,"atom::AtomNavigationThrottle::AtomNavigationThrottle( content :: NavigationHandle * navigation_handle)",3, 56, 4, 0
repos/cpp/electron/atom/browser/atom_navigation_throttle.cc,"atom::AtomNavigationThrottle::~AtomNavigationThrottle()",1, 53, 0, 0
repos/cpp/electron/atom/browser/atom_navigation_throttle.cc,"atom::AtomNavigationThrottle::GetNameForLogging()",3, 58, 0, 0
repos/cpp/electron/atom/browser/atom_navigation_throttle.cc,"atom::AtomNavigationThrottle::WillRedirectRequest()",20, 76, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::IsSameWebSite( content :: BrowserContext * browser_context , const GURL & src_url , const GURL & dest_url)",11, 80, 9, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::SetApplicationLocaleOnIOThread( const std :: string & locale)",4, 65, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::SuppressRendererProcessRestartForOnce()",3, 66, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::SetCustomServiceWorkerSchemes( const std :: vector<std::string> & schemes)",4, 69, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::Get()",3, 46, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::SetApplicationLocale( const std :: string & locale)",11, 74, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::AtomBrowserClient()",4, 41, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::~AtomBrowserClient()",4, 42, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetWebContentsFromProcessID( int process_id)",11, 76, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::ShouldForceNewSiteInstance( content :: RenderFrameHost * current_rfh , content :: RenderFrameHost * speculative_rfh , content :: BrowserContext * browser_context , const GURL & url , bool has_response_started) const",43, 81, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::NavigationWasRedirectedCrossSite( content :: BrowserContext * browser_context , content :: SiteInstance * current_instance , content :: SiteInstance * speculative_instance , const GURL & dest_url , bool has_response_started) const",19, 76, 8, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::AddProcessPreferences( int process_id , AtomBrowserClient :: ProcessPreferences prefs)",6, 55, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RemoveProcessPreferences( int process_id)",4, 67, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::IsProcessObserved( int process_id) const",4, 78, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::IsRendererSandboxed( int process_id) const",5, 68, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RendererUsesNativeWindowOpen( int process_id) const",5, 77, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RendererDisablesPopups( int process_id) const",5, 72, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetAffinityPreference( content :: RenderFrameHost * rfh) const",13, 71, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetSiteInstanceFromAffinity( content :: BrowserContext * browser_context , const GURL & url , content :: RenderFrameHost * rfh) const",16, 81, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::ConsiderSiteInstanceForAffinity( content :: RenderFrameHost * rfh , content :: SiteInstance * site_instance)",8, 57, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RenderProcessWillLaunch( content :: RenderProcessHost * host , service_manager :: mojom :: ServiceRequest * service_request)",32, 79, 52, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CreateSpeechRecognitionManagerDelegate()",3, 62, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::OverrideWebkitPrefs( content :: RenderViewHost * host , content :: WebPreferences * prefs)",28, 78, 44, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::ShouldOverrideSiteInstanceForNavigation( content :: RenderFrameHost * current_rfh , content :: RenderFrameHost * speculative_rfh , content :: BrowserContext * browser_context , const GURL & url , bool has_response_started , content :: SiteInstance ** affinity_site_instance) const",41, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RegisterPendingSiteInstance( content :: RenderFrameHost * rfh , content :: SiteInstance * pending_site_instance)",11, 74, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::AppendExtraCommandLineSwitches( base :: CommandLine * command_line , int process_id)",53, 81, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::DidCreatePpapiPlugin( content :: BrowserPpapiHost * host)",6, 80, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetGeolocationApiKey()",6, 71, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CreateQuotaPermissionContext()",3, 52, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::AllowCertificateError( content :: WebContents * web_contents , int cert_error , const net :: SSLInfo & ssl_info , const GURL & request_url , content :: ResourceType resource_type , bool strict_enforcement , bool expired_previous_decision , const base :: Callback<void(content::CertificateRequestResultType)> & callback)",16, 72, 8, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::SelectClientCertificate( content :: WebContents * web_contents , net :: SSLCertRequestInfo * cert_request_info , net :: ClientCertIdentityList client_certs , std :: unique_ptr<content::ClientCertificateDelegate> delegate)",11, 72, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::ResourceDispatcherHostCreated()",6, 58, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CanCreateWindow( content :: RenderFrameHost * opener , const GURL & opener_url , const GURL & opener_top_level_frame_url , const GURL & source_origin , content :: mojom :: WindowContainerType container_type , const GURL & target_url , const content :: Referrer & referrer , const std :: string & frame_name , WindowOpenDisposition disposition , const blink :: mojom :: WindowFeatures & features , const std :: vector<std::string> & additional_features , const scoped_refptr<network::ResourceRequestBody> & body , bool user_gesture , bool opener_suppressed , bool * no_javascript_access)",46, 81, 8, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetAdditionalAllowedSchemesForFileSystem( std :: vector<std::string> * additional_schemes)",8, 80, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetAdditionalWebUISchemes( std :: vector<std::string> * additional_schemes)",4, 65, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::SiteInstanceDeleting( content :: SiteInstance * site_instance)",12, 79, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CreateClientCertStore( content :: ResourceContext * resource_context)",13, 80, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::OverrideSystemLocationProvider()",7, 54, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CreateNetworkContext( content :: BrowserContext * browser_context , bool , const base :: FilePath &)",8, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RegisterOutOfProcessServices( OutOfProcessServiceMap * services)",16, 76, 26, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetServiceManifestOverlay( base :: StringPiece name)",15, 75, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetNetLog()",3, 46, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CreateBrowserMainParts( const content :: MainFunctionParams & params)",4, 70, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::WebNotificationAllowed( int render_process_id , const base :: Callback<void(bool,bool)> & callback)",18, 78, 6, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RenderProcessHostDestroyed( content :: RenderProcessHost * host)",6, 52, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RenderProcessReady( content :: RenderProcessHost * host)",7, 79, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::RenderProcessExited( content :: RenderProcessHost * host , const content :: ChildProcessTerminationInfo & info)",12, 68, 6, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::OnOpenExternal( const GURL & escaped_url , bool allowed)",10, 61, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::HandleExternalProtocolInUI( const GURL & url , const content :: ResourceRequestInfo :: WebContentsGetter & web_contents_getter , bool has_user_gesture)",18, 80, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::HandleExternalProtocol( const GURL & url , content :: ResourceRequestInfo :: WebContentsGetter web_contents_getter , int child_id , content :: NavigationUIData * navigation_data , bool is_main_frame , ui :: PageTransition page_transition , bool has_user_gesture)",14, 76, 6, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::CreateThrottlesForNavigation( content :: NavigationHandle * handle)",6, 73, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetMediaObserver()",3, 64, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetDevToolsManagerDelegate()",3, 50, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetNotificationPresenter()",6, 71, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetPlatformNotificationService()",6, 72, 4, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetDefaultDownloadDirectory()",8, 66, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetSystemSharedURLLoaderFactory()",5, 57, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::OnNetworkServiceCreated( network :: mojom :: NetworkService * network_service)",7, 80, 2, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::ShouldBypassCORB( int render_process_id) const",6, 72, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::GetApplicationLocale()",5, 56, 0, 0
repos/cpp/electron/atom/browser/atom_browser_client.cc,"atom::AtomBrowserClient::ShouldEnableStrictSiteIsolation()",4, 68, 2, 0
repos/cpp/electron/atom/browser/relauncher_mac.cc,"relauncher::internal::RelauncherSynchronizeWithParent()",55, 80, 4, 0
repos/cpp/electron/atom/browser/relauncher_mac.cc,"relauncher::internal::LaunchProgram( const StringVector & relauncher_args , const StringVector & argv)",14, 80, 2, 0
repos/cpp/electron/atom/browser/font_defaults.cc,"GetDefaultFontForPref( const char * pref_name)",9, 59, 0, 0
repos/cpp/electron/atom/browser/font_defaults.cc,"FetchFont( const char * script , const char * map_name)",16, 73, 2, 0
repos/cpp/electron/atom/browser/font_defaults.cc,"FillFontFamilyMap( const char * map_name , content :: ScriptFontFamilyMap * map)",10, 78, 2, 0
repos/cpp/electron/atom/browser/font_defaults.cc,"atom::SetFontDefaults( content :: WebPreferences * prefs)",16, 59, 2, 0
repos/cpp/electron/atom/browser/javascript_environment.cc,"atom::JavascriptEnvironment::JavascriptEnvironment( uv_loop_t * event_loop)",13, 73, 6, 0
repos/cpp/electron/atom/browser/javascript_environment.cc,"atom::JavascriptEnvironment::Initialize( uv_loop_t * event_loop)",28, 79, 2, 0
repos/cpp/electron/atom/browser/javascript_environment.cc,"atom::JavascriptEnvironment::OnMessageLoopCreated()",5, 78, 2, 0
repos/cpp/electron/atom/browser/javascript_environment.cc,"atom::JavascriptEnvironment::OnMessageLoopDestroying()",5, 81, 2, 0
repos/cpp/electron/atom/browser/javascript_environment.cc,"atom::NodeEnvironment::NodeEnvironment( node :: Environment * env)",1, 72, 0, 0
repos/cpp/electron/atom/browser/javascript_environment.cc,"atom::NodeEnvironment::~NodeEnvironment()",3, 38, 0, 0
repos/cpp/electron/atom/browser/relauncher_win.cc,"relauncher::internal::GetParentProcessHandle( base :: ProcessHandle handle)",20, 81, 2, 0
repos/cpp/electron/atom/browser/relauncher_win.cc,"relauncher::internal::AddQuoteForArg( const StringType & arg)",42, 80, 6, 0
repos/cpp/electron/atom/browser/relauncher_win.cc,"relauncher::internal::GetWaitEventName( base :: ProcessId pid)",3, 79, 2, 0
repos/cpp/electron/atom/browser/relauncher_win.cc,"relauncher::internal::ArgvToCommandLineString( const StringVector & argv)",9, 63, 0, 0
repos/cpp/electron/atom/browser/relauncher_win.cc,"relauncher::internal::RelauncherSynchronizeWithParent()",14, 63, 2, 0
repos/cpp/electron/atom/browser/relauncher_win.cc,"relauncher::internal::LaunchProgram( const StringVector & relauncher_args , const StringVector & argv)",7, 67, 6, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::Erase( T * container , typename T :: iterator iter)",3, 54, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AdjustUIFont( LOGFONT * logfont)",3, 38, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::GetMinimumFontSize()",3, 27, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::MediaStringProvider( media :: MessageId id)",12, 58, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::OverrideLinuxAppDataPath()",9, 80, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::BrowserX11ErrorHandler( Display * d , XErrorEvent * error)",7, 77, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::WaitingForUIThreadToHandleIOError()",5, 52, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::BrowserX11IOErrorHandler( Display * d)",22, 81, 4, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::X11EmptyErrorHandler( Display * d , XErrorEvent * error)",3, 59, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::X11EmptyIOErrorHandler( Display * d)",3, 41, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::InitializeFeatureList()",16, 80, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::OverrideAppLogsPath()",8, 78, 4, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::AtomBrowserMainParts( const content :: MainFunctionParams & params)",13, 77, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::~AtomBrowserMainParts()",12, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::Get()",4, 52, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::SetExitCode( int code)",7, 51, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::GetExitCode()",3, 50, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::RegisterDestructionCallback( base :: OnceClosure callback)",7, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::ShouldContentCreateFeatureList()",3, 62, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PreEarlyInitialization()",19, 74, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PostEarlyInitialization()",38, 78, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PreCreateThreads()",33, 79, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PostDestroyThreads()",7, 51, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::ToolkitInitialized()",26, 78, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PreMainMessageLoopRun()",39, 79, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::MainMessageLoopRun( int * result_code)",5, 69, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PreDefaultMainMessageLoopRun( base :: OnceClosure quit_closure)",4, 67, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PostMainMessageLoopStart()",14, 77, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PostMainMessageLoopRun()",28, 81, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PreMainMessageLoopStart()",3, 55, 0, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::PreMainMessageLoopStartCommon()",29, 81, 8, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::GetGeolocationControl()",13, 77, 2, 0
repos/cpp/electron/atom/browser/atom_browser_main_parts.cc,"atom::AtomBrowserMainParts::GetIconManager()",6, 54, 0, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::FreeNodeBufferData( char * data , void * hint)",3, 50, 0, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::RunCallbackInUI( const AtomBlobReader :: CompletionCallback & callback , char * blob_data , int size)",18, 73, 0, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::AtomBlobReader( content :: ChromeBlobStorageContext * blob_context)",2, 80, 0, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::~AtomBlobReader()",1, 37, 0, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::StartReading( const std :: string & uuid , const AtomBlobReader :: CompletionCallback & completion_callback)",18, 79, 2, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::BlobReadHelper::BlobReadHelper( std :: unique_ptr<storage::BlobReader> blob_reader , const BlobReadHelper :: CompletionCallback & callback)",4, 78, 4, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::BlobReadHelper::~BlobReadHelper()",1, 53, 0, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::BlobReadHelper::Read()",9, 73, 2, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::BlobReadHelper::DidCalculateSize( int result)",20, 78, 6, 0
repos/cpp/electron/atom/browser/atom_blob_reader.cc,"atom::AtomBlobReader::BlobReadHelper::DidReadBlobData( const scoped_refptr<net::IOBuffer> & blob_data , int size)",11, 77, 26, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::AtomSpeechRecognitionManagerDelegate()",1, 80, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::~AtomSpeechRecognitionManagerDelegate()",1, 81, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnRecognitionStart( int session_id)",1, 81, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnAudioStart( int session_id)",1, 75, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnEnvironmentEstimationComplete( int session_id)",2, 76, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnSoundStart( int session_id)",1, 75, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnSoundEnd( int session_id)",1, 73, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnAudioEnd( int session_id)",1, 73, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnRecognitionEnd( int session_id)",1, 79, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnRecognitionResults( int session_id , const std :: vector<blink::mojom::SpeechRecognitionResultPtr> & results)",3, 77, 4, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnRecognitionError( int session_id , const blink :: mojom :: SpeechRecognitionError & error)",3, 63, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::OnAudioLevelsChange( int session_id , float volume , float noise_volume)",4, 64, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::CheckRecognitionIsAllowed( int session_id , base :: OnceCallback<void(bool ask_user,bool is_allowed)> callback)",5, 73, 4, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::GetEventListener()",3, 59, 0, 0
repos/cpp/electron/atom/browser/atom_speech_recognition_manager_delegate.cc,"atom::AtomSpeechRecognitionManagerDelegate::FilterProfanities( int render_process_id)",4, 62, 0, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::FileSelectHelper( content :: RenderFrameHost * render_frame_host , const content :: FileChooserParams :: Mode & mode)",7, 70, 8, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::ShowOpenDialog( const file_dialog :: DialogSettings & settings)",4, 75, 4, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::ShowSaveDialog( const file_dialog :: DialogSettings & settings)",4, 75, 4, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::~FileSelectHelper()",1, 34, 2, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::OnOpenDialogDone( bool result , const std :: vector<base::FilePath> & paths)",21, 79, 2, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::OnSaveDialogDone( bool result , const base :: FilePath & path)",12, 65, 2, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::OnFilesSelected( const std :: vector<content::FileChooserFileInfo> & file_info)",5, 68, 6, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::RenderFrameHostChanged( content :: RenderFrameHost * old_host , content :: RenderFrameHost * new_host)",5, 77, 30, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::RenderFrameDeleted( content :: RenderFrameHost * deleted_host)",4, 77, 2, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"FileSelectHelper::WebContentsDestroyed()",1, 73, 2, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"GetFileTypesFromAcceptType( const std :: vector<base::string16> & accept_types)",65, 80, 6, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"atom::WebDialogHelper::WebDialogHelper( NativeWindow * window , bool offscreen)",2, 71, 0, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"atom::WebDialogHelper::~WebDialogHelper()",1, 39, 0, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"atom::WebDialogHelper::RunFileChooser( content :: RenderFrameHost * render_frame_host , const content :: FileChooserParams & params)",42, 79, 32, 0
repos/cpp/electron/atom/browser/web_dialog_helper.cc,"atom::WebDialogHelper::EnumerateDirectory( content :: WebContents * web_contents , int request_id , const base :: FilePath & dir)",15, 80, 2, 0
repos/cpp/electron/atom/browser/native_browser_view.cc,"atom::NativeBrowserView::NativeBrowserView( InspectableWebContents * inspectable_web_contents)",3, 61, 4, 0
repos/cpp/electron/atom/browser/native_browser_view.cc,"atom::NativeBrowserView::~NativeBrowserView()",1, 43, 0, 0
repos/cpp/electron/atom/browser/native_browser_view.cc,"atom::NativeBrowserView::GetInspectableWebContentsView()",3, 81, 0, 0
repos/cpp/electron/atom/browser/native_browser_view.cc,"atom::NativeBrowserView::GetWebContents()",3, 60, 0, 0
repos/cpp/electron/atom/browser/render_process_preferences.cc,"atom::RenderProcessPreferences::RenderProcessPreferences( const Predicate & predicate)",5, 80, 17, 0
repos/cpp/electron/atom/browser/render_process_preferences.cc,"atom::RenderProcessPreferences::~RenderProcessPreferences()",1, 57, 0, 0
repos/cpp/electron/atom/browser/render_process_preferences.cc,"atom::RenderProcessPreferences::AddEntry( const base :: DictionaryValue & entry)",7, 81, 6, 0
repos/cpp/electron/atom/browser/render_process_preferences.cc,"atom::RenderProcessPreferences::RemoveEntry( int id)",4, 53, 0, 0
repos/cpp/electron/atom/browser/render_process_preferences.cc,"atom::RenderProcessPreferences::Observe( int type , const content :: NotificationSource & source , const content :: NotificationDetails & details)",14, 67, 2, 0
repos/cpp/electron/atom/browser/render_process_preferences.cc,"atom::RenderProcessPreferences::UpdateCache()",9, 81, 4, 0
repos/cpp/electron/atom/browser/relauncher.cc,"relauncher::RelaunchApp( const StringVector & argv)",16, 78, 2, 0
repos/cpp/electron/atom/browser/relauncher.cc,"relauncher::RelaunchAppWithHelper( const base :: FilePath & helper , const StringVector & relauncher_args , const StringVector & argv)",85, 79, 2, 0
repos/cpp/electron/atom/browser/relauncher.cc,"relauncher::RelauncherMain( const content :: MainFunctionParams & main_parameters)",45, 77, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::Browser()",3, 33, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::~Browser()",3, 36, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::Get()",3, 49, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::Quit()",13, 41, 4, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::Exit( mate :: Arguments * args)",24, 78, 4, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::Shutdown()",17, 68, 4, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::GetVersion() const",6, 55, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::SetVersion( const std :: string & version)",3, 55, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::GetName() const",6, 52, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::SetName( const std :: string & name)",3, 49, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::GetBadgeCount()",3, 31, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::OpenFile( const std :: string & file_path)",7, 55, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::OpenURL( const std :: string & url)",4, 48, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::Activate( bool has_visible_windows)",4, 51, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::WillFinishLaunching()",4, 47, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::DidFinishLaunching( const base :: DictionaryValue & launch_info)",14, 77, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::WhenReady( v8 :: Isolate * isolate)",9, 58, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::OnAccessibilitySupportChanged()",4, 48, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::RequestLogin( scoped_refptr<LoginHandler> login_handler , std :: unique_ptr<base::DictionaryValue> request_details)",6, 63, 4, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::PreMainMessageLoopRun()",5, 49, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::SetMainMessageLoopQuitClosure( base :: OnceClosure quit_closure)",3, 78, 0, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::NotifyAndShutdown()",15, 47, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::HandleBeforeQuit()",7, 47, 2, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::OnWindowCloseCancelled( NativeWindow * window)",6, 80, 4, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::OnWindowAllClosed()",10, 49, 4, 0
repos/cpp/electron/atom/browser/browser.cc,"atom::Browser::NewWindowForTab()",4, 47, 2, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"mate::Converter<atom::BluetoothChooser::DeviceInfo>::ToV8( v8 :: Isolate * isolate , const atom :: BluetoothChooser :: DeviceInfo & val)",8, 68, 4, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::OnDeviceChosen( const content :: BluetoothChooser :: EventHandler & handler , const std :: string & device_id)",8, 76, 0, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::BluetoothChooser::BluetoothChooser( api :: WebContents * contents , const EventHandler & event_handler)",3, 70, 35, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::BluetoothChooser::~BluetoothChooser()",1, 41, 0, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::BluetoothChooser::SetAdapterPresence( AdapterPresence presence)",10, 70, 0, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::BluetoothChooser::ShowDiscoveryState( DiscoveryState state)",25, 81, 12, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::BluetoothChooser::AddOrUpdateDevice( const std :: string & device_id , bool should_update_name , const base :: string16 & device_name , bool is_gatt_connected , bool is_paired , int signal_strength_level)",30, 78, 4, 0
repos/cpp/electron/atom/browser/lib/bluetooth_chooser.cc,"atom::BluetoothChooser::GetDeviceList()",9, 55, 2, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"get_executable_basename()",9, 58, 4, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::PowerObserverLinux()",25, 80, 6, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::OnLoginServiceAvailable( bool service_available)",8, 75, 0, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::BlockSleep()",14, 80, 2, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::UnblockSleep()",3, 42, 0, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::BlockShutdown()",16, 78, 2, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::UnblockShutdown()",8, 73, 8, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::SetShutdownHandler( base :: Callback<bool()> handler)",3, 78, 0, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::OnInhibitResponse( base :: ScopedFD * scoped_fd , dbus :: Response * response)",7, 71, 43, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::OnPrepareForSleep( dbus :: Signal * signal)",15, 67, 0, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::OnPrepareForShutdown( dbus :: Signal * signal)",15, 81, 6, 0
repos/cpp/electron/atom/browser/lib/power_observer_linux.cc,"atom::PowerObserverLinux::OnSignalConnected( const std :: string & , const std :: string & signal , bool success)",5, 77, 0, 0
repos/cpp/electron/atom/browser/loader/layered_resource_handler.cc,"atom::LayeredResourceHandler::LayeredResourceHandler( net :: URLRequest * request , std :: unique_ptr<content::ResourceHandler> next_handler , Delegate * delegate)",6, 73, 4, 0
repos/cpp/electron/atom/browser/loader/layered_resource_handler.cc,"atom::LayeredResourceHandler::~LayeredResourceHandler()",1, 53, 0, 0
repos/cpp/electron/atom/browser/loader/layered_resource_handler.cc,"atom::LayeredResourceHandler::OnResponseStarted( network :: ResourceResponse * response , std :: unique_ptr<content::ResourceController> controller)",7, 69, 2, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::StopWorker( int document_cookie)",13, 77, 8, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::GetDataFromHandle( base :: SharedMemoryHandle handle , uint32_t data_size)",11, 72, 2, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::PrintPreviewMessageHandler( content :: WebContents * web_contents)",5, 76, 4, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::OnMessageReceived( const IPC :: Message & message , content :: RenderFrameHost * render_frame_host)",22, 79, 4, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::OnMetafileReadyForPrinting( content :: RenderFrameHost * render_frame_host , const PrintHostMsg_DidPreviewDocument_Params & params , const PrintHostMsg_PreviewIds & ids)",28, 80, 8, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::OnCompositePdfDocumentDone( const PrintHostMsg_PreviewIds & ids , printing :: mojom :: PdfCompositor :: Status status , base :: ReadOnlySharedMemoryRegion region)",16, 75, 6, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::OnPrintPreviewFailed( int document_cookie , const PrintHostMsg_PreviewIds & ids)",7, 55, 0, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::OnPrintPreviewCancelled( int document_cookie , const PrintHostMsg_PreviewIds & ids)",7, 58, 0, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::PrintToPDF( const base :: DictionaryValue & options , const PrintToPDFCallback & callback)",13, 70, 2, 0
repos/cpp/electron/atom/browser/printing/print_preview_message_handler.cc,"atom::PrintPreviewMessageHandler::RunPrintToPDFCallback( int request_id , scoped_refptr<base::RefCountedMemory> data_bytes)",23, 79, 27, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::ScopedHString( const wchar_t * source)",3, 70, 0, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::ScopedHString( const std :: wstring & source)",3, 75, 0, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::ScopedHString()",1, 50, 0, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::~ScopedHString()",3, 34, 0, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::Reset()",6, 31, 4, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::Reset( const wchar_t * source)",4, 54, 2, 0
repos/cpp/electron/atom/browser/win/scoped_hstring.cc,"atom::ScopedHString::Reset( const std :: wstring & source)",4, 63, 2, 0
repos/cpp/electron/atom/browser/net/url_request_about_job.cc,"atom::URLRequestAboutJob::URLRequestAboutJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",3, 80, 4, 0
repos/cpp/electron/atom/browser/net/url_request_about_job.cc,"atom::URLRequestAboutJob::Start()",5, 66, 32, 0
repos/cpp/electron/atom/browser/net/url_request_about_job.cc,"atom::URLRequestAboutJob::Kill()",4, 42, 2, 0
repos/cpp/electron/atom/browser/net/url_request_about_job.cc,"atom::URLRequestAboutJob::GetMimeType( std :: string * mime_type) const",4, 69, 0, 0
repos/cpp/electron/atom/browser/net/url_request_about_job.cc,"atom::URLRequestAboutJob::~URLRequestAboutJob()",1, 45, 0, 0
repos/cpp/electron/atom/browser/net/url_request_about_job.cc,"atom::URLRequestAboutJob::StartAsync()",3, 40, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::DisableProtocolInterceptFlagKey()",3, 48, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::AtomURLRequestJobFactory()",1, 56, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::~AtomURLRequestJobFactory()",3, 56, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::Chain( std :: unique_ptr<net::URLRequestJobFactory> job_factory)",4, 62, 4, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::SetProtocolHandler( const std :: string & scheme , std :: unique_ptr<ProtocolHandler> protocol_handler)",18, 62, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::InterceptProtocol( const std :: string & scheme , std :: unique_ptr<ProtocolHandler> protocol_handler)",11, 78, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::UninterceptProtocol( const std :: string & scheme)",8, 80, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::HasProtocolHandler( const std :: string & scheme) const",4, 59, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::Clear()",6, 41, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::MaybeCreateJobWithProtocolHandler( const std :: string & scheme , net :: URLRequest * request , net :: NetworkDelegate * network_delegate) const",20, 81, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::MaybeInterceptRedirect( net :: URLRequest * request , net :: NetworkDelegate * network_delegate , const GURL & location) const",7, 73, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::MaybeInterceptResponse( net :: URLRequest * request , net :: NetworkDelegate * network_delegate) const",5, 74, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::IsHandledProtocol( const std :: string & scheme) const",7, 53, 9, 0
repos/cpp/electron/atom/browser/net/atom_url_request_job_factory.cc,"atom::AtomURLRequestJobFactory::IsSafeRedirectTarget( const GURL & location) const",8, 53, 0, 0
repos/cpp/electron/atom/browser/net/require_ct_delegate.cc,"atom::RequireCTDelegate::RequireCTDelegate()",1, 42, 0, 0
repos/cpp/electron/atom/browser/net/require_ct_delegate.cc,"atom::RequireCTDelegate::~RequireCTDelegate()",1, 43, 0, 0
repos/cpp/electron/atom/browser/net/require_ct_delegate.cc,"atom::RequireCTDelegate::AddCTExcludedHost( const std :: string & host)",4, 69, 0, 0
repos/cpp/electron/atom/browser/net/require_ct_delegate.cc,"atom::RequireCTDelegate::ClearCTExcludedHostsList()",4, 53, 0, 0
repos/cpp/electron/atom/browser/net/require_ct_delegate.cc,"atom::RequireCTDelegate::IsCTRequiredForHost( const std :: string & host , const net :: X509Certificate * chain , const net :: HashValueVector & hashes)",10, 78, 0, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::BeforeStartInUI( base :: WeakPtr<URLRequestStringJob> job , mate :: Arguments * args)",23, 75, 4, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::URLRequestStringJob::URLRequestStringJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",4, 81, 41, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::URLRequestStringJob::Start()",9, 81, 21, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::URLRequestStringJob::StartAsync( std :: unique_ptr<base::Value> options , int error)",19, 75, 0, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::URLRequestStringJob::Kill()",4, 38, 2, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::URLRequestStringJob::GetResponseInfo( net :: HttpResponseInfo * info)",15, 76, 4, 0
repos/cpp/electron/atom/browser/net/url_request_string_job.cc,"atom::URLRequestStringJob::GetData( std :: string * mime_type , std :: string * charset , std :: string * data , net :: CompletionOnceCallback callback) const",9, 79, 33, 0
repos/cpp/electron/atom/browser/net/js_asker.cc,"atom::JsAsker::SetHandlerInfo( v8 :: Isolate * isolate , net :: URLRequestContextGetter * request_context_getter , const JavaScriptHandler & handler)",8, 58, 4, 0
repos/cpp/electron/atom/browser/net/js_asker.cc,"atom::JsAsker::AskForOptions( v8 :: Isolate * isolate , const JavaScriptHandler & handler , std :: unique_ptr<base::DictionaryValue> request_details , const BeforeStartCallback & before_start)",13, 65, 2, 0
repos/cpp/electron/atom/browser/net/js_asker.cc,"atom::JsAsker::IsErrorOptions( base :: Value * value , int * error)",11, 78, 4, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::internal::UploadOwnedIOBufferElementReader::UploadOwnedIOBufferElementReader( scoped_refptr<const net::IOBufferWithSize> buffer)",4, 71, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::internal::UploadOwnedIOBufferElementReader::~UploadOwnedIOBufferElementReader()",1, 50, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::internal::UploadOwnedIOBufferElementReader::CreateWithBuffer( scoped_refptr<const net::IOBufferWithSize> buffer)",4, 68, 4, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::AtomURLRequest( api :: URLRequest * delegate)",3, 63, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::~AtomURLRequest()",4, 36, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::Create( AtomBrowserContext * browser_context , const std :: string & method , const std :: string & url , const std :: string & redirect_policy , api :: URLRequest * delegate)",27, 80, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::Terminate()",7, 59, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoInitialize( scoped_refptr<net::URLRequestContextGetter> request_context_getter , const std :: string & method , const std :: string & url , const std :: string & redirect_policy)",32, 79, 24, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoTerminate()",8, 51, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::Write( scoped_refptr<const net::IOBufferWithSize> buffer , bool is_last)",7, 78, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::SetChunkedUpload( bool is_chunked_upload)",8, 76, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::Cancel()",6, 56, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::FollowRedirect()",6, 64, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::SetExtraHeader( const std :: string & name , const std :: string & value) const",7, 77, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::RemoveExtraHeader( const std :: string & name) const",6, 73, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::PassLoginInformation( const base :: string16 & username , const base :: string16 & password) const",14, 79, 8, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::SetLoadFlags( int flags) const",6, 69, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoWriteBuffer( scoped_refptr<const net::IOBufferWithSize> buffer , bool is_last)",50, 81, 10, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoCancel()",7, 51, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoFollowRedirect()",7, 80, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoSetExtraHeader( const std :: string & name , const std :: string & value) const",8, 72, 38, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoRemoveExtraHeader( const std :: string & name) const",7, 74, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoSetAuth( const base :: string16 & username , const base :: string16 & password) const",8, 71, 31, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoCancelAuth() const",7, 51, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoCancelWithError( const std :: string & error , bool isRequestError)",8, 79, 6, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::DoSetLoadFlags( int flags) const",7, 58, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::OnReceivedRedirect( net :: URLRequest * request , const net :: RedirectInfo & info , bool * defer_redirect)",22, 80, 8, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::OnAuthRequired( net :: URLRequest * request , net :: AuthChallengeInfo * auth_info)",9, 79, 21, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::OnResponseStarted( net :: URLRequest * request , int net_error)",24, 77, 8, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::ReadResponse()",8, 79, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::OnReadCompleted( net :: URLRequest * request , int bytes_read)",47, 81, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::OnContextShuttingDown()",4, 51, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::CopyAndPostBuffer( int bytes_read)",13, 76, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::InformDelegateReceivedRedirect( int status_code , const std :: string & method , const GURL & url , scoped_refptr<net::HttpResponseHeaders> response_headers) const",9, 79, 4, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::InformDelegateAuthenticationRequired( scoped_refptr<net::AuthChallengeInfo> auth_info) const",6, 61, 4, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::InformDelegateResponseStarted( scoped_refptr<net::HttpResponseHeaders> response_headers) const",6, 70, 4, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::InformDelegateResponseData( scoped_refptr<net::IOBufferWithSize> data) const",9, 66, 2, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::InformDelegateResponseCompleted() const",6, 63, 0, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::InformDelegateErrorOccured( const std :: string & error , bool isRequestError) const",7, 77, 48, 0
repos/cpp/electron/atom/browser/net/atom_url_request.cc,"atom::AtomURLRequest::GetUploadProgress( mate :: Dictionary * progress) const",11, 75, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ResourceTypeToString( content :: ResourceType type)",20, 63, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::GetWebContentsID( int process_id , int frame_id)",5, 69, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::RunSimpleListener( const AtomNetworkDelegate :: SimpleListener & listener , std :: unique_ptr<base::DictionaryValue> details , int render_process_id , int render_frame_id)",10, 76, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::RunResponseListener( const AtomNetworkDelegate :: ResponseListener & listener , std :: unique_ptr<base::DictionaryValue> details , int render_process_id , int render_frame_id , const AtomNetworkDelegate :: ResponseCallback & callback)",12, 69, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::MatchesFilterCondition( net :: URLRequest * request , const URLPatterns & patterns)",11, 59, 28, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , net :: URLRequest * request)",12, 78, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , const net :: HttpRequestHeaders & headers)",8, 60, 18, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , const net :: HttpResponseHeaders * headers)",24, 63, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , const GURL & location)",3, 74, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , const net :: HostPortPair & host_port)",5, 56, 18, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , bool from_cache)",3, 69, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ToDictionary( base :: DictionaryValue * details , const net :: URLRequestStatus & status)",4, 67, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::FillDetailsObject( base :: DictionaryValue * details , Arg arg)",3, 66, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::FillDetailsObject( base :: DictionaryValue * details , Arg arg , Args ... args)",4, 80, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ReadFromResponseObject( const base :: DictionaryValue & response , GURL * new_location)",6, 67, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ReadFromResponseObject( const base :: DictionaryValue & response , net :: HttpRequestHeaders * headers)",14, 67, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::ReadFromResponseObject( const base :: DictionaryValue & response , const ResponseHeadersContainer & container)",24, 73, 28, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::SimpleListenerInfo::SimpleListenerInfo( URLPatterns patterns_ , SimpleListener listener_)",4, 61, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::ResponseListenerInfo::ResponseListenerInfo( URLPatterns patterns_ , ResponseListener listener_)",4, 65, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::AtomNetworkDelegate()",9, 78, 8, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::~AtomNetworkDelegate()",1, 47, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::SetSimpleListenerInIO( SimpleEvent type , URLPatterns patterns , SimpleListener callback)",8, 75, 48, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::SetResponseListenerInIO( ResponseEvent type , URLPatterns patterns , ResponseListener callback)",8, 79, 50, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnBeforeURLRequest( net :: URLRequest * request , net :: CompletionOnceCallback callback , GURL * new_url)",19, 80, 8, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnBeforeStartTransaction( net :: URLRequest * request , net :: CompletionOnceCallback callback , net :: HttpRequestHeaders * headers)",10, 81, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnStartTransaction( net :: URLRequest * request , const net :: HttpRequestHeaders & headers)",8, 61, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnHeadersReceived( net :: URLRequest * request , net :: CompletionOnceCallback callback , const net :: HttpResponseHeaders * original , scoped_refptr<net::HttpResponseHeaders> * override , GURL * allowed)",13, 70, 6, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnBeforeRedirect( net :: URLRequest * request , const GURL & new_location)",9, 78, 20, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnResponseStarted( net :: URLRequest * request , int net_error)",11, 78, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCompleted( net :: URLRequest * request , bool started , int net_error)",26, 72, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnURLRequestDestroyed( net :: URLRequest * request)",9, 76, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnAuthRequired( net :: URLRequest * request , const net :: AuthChallengeInfo & auth_info , AuthCallback callback , net :: AuthCredentials * credentials)",15, 80, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanGetCookies( const net :: URLRequest & request , const net :: CookieList & cookie_list)",4, 80, 42, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanSetCookie( const net :: URLRequest & request , const net :: CanonicalCookie & cookie_line , net :: CookieOptions * options)",6, 45, 4, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanAccessFile( const net :: URLRequest & request , const base :: FilePath & original_path , const base :: FilePath & absolute_path) const",6, 49, 4, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanEnablePrivacyMode( const GURL & url , const GURL & first_party_for_cookies) const",5, 50, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnAreExperimentalCookieFeaturesEnabled() const",3, 75, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCancelURLRequestWithPolicyViolatingReferrerHeader( const net :: URLRequest & request , const GURL & target_url , const GURL & referrer_url) const",6, 79, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanQueueReportingReport( const url :: Origin & origin) const",4, 53, 0, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanSendReportingReports( std :: set<url::Origin> origins , base :: OnceCallback<void(std::set<url::Origin>)> result_callback) const",3, 78, 4, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanSetReportingClient( const url :: Origin & origin , const GURL & endpoint) const",4, 80, 50, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnCanUseReportingClient( const url :: Origin & origin , const GURL & endpoint) const",4, 80, 50, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnErrorOccurred( net :: URLRequest * request , bool started , int net_error)",9, 70, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::HandleResponseEvent( ResponseEvent type , net :: URLRequest * request , net :: CompletionOnceCallback callback , Out out , Args ... args)",29, 77, 6, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::HandleSimpleEvent( SimpleEvent type , net :: URLRequest * request , Args ... args)",19, 75, 6, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnListenerResultInIO( uint64_t id , T out , std :: unique_ptr<base::DictionaryValue> response)",14, 80, 2, 0
repos/cpp/electron/atom/browser/net/atom_network_delegate.cc,"atom::AtomNetworkDelegate::OnListenerResultInUI( uint64_t id , T out , const base :: DictionaryValue & response)",11, 73, 21, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::BeforeStartInUI( base :: WeakPtr<URLRequestStreamJob> job , mate :: Arguments * args)",66, 81, 21, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::URLRequestStreamJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",8, 81, 41, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::~URLRequestStreamJob()",6, 78, 4, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::Start()",9, 81, 21, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::StartAsync( std :: unique_ptr<mate::StreamSubscriber> subscriber , scoped_refptr<net::HttpResponseHeaders> response_headers , bool ended , int error)",17, 70, 8, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::OnData( std :: vector<char> && buffer)",20, 81, 4, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::OnEnd()",6, 36, 0, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::OnError( int error)",3, 81, 2, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::ReadRawData( net :: IOBuffer * dest , int dest_size)",19, 80, 2, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::DoneReading()",5, 76, 2, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::DoneReadingRedirectResponse()",3, 58, 0, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::SetUpSourceStream()",17, 78, 0, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::GetMimeType( std :: string * mime_type) const",3, 70, 0, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::GetResponseCode() const",3, 51, 0, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::GetResponseInfo( net :: HttpResponseInfo * info)",3, 73, 0, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::GetLoadTimingInfo( net :: LoadTimingInfo * load_timing_info) const",7, 64, 2, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::Kill()",4, 38, 2, 0
repos/cpp/electron/atom/browser/net/url_request_stream_job.cc,"atom::URLRequestStreamJob::BufferCopy( std :: vector<char> * source , net :: IOBuffer * target , int target_size)",7, 79, 2, 0
repos/cpp/electron/atom/browser/net/http_protocol_handler.cc,"atom::HttpProtocolHandler::HttpProtocolHandler( const std :: string & scheme)",2, 68, 0, 0
repos/cpp/electron/atom/browser/net/http_protocol_handler.cc,"atom::HttpProtocolHandler::~HttpProtocolHandler()",1, 47, 0, 0
repos/cpp/electron/atom/browser/net/http_protocol_handler.cc,"atom::HttpProtocolHandler::MaybeCreateJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate) const",5, 78, 2, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::GetExtFromURL( const GURL & url)",7, 58, 2, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::BeforeStartInUI( base :: WeakPtr<URLRequestBufferJob> job , mate :: Arguments * args)",23, 75, 4, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::URLRequestBufferJob::URLRequestBufferJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",5, 81, 41, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::URLRequestBufferJob::Start()",9, 81, 21, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::URLRequestBufferJob::StartAsync( std :: unique_ptr<base::Value> options , int error)",40, 81, 4, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::URLRequestBufferJob::Kill()",4, 38, 2, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::URLRequestBufferJob::GetResponseInfo( net :: HttpResponseInfo * info)",19, 76, 4, 0
repos/cpp/electron/atom/browser/net/url_request_buffer_job.cc,"atom::URLRequestBufferJob::GetRefCountedData( std :: string * mime_type , std :: string * charset , scoped_refptr<base::RefCountedMemory> * data , net :: CompletionOnceCallback callback) const",10, 50, 4, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::GetRequestType( const std :: string & raw)",17, 70, 0, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::ResponsePiper::ResponsePiper( URLRequestFetchJob * job)",1, 65, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::ResponsePiper::Initialize( net :: CompletionOnceCallback callback)",3, 66, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::ResponsePiper::Write( net :: IOBuffer * buffer , int num_bytes , net :: CompletionOnceCallback callback)",11, 78, 6, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::ResponsePiper::Finish( int net_error , net :: CompletionOnceCallback callback)",3, 77, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::BeforeStartInUI( base :: WeakPtr<URLRequestFetchJob> job , mate :: Arguments * args)",52, 80, 6, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::URLRequestFetchJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",3, 79, 39, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::Start()",9, 81, 21, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::StartAsync( scoped_refptr<net::URLRequestContextGetter> url_request_context_getter , scoped_refptr<AtomBrowserContext> browser_context , std :: unique_ptr<base::Value> options , int error)",67, 79, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::OnError( int error)",3, 81, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::HeadersCompleted()",5, 60, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::DataAvailable( net :: IOBuffer * buffer , int num_bytes , net :: CompletionOnceCallback callback)",20, 79, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::Kill()",6, 38, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::ReadRawData( net :: IOBuffer * dest , int dest_size)",22, 80, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::GetMimeType( std :: string * mime_type) const",6, 69, 0, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::GetResponseInfo( net :: HttpResponseInfo * info)",4, 72, 0, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::GetResponseCode() const",6, 51, 2, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::OnURLFetchComplete( const net :: URLFetcher * source)",19, 80, 6, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::BufferCopy( net :: IOBuffer * source , int num_bytes , net :: IOBuffer * target , int target_size)",8, 58, 0, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::ClearPendingBuffer()",4, 48, 0, 0
repos/cpp/electron/atom/browser/net/url_request_fetch_job.cc,"atom::URLRequestFetchJob::ClearWriteBuffer()",4, 46, 0, 0
repos/cpp/electron/atom/browser/net/resolve_proxy_helper.cc,"atom::ResolveProxyHelper::ResolveProxyHelper( AtomBrowserContext * browser_context)",2, 76, 0, 0
repos/cpp/electron/atom/browser/net/resolve_proxy_helper.cc,"atom::ResolveProxyHelper::~ResolveProxyHelper()",7, 68, 2, 0
repos/cpp/electron/atom/browser/net/resolve_proxy_helper.cc,"atom::ResolveProxyHelper::ResolveProxy( const GURL & url , const ResolveProxyCallback & callback)",12, 78, 38, 0
repos/cpp/electron/atom/browser/net/resolve_proxy_helper.cc,"atom::ResolveProxyHelper::StartPendingRequest()",16, 72, 2, 0
repos/cpp/electron/atom/browser/net/resolve_proxy_helper.cc,"atom::ResolveProxyHelper::OnProxyLookupComplete( const base :: Optional<net::ProxyInfo> & proxy_info)",22, 75, 2, 0
repos/cpp/electron/atom/browser/net/resolve_proxy_helper.cc,"atom::ResolveProxyHelper::PendingRequest::PendingRequest( const GURL & url , const ResolveProxyCallback & callback)",4, 52, 0, 0
repos/cpp/electron/atom/browser/net/about_protocol_handler.cc,"atom::AboutProtocolHandler::AboutProtocolHandler()",1, 48, 0, 0
repos/cpp/electron/atom/browser/net/about_protocol_handler.cc,"atom::AboutProtocolHandler::~AboutProtocolHandler()",1, 49, 0, 0
repos/cpp/electron/atom/browser/net/about_protocol_handler.cc,"atom::AboutProtocolHandler::MaybeCreateJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate) const",5, 60, 2, 0
repos/cpp/electron/atom/browser/net/about_protocol_handler.cc,"atom::AboutProtocolHandler::IsSafeRedirectTarget( const GURL & location) const",3, 78, 0, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::Response::Response( net :: CertVerifyResult * verify_result , net :: CompletionOnceCallback callback)",3, 73, 6, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::Response::verify_result()",1, 68, 2, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::Response::callback()",1, 74, 2, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::CertVerifierRequest( const AtomCertVerifier :: RequestParams & params , AtomCertVerifier * cert_verifier)",5, 69, 2, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::~CertVerifierRequest()",12, 71, 6, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::RunResponse( Response * response)",12, 76, 6, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::Start( const net :: NetLogWithSource & net_log)",9, 68, 8, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::OnDefaultVerificationDone( int error)",15, 78, 4, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::OnVerifyRequestInUI( const AtomCertVerifier :: VerifyProc & verify_proc , std :: unique_ptr<VerifyRequestParams> request , const base :: Callback<void(int)> & response_callback)",6, 60, 6, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::OnResponseInUI( base :: WeakPtr<CertVerifierRequest> self , int result)",6, 81, 8, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::NotifyResponseInIO( int result)",10, 76, 4, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::AddResponseListener( net :: CertVerifyResult * verify_result , net :: CompletionOnceCallback callback)",4, 77, 4, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::CertVerifierRequest::params() const",1, 76, 2, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::AtomCertVerifier( RequireCTDelegate * ct_delegate)",3, 67, 0, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::~AtomCertVerifier()",1, 41, 0, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::SetVerifyProc( const VerifyProc & proc)",3, 63, 0, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::Verify( const RequestParams & params , net :: CertVerifyResult * verify_result , net :: CompletionOnceCallback callback , std :: unique_ptr<Request> * out_req , const net :: NetLogWithSource & net_log)",26, 78, 6, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::SetConfig( const Config & config)",3, 57, 0, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::RemoveRequest( const RequestParams & params)",5, 68, 0, 0
repos/cpp/electron/atom/browser/net/atom_cert_verifier.cc,"atom::AtomCertVerifier::FindRequest( const RequestParams & params)",7, 52, 0, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::SetupAtomURLRequestJobFactory( content :: ProtocolHandlerMap * protocol_handlers , net :: URLRequestContext * url_request_context , AtomURLRequestJobFactory * job_factory)",37, 81, 34, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::ResourceContext::GetRequestContext()",3, 57, 2, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::Handle( base :: WeakPtr<AtomBrowserContext> browser_context)",5, 55, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::~Handle()",1, 46, 0, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::GetResourceContext()",5, 56, 0, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::CreateMainRequestContextGetter( content :: ProtocolHandlerMap * protocol_handlers , content :: URLRequestInterceptorScopedVector protocol_interceptors)",10, 72, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::GetMainRequestContextGetter()",3, 65, 0, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::GetNetworkContext()",6, 79, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::CreateNetworkContextParams()",40, 77, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::LazyInitialize()",20, 79, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::Handle::ShutdownOnUIThread()",15, 78, 10, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::URLRequestContextGetter( URLRequestContextGetter :: Handle * context_handle , content :: ProtocolHandlerMap * protocol_handlers , content :: URLRequestInterceptorScopedVector protocol_interceptors)",14, 70, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::~URLRequestContextGetter()",5, 56, 2, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::NotifyContextShuttingDown( std :: unique_ptr<ResourceContext> resource_context)",13, 76, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::GetURLRequestContext()",65, 81, 4, 0
repos/cpp/electron/atom/browser/net/url_request_context_getter.cc,"atom::URLRequestContextGetter::GetNetworkTaskRunner() const",3, 67, 2, 0
repos/cpp/electron/atom/browser/net/url_request_async_asar_job.cc,"atom::BeforeStartInUI( base :: WeakPtr<URLRequestAsyncAsarJob> job , mate :: Arguments * args)",23, 75, 4, 0
repos/cpp/electron/atom/browser/net/url_request_async_asar_job.cc,"atom::URLRequestAsyncAsarJob::URLRequestAsyncAsarJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",4, 81, 4, 0
repos/cpp/electron/atom/browser/net/url_request_async_asar_job.cc,"atom::URLRequestAsyncAsarJob::Start()",9, 81, 21, 0
repos/cpp/electron/atom/browser/net/url_request_async_asar_job.cc,"atom::URLRequestAsyncAsarJob::StartAsync( std :: unique_ptr<base::Value> options , int error)",34, 78, 0, 0
repos/cpp/electron/atom/browser/net/url_request_async_asar_job.cc,"atom::URLRequestAsyncAsarJob::Kill()",4, 38, 0, 0
repos/cpp/electron/atom/browser/net/url_request_async_asar_job.cc,"atom::URLRequestAsyncAsarJob::GetResponseInfo( net :: HttpResponseInfo * info)",7, 76, 0, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"CreateHttpAuthStaticParams()",9, 71, 0, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"CreateHttpAuthDynamicParams()",12, 79, 6, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::URLLoaderFactoryForSystem::URLLoaderFactoryForSystem( SystemNetworkContextManager * manager)",2, 75, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::URLLoaderFactoryForSystem::CreateLoaderAndStart( network :: mojom :: URLLoaderRequest request , int32_t routing_id , int32_t request_id , uint32_t options , const network :: ResourceRequest & url_request , network :: mojom :: URLLoaderClientPtr client , const net :: MutableNetworkTrafficAnnotationTag & traffic_annotation)",15, 75, 28, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::URLLoaderFactoryForSystem::Clone( network :: mojom :: URLLoaderFactoryRequest request)",5, 73, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::URLLoaderFactoryForSystem::Clone()",5, 77, 4, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::URLLoaderFactoryForSystem::Shutdown()",1, 42, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::URLLoaderFactoryForSystem::~URLLoaderFactoryForSystem()",1, 43, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::GetContext()",20, 80, 4, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::GetURLLoaderFactory()",14, 80, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::GetSharedURLLoaderFactory()",3, 59, 0, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::CreateDefaultNetworkContextParams()",14, 81, 6, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::SetUp( network :: mojom :: NetworkContextRequest * network_context_request , network :: mojom :: NetworkContextParamsPtr * network_context_params , network :: mojom :: HttpAuthStaticParamsPtr * http_auth_static_params , network :: mojom :: HttpAuthDynamicParamsPtr * http_auth_dynamic_params)",16, 79, 4, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::SystemNetworkContextManager()",4, 68, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::~SystemNetworkContextManager()",3, 62, 0, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::OnNetworkServiceCreated( network :: mojom :: NetworkService * network_service)",14, 74, 2, 0
repos/cpp/electron/atom/browser/net/system_network_context_manager.cc,"SystemNetworkContextManager::CreateNetworkContextParams()",24, 81, 2, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::URLRequestAsarJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate)",3, 80, 4, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::~URLRequestAsarJob()",1, 43, 0, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::Initialize( const scoped_refptr<base::TaskRunner> file_task_runner , const base :: FilePath & file_path)",26, 74, 2, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::InitializeAsarJob( const scoped_refptr<base::TaskRunner> file_task_runner , std :: shared_ptr<Archive> archive , const base :: FilePath & file_path , const Archive :: FileInfo & file_info)",12, 60, 4, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::InitializeFileJob( const scoped_refptr<base::TaskRunner> file_task_runner , const base :: FilePath & file_path)",8, 60, 4, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::Start()",22, 81, 23, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::Kill()",6, 42, 2, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::ReadRawData( net :: IOBuffer * dest , int dest_size)",20, 78, 6, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::IsRedirectResponse( GURL * location , int * http_status_code , bool * insecure_scheme_was_upgraded)",27, 81, 43, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::SetUpSourceStream()",9, 76, 0, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::GetMimeType( std :: string * mime_type) const",7, 68, 0, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::SetExtraRequestHeaders( const net :: HttpRequestHeaders & headers)",18, 81, 4, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::GetResponseCode() const",4, 51, 2, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::GetResponseInfo( net :: HttpResponseInfo * info)",7, 71, 0, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::FetchMetaInfo( const base :: FilePath & file_path , JobType type , FileMetaInfo * meta_info)",28, 79, 2, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::DidFetchMetaInfo( const FileMetaInfo * meta_info)",15, 80, 6, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::DidOpen( int result)",48, 81, 8, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::DidSeek( int64_t result)",9, 81, 8, 0
repos/cpp/electron/atom/browser/net/asar/url_request_asar_job.cc,"asar::URLRequestAsarJob::DidRead( scoped_refptr<net::IOBuffer> buf , int result)",10, 80, 0, 0
repos/cpp/electron/atom/browser/net/asar/asar_protocol_handler.cc,"asar::AsarProtocolHandler::AsarProtocolHandler( const scoped_refptr<base::TaskRunner> & file_task_runner)",3, 61, 4, 0
repos/cpp/electron/atom/browser/net/asar/asar_protocol_handler.cc,"asar::AsarProtocolHandler::~AsarProtocolHandler()",1, 47, 0, 0
repos/cpp/electron/atom/browser/net/asar/asar_protocol_handler.cc,"asar::AsarProtocolHandler::MaybeCreateJob( net :: URLRequest * request , net :: NetworkDelegate * network_delegate) const",9, 64, 2, 0
repos/cpp/electron/atom/browser/net/asar/asar_protocol_handler.cc,"asar::AsarProtocolHandler::IsSafeRedirectTarget( const GURL & location) const",3, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"mate::Converter<printing::PrinterBasicInfo>::ToV8( v8 :: Isolate * isolate , const printing :: PrinterBasicInfo & val)",10, 76, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"mate::Converter<WindowOpenDisposition>::ToV8( v8 :: Isolate * isolate , WindowOpenDisposition val)",25, 64, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"mate::Converter<content::SavePageType>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , content :: SavePageType * out)",18, 55, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"mate::Converter<atom::api::WebContents::Type>::ToV8( v8 :: Isolate * isolate , atom :: api :: WebContents :: Type val)",28, 71, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"mate::Converter<atom::api::WebContents::Type>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , atom :: api :: WebContents :: Type * out)",22, 58, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::GetServiceWorkerContext( const content :: WebContents * web_contents)",14, 76, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::OnCapturePageDone( scoped_refptr<util::Promise> promise , const SkBitmap & bitmap)",7, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FrameDispatchHelper::Send( IPC :: Message * msg)",1, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FrameDispatchHelper::OnSetTemporaryZoomLevel( double level , IPC :: Message * reply_msg)",3, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FrameDispatchHelper::OnGetZoomLevel( IPC :: Message * reply_msg)",3, 54, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FrameDispatchHelper::OnRendererMessageSync( const std :: string & channel , const base :: ListValue & args , IPC :: Message * message)",5, 74, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::WebContents( v8 :: Isolate * isolate , content :: WebContents * web_contents)",9, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::WebContents( v8 :: Isolate * isolate , std :: unique_ptr<content::WebContents> web_contents , Type type)",10, 77, 25, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::WebContents( v8 :: Isolate * isolate , const mate :: Dictionary & options)",85, 81, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::InitZoomController( content :: WebContents * web_contents , const mate :: Dictionary & options)",8, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::InitWithSessionAndOptions( v8 :: Isolate * isolate , std :: unique_ptr<content::WebContents> owned_web_contents , mate :: Handle<api::Session> session , const mate :: Dictionary & options)",59, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::~WebContents()",34, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DestroyWebContents( bool async)",6, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidAddMessageToConsole( content :: WebContents * source , int32_t level , const base :: string16 & message , int32_t line_no , const base :: string16 & source_id)",7, 76, 41, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnCreateWindow( const GURL & target_url , const content :: Referrer & referrer , const std :: string & frame_name , WindowOpenDisposition disposition , const std :: vector<std::string> & features , const scoped_refptr<network::ResourceRequestBody> & body)",13, 77, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::WebContentsCreated( content :: WebContents * source_contents , int opener_render_process_id , int opener_render_frame_id , const std :: string & frame_name , const GURL & target_url , content :: WebContents * new_contents)",11, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::AddNewContents( content :: WebContents * source , std :: unique_ptr<content::WebContents> new_contents , WindowOpenDisposition disposition , const gfx :: Rect & initial_rect , bool user_gesture , bool * was_blocked)",21, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OpenURLFromTab( content :: WebContents * source , const content :: OpenURLParams & params)",22, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::BeforeUnloadFired( content :: WebContents * tab , bool proceed , bool * proceed_to_fire_unload)",8, 68, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetContentsBounds( content :: WebContents * source , const gfx :: Rect & pos)",4, 66, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::CloseContents( content :: WebContents * source)",10, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ActivateContents( content :: WebContents * source)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::UpdateTargetURL( content :: WebContents * source , const GURL & url)",4, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::HandleKeyboardEvent( content :: WebContents * source , const content :: NativeWebKeyboardEvent & event)",11, 67, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::PreHandleKeyboardEvent( content :: WebContents * source , const content :: NativeWebKeyboardEvent & event)",13, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::EnterFullscreenModeForTab( content :: WebContents * source , const GURL & origin , const blink :: WebFullscreenOptions & options)",10, 79, 29, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnEnterFullscreenModeForTab( content :: WebContents * source , const GURL & origin , const blink :: WebFullscreenOptions & options , bool allowed)",10, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ExitFullscreenModeForTab( content :: WebContents * source)",4, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RendererUnresponsive( content :: WebContents * source , content :: RenderWidgetHost * render_widget_host , base :: RepeatingClosure hang_monitor_restarter)",6, 53, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RendererResponsive( content :: WebContents * source , content :: RenderWidgetHost * render_widget_host)",7, 59, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::HandleContextMenu( const content :: ContextMenuParams & params)",11, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnGoToEntryOffset( int offset)",4, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FindReply( content :: WebContents * web_contents , int request_id , int number_of_matches , const gfx :: Rect & selection_rect , int active_match_ordinal , bool final_update)",19, 70, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::CheckMediaAccessPermission( content :: RenderFrameHost * render_frame_host , const GURL & security_origin , content :: MediaStreamType type)",10, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RequestMediaAccessPermission( content :: WebContents * web_contents , const content :: MediaStreamRequest & request , content :: MediaResponseCallback callback)",8, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RequestToLockMouse( content :: WebContents * web_contents , bool user_gesture , bool last_unlocked_by_target)",7, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RunBluetoothChooser( content :: RenderFrameHost * frame , const content :: BluetoothChooser :: EventHandler & event_handler)",5, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetJavaScriptDialogManager( content :: WebContents * source)",7, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnAudioStateChanged( bool audible)",3, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::BeforeUnloadFired( const base :: TimeTicks & proceed_time)",4, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RenderViewCreated( content :: RenderViewHost * render_view_host)",7, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RenderViewHostChanged( content :: RenderViewHost * old_host , content :: RenderViewHost * new_host)",4, 77, 40, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RenderViewDeleted( content :: RenderViewHost * render_view_host)",19, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RenderProcessGone( base :: TerminationStatus status)",3, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::PluginCrashed( const base :: FilePath & plugin_path , base :: ProcessId plugin_pid)",7, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::MediaStartedPlaying( const MediaPlayerInfo & video_type , const MediaPlayerId & id)",4, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::MediaStoppedPlaying( const MediaPlayerInfo & video_type , const MediaPlayerId & id , content :: WebContentsObserver :: MediaStoppedReason reason)",6, 63, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidChangeThemeColor( SkColor theme_color)",7, 65, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DocumentLoadedInFrame( content :: RenderFrameHost * render_frame_host)",5, 51, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidFinishLoad( content :: RenderFrameHost * render_frame_host , const GURL & validated_url)",11, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidFailLoad( content :: RenderFrameHost * render_frame_host , const GURL & url , int error_code , const base :: string16 & error_description)",10, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidStartLoading()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidStopLoading()",3, 37, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::EmitNavigationEvent( const std :: string & event , content :: NavigationHandle * navigation_handle)",25, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidStartNavigation( content :: NavigationHandle * navigation_handle)",4, 66, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidRedirectNavigation( content :: NavigationHandle * navigation_handle)",4, 69, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidFinishNavigation( content :: NavigationHandle * navigation_handle)",48, 77, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::TitleWasSet( content :: NavigationEntry * entry)",15, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DidUpdateFaviconURL( const std :: vector<content::FaviconURL> & urls)",12, 67, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DevToolsReloadPage()",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DevToolsFocused()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DevToolsOpened()",21, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DevToolsClosed()",7, 43, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ShowAutofillPopup( content :: RenderFrameHost * frame_host , const gfx :: RectF & bounds , const std :: vector<base::string16> & values , const std :: vector<base::string16> & labels)",19, 81, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnMessageReceived( const IPC :: Message & message)",10, 68, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnMessageReceived( const IPC :: Message & message , content :: RenderFrameHost * frame_host)",23, 80, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::WebContentsDestroyed()",20, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::NavigationEntryCommitted( const content :: LoadCommittedDetails & details)",5, 61, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetBackgroundThrottling( bool allowed)",30, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetProcessID() const",3, 64, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetOSProcessID() const",5, 75, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetType() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Equal( const WebContents * web_contents) const",3, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::LoadURL( const GURL & url , const mate :: Dictionary & options)",57, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DownloadURL( const GURL & url)",9, 76, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetURL() const",3, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetTitle() const",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsLoading() const",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsLoadingMainFrame() const",3, 57, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsWaitingForResponse() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Stop()",3, 27, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GoBack()",4, 68, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GoForward()",4, 68, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GoToOffset( int offset)",4, 68, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetWebRTCIPHandlingPolicy() const",3, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetWebRTCIPHandlingPolicy( const std :: string & webrtc_ip_handling_policy)",11, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsCrashed() const",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetUserAgent( const std :: string & user_agent , mate :: Arguments * args)",4, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetUserAgent()",3, 49, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SavePage( const base :: FilePath & full_file_path , const content :: SavePageType & save_type , const SavePageHandler :: SavePageCallback & callback)",6, 80, 27, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OpenDevTools( mate :: Arguments * args)",22, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::CloseDevTools()",6, 43, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsDevToolsOpened()",6, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsDevToolsFocused()",6, 69, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::EnableDeviceEmulation( const blink :: WebDeviceEmulationParams & params)",15, 81, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DisableDeviceEmulation()",14, 77, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ToggleDevTools()",6, 37, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::InspectElement( int x , int y)",11, 57, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::InspectServiceWorker()",16, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::HasServiceWorker( const base :: Callback<void(bool)> & callback)",23, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::UnregisterServiceWorker( const base :: Callback<void(bool)> & callback)",9, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetIgnoreMenuShortcuts( bool ignore)",6, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetAudioMuted( bool muted)",3, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsAudioMuted()",3, 41, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsCurrentlyAudible()",3, 47, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Print( mate :: Arguments * args)",31, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetPrinterList()",11, 72, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::PrintToPDF( const base :: DictionaryValue & settings , const PrintPreviewMessageHandler :: PrintToPDFCallback & callback)",6, 70, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::AddWorkSpace( mate :: Arguments * args , const base :: FilePath & path)",8, 61, 31, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::RemoveWorkSpace( mate :: Arguments * args , const base :: FilePath & path)",8, 64, 34, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Undo()",3, 27, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Redo()",3, 27, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Cut()",3, 26, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Copy()",3, 27, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Paste()",3, 28, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::PasteAndMatchStyle()",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Delete()",3, 29, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SelectAll()",3, 32, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Unselect()",3, 39, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Replace( const base :: string16 & word)",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ReplaceMisspelling( const base :: string16 & word)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FindInPage( mate :: Arguments * args)",14, 65, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::StopFindInPage( content :: StopFindAction action)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ShowDefinitionForSelection()",7, 64, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::CopyImageAt( int x , int y)",5, 53, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Focus()",3, 28, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsFocused() const",13, 73, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::TabTraverse( bool reverse)",3, 53, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SendIPCMessage( bool internal , bool send_to_all , const std :: string & channel , const base :: ListValue & args)",6, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SendIPCMessageWithSender( bool internal , bool send_to_all , const std :: string & channel , const base :: ListValue & args , int32_t sender_id)",13, 81, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SendIPCMessageToFrame( bool internal , bool send_to_all , int32_t frame_id , const std :: string & channel , const base :: ListValue & args)",16, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SendInputEvent( v8 :: Isolate * isolate , v8 :: Local<v8::Value> input_event)",48, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::BeginFrameSubscription( mate :: Arguments * args)",13, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::EndFrameSubscription()",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::StartDrag( const mate :: Dictionary & item , mate :: Arguments * args)",35, 74, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::CapturePage( mate :: Arguments * args)",32, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnCursorChange( const content :: WebCursor & cursor)",14, 75, 9, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsGuest() const",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::AttachToIframe( content :: WebContents * embedder_web_contents , int embedder_frame_id)",5, 79, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsOffScreen() const",7, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnPaint( const gfx :: Rect & dirty_rect , const SkBitmap & bitmap)",3, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::StartPainting()",5, 49, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::StopPainting()",5, 49, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsPainting() const",4, 49, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetFrameRate( int frame_rate)",5, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetFrameRate() const",4, 49, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Invalidate()",13, 57, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetSizeForNewRenderView( content :: WebContents * wc) const",11, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetZoomLevel( double level)",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetZoomLevel() const",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetZoomFactor( double factor)",4, 55, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetZoomFactor() const",4, 48, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnSetTemporaryZoomLevel( content :: RenderFrameHost * rfh , double level , IPC :: Message * reply_msg)",9, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnGetZoomLevel( content :: RenderFrameHost * rfh , IPC :: Message * reply_msg)",5, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetPreloadPath( v8 :: Isolate * isolate) const",9, 79, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetWebPreferences( v8 :: Isolate * isolate) const",7, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetLastWebPreferences( v8 :: Isolate * isolate) const",7, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::IsRemoteModuleEnabled() const",6, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetOwnerBrowserWindow() const",6, 66, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::ID() const",3, 34, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Session( v8 :: Isolate * isolate)",3, 66, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::HostWebContents()",5, 55, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetEmbedder( const WebContents * embedder)",18, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::SetDevToolsWebContents( const WebContents * devtools)",4, 78, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetNativeView() const",9, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::DevToolsWebContents( v8 :: Isolate * isolate)",6, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Debugger( v8 :: Isolate * isolate)",7, 72, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GrantOriginAccess( const GURL & url)",5, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::TakeHeapSnapshot( const base :: FilePath & file_path , const std :: string & channel)",17, 76, 18, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",110, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::GetBrowserContext() const",3, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnRendererMessage( content :: RenderFrameHost * frame_host , const std :: string & channel , const base :: ListValue & args)",6, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnRendererMessageSync( content :: RenderFrameHost * frame_host , const std :: string & channel , const base :: ListValue & args , IPC :: Message * message)",7, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::OnRendererMessageTo( content :: RenderFrameHost * frame_host , bool internal , bool send_to_all , int32_t web_contents_id , const std :: string & channel , const base :: ListValue & args)",14, 81, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::Create( v8 :: Isolate * isolate , const mate :: Dictionary & options)",4, 81, 46, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::CreateAndTake( v8 :: Isolate * isolate , std :: unique_ptr<content::WebContents> web_contents , Type type)",7, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::From( v8 :: Isolate * isolate , content :: WebContents * web_contents)",9, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"atom::api::WebContents::FromOrCreate( v8 :: Isolate * isolate , content :: WebContents * web_contents)",9, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",12, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_view_manager.cc,"AddGuest( int guest_instance_id , int element_instance_id , content :: WebContents * embedder , content :: WebContents * guest_web_contents , const base :: DictionaryValue & options)",18, 73, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_view_manager.cc,"RemoveGuest( content :: WebContents * embedder , int guest_instance_id)",5, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_view_manager.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 57, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"mate::Converter<atom::TrayIcon::HighlightMode>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , atom :: TrayIcon :: HighlightMode * out)",20, 59, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::Tray( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper , mate :: Handle<NativeImage> image)",9, 44, 11, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::~Tray()",5, 73, 50, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::New( mate :: Handle<NativeImage> image , mate :: Arguments * args)",8, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnClicked( const gfx :: Rect & bounds , const gfx :: Point & location , int modifiers)",5, 55, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDoubleClicked( const gfx :: Rect & bounds , int modifiers)",3, 69, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnRightClicked( const gfx :: Rect & bounds , int modifiers)",3, 68, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnBalloonShow()",3, 29, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnBalloonClicked()",3, 32, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnBalloonClosed()",3, 31, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDrop()",3, 22, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDropFiles( const std :: vector<std::string> & files)",3, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDropText( const std :: string & text)",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnMouseEntered( const gfx :: Point & location , int modifiers)",3, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnMouseExited( const gfx :: Point & location , int modifiers)",3, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnMouseMoved( const gfx :: Point & location , int modifiers)",3, 69, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDragEntered()",3, 29, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDragExited()",3, 28, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::OnDragEnded()",3, 27, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetImage( v8 :: Isolate * isolate , mate :: Handle<NativeImage> image)",7, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetPressedImage( v8 :: Isolate * isolate , mate :: Handle<NativeImage> image)",8, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetToolTip( const std :: string & tool_tip)",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetTitle( const std :: string & title)",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetHighlightMode( TrayIcon :: HighlightMode mode)",3, 60, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetIgnoreDoubleClickEvents( bool ignore)",5, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::GetIgnoreDoubleClickEvents()",7, 51, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::DisplayBalloon( mate :: Arguments * args , const mate :: Dictionary & options)",19, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::PopUpContextMenu( mate :: Arguments * args)",7, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::SetContextMenu( v8 :: Isolate * isolate , mate :: Handle<Menu> menu)",4, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::GetBounds()",3, 34, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"atom::api::Tray::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",19, 71, 26, 0
repos/cpp/electron/atom/browser/api/atom_api_tray.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",10, 66, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::Menu( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper)",5, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::~Menu()",5, 34, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::AfterInit( v8 :: Isolate * isolate)",15, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::IsCommandIdChecked( int command_id) const",5, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::IsCommandIdEnabled( int command_id) const",5, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::IsCommandIdVisible( int command_id) const",5, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetAcceleratorForCommandIdWithParams( int command_id , bool use_default_accelerator , ui :: Accelerator * accelerator) const",10, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::ShouldRegisterAcceleratorForCommandId( int command_id) const",5, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::ExecuteCommand( int command_id , int flags)",7, 79, 23, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::OnMenuWillShow( ui :: SimpleMenuModel * source)",5, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::InsertItemAt( int index , int command_id , const base :: string16 & label)",5, 55, 24, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::InsertSeparatorAt( int index)",3, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::InsertCheckItemAt( int index , int command_id , const base :: string16 & label)",5, 60, 29, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::InsertRadioItemAt( int index , int command_id , const base :: string16 & label , int group_id)",6, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::InsertSubMenuAt( int index , int command_id , const base :: string16 & label , Menu * menu)",7, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::SetIcon( int index , const gfx :: Image & image)",3, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::SetSublabel( int index , const base :: string16 & sublabel)",3, 68, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::SetRole( int index , const base :: string16 & role)",3, 60, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::Clear()",3, 21, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetIndexOfCommandId( int command_id)",3, 50, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetItemCount() const",3, 33, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetCommandIdAt( int index) const",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetLabelAt( int index) const",3, 51, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetSublabelAt( int index) const",3, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::GetAcceleratorTextAt( int index) const",5, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::IsItemCheckedAt( int index) const",3, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::IsEnabledAt( int index) const",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::IsVisibleAt( int index) const",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::OnMenuWillClose()",3, 31, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::OnMenuWillShow()",3, 30, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"atom::api::Menu::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",26, 71, 26, 0
repos/cpp/electron/atom/browser/api/atom_api_menu.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",15, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"mate::Converter<download::DownloadItem::DownloadState>::ToV8( v8 :: Isolate * isolate , download :: DownloadItem :: DownloadState state)",22, 53, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::DownloadItem( v8 :: Isolate * isolate , download :: DownloadItem * download_item)",7, 66, 27, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::~DownloadItem()",10, 60, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::OnDownloadUpdated( download :: DownloadItem * item)",10, 72, 50, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::OnDownloadDestroyed( download :: DownloadItem * download_item)",5, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::Pause()",3, 29, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::IsPaused() const",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::Resume()",3, 30, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::CanResume() const",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::Cancel()",3, 32, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetReceivedBytes() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetTotalBytes() const",3, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetMimeType() const",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::HasUserGesture() const",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetFilename() const",7, 78, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetContentDisposition() const",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetURL() const",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetURLChain() const",3, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetState() const",3, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::IsDone() const",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::SetSavePath( const base :: FilePath & path)",3, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetSavePath() const",3, 51, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetSaveDialogOptions() const",3, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::SetSaveDialogOptions( const file_dialog :: DialogSettings & options)",4, 50, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetLastModifiedTime() const",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetETag() const",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::GetStartTime() const",3, 53, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",28, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"atom::api::DownloadItem::Create( v8 :: Isolate * isolate , download :: DownloadItem * item)",13, 80, 48, 0
repos/cpp/electron/atom/browser/api/atom_api_download_item.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 77, 11, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"mate::Converter<atom::NotificationAction>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , atom :: NotificationAction * out)",13, 54, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"mate::Converter<atom::NotificationAction>::ToV8( v8 :: Isolate * isolate , atom :: NotificationAction val)",7, 68, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::Notification( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper , mate :: Arguments * args)",25, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::~Notification()",4, 42, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::New( mate :: Arguments * args)",7, 72, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetTitle() const",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetSubtitle() const",3, 51, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetBody() const",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetSilent() const",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetHasReply() const",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetReplyPlaceholder() const",3, 59, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetSound() const",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetActions() const",3, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::GetCloseButtonText() const",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetTitle( const base :: string16 & new_title)",3, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetSubtitle( const base :: string16 & new_subtitle)",3, 69, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetBody( const base :: string16 & new_body)",3, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetSilent( bool new_silent)",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetHasReply( bool new_has_reply)",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetReplyPlaceholder( const base :: string16 & new_placeholder)",3, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetSound( const base :: string16 & new_sound)",3, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetActions( const std :: vector<atom::NotificationAction> & actions)",4, 60, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::SetCloseButtonText( const base :: string16 & text)",3, 68, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::NotificationAction( int index)",3, 51, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::NotificationClick()",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::NotificationReplied( const std :: string & reply)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::NotificationDisplayed()",3, 45, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::NotificationDestroyed()",1, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::NotificationClosed()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::Close()",6, 30, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::Show()",21, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::IsSupported()",4, 69, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"atom::api::Notification::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",22, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_notification.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",13, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"mate::Converter<base::Time>::ToV8( v8 :: Isolate * isolate , const base :: Time & val)",9, 69, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::AutoUpdater( v8 :: Isolate * isolate)",4, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::~AutoUpdater()",3, 51, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnError( const std :: string & message)",10, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnError( const std :: string & message , const int code , const std :: string & domain)",17, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnCheckingForUpdate()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnUpdateAvailable()",3, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnUpdateNotAvailable()",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnUpdateDownloaded( const std :: string & release_notes , const std :: string & release_name , const base :: Time & release_date , const std :: string & url)",8, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::OnWindowAllClosed()",3, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::SetFeedURL( mate :: Arguments * args)",3, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::QuitAndInstall()",13, 66, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::Create( v8 :: Isolate * isolate)",3, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"atom::api::AutoUpdater::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_auto_updater.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"mate::Converter<atom::api::DesktopCapturer::Source>::ToV8( v8 :: Isolate * isolate , const atom :: api :: DesktopCapturer :: Source & source)",19, 81, 14, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::DesktopCapturer( v8 :: Isolate * isolate)",3, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::~DesktopCapturer()",1, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::StartHandling( bool capture_window , bool capture_screen , const gfx :: Size & thumbnail_size , bool fetch_window_icons)",48, 79, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::OnSourceAdded( DesktopMediaList * list , int index)",1, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::OnSourceRemoved( DesktopMediaList * list , int index)",1, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::OnSourceMoved( DesktopMediaList * list , int old_index , int new_index)",3, 60, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::OnSourceNameChanged( DesktopMediaList * list , int index)",1, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::OnSourceThumbnailChanged( DesktopMediaList * list , int index)",2, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::OnSourceUnchanged( DesktopMediaList * list)",3, 66, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::ShouldScheduleNextRefresh( DesktopMediaList * list)",4, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::UpdateSourcesList( DesktopMediaList * list)",62, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::Create( v8 :: Isolate * isolate)",3, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"atom::api::DesktopCapturer::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",7, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_desktop_capturer.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_menu_views.cc,"atom::api::MenuViews::MenuViews( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper)",2, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu_views.cc,"atom::api::MenuViews::PopupAt( TopLevelWindow * window , int x , int y , int positioning_item , const base :: Closure & callback)",33, 78, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_menu_views.cc,"atom::api::MenuViews::ClosePopupAt( int32_t window_id)",13, 72, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_menu_views.cc,"atom::api::MenuViews::OnClosed( int32_t window_id , base :: Closure callback)",4, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_menu_views.cc,"atom::api::Menu::New( mate :: Arguments * args)",3, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::GlobalShortcut( v8 :: Isolate * isolate)",3, 55, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::~GlobalShortcut()",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::OnKeyPressed( const ui :: Accelerator & accelerator)",10, 81, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::RegisterAll( const std :: vector<ui::Accelerator> & accelerators , const base :: Closure & callback)",17, 78, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::Register( const ui :: Accelerator & accelerator , const base :: Closure & callback)",10, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::Unregister( const ui :: Accelerator & accelerator)",8, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::UnregisterSome( const std :: vector<ui::Accelerator> & accelerators)",6, 56, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::IsRegistered( const ui :: Accelerator & accelerator)",3, 72, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::UnregisterAll()",4, 71, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::Create( v8 :: Isolate * isolate)",3, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"atom::api::GlobalShortcut::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",10, 81, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_global_shortcut.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_dialog.cc,"ShowMessageBox( int type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const std :: string & checkbox_label , bool checkbox_checked , const gfx :: ImageSkia & icon , atom :: NativeWindow * window , mate :: Arguments * args)",28, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_dialog.cc,"ShowOpenDialog( const file_dialog :: DialogSettings & settings , mate :: Arguments * args)",13, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_dialog.cc,"ShowSaveDialog( const file_dialog :: DialogSettings & settings , mate :: Arguments * args)",13, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_dialog.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",14, 60, 17, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"mate::Converter<atom::api::Cookies::Error>::ToV8( v8 :: Isolate * isolate , atom :: api :: Cookies :: Error val)",7, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"mate::Converter<net::CanonicalCookie>::ToV8( v8 :: Isolate * isolate , const net :: CanonicalCookie & val)",15, 76, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"mate::Converter<network::mojom::CookieChangeCause>::ToV8( v8 :: Isolate * isolate , const network :: mojom :: CookieChangeCause & val)",19, 65, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::MatchesDomain( std :: string filter , const std :: string & domain)",19, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::MatchesCookie( const base :: DictionaryValue * filter , const net :: CanonicalCookie & cookie)",16, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::GetCookieStore( scoped_refptr<net::URLRequestContextGetter> getter)",4, 58, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::RunCallbackInUI( const base :: Closure & callback)",3, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::FilterCookies( std :: unique_ptr<base::DictionaryValue> filter , const Cookies :: GetCallback & callback , const net :: CookieList & list)",10, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::GetCookiesOnIO( scoped_refptr<net::URLRequestContextGetter> getter , std :: unique_ptr<base::DictionaryValue> filter , const Cookies :: GetCallback & callback)",16, 73, 53, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::RemoveCookieOnIOThread( scoped_refptr<net::URLRequestContextGetter> getter , const GURL & url , const std :: string & name , const base :: Closure & callback)",7, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::OnSetCookie( const Cookies :: SetCallback & callback , bool success)",4, 75, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::FlushCookieStoreOnIOThread( scoped_refptr<net::URLRequestContextGetter> getter , const base :: Closure & callback)",5, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::SetCookieOnIO( scoped_refptr<net::URLRequestContextGetter> getter , std :: unique_ptr<base::DictionaryValue> details , const Cookies :: SetCallback & callback)",60, 80, 10, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::Cookies( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",7, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::~Cookies()",1, 23, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::Get( const base :: DictionaryValue & filter , const GetCallback & callback)",10, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::Remove( const GURL & url , const std :: string & name , const base :: Closure & callback)",9, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::Set( const base :: DictionaryValue & details , const SetCallback & callback)",10, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::FlushStore( const base :: Closure & callback)",7, 76, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::OnCookieChanged( const CookieDetails * details)",3, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::Create( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",4, 77, 38, 0
repos/cpp/electron/atom/browser/api/atom_api_cookies.cc,"atom::api::Cookies::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 74, 29, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::FrameSubscriber( v8 :: Isolate * isolate , content :: WebContents * web_contents , const FrameCaptureCallback & callback , bool only_dirty)",13, 71, 33, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::AttachToHost( content :: RenderWidgetHost * host)",21, 73, 2, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::DetachFromHost()",6, 41, 0, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::RenderViewCreated( content :: RenderViewHost * host)",4, 73, 0, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::RenderViewDeleted( content :: RenderViewHost * host)",5, 73, 0, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::RenderViewHostChanged( content :: RenderViewHost * old_host , content :: RenderViewHost * new_host)",7, 81, 44, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::OnFrameCaptured( base :: ReadOnlySharedMemoryRegion data , :: media :: mojom :: VideoFrameInfoPtr info , const gfx :: Rect & update_rect , const gfx :: Rect & content_rect , viz :: mojom :: FrameSinkVideoConsumerFrameCallbacksPtr callbacks)",58, 81, 6, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::OnStopped()",1, 37, 0, 0
repos/cpp/electron/atom/browser/api/frame_subscriber.cc,"atom::api::FrameSubscriber::Done( const gfx :: Rect & damage , const SkBitmap & frame)",25, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"mate::Converter<URLPattern>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , URLPattern * out)",9, 61, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::CallNetworkDelegateMethod( URLRequestContextGetter * url_request_context_getter , Method method , Event type , URLPatterns patterns , Listener listener)",12, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::WebRequest( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",5, 60, 23, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::~WebRequest()",1, 29, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::SetSimpleListener( mate :: Arguments * args)",4, 64, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::SetResponseListener( mate :: Arguments * args)",4, 66, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::SetListener( Method method , Event type , mate :: Arguments * args)",25, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::Create( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",5, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_request.cc,"atom::api::WebRequest::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",27, 81, 40, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::SystemPreferences( v8 :: Isolate * isolate)",6, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::~SystemPreferences()",5, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::IsDarkMode()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::IsInvertedColorScheme()",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::IsHighContrastColorScheme()",3, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::Create( v8 :: Isolate * isolate)",4, 70, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"atom::api::SystemPreferences::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",49, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",10, 71, 11, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::GPUInfoEnumerator()",2, 75, 4, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::~GPUInfoEnumerator()",1, 43, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::AddInt64( const char * name , int64_t value)",3, 68, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::AddInt( const char * name , int value)",3, 62, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::AddString( const char * name , const std :: string & value)",4, 80, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::AddBool( const char * name , bool value)",3, 64, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::AddTimeDeltaInSecondsF( const char * name , const base :: TimeDelta & value)",4, 79, 47, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::BeginGPUDevice()",4, 55, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::EndGPUDevice()",16, 62, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::BeginVideoDecodeAcceleratorSupportedProfile()",4, 72, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::EndVideoDecodeAcceleratorSupportedProfile()",7, 71, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::BeginVideoEncodeAcceleratorSupportedProfile()",4, 72, 0, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::EndVideoEncodeAcceleratorSupportedProfile()",7, 71, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::BeginAuxAttributes()",4, 55, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::EndAuxAttributes()",6, 67, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::BeginOverlayCapability()",4, 55, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::EndOverlayCapability()",6, 71, 2, 0
repos/cpp/electron/atom/browser/api/gpu_info_enumerator.cc,"atom::GPUInfoEnumerator::GetDictionary()",3, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_net.cc,"atom::api::Net::Net( v8 :: Isolate * isolate)",3, 33, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_net.cc,"atom::api::Net::~Net()",1, 15, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_net.cc,"atom::api::Net::Create( v8 :: Isolate * isolate)",3, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net.cc,"atom::api::Net::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",6, 71, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net.cc,"atom::api::Net::URLRequest( v8 :: Isolate * isolate)",3, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_net.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",12, 68, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"WebContentsViewRelay::~WebContentsViewRelay()",1, 38, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"WebContentsViewRelay::WebContentsViewRelay( content :: WebContents * contents)",1, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"atom::api::WebContentsView::WebContentsView( v8 :: Isolate * isolate , mate :: Handle<WebContents> web_contents , InspectableWebContents * iwc)",21, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"atom::api::WebContentsView::~WebContentsView()",7, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"atom::api::WebContentsView::WebContentsDestroyed()",4, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"atom::api::WebContentsView::New( mate :: Arguments * args , mate :: Handle<WebContents> web_contents)",25, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"atom::api::WebContentsView::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",3, 50, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_view.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 80, 34, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::GetInstance()",3, 49, 2, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::GPUInfoManager()",4, 70, 4, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::~GPUInfoManager()",3, 68, 2, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::NeedsCompleteGpuInfoCollection() const",10, 76, 10, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::ProcessCompleteInfo()",9, 74, 2, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::OnGpuInfoUpdate()",8, 70, 6, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::CompleteInfoFetcher( scoped_refptr<util::Promise> promise)",9, 81, 0, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::FetchCompleteInfo( scoped_refptr<util::Promise> promise)",5, 79, 0, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::FetchBasicInfo( scoped_refptr<util::Promise> promise)",5, 76, 0, 0
repos/cpp/electron/atom/browser/api/gpuinfo_manager.cc,"atom::GPUInfoManager::EnumerateGPUInfo( gpu :: GPUInfo gpu_info) const",6, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::Debugger( v8 :: Isolate * isolate , content :: WebContents * web_contents)",4, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::~Debugger()",1, 25, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::AgentHostClosed( DevToolsAgentHost * agent_host)",6, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::DispatchProtocolMessage( DevToolsAgentHost * agent_host , const std :: string & message)",42, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::RenderFrameHostChanged( content :: RenderFrameHost * old_rfh , content :: RenderFrameHost * new_rfh)",8, 77, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::Attach( mate :: Arguments * args)",23, 74, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::IsAttached()",3, 51, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::Detach()",6, 38, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::SendCommand( mate :: Arguments * args)",27, 72, 16, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::ClearPendingRequests()",9, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::Create( v8 :: Isolate * isolate , content :: WebContents * web_contents)",4, 78, 40, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"atom::api::Debugger::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 75, 30, 0
repos/cpp/electron/atom/browser/api/atom_api_debugger.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 74, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::NetLog( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",7, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::~NetLog()",3, 41, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::StartLogging( mate :: Arguments * args)",19, 76, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::GetLoggingState() const",9, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::IsCurrentlyLogging() const",4, 68, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::GetCurrentlyLoggingPath() const",14, 74, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::StopLogging( mate :: Arguments * args)",14, 59, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::OnNewState( const base :: DictionaryValue & state)",14, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::Create( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",4, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_net_log.cc,"atom::api::NetLog::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::FindById( T * container , int id)",6, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::MetricsToArray( uint32_t metrics)",12, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::Screen( v8 :: Isolate * isolate , display :: Screen * screen)",5, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::~Screen()",3, 33, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::GetCursorScreenPoint()",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::GetPrimaryDisplay()",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::GetAllDisplays()",3, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::GetDisplayNearestPoint( const gfx :: Point & point)",3, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::GetDisplayMatching( const gfx :: Rect & match_rect)",3, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::ScreenToDIPRect( atom :: NativeWindow * window , const gfx :: Rect & rect)",5, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::DIPToScreenRect( atom :: NativeWindow * window , const gfx :: Rect & rect)",5, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::OnDisplayAdded( const display :: Display & new_display)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::OnDisplayRemoved( const display :: Display & old_display)",3, 69, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::OnDisplayMetricsChanged( const display :: Display & display , uint32_t changed_metrics)",4, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::Create( v8 :: Isolate * isolate)",16, 76, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"atom::api::Screen::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",16, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_screen.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 70, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_osr.cc,"atom::api::WebContents::GetOffScreenWebContentsView() const",9, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_web_contents_osr.cc,"atom::api::WebContents::GetOffScreenRenderWidgetHostView() const",9, 79, 0, 0
repos/cpp/electron/atom/browser/api/event_emitter.cc,"mate::PreventDefault( mate :: Arguments * args)",4, 59, 2, 0
repos/cpp/electron/atom/browser/api/event_emitter.cc,"mate::CreateEventObject( v8 :: Isolate * isolate)",12, 73, 8, 0
repos/cpp/electron/atom/browser/api/event_emitter.cc,"mate::internal::CreateJSEvent( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object , content :: RenderFrameHost * sender , IPC :: Message * message)",19, 77, 4, 0
repos/cpp/electron/atom/browser/api/event_emitter.cc,"mate::internal::CreateCustomEvent( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object , v8 :: Local<v8::Object> custom_event)",8, 78, 40, 0
repos/cpp/electron/atom/browser/api/event_emitter.cc,"mate::internal::CreateEventFromFlags( v8 :: Isolate * isolate , int flags)",8, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"mate::Converter<ui::IdleState>::ToV8( v8 :: Isolate * isolate , const ui :: IdleState & in)",14, 62, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::PowerMonitor( v8 :: Isolate * isolate)",14, 74, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::~PowerMonitor()",3, 51, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::ShouldShutdown()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::BlockShutdown()",3, 39, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::UnblockShutdown()",3, 41, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::OnPowerStateChange( bool on_battery_power)",6, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::OnSuspend()",3, 33, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::OnResume()",3, 32, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::QuerySystemIdleState( v8 :: Isolate * isolate , int idle_threshold , const ui :: IdleCallback & callback)",10, 76, 40, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::QuerySystemIdleTime( const ui :: IdleTimeCallback & callback)",3, 79, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::Create( v8 :: Isolate * isolate)",10, 73, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"atom::api::PowerMonitor::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",13, 79, 34, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",10, 66, 11, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::GetStandardSchemes()",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::RegisterStandardSchemes( const std :: vector<std::string> & schemes , mate :: Arguments * args)",27, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::Protocol( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",4, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::~Protocol()",1, 25, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::RegisterServiceWorkerSchemes( const std :: vector<std::string> & schemes)",4, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::UnregisterProtocol( const std :: string & scheme , mate :: Arguments * args)",12, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::UnregisterProtocolInIO( scoped_refptr<URLRequestContextGetter> request_context_getter , const std :: string & scheme)",9, 67, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::IsProtocolHandled( const std :: string & scheme , const BooleanCallback & callback)",10, 78, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::IsProtocolHandledInIO( scoped_refptr<URLRequestContextGetter> request_context_getter , const std :: string & scheme)",5, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::UninterceptProtocol( const std :: string & scheme , mate :: Arguments * args)",12, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::UninterceptProtocolInIO( scoped_refptr<URLRequestContextGetter> request_context_getter , const std :: string & scheme)",7, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::OnIOCompleted( const CompletionCallback & callback , ProtocolError error)",16, 74, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::ErrorCodeToString( ProtocolError error)",16, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::Create( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",4, 79, 40, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"atom::api::Protocol::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",30, 75, 30, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"RegisterStandardSchemes( const std :: vector<std::string> & schemes , mate :: Arguments * args)",11, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_protocol.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 72, 2, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::Event( v8 :: Isolate * isolate)",3, 37, 0, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::~Event()",1, 19, 0, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::SetSenderAndMessage( content :: RenderFrameHost * sender , IPC :: Message * message)",9, 66, 0, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::RenderFrameDeleted( content :: RenderFrameHost * rfh)",6, 64, 0, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::RenderFrameHostChanged( content :: RenderFrameHost * old_rfh , content :: RenderFrameHost * new_rfh)",5, 72, 35, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::FrameDeleted( content :: RenderFrameHost * rfh)",6, 58, 0, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::PreventDefault( v8 :: Isolate * isolate)",3, 81, 2, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::SendReply( const base :: ListValue & result)",10, 69, 2, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::Create( v8 :: Isolate * isolate)",3, 58, 2, 0
repos/cpp/electron/atom/browser/api/event.cc,"mate::Event::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",7, 72, 27, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::UpdateHighContrastColorScheme()",8, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::IsAeroGlassEnabled()",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::IsHighContrastColorScheme()",5, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::hexColorDWORDToRGBA( DWORD color)",6, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::GetAccentColor()",10, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::GetColor( const std :: string & color , mate :: Arguments * args)",70, 66, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::InitializeWindow()",29, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::WndProcStatic( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",11, 69, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::WndProc( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",17, 79, 13, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::OnSysColorChange()",15, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_system_preferences_win.cc,"atom::api::SystemPreferences::OnFinishLaunching( const base :: DictionaryValue & launch_info)",4, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::IsWebContents( v8 :: Isolate * isolate , content :: RenderProcessHost * process)",12, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::RenderProcessPreferences::RenderProcessPreferences( v8 :: Isolate * isolate , const atom :: RenderProcessPreferences :: Predicate & predicate)",6, 64, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::RenderProcessPreferences::~RenderProcessPreferences()",1, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::RenderProcessPreferences::AddEntry( const base :: DictionaryValue & entry)",3, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::RenderProcessPreferences::RemoveEntry( int id)",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::RenderProcessPreferences::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"atom::api::RenderProcessPreferences::ForAllWebContents( v8 :: Isolate * isolate)",5, 80, 32, 0
repos/cpp/electron/atom/browser/api/atom_api_render_process_preferences.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 75, 17, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"mate::Converter<atom::AutoResizeFlags>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , atom :: AutoResizeFlags * auto_resize_flags)",21, 68, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::BrowserView( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper , const mate :: Dictionary & options)",5, 60, 25, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::Init( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper , const mate :: Dictionary & options)",18, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::~BrowserView()",7, 80, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::WebContentsDestroyed()",4, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::New( mate :: Arguments * args)",18, 71, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::ID() const",3, 34, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::SetAutoResize( AutoResizeFlags flags)",3, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::SetBounds( const gfx :: Rect & bounds)",3, 55, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::SetBackgroundColor( const std :: string & color_name)",3, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::GetWebContents()",7, 62, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"atom::api::BrowserView::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",11, 78, 33, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_view.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",16, 78, 25, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"mate::Converter<atom::TaskbarHost::ThumbarButton>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , atom :: TaskbarHost :: ThumbarButton * out)",11, 62, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::ToBuffer( v8 :: Isolate * isolate , void * val , int size)",7, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::TopLevelWindow( v8 :: Isolate * isolate , const mate :: Dictionary & options)",30, 75, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::TopLevelWindow( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper , const mate :: Dictionary & options)",8, 64, 31, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::~TopLevelWindow()",8, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::InitWith( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper)",14, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::WillCloseWindow( bool * prevent_default)",5, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowClosed()",21, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowEndSession()",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowBlur()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowFocus()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowShow()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowHide()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowMaximize()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowUnmaximize()",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowMinimize()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowRestore()",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowWillResize( const gfx :: Rect & new_bounds , bool * prevent_default)",6, 69, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowResize()",3, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowWillMove( const gfx :: Rect & new_bounds , bool * prevent_default)",6, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowMove()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowMoved()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowEnterFullScreen()",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowLeaveFullScreen()",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowScrollTouchBegin()",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowScrollTouchEnd()",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowSwipe( const std :: string & direction)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowSheetBegin()",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowSheetEnd()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowEnterHtmlFullScreen()",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowLeaveHtmlFullScreen()",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowAlwaysOnTopChanged()",3, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnExecuteAppCommand( const std :: string & command_name)",3, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnTouchBarItemResult( const std :: string & item_id , const base :: DictionaryValue & details)",5, 52, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnNewWindowForTab()",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::OnWindowMessage( UINT message , WPARAM w_param , LPARAM l_param)",9, 76, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetContentView( mate :: Handle<View> view)",4, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Close()",3, 31, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Focus()",3, 31, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Blur()",3, 30, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsFocused()",3, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Show()",3, 30, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::ShowInactive()",6, 54, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Hide()",3, 30, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsVisible()",3, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsEnabled()",3, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetEnabled( bool enable)",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Maximize()",3, 34, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Unmaximize()",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMaximized()",3, 37, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Minimize()",3, 34, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Restore()",3, 33, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMinimized()",3, 37, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetFullScreen( bool fullscreen)",3, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsFullscreen()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetBounds( const gfx :: Rect & bounds , mate :: Arguments * args)",5, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetBounds()",3, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsNormal()",3, 34, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetNormalBounds()",3, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetContentBounds( const gfx :: Rect & bounds , mate :: Arguments * args)",6, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetContentBounds()",3, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetSize( int width , int height , mate :: Arguments * args)",7, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetSize()",7, 45, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetContentSize( int width , int height , mate :: Arguments * args)",7, 62, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetContentSize()",7, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMinimumSize( int width , int height)",3, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetMinimumSize()",7, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMaximumSize( int width , int height)",3, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetMaximumSize()",7, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetSheetOffset( double offsetY , mate :: Arguments * args)",5, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetResizable( bool resizable)",3, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsResizable()",3, 37, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMovable( bool movable)",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMovable()",3, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMinimizable( bool minimizable)",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMinimizable()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMaximizable( bool maximizable)",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMaximizable()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetFullScreenable( bool fullscreenable)",3, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsFullScreenable()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetClosable( bool closable)",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsClosable()",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetAlwaysOnTop( bool top , mate :: Arguments * args)",12, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsAlwaysOnTop()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::Center()",3, 32, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetPosition( int x , int y , mate :: Arguments * args)",5, 72, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetPosition()",7, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::MoveTop()",3, 33, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetTitle( const std :: string & title)",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetTitle()",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::FlashFrame( bool flash)",3, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetSkipTaskbar( bool skip)",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetSimpleFullScreen( bool simple_fullscreen)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsSimpleFullScreen()",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetKiosk( bool kiosk)",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsKiosk()",3, 33, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetBackgroundColor( const std :: string & color_name)",4, 73, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetHasShadow( bool has_shadow)",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::HasShadow()",3, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetOpacity( const double opacity)",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetOpacity()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetShape( const std :: vector<gfx::Rect> & rects)",3, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetRepresentedFilename( const std :: string & filename)",3, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetRepresentedFilename()",3, 55, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetDocumentEdited( bool edited)",3, 54, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsDocumentEdited()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetIgnoreMouseEvents( bool ignore , mate :: Arguments * args)",6, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetContentProtection( bool enable)",3, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetFocusable( bool focusable)",3, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMenu( v8 :: Isolate * isolate , v8 :: Local<v8::Value> value)",16, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetParentWindow( v8 :: Local<v8::Value> value , mate :: Arguments * args)",21, 72, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetBrowserView( v8 :: Local<v8::Value> value)",12, 69, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetNativeWindowHandle()",7, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetProgressBar( double progress , mate :: Arguments * args)",17, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetOverlayIcon( const gfx :: Image & overlay , const std :: string & description)",4, 70, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetVisibleOnAllWorkspaces( bool visible , mate :: Arguments * args)",8, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsVisibleOnAllWorkspaces()",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetAutoHideCursor( bool auto_hide)",3, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetVibrancy( v8 :: Isolate * isolate , v8 :: Local<v8::Value> value)",5, 63, 33, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetTouchBar( const std :: vector<mate::PersistentDictionary> & items)",4, 60, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::RefreshTouchBarItem( const std :: string & item_id)",3, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetEscapeTouchBarItem( const mate :: PersistentDictionary & item)",4, 46, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SelectPreviousTab()",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SelectNextTab()",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::MergeAllWindows()",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::MoveTabToNewWindow()",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::ToggleTabBar()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::AddTabbedWindow( NativeWindow * window , mate :: Arguments * args)",5, 81, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetWindowButtonVisibility( bool visible , mate :: Arguments * args)",6, 72, 47, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetAutoHideMenuBar( bool auto_hide)",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMenuBarAutoHide()",3, 43, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetMenuBarVisibility( bool visible)",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsMenuBarVisible()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetAspectRatio( double aspect_ratio , mate :: Arguments * args)",6, 61, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::PreviewFile( const std :: string & path , mate :: Arguments * args)",7, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::CloseFilePreview()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetContentView() const",6, 64, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetParentWindow() const",6, 65, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetChildWindows() const",3, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetBrowserView() const",7, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsModal() const",3, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetThumbarButtons( mate :: Arguments * args)",14, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetIcon( mate :: Handle<NativeImage> icon)",10, 63, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::HookWindowMessage( UINT message , const MessageCallback & callback)",5, 74, 39, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::UnhookWindowMessage( UINT message)",6, 57, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::IsWindowMessageHooked( UINT message)",3, 59, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::UnhookAllWindowMessages()",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetThumbnailClip( const gfx :: Rect & region)",5, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetThumbnailToolTip( const std :: string & tooltip)",5, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::SetAppDetails( const mate :: Dictionary & options)",17, 75, 34, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::GetID() const",3, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::ResetBrowserView()",12, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::RemoveFromParentChildWindows()",12, 69, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::New( mate :: Arguments * args)",6, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"atom::api::TopLevelWindow::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",140, 81, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_top_level_window.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",17, 80, 24, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window_views.cc,"atom::api::BrowserWindow::UpdateDraggableRegions( content :: RenderFrameHost * rfh , const std :: vector<DraggableRegion> & regions)",8, 69, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"mate::Converter<scoped_refptr<constnet::IOBufferWithSize>>::ToV8( v8 :: Isolate * isolate , scoped_refptr<const net::IOBufferWithSize> buffer)",6, 71, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"mate::Converter<scoped_refptr<constnet::IOBufferWithSize>>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , scoped_refptr<const net::IOBufferWithSize> * out)",25, 72, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::StateBase<Flags>::StateBase( Flags initialState)",2, 60, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::StateBase<Flags>::SetFlag( Flags flag)",4, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::StateBase<Flags>::operator ==( Flags flag) const",3, 66, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::StateBase<Flags>::IsFlagSet( Flags flag) const",3, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::RequestState()",2, 51, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::NotStarted() const",3, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::Started() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::Finished() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::Canceled() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::Failed() const",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RequestState::Closed() const",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseState::ResponseState()",2, 52, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseState::NotStarted() const",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseState::Started() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseState::Ended() const",3, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseState::Failed() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::GetUploadProgress( v8 :: Isolate * isolate)",11, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::URLRequest( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper)",3, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::~URLRequest()",8, 66, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::New( mate :: Arguments * args)",29, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",23, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::NotStarted() const",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Finished() const",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Canceled() const",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Write( scoped_refptr<const net::IOBufferWithSize> buffer , bool is_last)",24, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Cancel()",21, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::FollowRedirect()",10, 62, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::SetExtraHeader( const std :: string & name , const std :: string & value)",22, 61, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RemoveExtraHeader( const std :: string & name)",11, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::SetChunkedUpload( bool is_chunked_upload)",11, 60, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::SetLoadFlags( int flags)",11, 45, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::OnReceivedRedirect( int status_code , const std :: string & method , const GURL & url , scoped_refptr<net::HttpResponseHeaders> response_headers)",17, 64, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::OnAuthenticationRequired( scoped_refptr<const net::AuthChallengeInfo> auth_info)",14, 74, 7, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::OnResponseStarted( scoped_refptr<net::HttpResponseHeaders> response_headers)",11, 64, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::OnResponseData( scoped_refptr<const net::IOBufferWithSize> buffer)",13, 67, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::OnResponseCompleted()",11, 67, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::OnError( const std :: string & error , bool isRequestError)",11, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::StatusCode() const",6, 47, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::StatusMessage() const",7, 49, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::RawResponseHeaders() const",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseHttpVersionMajor() const",6, 62, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::ResponseHttpVersionMinor() const",6, 62, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Close()",17, 65, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Pin()",5, 45, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::Unpin()",3, 27, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::EmitRequestEvent( Args ... args)",4, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_url_request.cc,"atom::api::URLRequest::EmitResponseEvent( Args ... args)",4, 76, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_content_tracing.cc,"mate::Converter<base::trace_event::TraceConfig>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , base :: trace_event :: TraceConfig * out)",13, 75, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_content_tracing.cc,"GetTraceDataEndpoint( const base :: FilePath & path , const CompletionCallback & callback)",10, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_content_tracing.cc,"StopRecording( const base :: FilePath & path , const CompletionCallback & callback)",5, 57, 19, 0
repos/cpp/electron/atom/browser/api/atom_api_content_tracing.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",15, 77, 17, 0
repos/cpp/electron/atom/browser/api/atom_api_event.cc,"CreateWithSender( v8 :: Isolate * isolate , v8 :: Local<v8::Object> sender)",4, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_event.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",7, 57, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"mate::Converter<device::mojom::WakeLockType>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , device :: mojom :: WakeLockType * out)",14, 65, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::PowerSaveBlocker( v8 :: Isolate * isolate)",5, 78, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::~PowerSaveBlocker()",1, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::UpdatePowerSaveBlocker()",33, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::GetWakeLock()",16, 76, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::Start( device :: mojom :: WakeLockType type)",6, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::Stop( int id)",5, 49, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::IsStarted( int id)",3, 62, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::Create( v8 :: Isolate * isolate)",3, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"atom::api::PowerSaveBlocker::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_power_save_blocker.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"GetStorageMask( const std :: vector<std::string> & storage_types)",25, 74, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"GetQuotaMask( const std :: vector<std::string> & quota_types)",13, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"GetAuthSchemeFromString( const std :: string & scheme)",11, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"SetUserAgentInIO( scoped_refptr<net::URLRequestContextGetter> getter , const std :: string & accept_lang , const std :: string & user_agent)",8, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"mate::Converter<ClearStorageDataOptions>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , ClearStorageDataOptions * out)",14, 53, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"mate::Converter<ClearAuthCacheOptions>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , ClearAuthCacheOptions * out)",16, 58, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"mate::Converter<atom::VerifyRequestParams>::ToV8( v8 :: Isolate * isolate , atom :: VerifyRequestParams val)",9, 68, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::RunCallbackInUI( const base :: Callback<void()> & callback)",3, 67, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::RunCallbackInUI( const base :: Callback<void(T...)> & callback , T ... result)",4, 80, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::OnGetBackend( disk_cache :: Backend ** backend_ptr , Session :: CacheAction action , const net :: CompletionCallback & callback , int result)",26, 73, 10, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::DoCacheActionInIO( const scoped_refptr<net::URLRequestContextGetter> & context_getter , Session :: CacheAction action , const net :: CompletionCallback & callback)",18, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::SetCertVerifyProcInIO( const scoped_refptr<net::URLRequestContextGetter> & context_getter , const AtomCertVerifier :: VerifyProc & proc)",7, 71, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::ClearHostResolverCacheInIO( const scoped_refptr<net::URLRequestContextGetter> & context_getter , const base :: Closure & callback)",12, 71, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::ClearAuthCacheInIO( const scoped_refptr<net::URLRequestContextGetter> & context_getter , const ClearAuthCacheOptions & options , const base :: Closure & callback)",26, 77, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::AllowNTLMCredentialsForDomainsInIO( const scoped_refptr<net::URLRequestContextGetter> & context_getter , const std :: string & domains)",12, 71, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::OnClearStorageDataDone( const base :: Closure & callback)",4, 61, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::DownloadIdCallback( content :: DownloadManager * download_manager , const base :: FilePath & path , const std :: vector<GURL> & url_chain , const std :: string & mime_type , int64_t offset , int64_t length , const std :: string & last_modified , const std :: string & etag , const base :: Time & start_time , uint32_t id)",19, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::DestroyGlobalHandle( v8 :: Isolate * isolate , const v8 :: Global<v8::Value> & global_handle)",16, 71, 25, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::Session( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",12, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::~Session()",9, 65, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::OnDownloadCreated( content :: DownloadManager * manager , download :: DownloadItem * item)",18, 70, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::ResolveProxy( const GURL & url , const ResolveProxyHelper :: ResolveProxyCallback & callback)",5, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::DoCacheAction( const net :: CompletionCallback & callback)",7, 76, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::ClearStorageData( mate :: Arguments * args)",19, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::FlushStorageData()",5, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetProxy( const mate :: Dictionary & options , const base :: Closure & callback)",30, 81, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetDownloadPath( const base :: FilePath & path)",4, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::EnableNetworkEmulation( const mate :: Dictionary & options)",17, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::DisableNetworkEmulation()",7, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::WrapVerifyProc( base :: Callback<void(const VerifyRequestParams&request,base::Callback<void(int)>)> proc , const VerifyRequestParams & request , base :: OnceCallback<void(int)> cb)",6, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetCertVerifyProc( v8 :: Local<v8::Value> val , mate :: Arguments * args)",16, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetPermissionRequestHandler( v8 :: Local<v8::Value> val , mate :: Arguments * args)",11, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetPermissionCheckHandler( v8 :: Local<v8::Value> val , mate :: Arguments * args)",11, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::ClearHostResolverCache( mate :: Arguments * args)",10, 76, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::ClearAuthCache( mate :: Arguments * args)",15, 76, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::AllowNTLMCredentialsForDomains( const std :: string & domains)",7, 76, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetUserAgent( const std :: string & user_agent , mate :: Arguments * args)",13, 75, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::GetUserAgent()",3, 43, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::GetBlobData( const std :: string & uuid , const AtomBlobReader :: CompletionCallback & callback)",11, 80, 26, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::CreateInterruptedDownload( const mate :: Dictionary & options)",30, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::SetPreloads( const std :: vector<base::FilePath::StringType> & preloads)",6, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::GetPreloads() const",5, 75, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::Cookies( v8 :: Isolate * isolate)",7, 63, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::Protocol( v8 :: Isolate * isolate)",7, 75, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::WebRequest( v8 :: Isolate * isolate)",7, 77, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::NetLog( v8 :: Isolate * isolate)",7, 73, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::CreateFrom( v8 :: Isolate * isolate , AtomBrowserContext * browser_context)",16, 81, 42, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::FromPartition( v8 :: Isolate * isolate , const std :: string & partition , const base :: DictionaryValue & options)",16, 74, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"atom::api::Session::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",35, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"FromPartition( const std :: string & partition , mate :: Arguments * args)",10, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_session.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",10, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"mate::Converter<in_app_purchase::Payment>::ToV8( v8 :: Isolate * isolate , const in_app_purchase :: Payment & payment)",8, 78, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"mate::Converter<in_app_purchase::Transaction>::ToV8( v8 :: Isolate * isolate , const in_app_purchase :: Transaction & val)",14, 78, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"mate::Converter<in_app_purchase::Product>::ToV8( v8 :: Isolate * isolate , const in_app_purchase :: Product & val)",19, 74, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"atom::api::InAppPurchase::Create( v8 :: Isolate * isolate)",3, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"atom::api::InAppPurchase::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",13, 80, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"atom::api::InAppPurchase::InAppPurchase( v8 :: Isolate * isolate)",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"atom::api::InAppPurchase::~InAppPurchase()",1, 35, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"atom::api::InAppPurchase::PurchaseProduct( const std :: string & product_id , mate :: Arguments * args)",8, 68, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"atom::api::InAppPurchase::OnTransactionsUpdated( const std :: vector<in_app_purchase::Transaction> & transactions)",4, 69, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_in_app_purchase.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",12, 67, 11, 0
repos/cpp/electron/atom/browser/api/save_page_handler.cc,"atom::api::SavePageHandler::SavePageHandler( content :: WebContents * web_contents , const SavePageCallback & callback)",3, 69, 0, 0
repos/cpp/electron/atom/browser/api/save_page_handler.cc,"atom::api::SavePageHandler::~SavePageHandler()",1, 39, 0, 0
repos/cpp/electron/atom/browser/api/save_page_handler.cc,"atom::api::SavePageHandler::OnDownloadCreated( content :: DownloadManager * manager , download :: DownloadItem * item)",6, 78, 2, 0
repos/cpp/electron/atom/browser/api/save_page_handler.cc,"atom::api::SavePageHandler::Handle( const base :: FilePath & full_path , const content :: SavePageType & save_type)",19, 80, 2, 0
repos/cpp/electron/atom/browser/api/save_page_handler.cc,"atom::api::SavePageHandler::OnDownloadUpdated( download :: DownloadItem * item)",15, 72, 0, 0
repos/cpp/electron/atom/browser/api/save_page_handler.cc,"atom::api::SavePageHandler::Destroy( download :: DownloadItem * item)",4, 62, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::View( views :: View * view)",1, 47, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::View()",3, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::~View()",4, 20, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::SetLayoutManager( mate :: Handle<LayoutManager> layout_manager)",4, 74, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::AddChildView( mate :: Handle<View> child)",3, 52, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::AddChildViewAt( mate :: Handle<View> child , size_t index)",7, 80, 23, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::New( mate :: Arguments * args)",5, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"atom::api::View::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",10, 71, 26, 0
repos/cpp/electron/atom/browser/api/atom_api_view.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",13, 78, 31, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<Browser::UserTask>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , Browser :: UserTask * out)",16, 52, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListItem::Type>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , JumpListItem :: Type * out)",18, 50, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListItem::Type>::ToV8( v8 :: Isolate * isolate , JumpListItem :: Type val)",18, 61, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListItem>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , JumpListItem * out)",34, 56, 12, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListItem>::ToV8( v8 :: Isolate * isolate , const JumpListItem & val)",24, 68, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListCategory::Type>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , JumpListCategory :: Type * out)",20, 54, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListCategory::Type>::ToV8( v8 :: Isolate * isolate , JumpListCategory :: Type val)",22, 65, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListCategory>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , JumpListCategory * out)",25, 61, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<JumpListResult>::ToV8( v8 :: Isolate * isolate , JumpListResult val)",29, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<Browser::LoginItemSettings>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , Browser :: LoginItemSettings * out)",13, 56, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<Browser::LoginItemSettings>::ToV8( v8 :: Isolate * isolate , Browser :: LoginItemSettings val)",10, 69, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"mate::Converter<content::CertificateRequestResultType>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , content :: CertificateRequestResultType * out)",10, 67, 21, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::ProcessMetric::ProcessMetric( int type , base :: ProcessId pid , std :: unique_ptr<base::ProcessMetrics> metrics)",7, 78, 29, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::AppIdProcessIterator::AppIdProcessIterator()",1, 61, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::AppIdProcessIterator::IncludeEntry()",4, 64, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::GetIconSizeByString( const std :: string & size)",8, 68, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::GetPathConstant( const std :: string & name)",36, 55, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::NotificationCallbackWrapper( const base :: Callback<void(const base::CommandLine::StringVector&command_line,const base::FilePath&current_directory)> & callback , const base :: CommandLine :: StringVector & cmd , const base :: FilePath & cwd)",18, 76, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::GotPrivateKey( std :: shared_ptr<content::ClientCertificateDelegate> delegate , scoped_refptr<net::X509Certificate> cert , scoped_refptr<net::SSLPrivateKey> private_key)",5, 81, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::OnClientCertificateSelected( v8 :: Isolate * isolate , std :: shared_ptr<content::ClientCertificateDelegate> delegate , std :: shared_ptr<net::ClientCertIdentityList> identities , mate :: Arguments * args)",41, 73, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::PassLoginInformation( scoped_refptr<LoginHandler> login_handler , mate :: Arguments * args)",8, 69, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::ImportIntoCertStore( CertificateManagerModel * model , const base :: DictionaryValue & options)",25, 76, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::OnIconDataAvailable( v8 :: Isolate * isolate , scoped_refptr<util::Promise> promise , gfx :: Image * icon)",12, 65, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::App( v8 :: Isolate * isolate)",12, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::~App()",7, 64, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnBeforeQuit( bool * prevent_default)",5, 48, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnWillQuit( bool * prevent_default)",5, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnWindowAllClosed()",3, 32, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnQuit()",9, 61, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnOpenFile( bool * prevent_default , const std :: string & file_path)",5, 76, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnOpenURL( const std :: string & url)",3, 46, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnActivate( bool has_visible_windows)",3, 49, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnWillFinishLaunching()",3, 36, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnFinishLaunching( const base :: DictionaryValue & launch_info)",8, 72, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnPreMainMessageLoopRun()",6, 51, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnAccessibilitySupportChanged()",3, 74, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnWillContinueUserActivity( bool * prevent_default , const std :: string & type)",6, 64, 37, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnDidFailToContinueUserActivity( const std :: string & type , const std :: string & error)",4, 70, 42, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnContinueUserActivity( bool * prevent_default , const std :: string & type , const base :: DictionaryValue & user_info)",7, 75, 33, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnUserActivityWasContinued( const std :: string & type , const base :: DictionaryValue & user_info)",4, 79, 37, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnUpdateUserActivityState( bool * prevent_default , const std :: string & type , const base :: DictionaryValue & user_info)",7, 78, 36, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnNewWindowForTab()",3, 32, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnLogin( scoped_refptr<LoginHandler> login_handler , const base :: DictionaryValue & request_details)",17, 78, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::CanCreateWindow( content :: RenderFrameHost * opener , const GURL & opener_url , const GURL & opener_top_level_frame_url , const GURL & source_origin , content :: mojom :: WindowContainerType container_type , const GURL & target_url , const content :: Referrer & referrer , const std :: string & frame_name , WindowOpenDisposition disposition , const blink :: mojom :: WindowFeatures & features , const std :: vector<std::string> & additional_features , const scoped_refptr<network::ResourceRequestBody> & body , bool user_gesture , bool opener_suppressed , bool * no_javascript_access)",31, 80, 39, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::AllowCertificateError( content :: WebContents * web_contents , int cert_error , const net :: SSLInfo & ssl_info , const GURL & request_url , content :: ResourceType resource_type , bool strict_enforcement , bool expired_previous_decision , const base :: Callback<void(content::CertificateRequestResultType)> & callback)",20, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::SelectClientCertificate( content :: WebContents * web_contents , net :: SSLCertRequestInfo * cert_request_info , net :: ClientCertIdentityList identities , std :: unique_ptr<content::ClientCertificateDelegate> delegate)",33, 81, 11, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnGpuProcessCrashed( base :: TerminationStatus status)",4, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::BrowserChildProcessLaunchedAndConnected( const content :: ChildProcessData & data)",4, 61, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::BrowserChildProcessHostDisconnected( const content :: ChildProcessData & data)",4, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::BrowserChildProcessCrashed( const content :: ChildProcessData & data , const content :: ChildProcessTerminationInfo & info)",5, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::BrowserChildProcessKilled( const content :: ChildProcessData & data , const content :: ChildProcessTerminationInfo & info)",5, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::RenderProcessReady( content :: RenderProcessHost * host)",4, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::RenderProcessDisconnected( base :: ProcessId host_pid)",3, 64, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::ChildProcessLaunched( int process_type , base :: ProcessHandle handle)",14, 81, 60, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::ChildProcessDisconnected( base :: ProcessId pid)",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetAppPath() const",3, 41, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::SetAppPath( const base :: FilePath & app_path)",3, 55, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetPath( mate :: Arguments * args , const std :: string & name)",10, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::SetPath( mate :: Arguments * args , const std :: string & name , const base :: FilePath & path)",16, 78, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::SetDesktopName( const std :: string & desktop_name)",6, 71, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetLocale()",3, 52, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetLocaleCountryCode()",38, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnSecondInstance( const base :: CommandLine :: StringVector & cmd , const base :: FilePath & cwd)",4, 71, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::HasSingleInstanceLock() const",5, 42, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::RequestSingleInstanceLock()",24, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::ReleaseSingleInstanceLock()",6, 40, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::Relaunch( mate :: Arguments * js_args)",32, 74, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::DisableHardwareAcceleration( mate :: Arguments * args)",9, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::DisableDomainBlockingFor3DAPIs( mate :: Arguments * args)",10, 67, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::IsAccessibilitySupportEnabled()",4, 70, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::SetAccessibilitySupportEnabled( bool enabled)",9, 70, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetLoginItemSettings( mate :: Arguments * args)",5, 78, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::ImportCertificate( const base :: DictionaryValue & options , const net :: CompletionCallback & callback)",16, 76, 19, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::OnCertificateManagerModelCreated( std :: unique_ptr<base::DictionaryValue> options , const net :: CompletionCallback & callback , std :: unique_ptr<CertificateManagerModel> model)",9, 79, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetJumpListSettings()",17, 76, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::SetJumpList( v8 :: Local<v8::Value> val , mate :: Arguments * args)",35, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetFileIcon( const base :: FilePath & path , mate :: Arguments * args)",30, 81, 27, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetAppMetrics( v8 :: Isolate * isolate)",35, 77, 17, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetGPUFeatureStatus( v8 :: Isolate * isolate)",5, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::GetGPUInfo( v8 :: Isolate * isolate , const std :: string & info_type)",28, 77, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::RemoveNoSandboxSwitch( base :: CommandLine * command_line)",13, 72, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::EnableSandbox( mate :: Arguments * args)",12, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::EnableMixedSandbox( mate :: Arguments * args)",12, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::MoveToApplicationsFolder( mate :: Arguments * args)",3, 60, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::IsInApplicationsFolder()",3, 73, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::Create( v8 :: Isolate * isolate)",3, 56, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"atom::api::App::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",94, 80, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"AppendSwitch( const std :: string & switch_string , mate :: Arguments * args)",18, 77, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"DockBounce( const std :: string & type)",8, 76, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"DockSetMenu( atom :: api :: Menu * menu)",3, 46, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_app.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",31, 81, 2, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::IDUserData::IDUserData( int32_t id)",1, 47, 2, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::IDUserData::operator int32_t() const",1, 43, 2, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::TrackableObjectBase::TrackableObjectBase()",4, 67, 0, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::TrackableObjectBase::~TrackableObjectBase()",1, 47, 0, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::TrackableObjectBase::GetDestroyClosure()",4, 61, 0, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::TrackableObjectBase::Destroy()",3, 38, 0, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::TrackableObjectBase::AttachAsUserData( base :: SupportsUserData * wrapped)",4, 78, 0, 0
repos/cpp/electron/atom/browser/api/trackable_object.cc,"mate::TrackableObjectBase::GetIDFromWrappedClass( base :: SupportsUserData * wrapped)",10, 75, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor_win.cc,"atom::api::PowerMonitor::InitPlatformSpecificMonitors()",19, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor_win.cc,"atom::api::PowerMonitor::WndProcStatic( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",11, 78, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_power_monitor_win.cc,"atom::api::PowerMonitor::WndProc( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",13, 57, 2, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::StreamSubscriber( v8 :: Isolate * isolate , v8 :: Local<v8::Object> emitter , base :: WeakPtr<atom::URLRequestStreamJob> url_job)",14, 66, 2, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::~StreamSubscriber()",4, 51, 2, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::On( const std :: string & event , EventCallback && callback)",14, 79, 2, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::Off( const std :: string & event)",11, 58, 2, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::OnData( mate :: Arguments * args)",20, 63, 6, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::OnEnd( mate :: Arguments * args)",5, 64, 6, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::OnError( mate :: Arguments * args)",6, 64, 6, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::RemoveAllListeners()",8, 46, 0, 0
repos/cpp/electron/atom/browser/api/stream_subscriber.cc,"mate::StreamSubscriber::RemoveListener( JSHandlersMap :: iterator it)",7, 68, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::BrowserWindow( v8 :: Isolate * isolate , v8 :: Local<v8::Object> wrapper , const mate :: Dictionary & options)",62, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::~BrowserWindow()",7, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnInputEvent( const blink :: WebInputEvent & event)",11, 70, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::RenderViewHostChanged( content :: RenderViewHost * old_host , content :: RenderViewHost * new_host)",7, 79, 42, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::RenderViewCreated( content :: RenderViewHost * render_view_host)",11, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::DidFirstVisuallyNonEmptyPaint()",19, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::BeforeUnloadDialogCancelled()",5, 63, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnRendererUnresponsive( content :: RenderProcessHost *)",10, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnMessageReceived( const IPC :: Message & message , content :: RenderFrameHost * rfh)",10, 71, 38, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnCloseContents()",22, 80, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnRendererResponsive()",4, 45, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::RequestPreferredWidth( int * width)",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnCloseButtonClicked( bool * prevent_default)",22, 79, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnWindowClosed()",4, 39, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnWindowBlur()",10, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnWindowFocus()",13, 58, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnWindowResize()",7, 57, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::OnWindowLeaveFullScreen()",7, 51, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::Focus()",6, 40, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::Blur()",6, 40, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::SetBackgroundColor( const std :: string & color_name)",6, 72, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::SetBrowserView( v8 :: Local<v8::Value> value)",6, 65, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::SetVibrancy( v8 :: Isolate * isolate , v8 :: Local<v8::Value> value)",15, 81, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::FocusOnWebView()",3, 61, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::BlurWebView()",3, 60, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::IsWebViewFocused()",4, 81, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::GetWebContents( v8 :: Isolate * isolate)",5, 75, 0, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::DraggableRegionsToSkRegion( const std :: vector<DraggableRegion> & regions)",11, 76, 8, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::ScheduleUnresponsiveEvent( int ms)",10, 75, 6, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::NotifyWindowUnresponsive()",7, 54, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::Cleanup()",10, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::New( mate :: Arguments * args)",18, 73, 4, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 80, 35, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"atom::api::BrowserWindow::From( v8 :: Isolate * isolate , NativeWindow * native_window)",8, 78, 2, 0
repos/cpp/electron/atom/browser/api/atom_api_browser_window.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 76, 32, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"mate::Converter<views::BoxLayout::Orientation>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , views :: BoxLayout :: Orientation * out)",14, 59, 21, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"atom::api::BoxLayout::BoxLayout( views :: BoxLayout :: Orientation orientation)",2, 64, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"atom::api::BoxLayout::~BoxLayout()",1, 27, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"atom::api::BoxLayout::SetFlexForView( mate :: Handle<View> view , int flex)",4, 71, 2, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"atom::api::BoxLayout::New( mate :: Arguments * args , views :: BoxLayout :: Orientation orientation)",6, 81, 36, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"atom::api::BoxLayout::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",6, 76, 31, 0
repos/cpp/electron/atom/browser/api/views/atom_api_box_layout.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 68, 28, 0
repos/cpp/electron/atom/browser/api/views/atom_api_md_text_button.cc,"atom::api::MdTextButton::MdTextButton( const std :: string & text)",2, 81, 4, 0
repos/cpp/electron/atom/browser/api/views/atom_api_md_text_button.cc,"atom::api::MdTextButton::~MdTextButton()",1, 33, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_md_text_button.cc,"atom::api::MdTextButton::New( mate :: Arguments * args , const std :: string & text)",7, 66, 39, 0
repos/cpp/electron/atom/browser/api/views/atom_api_md_text_button.cc,"atom::api::MdTextButton::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",4, 79, 34, 0
repos/cpp/electron/atom/browser/api/views/atom_api_md_text_button.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 74, 31, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::LabelButton( views :: LabelButton * impl)",1, 69, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::LabelButton( const std :: string & text)",2, 71, 4, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::~LabelButton()",1, 31, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::GetText() const",3, 53, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::SetText( const base :: string16 & text)",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::IsDefault() const",3, 39, 2, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::SetIsDefault( bool is_default)",3, 50, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::New( mate :: Arguments * args , const std :: string & text)",7, 65, 38, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"atom::api::LabelButton::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",9, 78, 33, 0
repos/cpp/electron/atom/browser/api/views/atom_api_label_button.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 72, 30, 0
repos/cpp/electron/atom/browser/api/views/atom_api_layout_manager.cc,"atom::api::LayoutManager::LayoutManager( views :: LayoutManager * layout_manager)",4, 67, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_layout_manager.cc,"atom::api::LayoutManager::~LayoutManager()",4, 34, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_layout_manager.cc,"atom::api::LayoutManager::TakeOver()",6, 66, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_layout_manager.cc,"atom::api::LayoutManager::New( mate :: Arguments * args)",4, 65, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_layout_manager.cc,"atom::api::LayoutManager::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",2, 81, 35, 0
repos/cpp/electron/atom/browser/api/views/atom_api_layout_manager.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 76, 32, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"atom::api::TextField::TextField()",3, 56, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"atom::api::TextField::~TextField()",1, 27, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"atom::api::TextField::SetText( const base :: string16 & new_text)",3, 58, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"atom::api::TextField::GetText() const",3, 44, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"atom::api::TextField::New( mate :: Arguments * args)",6, 61, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"atom::api::TextField::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",7, 76, 31, 0
repos/cpp/electron/atom/browser/api/views/atom_api_text_field.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 68, 28, 0
repos/cpp/electron/atom/browser/api/views/atom_api_button.cc,"atom::api::Button::Button( views :: Button * impl)",5, 52, 2, 0
repos/cpp/electron/atom/browser/api/views/atom_api_button.cc,"atom::api::Button::~Button()",1, 21, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_button.cc,"atom::api::Button::ButtonPressed( views :: Button * sender , const ui :: Event & event)",3, 76, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_button.cc,"atom::api::Button::New( mate :: Arguments * args)",4, 58, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_button.cc,"atom::api::Button::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",4, 73, 28, 0
repos/cpp/electron/atom/browser/api/views/atom_api_button.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 80, 11, 0
repos/cpp/electron/atom/browser/api/views/atom_api_resize_area.cc,"atom::api::ResizeArea::ResizeArea()",3, 63, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_resize_area.cc,"atom::api::ResizeArea::~ResizeArea()",1, 29, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_resize_area.cc,"atom::api::ResizeArea::OnResize( int resize_amount , bool done_resizing)",3, 67, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_resize_area.cc,"atom::api::ResizeArea::New( mate :: Arguments * args)",6, 62, 0, 0
repos/cpp/electron/atom/browser/api/views/atom_api_resize_area.cc,"atom::api::ResizeArea::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",4, 77, 32, 0
repos/cpp/electron/atom/browser/api/views/atom_api_resize_area.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 70, 29, 0
repos/cpp/electron/atom/browser/notifications/notification_presenter.cc,"atom::NotificationPresenter::NotificationPresenter()",1, 50, 0, 0
repos/cpp/electron/atom/browser/notifications/notification_presenter.cc,"atom::NotificationPresenter::~NotificationPresenter()",4, 52, 2, 0
repos/cpp/electron/atom/browser/notifications/notification_presenter.cc,"atom::NotificationPresenter::CreateNotification( NotificationDelegate * delegate , const std :: string & notification_id)",8, 71, 0, 0
repos/cpp/electron/atom/browser/notifications/notification_presenter.cc,"atom::NotificationPresenter::RemoveNotification( Notification * notification)",4, 77, 0, 0
repos/cpp/electron/atom/browser/notifications/notification_presenter.cc,"atom::NotificationPresenter::CloseNotificationWithId( const std :: string & notification_id)",9, 75, 27, 0
repos/cpp/electron/atom/browser/notifications/notification.cc,"atom::Notification::Notification( NotificationDelegate * delegate , NotificationPresenter * presenter)",3, 73, 4, 0
repos/cpp/electron/atom/browser/notifications/notification.cc,"atom::Notification::~Notification()",4, 41, 4, 0
repos/cpp/electron/atom/browser/notifications/notification.cc,"atom::Notification::NotificationClicked()",5, 43, 0, 0
repos/cpp/electron/atom/browser/notifications/notification.cc,"atom::Notification::NotificationDismissed()",5, 45, 0, 0
repos/cpp/electron/atom/browser/notifications/notification.cc,"atom::Notification::NotificationFailed()",5, 42, 0, 0
repos/cpp/electron/atom/browser/notifications/notification.cc,"atom::Notification::Destroy()",3, 41, 2, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::OnWebNotificationAllowed( base :: WeakPtr<Notification> notification , const SkBitmap & icon , const content :: PlatformNotificationData & data , bool audio_muted , bool allowed)",21, 77, 30, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::NotificationDelegateImpl::NotificationDelegateImpl( const std :: string & notification_id)",2, 72, 2, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::NotificationDelegateImpl::NotificationDestroyed()",1, 57, 2, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::NotificationDelegateImpl::NotificationClick()",4, 80, 8, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::NotificationDelegateImpl::NotificationClosed()",4, 80, 8, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::NotificationDelegateImpl::NotificationDisplayed()",4, 60, 8, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::PlatformNotificationService( AtomBrowserClient * browser_client)",3, 58, 0, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::~PlatformNotificationService()",1, 63, 0, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::DisplayNotification( content :: RenderProcessHost * render_process_host , content :: BrowserContext * browser_context , const std :: string & notification_id , const GURL & origin , const content :: PlatformNotificationData & notification_data , const content :: NotificationResources & notification_resources)",21, 80, 2, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::DisplayPersistentNotification( content :: BrowserContext * browser_context , const std :: string & notification_id , const GURL & service_worker_scope , const GURL & origin , const content :: PlatformNotificationData & notification_data , const content :: NotificationResources & notification_resources)",7, 69, 4, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::ClosePersistentNotification( content :: BrowserContext * browser_context , const std :: string & notification_id)",3, 63, 0, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::CloseNotification( content :: BrowserContext * browser_context , const std :: string & notification_id)",8, 65, 2, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::GetDisplayedNotifications( content :: BrowserContext * browser_context , const DisplayedNotificationsCallback & callback)",3, 61, 0, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::ReadNextPersistentNotificationId( content :: BrowserContext * browser_context)",5, 71, 0, 0
repos/cpp/electron/atom/browser/notifications/platform_notification_service.cc,"atom::PlatformNotificationService::RecordNotificationUkmEvent( content :: BrowserContext * browser_context , const content :: NotificationDatabaseData & data)",3, 62, 0, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::GetServerCapabilities()",10, 69, 4, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::HasCapability( const std :: string & capability)",3, 57, 2, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::NotifierSupportsActions()",6, 46, 2, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::log_and_clear_error( GError * error , const char * context)",6, 75, 13, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::Initialize()",15, 78, 4, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::LibnotifyNotification( NotificationDelegate * delegate , NotificationPresenter * presenter)",3, 79, 45, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::~LibnotifyNotification()",6, 63, 4, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::Show( const NotificationOptions & options)",64, 79, 4, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::Dismiss()",13, 70, 2, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::OnNotificationClosed( NotifyNotification * notification)",4, 50, 0, 0
repos/cpp/electron/atom/browser/notifications/linux/libnotify_notification.cc,"atom::LibnotifyNotification::OnNotificationView( NotifyNotification * notification , char * action)",4, 81, 0, 0
repos/cpp/electron/atom/browser/notifications/linux/notification_presenter_linux.cc,"atom::NotificationPresenter::Create()",5, 57, 0, 0
repos/cpp/electron/atom/browser/notifications/linux/notification_presenter_linux.cc,"atom::NotificationPresenterLinux::NotificationPresenterLinux()",1, 60, 0, 0
repos/cpp/electron/atom/browser/notifications/linux/notification_presenter_linux.cc,"atom::NotificationPresenterLinux::~NotificationPresenterLinux()",1, 61, 0, 0
repos/cpp/electron/atom/browser/notifications/linux/notification_presenter_linux.cc,"atom::NotificationPresenterLinux::CreateNotificationObject( NotificationDelegate * delegate)",4, 68, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win7.cc,"atom::NotificationPresenterWin7::CreateNotificationObject( NotificationDelegate * delegate)",4, 73, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win7.cc,"atom::NotificationPresenterWin7::GetNotificationObjectByRef( const DesktopNotificationController :: Notification & ref)",10, 74, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win7.cc,"atom::NotificationPresenterWin7::GetNotificationObjectByTag( const std :: string & tag)",10, 74, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win7.cc,"atom::NotificationPresenterWin7::OnNotificationClicked( const Notification & notification)",6, 55, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win7.cc,"atom::NotificationPresenterWin7::OnNotificationDismissed( const Notification & notification)",6, 57, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_notification.cc,"atom::Win32Notification::Show( const NotificationOptions & options)",42, 80, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_notification.cc,"atom::Win32Notification::Dismiss()",3, 36, 0, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::IsDebuggingNotifications()",3, 78, 2, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::Initialize()",25, 78, 8, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::WindowsToastNotification( NotificationDelegate * delegate , NotificationPresenter * presenter)",4, 52, 0, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::~WindowsToastNotification()",7, 56, 0, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::Show( const NotificationOptions & options)",49, 78, 52, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::Dismiss()",5, 52, 2, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::GetToastXml( ABI :: Windows :: UI :: Notifications :: IToastNotificationManagerStatics * toastManager , const std :: wstring & title , const std :: wstring & msg , const std :: wstring & icon_path , bool silent , IXmlDocument ** toast_xml)",57, 78, 4, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::SetXmlAudioSilent( IXmlDocument * doc)",63, 79, 10, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::SetXmlText( IXmlDocument * doc , const std :: wstring & text)",13, 70, 42, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::SetXmlText( IXmlDocument * doc , const std :: wstring & title , const std :: wstring & body)",20, 70, 42, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::SetXmlImage( IXmlDocument * doc , const std :: wstring & icon_path)",41, 76, 43, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::GetTextNodeList( ScopedHString * tag , IXmlDocument * doc , IXmlNodeList ** node_list , uint32_t req_length)",17, 73, 47, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::AppendTextToXml( IXmlDocument * doc , IXmlNode * node , const std :: wstring & text)",18, 75, 47, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::SetupCallbacks( ABI :: Windows :: UI :: Notifications :: IToastNotification * toast)",11, 77, 2, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::WindowsToastNotification::RemoveCallbacks( ABI :: Windows :: UI :: Notifications :: IToastNotification * toast)",10, 66, 4, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::ToastEventHandler::ToastEventHandler( Notification * notification)",2, 65, 0, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::ToastEventHandler::~ToastEventHandler()",1, 43, 0, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::ToastEventHandler::Invoke( ABI :: Windows :: UI :: Notifications :: IToastNotification * sender , IInspectable * args)",11, 70, 6, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::ToastEventHandler::Invoke( ABI :: Windows :: UI :: Notifications :: IToastNotification * sender , ABI :: Windows :: UI :: Notifications :: IToastDismissedEventArgs * e)",11, 72, 6, 0
repos/cpp/electron/atom/browser/notifications/win/windows_toast_notification.cc,"atom::ToastEventHandler::Invoke( ABI :: Windows :: UI :: Notifications :: IToastNotification * sender , ABI :: Windows :: UI :: Notifications :: IToastFailedEventArgs * e)",11, 69, 6, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::IsDebuggingNotifications()",3, 78, 2, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::SaveIconToPath( const SkBitmap & bitmap , const base :: FilePath & path)",9, 74, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::NotificationPresenter::Create()",16, 73, 4, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::NotificationPresenterWin::NotificationPresenterWin()",1, 56, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::NotificationPresenterWin::~NotificationPresenterWin()",1, 57, 0, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::NotificationPresenterWin::Init()",4, 52, 2, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::NotificationPresenterWin::SaveIconToFilesystem( const SkBitmap & icon , const GURL & origin)",20, 81, 2, 0
repos/cpp/electron/atom/browser/notifications/win/notification_presenter_win.cc,"atom::NotificationPresenterWin::CreateNotificationObject( NotificationDelegate * delegate)",4, 66, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::CopyBitmap( HBITMAP bitmap)",22, 78, 6, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::RegisterWndClasses()",28, 76, 30, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::DesktopNotificationController( unsigned maximum_toasts)",4, 62, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::~DesktopNotificationController()",7, 66, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::WndProc( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",31, 73, 56, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::StartAnimation()",12, 75, 4, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::GetCaptionFont()",4, 56, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::GetBodyFont()",4, 53, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::InitializeFonts()",24, 73, 4, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::ClearAssets()",10, 52, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::AnimateAll()",92, 77, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::AddNotification( std :: wstring caption , std :: wstring body_text , HBITMAP image)",14, 71, 47, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::CloseNotification( const Notification & notification)",17, 68, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::CheckQueue()",6, 73, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::CreateToast( NotificationLink && data)",28, 81, 6, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::GetToast( const NotificationData * data) const",12, 76, 6, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::DestroyToast( ToastInstance * inst)",11, 72, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::Notification::Notification( const shared_ptr<NotificationData> & data)",5, 59, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::Notification::operator ==( const Notification & other) const",4, 62, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::Notification::Close()",7, 68, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::Notification::Set( std :: wstring caption , std :: wstring body_text , HBITMAP image)",26, 78, 54, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::NotificationLink::NotificationLink( DesktopNotificationController * controller)",5, 67, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/desktop_notification_controller.cc,"atom::DesktopNotificationController::NotificationLink::~NotificationLink()",5, 71, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::UIAutomationInterface( Toast * toast)",10, 62, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::AddRef()",3, 78, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::Release()",9, 79, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::QueryInterface( REFIID riid , LPVOID * ppv)",25, 79, 8, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_ProviderOptions( ProviderOptions * retval)",5, 70, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::GetPatternProvider( PATTERNID pattern_id , IUnknown ** retval)",20, 81, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::GetPropertyValue( PROPERTYID property_id , VARIANT * retval)",47, 79, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_HostRawElementProvider( IRawElementProviderSimple ** retval)",6, 69, 4, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::Invoke()",3, 80, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::SetVisualState( WindowVisualState state)",5, 77, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::Close()",3, 79, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::WaitForInputIdle( int milliseconds , BOOL * retval)",5, 79, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_CanMaximize( BOOL * retval)",5, 78, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_CanMinimize( BOOL * retval)",5, 78, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_IsModal( BOOL * retval)",5, 74, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_WindowVisualState( WindowVisualState * retval)",5, 70, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_WindowInteractionState( WindowInteractionState * retval)",9, 70, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_IsTopmost( BOOL * retval)",5, 76, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::GetSelection( SAFEARRAY ** retval)",4, 75, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::GetVisibleRanges( SAFEARRAY ** retval)",4, 79, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::RangeFromChild( IRawElementProviderSimple * child_element , ITextRangeProvider ** retval)",5, 77, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::RangeFromPoint( UiaPoint point , ITextRangeProvider ** retval)",5, 77, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_DocumentRange( ITextRangeProvider ** retval)",4, 80, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast_uia.cc,"atom::DesktopNotificationController::Toast::UIAutomationInterface::get_SupportedTextSelection( SupportedTextSelection * retval)",5, 70, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::GetAccentColor()",34, 78, 33, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::StretchBitmap( HBITMAP bitmap , unsigned width , unsigned height)",131, 80, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Toast( HWND hwnd , shared_ptr<NotificationData> * data)",7, 80, 44, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::~Toast()",23, 81, 12, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Register( HINSTANCE hinstance)",10, 75, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::WndProc( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",106, 80, 10, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Create( HINSTANCE hinstance , shared_ptr<NotificationData> data)",7, 80, 24, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Draw()",142, 80, 4, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Invalidate()",3, 58, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::IsRedrawNeeded() const",3, 68, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::UpdateBufferSize()",119, 76, 6, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::UpdateScaledImage( const SIZE & size)",9, 81, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::UpdateContents()",12, 80, 4, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Dismiss()",10, 77, 4, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::AutoDismiss()",4, 59, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::CancelDismiss()",5, 61, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::ScheduleDismissal()",7, 72, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::ResetContents()",8, 61, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::PopUp( int y)",4, 58, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::SetVerticalPosition( int y)",14, 77, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::Animate( HDWP hdwp , const POINT & origin)",83, 81, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::StartEaseIn()",6, 59, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::StartEaseOut()",6, 60, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::IsStackCollapseActive() const",3, 75, 0, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::AnimateEaseIn()",14, 75, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::AnimateEaseOut()",13, 75, 2, 0
repos/cpp/electron/atom/browser/notifications/win/win32_desktop_notifications/toast.cc,"atom::DesktopNotificationController::Toast::AnimateStackCollapse()",14, 75, 2, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::OffScreenWebContentsView( bool transparent , const OnPaintCallback & callback)",8, 80, 4, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::~OffScreenWebContentsView()",8, 56, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetWebContents( content :: WebContents * web_contents)",6, 57, 2, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetNativeWindow( NativeWindow * window)",11, 71, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::OnWindowResize()",5, 70, 2, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::OnWindowClosed()",6, 50, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetSize()",3, 67, 2, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetNativeView() const",5, 66, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetContentNativeView() const",5, 73, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetTopLevelNativeWindow() const",5, 78, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetContainerBounds( gfx :: Rect * out) const",3, 74, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SizeContents( const gfx :: Size & size)",1, 70, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::Focus()",1, 42, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetInitialFocus()",1, 52, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::StoreFocus()",1, 47, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::RestoreFocus()",1, 49, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::FocusThroughTabTraversal( bool reverse)",1, 73, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetDropData() const",3, 67, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetViewBounds() const",3, 63, 2, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::CreateView( const gfx :: Size & initial_size , gfx :: NativeView context)",2, 73, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::CreateViewForWidget( content :: RenderWidgetHost * render_widget_host , bool is_guest_view_hack)",12, 78, 6, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::CreateViewForPopupWidget( content :: RenderWidgetHost * render_widget_host)",16, 81, 43, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetPageTitle( const base :: string16 & title)",1, 76, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::RenderViewCreated( content :: RenderViewHost * host)",9, 63, 2, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::RenderViewReady()",1, 52, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::RenderViewHostChanged( content :: RenderViewHost * old_host , content :: RenderViewHost * new_host)",3, 54, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetOverscrollControllerEnabled( bool enabled)",1, 79, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetAllowOtherViews( bool allow)",1, 65, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetAllowOtherViews() const",3, 60, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::IsEventTracking() const",3, 57, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::CloseTabAfterEventTracking()",1, 63, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::StartDragging( const content :: DropData & drop_data , blink :: WebDragOperationsMask allowed_ops , const gfx :: ImageSkia & image , const gfx :: Vector2d & image_offset , const content :: DragEventSourceInfo & event_info , content :: RenderWidgetHostImpl * source_rwh)",10, 52, 4, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::UpdateDragCursor( blink :: WebDragOperation operation)",2, 49, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetPainting( bool painting)",8, 60, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::IsPainting() const",8, 52, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::SetFrameRate( int frame_rate)",8, 62, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetFrameRate() const",8, 53, 0, 0
repos/cpp/electron/atom/browser/osr/osr_web_contents_view.cc,"atom::OffScreenWebContentsView::GetView() const",7, 75, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::OffscreenViewProxy( views :: View * view)",3, 74, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::~OffscreenViewProxy()",5, 44, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::SetObserver( OffscreenViewProxyObserver * observer)",6, 77, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::RemoveObserver()",3, 44, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::GetBitmap() const",3, 56, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::SetBitmap( const SkBitmap & bitmap)",7, 63, 6, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::GetBounds()",3, 51, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::SetBounds( const gfx :: Rect & bounds)",3, 62, 0, 0
repos/cpp/electron/atom/browser/osr/osr_view_proxy.cc,"atom::OffscreenViewProxy::OnEvent( ui :: Event * event)",5, 53, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::UiMouseEventFromWebMouseEvent( blink :: WebMouseEvent event)",58, 78, 37, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::UiMouseWheelEventFromWebMouseEvent( blink :: WebMouseWheelEvent event)",6, 67, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomCopyFrameGenerator::AtomCopyFrameGenerator( OffScreenRenderWidgetHostView * view , int frame_rate_threshold_us)",8, 73, 12, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomCopyFrameGenerator::GenerateCopyFrame( const gfx :: Rect & damage_rect)",13, 75, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomCopyFrameGenerator::set_frame_rate_threshold_us( int frame_rate_threshold_us)",4, 68, 8, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomCopyFrameGenerator::CopyFromCompositingSurfaceHasResult( const gfx :: Rect & damage_rect , std :: unique_ptr<viz::CopyOutputResult> result)",35, 81, 27, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomCopyFrameGenerator::OnCopyFrameCaptureFailure( const gfx :: Rect & damage_rect)",10, 73, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomCopyFrameGenerator::OnCopyFrameCaptureSuccess( const gfx :: Rect & damage_rect , const std :: shared_ptr<SkBitmap> & bitmap)",5, 76, 33, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomBeginFrameTimer::AtomBeginFrameTimer( int frame_rate_threshold_us , const base :: Closure & callback)",12, 69, 8, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomBeginFrameTimer::SetActive( bool active)",1, 67, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomBeginFrameTimer::IsActive() const",1, 59, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomBeginFrameTimer::SetFrameRateThresholdUs( int frame_rate_threshold_us)",5, 69, 8, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::AtomBeginFrameTimer::OnTimerTick()",1, 51, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OffScreenRenderWidgetHostView( bool transparent , bool painting , int frame_rate , const OnPaintCallback & callback , content :: RenderWidgetHost * host , OffScreenRenderWidgetHostView * parent_host_view , gfx :: Size initial_size)",64, 80, 25, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::~OffScreenRenderWidgetHostView()",23, 76, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::CreateBrowserAccessibilityManager( content :: BrowserAccessibilityDelegate * , bool)",5, 66, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnBeginFrameTimerTick()",6, 67, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SendBeginFrame( base :: TimeTicks frame_time , base :: TimeDelta vsync_period)",21, 78, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::InitAsChild( gfx :: NativeView)",13, 67, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetSize( const gfx :: Size & size)",4, 69, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetBounds( const gfx :: Rect & new_bounds)",3, 77, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetNativeView() const",3, 71, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetNativeViewAccessible()",3, 59, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetTextInputClient()",3, 75, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::Focus()",1, 47, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::HasFocus() const",3, 55, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::IsSurfaceAvailableForCopy() const",3, 72, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::Show()",17, 75, 34, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::Hide()",16, 58, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::IsShowing()",3, 50, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::EnsureSurfaceSynchronizedForLayoutTest()",4, 79, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetViewBounds() const",6, 65, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetBackgroundColor( SkColor color)",10, 81, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetBackgroundColor() const",4, 76, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::UpdateBackgroundColor()",3, 62, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetVisibleViewportSize() const",3, 74, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetInsets( const gfx :: Insets & insets)",1, 76, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::LockMouse()",3, 50, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::UnlockMouse()",1, 53, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::TakeFallbackContentFrom( content :: RenderWidgetHostView * view)",15, 70, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::DidCreateNewRendererCompositorFrameSink( viz :: mojom :: CompositorFrameSinkClient * renderer_compositor_frame_sink)",8, 77, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SubmitCompositorFrame( const viz :: LocalSurfaceId & local_surface_id , viz :: CompositorFrame frame , base :: Optional<viz::HitTestRegionList> hit_test_region_list)",54, 81, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ClearCompositorFrame()",3, 61, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ResetFallbackToFirstNavigationSurface()",3, 78, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::InitAsPopup( content :: RenderWidgetHostView * parent_host_view , const gfx :: Rect & pos)",20, 69, 17, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::InitAsFullscreen( content :: RenderWidgetHostView *)",2, 54, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::UpdateCursor( const content :: WebCursor &)",1, 79, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetCursorManager()",3, 76, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetIsLoading( bool loading)",1, 66, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::TextInputStateChanged( const content :: TextInputState & params)",2, 59, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ImeCancelComposition()",1, 62, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::RenderProcessGone( base :: TerminationStatus , int)",4, 79, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::Destroy()",28, 79, 8, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetTooltipText( const base :: string16 &)",1, 77, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SelectionBoundsChanged( const ViewHostMsg_SelectionBounds_Params &)",2, 60, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetCaptureSequenceNumber() const",3, 75, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::CopyFromSurface( const gfx :: Rect & src_rect , const gfx :: Size & output_size , base :: OnceCallback<void(const SkBitmap&)> callback)",7, 77, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetScreenInfo( content :: ScreenInfo * screen_info) const",11, 67, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::InitAsGuest( content :: RenderWidgetHostView * parent_host_view , content :: RenderWidgetHostViewGuest * guest_view)",6, 72, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::TransformPointToRootSurface( gfx :: PointF * point)",2, 65, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetBoundsInRootWindow()",3, 67, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetCurrentSurfaceId() const",5, 76, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ImeCompositionRangeChanged( const gfx :: Range & , const std :: vector<gfx::Rect> &)",3, 64, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetCompositorViewportPixelSize() const",5, 74, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::CreateViewForWidget( content :: RenderWidgetHost * render_widget_host , content :: RenderWidgetHost * embedder_render_widget_host , content :: WebContentsView * web_contents_view)",19, 73, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::DelegatedFrameHostGetLayer() const",3, 79, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::DelegatedFrameHostIsVisible() const",3, 74, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::DelegatedFrameHostGetGutterColor() const",8, 74, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnFirstSurfaceActivation( const viz :: SurfaceInfo & surface_info)",2, 62, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnBeginFrame( base :: TimeTicks frame_time)",1, 80, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnFrameTokenChanged( uint32_t frame_token)",3, 80, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetLocalSurfaceId() const",4, 78, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetFrameSinkId() const",3, 80, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::DidNavigate()",9, 52, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::TransformPointToLocalCoordSpaceLegacy( const gfx :: PointF & point , const viz :: SurfaceId & original_surface , gfx :: PointF * transformed_point)",17, 80, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::TransformPointToCoordSpaceForView( const gfx :: PointF & point , RenderWidgetHostViewBase * target_view , gfx :: PointF * transformed_point , viz :: EventSource source)",12, 71, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::CancelWidget()",24, 62, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::AddGuestHostView( OffScreenRenderWidgetHostView * guest_host)",4, 54, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::RemoveGuestHostView( OffScreenRenderWidgetHostView * guest_host)",4, 57, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::AddViewProxy( OffscreenViewProxy * proxy)",4, 78, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::RemoveViewProxy( OffscreenViewProxy * proxy)",4, 81, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ProxyViewDestroyed( OffscreenViewProxy * proxy)",5, 56, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::RegisterGuestViewFrameSwappedCallback( content :: RenderWidgetHostViewGuest * guest_host_view)",6, 75, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnGuestViewFrameSwapped( content :: RenderWidgetHostViewGuest * guest_host_view)",7, 79, 43, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::CreateSoftwareOutputDevice( ui :: Compositor * compositor)",13, 72, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::InstallTransparency()",12, 66, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetNeedsBeginFrames( bool needs_begin_frames)",10, 80, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetWantsAnimateOnlyBeginFrames()",5, 71, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnPaint( const gfx :: Rect & damage_rect , const SkBitmap & bitmap)",47, 81, 10, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnPopupPaint( const gfx :: Rect & damage_rect , const SkBitmap & bitmap)",6, 79, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::OnProxyViewPaint( const gfx :: Rect & damage_rect)",4, 54, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::HoldResize()",4, 51, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ReleaseResize()",14, 73, 12, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SynchronizeVisualProperties()",13, 75, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SendMouseEvent( const blink :: WebMouseEvent & event)",37, 76, 6, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SendMouseWheelEvent( const blink :: WebMouseWheelEvent & event)",78, 80, 8, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetPainting( bool painting)",7, 77, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::IsPainting() const",3, 57, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetFrameRate( int frame_rate)",20, 67, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetFrameRate() const",3, 58, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetCompositor() const",3, 71, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetRootLayer() const",3, 65, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::GetDelegatedFrameHost() const",3, 63, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::SetupFrameRate( bool force)",25, 75, 4, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::Invalidate()",3, 51, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::InvalidateBounds( const gfx :: Rect & bounds)",7, 80, 0, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::ResizeRootLayer( bool force)",44, 81, 2, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::AllocateFrameSinkId( bool is_guest_view_hack)",15, 81, 36, 0
repos/cpp/electron/atom/browser/osr/osr_render_widget_host_view.cc,"atom::OffScreenRenderWidgetHostView::UpdateBackgroundColorFromRenderer( SkColor color)",10, 71, 0, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::OffScreenOutputDevice( bool transparent , const OnPaintCallback & callback)",5, 78, 45, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::~OffScreenOutputDevice()",1, 51, 0, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::Resize( const gfx :: Size & pixel_size , float scale_factor)",24, 73, 26, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::BeginPaint( const gfx :: Rect & damage_rect)",17, 76, 0, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::EndPaint()",12, 41, 0, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::SetActive( bool active , bool paint)",8, 65, 0, 0
repos/cpp/electron/atom/browser/osr/osr_output_device.cc,"atom::OffScreenOutputDevice::OnPaint( const gfx :: Rect & damage_rect)",13, 68, 0, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::HasAnyAvailableDevice()",8, 78, 6, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::MediaStreamDevicesController::MediaStreamDevicesController( const content :: MediaStreamRequest & request , content :: MediaResponseCallback callback)",13, 79, 6, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::MediaStreamDevicesController::~MediaStreamDevicesController()",7, 73, 29, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::MediaStreamDevicesController::TakeAction()",19, 73, 6, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::MediaStreamDevicesController::Accept()",76, 81, 18, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::MediaStreamDevicesController::Deny( content :: MediaStreamRequestResult result)",5, 71, 27, 0
repos/cpp/electron/atom/browser/media/media_stream_devices_controller.cc,"atom::MediaStreamDevicesController::HandleUserMediaRequest()",37, 81, 27, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::FindDeviceWithId( const content :: MediaStreamDevices & devices , const std :: string & device_id)",11, 52, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::EmptyDevices()",4, 63, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetInstance()",3, 78, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::MediaCaptureDevicesDispatcher()",6, 75, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::~MediaCaptureDevicesDispatcher()",1, 67, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetAudioCaptureDevices()",6, 80, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetVideoCaptureDevices()",6, 80, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetDefaultDevices( bool audio , bool video , content :: MediaStreamDevices * devices)",19, 79, 4, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetRequestedAudioDevice( const std :: string & requested_audio_device_id)",8, 79, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetFirstAvailableAudioDevice()",7, 79, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetRequestedVideoDevice( const std :: string & requested_video_device_id)",8, 79, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::GetFirstAvailableVideoDevice()",7, 79, 2, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::DisableDeviceEnumerationForTesting()",3, 75, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::OnAudioCaptureDevicesChanged()",1, 70, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::OnVideoCaptureDevicesChanged()",1, 70, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::OnMediaRequestStateChanged( int render_process_id , int render_view_id , int page_request_id , const GURL & security_origin , content :: MediaStreamType stream_type , content :: MediaRequestState state)",7, 64, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::OnCreatingAudioStream( int render_process_id , int render_view_id)",2, 81, 0, 0
repos/cpp/electron/atom/browser/media/media_capture_devices_dispatcher.cc,"atom::MediaCaptureDevicesDispatcher::OnSetCapturingLinkSecured( int render_process_id , int render_frame_id , int page_request_id , content :: MediaStreamType stream_type , bool is_secure)",6, 63, 0, 0
repos/cpp/electron/atom/browser/media/media_device_id_salt.cc,"atom::MediaDeviceIDSalt::MediaDeviceIDSalt( PrefService * pref_service)",9, 67, 8, 0
repos/cpp/electron/atom/browser/media/media_device_id_salt.cc,"atom::MediaDeviceIDSalt::~MediaDeviceIDSalt()",4, 42, 0, 0
repos/cpp/electron/atom/browser/media/media_device_id_salt.cc,"atom::MediaDeviceIDSalt::GetSalt()",4, 43, 0, 0
repos/cpp/electron/atom/browser/media/media_device_id_salt.cc,"atom::MediaDeviceIDSalt::RegisterPrefs( PrefRegistrySimple * registry)",3, 70, 0, 0
repos/cpp/electron/atom/browser/media/media_device_id_salt.cc,"atom::MediaDeviceIDSalt::Reset( PrefService * pref_service)",5, 65, 6, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::TCPServerSocketFactory::TCPServerSocketFactory( const std :: string & address , int port)",2, 63, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::TCPServerSocketFactory::CreateForHttpServer()",8, 74, 4, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::TCPServerSocketFactory::CreateForTethering( std :: string * name)",4, 57, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::CreateSocketFactory()",19, 74, 8, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::StartHttpHandler()",4, 66, 6, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::DevToolsManagerDelegate()",1, 54, 0, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::~DevToolsManagerDelegate()",1, 55, 0, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::Inspect( content :: DevToolsAgentHost * agent_host)",1, 81, 0, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::HandleCommand( content :: DevToolsAgentHost * agent_host , content :: DevToolsAgentHostClient * client , std :: unique_ptr<base::DictionaryValue> command , const std :: string & message , NotHandledCallback callback)",8, 56, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::CreateNewTarget( const GURL & url)",3, 60, 0, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::GetDiscoveryPageHTML()",5, 69, 6, 0
repos/cpp/electron/atom/browser/ui/devtools_manager_delegate.cc,"atom::DevToolsManagerDelegate::HasBundledFrontendResources()",3, 62, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::TrayIconGtk()",1, 30, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::~TrayIconGtk()",1, 31, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::SetImage( const gfx :: Image & image)",11, 72, 6, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::SetToolTip( const std :: string & tool_tip)",3, 60, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::SetContextMenu( AtomMenuModel * menu_model)",3, 62, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::OnClick()",3, 30, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIconGtk::HasClickAction()",3, 37, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon_gtk.cc,"atom::TrayIcon::Create()",3, 31, 0, 0
repos/cpp/electron/atom/browser/ui/certificate_trust_win.cc,"certificate_trust::AddToTrustedRootStore( const PCCERT_CONTEXT cert_context , const scoped_refptr<net::X509Certificate> & cert)",22, 81, 6, 0
repos/cpp/electron/atom/browser/ui/certificate_trust_win.cc,"certificate_trust::GetCertificateChainParameters()",15, 54, 2, 0
repos/cpp/electron/atom/browser/ui/certificate_trust_win.cc,"certificate_trust::ShowCertificateTrust( atom :: NativeWindow * parent_window , const scoped_refptr<net::X509Certificate> & cert , const std :: string & message , const ShowTrustCallback & callback)",24, 78, 2, 0
repos/cpp/electron/atom/browser/ui/drag_util_views.cc,"atom::DragFileItems( const std :: vector<base::FilePath> & files , const gfx :: Image & icon , gfx :: NativeView view)",28, 78, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::TrayIcon()",1, 24, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::~TrayIcon()",1, 25, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::SetPressedImage( ImageType image)",1, 51, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::SetTitle( const std :: string & title)",1, 53, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::SetHighlightMode( TrayIcon :: HighlightMode mode)",1, 65, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::DisplayBalloon( ImageType icon , const base :: string16 & title , const base :: string16 & contents)",3, 65, 30, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::PopUpContextMenu( const gfx :: Point & pos , AtomMenuModel * menu_model)",2, 62, 32, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::GetBounds()",3, 34, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyClicked( const gfx :: Rect & bounds , const gfx :: Point & location , int modifiers)",6, 57, 29, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDoubleClicked( const gfx :: Rect & bounds , int modifiers)",4, 77, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyBalloonShow()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyBalloonClicked()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyBalloonClosed()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyRightClicked( const gfx :: Rect & bounds , int modifiers)",4, 76, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDrop()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDropFiles( const std :: vector<std::string> & files)",4, 72, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDropText( const std :: string & text)",4, 57, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyMouseEntered( const gfx :: Point & location , int modifiers)",4, 79, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyMouseExited( const gfx :: Point & location , int modifiers)",4, 78, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyMouseMoved( const gfx :: Point & location , int modifiers)",4, 77, 0, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDragEntered()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDragExited()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/tray_icon.cc,"atom::TrayIcon::NotifyDragEnded()",4, 48, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::RectToDictionary( const gfx :: Rect & bounds , base :: DictionaryValue * dict)",6, 78, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::DictionaryToRect( const base :: DictionaryValue & dict , gfx :: Rect * bounds)",8, 78, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::IsPointInRect( const gfx :: Point & point , const gfx :: Rect & rect)",4, 74, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::IsPointInScreen( const gfx :: Point & point)",7, 79, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::SetZoomLevelForWebContents( content :: WebContents * web_contents , double level)",4, 68, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::GetNextZoomLevel( double level , bool out)",13, 72, 6, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::GetRemoteBaseURL()",6, 73, 33, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::GetDevToolsURL( bool can_dock)",6, 74, 39, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::ResponseWriter::ResponseWriter( base :: WeakPtr<InspectableWebContentsImpl> bindings , int stream_id)",4, 56, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::ResponseWriter::~ResponseWriter()",1, 37, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::ResponseWriter::Initialize( net :: CompletionOnceCallback callback)",3, 71, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::ResponseWriter::Write( net :: IOBuffer * buffer , int num_bytes , net :: CompletionOnceCallback callback)",17, 81, 6, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::ResponseWriter::Finish( int net_error , net :: CompletionOnceCallback callback)",4, 67, 27, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RegisterPrefs( PrefRegistrySimple * registry)",7, 81, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::InspectableWebContentsImpl( content :: WebContents * web_contents , PrefService * pref_service , bool is_guest)",37, 80, 29, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::~InspectableWebContentsImpl()",11, 76, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetView() const",3, 74, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetWebContents() const",3, 75, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetDevToolsWebContents() const",7, 75, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::InspectElement( int x , int y)",4, 70, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetDelegate( InspectableWebContentsDelegate * delegate)",4, 48, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetDelegate() const",4, 74, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::IsGuest() const",3, 51, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ReleaseWebContents()",3, 56, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetDockState( const std :: string & state)",8, 74, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetDevToolsWebContents( content :: WebContents * devtools)",5, 57, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ShowDevTools( bool activate)",27, 81, 8, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::CloseDevTools()",12, 51, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::IsDevToolsViewShowing()",3, 75, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::AttachTo( scoped_refptr<content::DevToolsAgentHost> host)",8, 64, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::Detach()",5, 44, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::Reattach( const DispatchCallback & callback)",7, 78, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::CallClientFunction( const std :: string & function_name , const base :: Value * arg1 , const base :: Value * arg2 , const base :: Value * arg3)",26, 63, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetDevToolsBounds() const",3, 66, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SaveDevToolsBounds( const gfx :: Rect & bounds)",6, 79, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetDevToolsZoomLevel() const",3, 66, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::UpdateDevToolsZoomLevel( double level)",3, 73, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ActivateWindow()",4, 80, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::CloseWindow()",3, 52, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::LoadCompleted()",24, 80, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetInspectedPageBounds( const gfx :: Rect & rect)",9, 81, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::InspectElementCompleted()",1, 62, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::InspectedURLChanged( const std :: string & url)",5, 79, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::LoadNetworkResource( const DispatchCallback & callback , const std :: string & url , const std :: string & headers , int stream_id)",27, 77, 6, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetIsDocked( const DispatchCallback & callback , bool docked)",7, 79, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::OpenInNewTab( const std :: string & url)",1, 73, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ShowItemInFolder( const std :: string & file_system_path)",8, 74, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SaveToFile( const std :: string & url , const std :: string & content , bool save_as)",6, 72, 44, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::AppendToFile( const std :: string & url , const std :: string & content)",5, 76, 46, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RequestFileSystems()",4, 56, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::AddFileSystem( const std :: string & type)",4, 74, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RemoveFileSystem( const std :: string & file_system_path)",6, 59, 8, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::UpgradeDraggedFileSystemPermissions( const std :: string & file_system_url)",2, 70, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::IndexPath( int request_id , const std :: string & file_system_path , const std :: string & excluded_folders)",8, 63, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::StopIndexing( int request_id)",4, 64, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SearchInPath( int request_id , const std :: string & file_system_path , const std :: string & query)",7, 74, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetWhitelistedShortcuts( const std :: string & message)",2, 58, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetEyeDropperActive( bool active)",1, 69, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ShowCertificateViewer( const std :: string & cert_chain)",2, 56, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ZoomIn()",5, 70, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ZoomOut()",5, 69, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ResetZoom()",4, 60, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetDevicesDiscoveryConfig( bool discover_usb_devices , bool port_forwarding_enabled , const std :: string & port_forwarding_config , bool network_discovery_enabled , const std :: string & network_discovery_config)",6, 60, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetDevicesUpdatesEnabled( bool enabled)",1, 75, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::PerformActionOnRemotePage( const std :: string & page_id , const std :: string & action)",3, 60, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::OpenRemotePage( const std :: string & browser_id , const std :: string & url)",2, 79, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::OpenNodeFrontend()",1, 55, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::DispatchProtocolMessageFromDevToolsFrontend( const std :: string & message)",16, 80, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SendJsonRequest( const DispatchCallback & callback , const std :: string & browser_id , const std :: string & url)",6, 50, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::GetPreferences( const DispatchCallback & callback)",6, 58, 6, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SetPreference( const std :: string & name , const std :: string & value)",5, 75, 47, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RemovePreference( const std :: string & name)",4, 77, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ClearPreferences()",4, 68, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ConnectionReady()",1, 54, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RegisterExtensionsAPI( const std :: string & origin , const std :: string & script)",5, 56, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::HandleMessageFromDevToolsFrontend( const std :: string & message)",27, 80, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::DispatchProtocolMessage( content :: DevToolsAgentHost * agent_host , const std :: string & message)",20, 78, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::AgentHostClosed( content :: DevToolsAgentHost * agent_host)",2, 50, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RenderFrameHostChanged( content :: RenderFrameHost * old_host , content :: RenderFrameHost * new_host)",10, 81, 6, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::WebContentsDestroyed()",13, 58, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::DidAddMessageToConsole( content :: WebContents * source , int32_t level , const base :: string16 & message , int32_t line_no , const base :: string16 & source_id)",11, 75, 6, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ShouldCreateWebContents( content :: WebContents * web_contents , content :: RenderFrameHost * opener , content :: SiteInstance * source_site_instance , int32_t route_id , int32_t main_frame_route_id , int32_t main_frame_widget_route_id , content :: mojom :: WindowContainerType window_container_type , const GURL & opener_url , const std :: string & frame_name , const GURL & target_url , const std :: string & partition_id , content :: SessionStorageNamespace * session_storage_namespace)",15, 67, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::HandleKeyboardEvent( content :: WebContents * source , const content :: NativeWebKeyboardEvent & event)",7, 54, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::CloseContents( content :: WebContents * source)",4, 79, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::OpenColorChooser( content :: WebContents * source , SkColor color , const std :: vector<blink::mojom::ColorSuggestionPtr> & suggestions)",9, 72, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::RunFileChooser( content :: RenderFrameHost * render_frame_host , const content :: FileChooserParams & params)",7, 57, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::EnumerateDirectory( content :: WebContents * source , int request_id , const base :: FilePath & path)",8, 60, 4, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::OnWebContentsFocused( content :: RenderWidgetHost * render_widget_host)",7, 55, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::ReadyToCommitNavigation( content :: NavigationHandle * navigation_handle)",16, 76, 12, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::DidFinishNavigation( content :: NavigationHandle * navigation_handle)",21, 80, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::OnURLFetchComplete( const net :: URLFetcher * source)",27, 69, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_impl.cc,"atom::InspectableWebContentsImpl::SendMessageAck( int request_id , const base :: Value * arg)",5, 81, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::PathWithoutParams( const std :: string & path)",5, 65, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::GetMimeTypeForPath( const std :: string & path)",25, 81, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::BundledDataSource()",1, 25, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::GetSource() const",1, 75, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::StartDataRequest( const std :: string & path , const content :: ResourceRequestInfo :: WebContentsGetter & wc_getter , const GotDataCallback & callback)",17, 73, 6, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::GetMimeType( const std :: string & path) const",3, 68, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::ShouldAddContentSecurityPolicy() const",1, 73, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::ShouldDenyXFrameOptions() const",1, 66, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::ShouldServeMimeTypeAsContentTypeHeader() const",1, 80, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::StartBundledDataRequest( const std :: string & path , const GotDataCallback & callback)",14, 79, 8, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::BundledDataSource::~BundledDataSource()",1, 35, 2, 0
repos/cpp/electron/atom/browser/ui/devtools_ui.cc,"atom::DevToolsUI::DevToolsUI( content :: BrowserContext * browser_context , content :: WebUI * web_ui)",6, 73, 2, 0
repos/cpp/electron/atom/browser/ui/accelerator_util.cc,"accelerator_util::StringToAccelerator( const std :: string & shortcut , ui :: Accelerator * accelerator)",49, 78, 4, 0
repos/cpp/electron/atom/browser/ui/accelerator_util.cc,"accelerator_util::GenerateAcceleratorTable( AcceleratorTable * table , atom :: AtomMenuModel * model)",19, 72, 8, 0
repos/cpp/electron/atom/browser/ui/accelerator_util.cc,"accelerator_util::TriggerAcceleratorTableCommand( AcceleratorTable * table , const ui :: Accelerator & accelerator)",13, 74, 36, 0
repos/cpp/electron/atom/browser/ui/tray_icon_win.cc,"atom::TrayIcon::Create()",4, 34, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::GetCommonID( const base :: string16 & button)",16, 59, 0, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::MapToCommonID( const std :: vector<base::string16> & buttons , std :: map<int,int> * id_map , TASKDIALOG_COMMON_BUTTON_FLAGS * button_flags , std :: vector<TASKDIALOG_BUTTON> * dialog_buttons)",17, 69, 19, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::ShowTaskDialogUTF16( NativeWindow * parent , MessageBoxType type , const std :: vector<base::string16> & buttons , int default_id , int cancel_id , int options , const base :: string16 & title , const base :: string16 & message , const base :: string16 & detail , const base :: string16 & checkbox_label , bool * checkbox_checked , const gfx :: ImageSkia & icon)",108, 79, 8, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::ShowTaskDialogUTF8( NativeWindow * parent , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const std :: string & checkbox_label , bool * checkbox_checked , const gfx :: ImageSkia & icon)",22, 68, 6, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::RunMessageBoxInNewThread( base :: Thread * thread , NativeWindow * parent , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const std :: string & checkbox_label , bool checkbox_checked , const gfx :: ImageSkia & icon , const MessageBoxCallback & callback)",23, 80, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::ShowMessageBox( NativeWindow * parent , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const gfx :: ImageSkia & icon)",14, 81, 28, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::ShowMessageBox( NativeWindow * parent , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const std :: string & checkbox_label , bool checkbox_checked , const gfx :: ImageSkia & icon , const MessageBoxCallback & callback)",29, 79, 17, 0
repos/cpp/electron/atom/browser/ui/message_box_win.cc,"atom::ShowErrorBox( const base :: string16 & title , const base :: string16 & content)",5, 80, 0, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::Delegate::GetAcceleratorForCommandId( int command_id , ui :: Accelerator * accelerator) const",5, 79, 2, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::AtomMenuModel( Delegate * delegate)",2, 60, 4, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::~AtomMenuModel()",1, 35, 0, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::SetRole( int index , const base :: string16 & role)",4, 69, 0, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::GetRoleAt( int index)",7, 53, 0, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::GetAcceleratorAtWithParams( int index , bool use_default_accelerator , ui :: Accelerator * accelerator) const",10, 70, 8, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::ShouldRegisterAcceleratorAt( int index) const",7, 67, 0, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::MenuWillClose()",6, 42, 2, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::MenuWillShow()",6, 42, 2, 0
repos/cpp/electron/atom/browser/ui/atom_menu_model.cc,"atom::AtomMenuModel::GetSubmenuModelAt( int index)",4, 61, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileFilterCaseInsensitive( const GtkFileFilterInfo * file_info , std :: string * file_extension)",8, 71, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::OnFileFilterDataDestroyed( std :: string * file_extension)",3, 62, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::FileChooserDialog( GtkFileChooserAction action , const DialogSettings & settings)",47, 81, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::~FileChooserDialog()",5, 33, 4, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::SetupProperties( int properties)",10, 81, 41, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::RunAsynchronous()",12, 81, 4, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::RunSaveAsynchronous( const SaveDialogCallback & callback)",4, 65, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::RunOpenAsynchronous( const OpenDialogCallback & callback)",4, 65, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::GetFileName() const",6, 80, 4, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::GetFileNames() const",11, 81, 4, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::dialog() const",1, 48, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::OnFileDialogResponse( GtkWidget * widget , int response)",16, 80, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::FileChooserDialog::AddFilters( const Filters & filters)",19, 74, 10, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::ShowOpenDialog( const DialogSettings & settings , std :: vector<base::FilePath> * paths)",17, 67, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::ShowOpenDialog( const DialogSettings & settings , const OpenDialogCallback & callback)",9, 76, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::ShowSaveDialog( const DialogSettings & settings , base :: FilePath * path)",11, 76, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_gtk.cc,"file_dialog::ShowSaveDialog( const DialogSettings & settings , const SaveDialogCallback & callback)",6, 69, 6, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::IsDirectory( const base :: FilePath & path)",5, 73, 45, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ConvertFilters( const Filters & filters , std :: vector<std::wstring> * buffer , std :: vector<COMDLG_FILTERSPEC> * filterspec)",26, 76, 4, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::CreateDialogThread( RunState * run_state)",11, 76, 6, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::RunOpenDialogInNewThread( const RunState & run_state , const DialogSettings & settings , const OpenDialogCallback & callback)",9, 76, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::RunSaveDialogInNewThread( const RunState & run_state , const DialogSettings & settings , const SaveDialogCallback & callback)",9, 76, 2, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::GetFileNameFromShellItem( IShellItem * pShellItem , SIGDN type , LPWSTR lpstr , size_t cchLength)",22, 64, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::SetDefaultFolder( IFileDialog * dialog , const base :: FilePath file_path)",11, 80, 6, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ShowFileDialog( IFileDialog * dialog , const DialogSettings & settings)",11, 74, 10, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ApplySettings( IFileDialog * dialog , const DialogSettings & settings)",46, 81, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ShowOpenDialog( const DialogSettings & settings , std :: vector<base::FilePath> * paths)",52, 81, 4, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ShowOpenDialog( const DialogSettings & settings , const OpenDialogCallback & callback)",12, 77, 6, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ShowSaveDialog( const DialogSettings & settings , base :: FilePath * path)",29, 76, 0, 0
repos/cpp/electron/atom/browser/ui/file_dialog_win.cc,"file_dialog::ShowSaveDialog( const DialogSettings & settings , const SaveDialogCallback & callback)",12, 77, 6, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::CalculatePopupXAndWidth( const display :: Display & left_display , const display :: Display & right_display , int popup_required_width , const gfx :: Rect & element_bounds , bool is_rtl)",39, 81, 6, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::CalculatePopupYAndHeight( const display :: Display & top_display , const display :: Display & bottom_display , int popup_required_height , const gfx :: Rect & element_bounds)",31, 78, 6, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::GetDisplayNearestPoint( const gfx :: Point & point)",3, 70, 2, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::AutofillPopup()",5, 79, 2, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::~AutofillPopup()",3, 34, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::CreateView( content :: RenderFrameHost * frame_host , content :: RenderFrameHost * embedder_frame_host , bool offscreen , views :: View * parent , const gfx :: RectF & r)",34, 78, 31, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::Hide()",10, 35, 4, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::SetItems( const std :: vector<base::string16> & values , const std :: vector<base::string16> & labels)",10, 74, 29, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::AcceptSuggestion( int index)",4, 63, 2, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::UpdatePopupBounds()",33, 80, 2, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::popup_bounds_in_view()",6, 57, 2, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::OnViewBoundsChanged( views :: View * view)",4, 61, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::OnViewIsDeleting( views :: View * view)",3, 58, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetDesiredPopupHeight()",3, 66, 2, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetDesiredPopupWidth()",16, 72, 8, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetRowBounds( int index)",7, 70, 19, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetValueFontListForRow( int index) const",3, 78, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetLabelFontListForRow( int index) const",3, 78, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetBackgroundColorIDForRow( int index) const",6, 71, 13, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetLineCount()",3, 36, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetValueAt( int i)",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::GetLabelAt( int i)",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/autofill_popup.cc,"atom::AutofillPopup::LineFromY( int y) const",12, 48, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::GtkMessageBox( NativeWindow * parent_window , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , const std :: string & title , const std :: string & message , const std :: string & detail , const std :: string & checkbox_label , bool checkbox_checked , const gfx :: ImageSkia & icon)",69, 78, 31, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::~GtkMessageBox()",7, 66, 6, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::GetMessageType( MessageBoxType type)",14, 55, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::TranslateToStock( int id , const std :: string & text)",12, 66, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::Show()",7, 78, 4, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::RunSynchronous()",8, 56, 4, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::RunAsynchronous( const MessageBoxCallback & callback)",8, 77, 4, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::OnWindowClosed()",4, 35, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::OnResponseDialog( GtkWidget * widget , int response)",9, 72, 0, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::GtkMessageBox::OnCheckboxToggled( GtkWidget * widget)",3, 79, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::ShowMessageBox( NativeWindow * parent , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const gfx :: ImageSkia & icon)",14, 76, 2, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::ShowMessageBox( NativeWindow * parent , MessageBoxType type , const std :: vector<std::string> & buttons , int default_id , int cancel_id , int options , const std :: string & title , const std :: string & message , const std :: string & detail , const std :: string & checkbox_label , bool checkbox_checked , const gfx :: ImageSkia & icon , const MessageBoxCallback & callback)",17, 79, 21, 0
repos/cpp/electron/atom/browser/ui/message_box_gtk.cc,"atom::ShowErrorBox( const base :: string16 & title , const base :: string16 & content)",15, 80, 0, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents.cc,"atom::InspectableWebContents::Create( content :: WebContents * web_contents , PrefService * pref_service , bool is_guest)",6, 79, 2, 0
repos/cpp/electron/atom/browser/ui/inspectable_web_contents_view_delegate.cc,"atom::InspectableWebContentsViewDelegate::GetDevToolsWindowIcon()",3, 77, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::MenuDelegate( MenuBar * menu_bar)",2, 65, 4, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::~MenuDelegate()",1, 33, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::RunMenu( AtomMenuModel * model , views :: MenuButton * button , ui :: MenuSourceType source_type)",25, 80, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::ExecuteCommand( int id)",5, 44, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::ExecuteCommand( int id , int mouse_event_flags)",5, 67, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::IsTriggerableEvent( views :: MenuItemView * source , const ui :: Event & e)",4, 67, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::GetAccelerator( int id , ui :: Accelerator * accelerator) const",3, 80, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::GetLabel( int id) const",3, 54, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::GetLabelStyle( int id , LabelStyle * style) const",3, 68, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::IsCommandEnabled( int id) const",3, 52, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::IsCommandVisible( int id) const",3, 52, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::IsItemChecked( int id) const",3, 49, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::SelectionChanged( views :: MenuItemView * menu)",3, 65, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::WillShowMenu( views :: MenuItemView * menu)",3, 61, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::WillHideMenu( views :: MenuItemView * menu)",3, 61, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::OnMenuClosed( views :: MenuItemView * menu)",9, 61, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_delegate.cc,"atom::MenuDelegate::GetSiblingMenu( views :: MenuItemView * menu , const gfx :: Point & screen_point , views :: MenuAnchorPosition * anchor , bool * has_mnemonics , views :: MenuButton **)",31, 80, 2, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::IsAltKey( const content :: NativeWebKeyboardEvent & event)",3, 62, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::IsAltModifier( const content :: NativeWebKeyboardEvent & event)",9, 69, 9, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::RootView( NativeWindow * window)",5, 75, 6, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::~RootView()",1, 25, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::SetMenu( AtomMenuModel * menu_model)",26, 52, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::HasMenu() const",3, 33, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::GetMenuBarHeight() const",3, 41, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::SetAutoHideMenuBar( bool auto_hide)",3, 52, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::IsMenuBarAutoHide() const",3, 43, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::SetMenuBarVisibility( bool visible)",15, 78, 2, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::IsMenuBarVisible() const",3, 42, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::HandleKeyEvent( const content :: NativeWebKeyboardEvent & event)",47, 81, 2, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::RestoreFocus()",9, 70, 8, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::ResetAltState()",3, 33, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::Layout()",14, 74, 6, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::GetMinimumSize() const",3, 45, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::GetMaximumSize() const",3, 45, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::AcceleratorPressed( const ui :: Accelerator & accelerator)",4, 79, 2, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::RegisterAcceleratorsWithFocusManager( AtomMenuModel * menu_model)",14, 81, 0, 0
repos/cpp/electron/atom/browser/ui/views/root_view.cc,"atom::RootView::UnregisterAcceleratorsWithFocusManager()",5, 58, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::FramelessView()",1, 34, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::~FramelessView()",1, 35, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::Init( NativeWindowViews * window , views :: Widget * frame)",4, 76, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::ResizingBorderHitTest( const gfx :: Point & point)",15, 78, 2, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::GetBoundsForClientView() const",3, 58, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::GetWindowBoundsForClientBounds( const gfx :: Rect & client_bounds) const",12, 75, 2, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::NonClientHitTest( const gfx :: Point & cursor)",17, 78, 2, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::GetWindowMask( const gfx :: Size & size , gfx :: Path * window_mask)",2, 61, 34, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::ResetWindowControls()",1, 45, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::UpdateWindowIcon()",1, 42, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::UpdateWindowTitle()",1, 43, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::SizeConstraintsChanged()",1, 48, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::CalculatePreferredSize() const",6, 64, 10, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::GetMinimumSize() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::GetMaximumSize() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/views/frameless_view.cc,"atom::FramelessView::GetClassName() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::EnsureMethodsLoaded()",44, 81, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::ModelForMenuItem( DbusmenuMenuitem * item)",4, 58, 0, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GetMenuItemID( DbusmenuMenuitem * item , int * id)",9, 66, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::SetMenuItemID( DbusmenuMenuitem * item , int id)",6, 73, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GetMenuModelStatus( AtomMenuModel * model)",11, 77, 8, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::GlobalMenuBarX11( NativeWindowViews * window)",9, 76, 6, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::~GlobalMenuBarX11()",6, 68, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::GetPathForWindow( gfx :: AcceleratedWidget xid)",3, 77, 0, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::SetMenu( AtomMenuModel * menu_model)",14, 65, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::IsServerStarted() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::InitServer( gfx :: AcceleratedWidget xid)",4, 64, 0, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::OnWindowMapped()",3, 66, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::OnWindowUnmapped()",3, 68, 2, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::BuildMenuFromModel( AtomMenuModel * model , DbusmenuMenuitem * parent)",45, 81, 6, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::RegisterAccelerator( DbusmenuMenuitem * item , const ui :: Accelerator & accelerator)",29, 81, 43, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::OnItemActivated( DbusmenuMenuitem * item , unsigned int timestamp)",7, 65, 39, 0
repos/cpp/electron/atom/browser/ui/views/global_menu_bar_x11.cc,"atom::GlobalMenuBarX11::OnSubMenuShow( DbusmenuMenuitem * item)",24, 79, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_model_adapter.cc,"atom::MenuModelAdapter::MenuModelAdapter( AtomMenuModel * menu_model)",2, 70, 4, 0
repos/cpp/electron/atom/browser/ui/views/menu_model_adapter.cc,"atom::MenuModelAdapter::~MenuModelAdapter()",1, 41, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_model_adapter.cc,"atom::MenuModelAdapter::GetAccelerator( int id , ui :: Accelerator * accelerator) const",10, 76, 38, 0
repos/cpp/electron/atom/browser/ui/views/win_frame_view.cc,"atom::WinFrameView::WinFrameView()",1, 32, 0, 0
repos/cpp/electron/atom/browser/ui/views/win_frame_view.cc,"atom::WinFrameView::~WinFrameView()",1, 33, 0, 0
repos/cpp/electron/atom/browser/ui/views/win_frame_view.cc,"atom::WinFrameView::GetWindowBoundsForClientBounds( const gfx :: Rect & client_bounds) const",6, 66, 6, 0
repos/cpp/electron/atom/browser/ui/views/win_frame_view.cc,"atom::WinFrameView::NonClientHitTest( const gfx :: Point & point)",6, 62, 0, 0
repos/cpp/electron/atom/browser/ui/views/win_frame_view.cc,"atom::WinFrameView::GetClassName() const",3, 49, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupChildView::GetAccessibleNodeData( ui :: AXNodeData * node_data)",4, 80, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::AutofillPopupView( AutofillPopup * popup , views :: Widget * parent_widget)",7, 78, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::~AutofillPopupView()",20, 72, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::Show()",48, 77, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::Hide()",14, 72, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnSuggestionsChanged()",11, 49, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::WriteDragDataForView( views :: View * , const gfx :: Point & , ui :: OSExchangeData *)",3, 69, 45, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::GetDragOperationsForView( views :: View * , const gfx :: Point &)",4, 69, 48, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::CanStartDragForView( views :: View * , const gfx :: Point & , const gfx :: Point &)",5, 65, 44, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnSelectedRowChanged( base :: Optional<int> previous_row_selection , base :: Optional<int> current_row_selection)",13, 79, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::DrawAutofillEntry( gfx :: Canvas * canvas , int index , const gfx :: Rect & entry_rect)",47, 80, 35, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::CreateChildViews()",12, 74, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::DoUpdateBoundsAndRedrawPopup()",12, 60, 4, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnPaint( gfx :: Canvas * canvas)",33, 74, 26, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::GetAccessibleNodeData( ui :: AXNodeData * node_data)",4, 75, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnMouseCaptureLost()",3, 47, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnMouseDragged( const ui :: MouseEvent & event)",13, 70, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnMouseExited( const ui :: MouseEvent & event)",8, 80, 2, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnMouseMoved( const ui :: MouseEvent & event)",16, 79, 2, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnMousePressed( const ui :: MouseEvent & event)",3, 70, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnMouseReleased( const ui :: MouseEvent & event)",5, 71, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnGestureEvent( ui :: GestureEvent * event)",26, 66, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::AcceleratorPressed( const ui :: Accelerator & accelerator)",15, 81, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::HandleKeyPressEvent( const content :: NativeWebKeyboardEvent & event)",32, 78, 6, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnNativeFocusChanged( gfx :: NativeView focused_now)",4, 76, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::OnWidgetBoundsChanged( views :: Widget * widget , const gfx :: Rect & new_bounds)",7, 77, 46, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::AcceptSuggestion( int index)",7, 54, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::AcceptSelectedLine()",7, 75, 2, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::AcceptSelection( const gfx :: Point & point)",7, 67, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::SetSelectedLine( base :: Optional<int> selected_line)",12, 77, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::SetSelection( const gfx :: Point & point)",6, 64, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::SelectNextLine()",10, 68, 2, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::SelectPreviousLine()",10, 58, 2, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::ClearSelection()",3, 43, 0, 0
repos/cpp/electron/atom/browser/ui/views/autofill_popup_view.cc,"atom::AutofillPopupView::RemoveObserver()",5, 77, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::DevToolsWindowDelegate( InspectableWebContentsViewViews * shell , views :: View * view , views :: Widget * widget)",13, 65, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::~DevToolsWindowDelegate()",1, 40, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::DeleteDelegate()",1, 50, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetInitiallyFocusedView()",1, 68, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::CanResize() const",1, 51, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::CanMaximize() const",1, 53, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::CanMinimize() const",1, 53, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetWindowTitle() const",1, 80, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetWindowAppIcon()",1, 73, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetWindowIcon()",1, 60, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetWidget()",1, 58, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetWidget() const",1, 70, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::GetContentsView()",1, 60, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::CreateClientView( views :: Widget * widget)",3, 72, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::DevToolsWindowDelegate::CanClose()",4, 57, 4, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::CreateInspectableContentsView( InspectableWebContentsImpl * inspectable_web_contents)",4, 72, 2, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::InspectableWebContentsViewViews( InspectableWebContentsImpl * inspectable_web_contents)",26, 81, 8, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::~InspectableWebContentsViewViews()",5, 70, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::GetView()",3, 58, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::GetWebView()",3, 61, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::ShowDevTools( bool activate)",23, 68, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::CloseDevTools()",17, 56, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::IsDevToolsViewShowing()",3, 64, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::IsDevToolsViewFocused()",8, 64, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::SetIsDocked( bool docked , bool activate)",27, 80, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::SetContentsResizingStrategy( const DevToolsContentsResizingStrategy & strategy)",5, 67, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::SetTitle( const base :: string16 & title)",6, 78, 0, 0
repos/cpp/electron/atom/browser/ui/views/inspectable_web_contents_view_views.cc,"atom::InspectableWebContentsViewViews::Layout()",20, 78, 6, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"IsDesktopEnvironmentUnity()",6, 71, 2, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::ViewsDelegate()",1, 34, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::~ViewsDelegate()",1, 35, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::SaveWindowPlacement( const views :: Widget * window , const std :: string & window_name , const gfx :: Rect & bounds , ui :: WindowShowState show_state)",4, 75, 40, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::GetSavedWindowPlacement( const views :: Widget * widget , const std :: string & window_name , gfx :: Rect * bounds , ui :: WindowShowState * show_state) const",7, 45, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::NotifyAccessibilityEvent( views :: View * view , ax :: mojom :: Event event_type)",2, 77, 45, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::NotifyMenuItemFocused( const base :: string16 & menu_name , const base :: string16 & menu_item_name , int item_index , int item_count , bool has_submenu)",5, 80, 42, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::GetDefaultWindowIcon() const",5, 59, 18, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::GetSmallWindowIcon() const",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::IsWindowInMetro( gfx :: NativeWindow window) const",3, 70, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::GetDefaultWindowIcon() const",3, 62, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::CreateDefaultNonClientFrameView( views :: Widget * widget)",4, 75, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::AddRef()",1, 32, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::ReleaseRef()",1, 36, 0, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::OnBeforeWidgetInit( views :: Widget :: InitParams * params , views :: internal :: NativeWidgetDelegate * delegate)",15, 80, 2, 0
repos/cpp/electron/atom/browser/ui/views/atom_views_delegate.cc,"atom::ViewsDelegate::WindowManagerProvidesTitleBar( bool maximized)",12, 75, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBarColorUpdater::MenuBarColorUpdater( MenuBar * menu_bar)",2, 60, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBarColorUpdater::~MenuBarColorUpdater()",1, 47, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBarColorUpdater::OnDidChangeFocus( views :: View * focused_before , views :: View * focused_now)",10, 72, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::MenuBar( RootView * window)",11, 76, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::~MenuBar()",3, 79, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::SetMenu( AtomMenuModel * model)",4, 46, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::SetAcceleratorVisibility( bool visible)",4, 75, 4, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::FindAccelChild( base :: char16 key)",7, 66, 4, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::HasAccelerator( base :: char16 key)",3, 49, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::ActivateAccelerator( base :: char16 key)",5, 59, 4, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::GetItemCount() const",3, 56, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::GetMenuButtonFromScreenPoint( const gfx :: Point & screenPoint , AtomMenuModel ** menu_model , views :: MenuButton ** button)",18, 74, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::OnBeforeExecuteCommand()",4, 41, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::OnMenuClosed()",3, 34, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::AcceleratorPressed( const ui :: Accelerator & accelerator)",46, 81, 10, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::SetPaneFocus( views :: View * initial_focus)",30, 80, 6, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::RemovePaneFocus()",22, 77, 4, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::GetClassName() const",3, 44, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::OnMenuButtonClicked( views :: MenuButton * source , const gfx :: Point & point , const ui :: Event * event)",30, 69, 2, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::RefreshColorCache( const ui :: NativeTheme * theme)",19, 78, 8, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::OnNativeThemeChanged( const ui :: NativeTheme * theme)",4, 67, 0, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::RebuildChildren()",10, 80, 8, 0
repos/cpp/electron/atom/browser/ui/views/menu_bar.cc,"atom::MenuBar::UpdateViewColors()",24, 75, 4, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::SubmenuButton( const base :: string16 & title , views :: MenuButtonListener * menu_button_listener , const SkColor & background_color)",21, 78, 29, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::~SubmenuButton()",1, 35, 0, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::CreateInkDropRipple() const",8, 77, 10, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::CreateInkDrop()",6, 65, 0, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::SetAcceleratorVisibility( bool visible)",7, 61, 0, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::SetUnderlineColor( SkColor color)",3, 55, 0, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::GetAccessibleNodeData( ui :: AXNodeData * node_data)",4, 71, 0, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::PaintButtonContents( gfx :: Canvas * canvas)",12, 67, 8, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::GetUnderlinePosition( const base :: string16 & text , base :: char16 * accelerator , int * start , int * end) const",15, 79, 2, 0
repos/cpp/electron/atom/browser/ui/views/submenu_button.cc,"atom::SubmenuButton::GetCharacterPosition( const base :: string16 & text , int index , int * pos) const",7, 74, 2, 0
repos/cpp/electron/atom/browser/ui/views/native_frame_view.cc,"atom::NativeFrameView::NativeFrameView( NativeWindow * window , views :: Widget * widget)",2, 78, 0, 0
repos/cpp/electron/atom/browser/ui/views/native_frame_view.cc,"atom::NativeFrameView::GetMinimumSize() const",3, 52, 0, 0
repos/cpp/electron/atom/browser/ui/views/native_frame_view.cc,"atom::NativeFrameView::GetMaximumSize() const",3, 52, 0, 0
repos/cpp/electron/atom/browser/ui/views/native_frame_view.cc,"atom::NativeFrameView::GetClassName() const",3, 52, 0, 0
repos/cpp/electron/atom/browser/ui/cocoa/delayed_native_view_host.cc,"atom::DelayedNativeViewHost::DelayedNativeViewHost( gfx :: NativeView native_view)",2, 74, 0, 0
repos/cpp/electron/atom/browser/ui/cocoa/delayed_native_view_host.cc,"atom::DelayedNativeViewHost::~DelayedNativeViewHost()",1, 51, 0, 0
repos/cpp/electron/atom/browser/ui/cocoa/delayed_native_view_host.cc,"atom::DelayedNativeViewHost::ViewHierarchyChanged( const ViewHierarchyChangedDetails & details)",6, 50, 0, 0
repos/cpp/electron/atom/browser/ui/x/x_window_utils.cc,"atom::GetAtom( const char * name)",3, 55, 2, 0
repos/cpp/electron/atom/browser/ui/x/x_window_utils.cc,"atom::SetWMSpecState( :: Window xwindow , bool enabled , :: Atom state)",17, 75, 13, 0
repos/cpp/electron/atom/browser/ui/x/x_window_utils.cc,"atom::SetWindowType( :: Window xwindow , const std :: string & type)",10, 79, 6, 0
repos/cpp/electron/atom/browser/ui/x/x_window_utils.cc,"atom::ShouldUseGlobalMenuBar()",37, 80, 6, 0
repos/cpp/electron/atom/browser/ui/x/event_disabler.cc,"atom::EventDisabler::EventDisabler()",1, 34, 0, 0
repos/cpp/electron/atom/browser/ui/x/event_disabler.cc,"atom::EventDisabler::~EventDisabler()",1, 35, 0, 0
repos/cpp/electron/atom/browser/ui/x/event_disabler.cc,"atom::EventDisabler::RewriteEvent( const ui :: Event & event , std :: unique_ptr<ui::Event> * rewritten_event)",5, 52, 0, 0
repos/cpp/electron/atom/browser/ui/x/event_disabler.cc,"atom::EventDisabler::NextDispatchEvent( const ui :: Event & last_event , std :: unique_ptr<ui::Event> * new_event)",5, 57, 0, 0
repos/cpp/electron/atom/browser/ui/x/window_state_watcher.cc,"atom::WindowStateWatcher::WindowStateWatcher( NativeWindowViews * window)",4, 74, 2, 0
repos/cpp/electron/atom/browser/ui/x/window_state_watcher.cc,"atom::WindowStateWatcher::~WindowStateWatcher()",3, 77, 2, 0
repos/cpp/electron/atom/browser/ui/x/window_state_watcher.cc,"atom::WindowStateWatcher::WillProcessEvent( const ui :: PlatformEvent & event)",6, 76, 0, 0
repos/cpp/electron/atom/browser/ui/x/window_state_watcher.cc,"atom::WindowStateWatcher::DidProcessEvent( const ui :: PlatformEvent & event)",28, 81, 6, 0
repos/cpp/electron/atom/browser/ui/x/window_state_watcher.cc,"atom::WindowStateWatcher::IsWindowStateEvent( const ui :: PlatformEvent & event)",5, 80, 10, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_native_widget_aura.cc,"atom::AtomDesktopNativeWidgetAura::AtomDesktopNativeWidgetAura( views :: internal :: NativeWidgetDelegate * delegate)",6, 60, 2, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_native_widget_aura.cc,"atom::AtomDesktopNativeWidgetAura::Activate()",7, 68, 2, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_native_widget_aura.cc,"atom::AtomDesktopNativeWidgetAura::OnWindowActivated( wm :: ActivationChangeObserver :: ActivationReason reason , aura :: Window * gained_active , aura :: Window * lost_active)",18, 79, 4, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_window_tree_host_win.cc,"atom::AtomDesktopWindowTreeHostWin::AtomDesktopWindowTreeHostWin( MessageHandlerDelegate * delegate , views :: internal :: NativeWidgetDelegate * native_widget_delegate , views :: DesktopNativeWidgetAura * desktop_native_widget_aura)",7, 67, 4, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_window_tree_host_win.cc,"atom::AtomDesktopWindowTreeHostWin::~AtomDesktopWindowTreeHostWin()",1, 65, 0, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_window_tree_host_win.cc,"atom::AtomDesktopWindowTreeHostWin::PreHandleMSG( UINT message , WPARAM w_param , LPARAM l_param , LRESULT * result)",6, 69, 2, 0
repos/cpp/electron/atom/browser/ui/win/atom_desktop_window_tree_host_win.cc,"atom::AtomDesktopWindowTreeHostWin::HasNativeFrame() const",6, 79, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"AppendTask( const JumpListItem & item , IObjectCollection * collection)",22, 77, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"AppendSeparator( IObjectCollection * collection)",12, 74, 12, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"AppendFile( const JumpListItem & item , IObjectCollection * collection)",10, 77, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"GetShellItemFileName( IShellItem * shell_item , base :: FilePath * file_name)",12, 79, 0, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"ConvertShellLinkToJumpListItem( IShellLink * shell_link , JumpListItem * item)",36, 78, 10, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"ConvertRemovedJumpListItems( IObjectArray * in , std :: vector<JumpListItem> * out)",25, 72, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::JumpList( const base :: string16 & app_id)",3, 69, 0, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::Begin( int * min_items , std :: vector<JumpListItem> * removed_items)",21, 81, 0, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::Abort()",7, 48, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::Commit()",7, 49, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::Delete()",7, 64, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::AppendCategory( const JumpListCategory & category)",90, 79, 2, 0
repos/cpp/electron/atom/browser/ui/win/jump_list.cc,"atom::JumpList::AppendCategories( const std :: vector<JumpListCategory> & categories)",38, 78, 4, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::NotifyIcon( NotifyIconHost * host , UINT id , HWND window , UINT message)",16, 81, 0, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::~NotifyIcon()",7, 44, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::HandleClickEvent( int modifiers , bool left_mouse_click , bool double_button_click)",20, 74, 20, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::ResetIcon()",18, 73, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::SetImage( HICON image)",12, 60, 4, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::SetPressedImage( HICON image)",4, 78, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::SetToolTip( const std :: string & tool_tip)",10, 78, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::DisplayBalloon( HICON icon , const base :: string16 & title , const base :: string16 & contents)",17, 66, 32, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::PopUpContextMenu( const gfx :: Point & pos , AtomMenuModel * menu_model)",37, 81, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::SetContextMenu( AtomMenuModel * menu_model)",3, 61, 0, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::GetBounds()",11, 77, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::InitIconData( NOTIFYICONDATA * icon_data)",6, 59, 0, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon.cc,"atom::NotifyIcon::OnContextMenuClosed()",3, 41, 0, 0
repos/cpp/electron/atom/browser/ui/win/message_handler_delegate.cc,"atom::MessageHandlerDelegate::PreHandleMSG( UINT message , WPARAM w_param , LPARAM l_param , LRESULT * result)",6, 61, 42, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::IsWinPressed()",4, 58, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::GetKeyboardModifers()",12, 38, 4, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::NotifyIconHost()",24, 80, 2, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::~NotifyIconHost()",10, 52, 4, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::CreateNotifyIcon()",6, 71, 6, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::Remove( NotifyIcon * icon)",11, 68, 6, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::WndProcStatic( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",11, 80, 6, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::WndProc( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",60, 76, 4, 0
repos/cpp/electron/atom/browser/ui/win/notify_icon_host.cc,"atom::NotifyIconHost::NextIconId()",4, 36, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::GetThumbarButtonFlags( const std :: vector<std::string> & flags , THUMBBUTTONFLAGS * out)",20, 66, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::TaskbarHost()",1, 30, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::~TaskbarHost()",1, 31, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::SetThumbarButtons( HWND window , const std :: vector<ThumbarButton> & buttons)",65, 81, 36, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::RestoreThumbarButtons( HWND window)",6, 55, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::SetProgressBar( HWND window , double value , const NativeWindow :: ProgressState state)",32, 81, 4, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::SetOverlayIcon( HWND window , const gfx :: Image & overlay , const std :: string & text)",11, 79, 44, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::SetThumbnailClip( HWND window , const gfx :: Rect & region)",12, 75, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::SetThumbnailToolTip( HWND window , const std :: string & tooltip)",7, 81, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::HandleThumbarButtonEvent( int button_id)",9, 60, 0, 0
repos/cpp/electron/atom/browser/ui/win/taskbar_host.cc,"atom::TaskbarHost::InitializeTaskbar()",14, 61, 32, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::CreateResponseHeadersDictionary( const net :: HttpResponseHeaders * headers , base :: DictionaryValue * result)",18, 78, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PopulateStreamInfo( base :: DictionaryValue * stream_info , content :: StreamInfo * stream , const std :: string & original_url)",11, 66, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::PdfViewerHandler( const std :: string & src)",2, 59, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::~PdfViewerHandler()",3, 40, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::SetPdfResourceStream( content :: StreamInfo * stream)",8, 75, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::RegisterMessages()",19, 80, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::OnJavascriptAllowed()",3, 47, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::OnJavascriptDisallowed()",3, 50, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::Initialize( const base :: ListValue * args)",22, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::GetDefaultZoom( const base :: ListValue * args)",13, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::GetInitialZoom( const base :: ListValue * args)",13, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::SetZoom( const base :: ListValue * args)",14, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::GetStrings( const base :: ListValue * args)",31, 80, 13, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::Reload( const base :: ListValue * args)",4, 61, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::OnZoomLevelChanged( content :: WebContents * web_contents , double level , bool is_temporary)",9, 80, 27, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::AddObserver()",5, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_handler.cc,"atom::PdfViewerHandler::RemoveObserver()",5, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PathWithoutParams( const std :: string & path)",3, 59, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::BundledDataSource()",8, 74, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::GetSource() const",1, 70, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::StartDataRequest( const std :: string & path , const content :: ResourceRequestInfo :: WebContentsGetter & wc_getter , const GotDataCallback & callback)",16, 78, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::GetMimeType( const std :: string & path) const",9, 77, 8, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::ShouldAddContentSecurityPolicy() const",1, 73, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::ShouldDenyXFrameOptions() const",1, 66, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::ShouldServeMimeTypeAsContentTypeHeader() const",1, 80, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::BundledDataSource::~BundledDataSource()",1, 35, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::CallMigrationCallback( T callback , std :: unique_ptr<content::StreamInfo> stream_info)",4, 79, 27, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::ResourceRequester::ResourceRequester( StreamResponseCallback cb)",2, 56, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::ResourceRequester::StartRequest( const GURL & url , const GURL & origin , int render_process_id , int render_view_id , int render_frame_id , content :: ResourceContext * resource_context)",47, 81, 8, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::ResourceRequester::OnResponseStarted( network :: ResourceResponse * response)",17, 73, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::ResourceRequester::~ResourceRequester()",1, 35, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::PdfViewerUI( content :: BrowserContext * browser_context , content :: WebUI * web_ui , const std :: string & src)",11, 71, 2, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::~PdfViewerUI()",1, 31, 0, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::OnMessageReceived( const IPC :: Message & message , content :: RenderFrameHost * render_frame_host)",10, 68, 4, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::OnPdfStreamCreated( std :: unique_ptr<content::StreamInfo> stream)",7, 55, 4, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::RenderFrameCreated( content :: RenderFrameHost * rfh)",15, 80, 6, 0
repos/cpp/electron/atom/browser/ui/webui/pdf_viewer_ui.cc,"atom::PdfViewerUI::OnSaveURLAs( const GURL & url , const content :: Referrer & referrer)",4, 67, 30, 0
repos/cpp/electron/atom/common/color_util.cc,"atom::ParseHexColor( const std :: string & color_string)",33, 79, 2, 0
repos/cpp/electron/atom/common/color_util.cc,"atom::ToRGBHex( SkColor color)",4, 69, 28, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::StringVectorToArgArray( const std :: vector<std::string> & vector)",8, 73, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::GetResourcesPath( bool is_browser)",16, 80, 10, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::NodeBindings( BrowserEnvironment browser_env)",9, 59, 0, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::~NodeBindings()",17, 72, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::RegisterBuiltinModules()",11, 46, 0, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::IsInitialized()",3, 37, 0, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::GetHelperResourcesPath()",3, 68, 0, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::Initialize()",87, 78, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::CreateEnvironment( v8 :: Handle<v8::Context> context , node :: MultiIsolatePlatform * platform)",60, 81, 4, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::LoadEnvironment( node :: Environment * env)",4, 68, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::PrepareMessageLoop()",9, 74, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::RunMessageLoop()",7, 80, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::UvRunOnce()",35, 81, 2, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::WakeupMainThread()",5, 81, 51, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::WakeupEmbedThread()",3, 41, 0, 0
repos/cpp/electron/atom/common/node_bindings.cc,"atom::NodeBindings::EmbedThreadRunner( void * arg)",22, 78, 4, 0
repos/cpp/electron/atom/common/node_bindings_mac.cc,"atom::NodeBindingsMac::NodeBindingsMac( BrowserEnvironment browser_env)",2, 65, 0, 0
repos/cpp/electron/atom/common/node_bindings_mac.cc,"atom::NodeBindingsMac::~NodeBindingsMac()",1, 39, 0, 0
repos/cpp/electron/atom/common/node_bindings_mac.cc,"atom::NodeBindingsMac::RunMessageLoop()",7, 62, 2, 0
repos/cpp/electron/atom/common/node_bindings_mac.cc,"atom::NodeBindingsMac::OnWatcherQueueChanged( uv_loop_t * loop)",7, 78, 2, 0
repos/cpp/electron/atom/common/node_bindings_mac.cc,"atom::NodeBindingsMac::PollEvents()",20, 51, 4, 0
repos/cpp/electron/atom/common/node_bindings_mac.cc,"atom::NodeBindings::Create( BrowserEnvironment browser_env)",3, 69, 0, 0
repos/cpp/electron/atom/common/heap_snapshot.cc,"HeapSnapshotOutputStream::HeapSnapshotOutputStream( base :: File * file)",3, 70, 2, 0
repos/cpp/electron/atom/common/heap_snapshot.cc,"HeapSnapshotOutputStream::IsComplete() const",1, 51, 2, 0
repos/cpp/electron/atom/common/heap_snapshot.cc,"HeapSnapshotOutputStream::GetChunkSize()",1, 48, 2, 0
repos/cpp/electron/atom/common/heap_snapshot.cc,"HeapSnapshotOutputStream::EndOfStream()",1, 55, 2, 0
repos/cpp/electron/atom/common/heap_snapshot.cc,"HeapSnapshotOutputStream::WriteAsciiChunk( char * data , int size)",4, 81, 2, 0
repos/cpp/electron/atom/common/heap_snapshot.cc,"atom::TakeHeapSnapshot( v8 :: Isolate * isolate , base :: File * file)",18, 67, 2, 0
repos/cpp/electron/atom/common/atom_command_line.cc,"atom::AtomCommandLine::Init( int argc , base :: CommandLine :: CharType ** argv)",12, 79, 2, 0
repos/cpp/electron/atom/common/atom_command_line.cc,"atom::AtomCommandLine::InitializeFromCommandLine()",3, 58, 2, 0
repos/cpp/electron/atom/common/keyboard_util.cc,"atom::KeyboardCodeFromKeyIdentifier( const std :: string & s , bool * shifted)",114, 69, 0, 0
repos/cpp/electron/atom/common/keyboard_util.cc,"atom::KeyboardCodeFromCharCode( base :: char16 c , bool * shifted)",180, 75, 0, 0
repos/cpp/electron/atom/common/keyboard_util.cc,"atom::KeyboardCodeFromStr( const std :: string & str , bool * shifted)",6, 78, 0, 0
repos/cpp/electron/atom/common/keyboard_util.cc,"atom::WebEventModifiersToEventFlags( int modifiers)",28, 59, 2, 0
repos/cpp/electron/atom/common/application_info_linux.cc,"get_desktop_app_info()",9, 54, 4, 0
repos/cpp/electron/atom/common/application_info_linux.cc,"atom::GetApplicationName()",23, 73, 2, 0
repos/cpp/electron/atom/common/application_info_linux.cc,"atom::GetApplicationVersion()",19, 70, 4, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"XDGUtilV( const std :: vector<std::string> & argv , const bool wait_for_exit)",23, 80, 0, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"XDGUtil( const std :: string & util , const std :: string & arg , const bool wait_for_exit)",9, 41, 13, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"XDGOpen( const std :: string & path , const bool wait_for_exit)",3, 66, 0, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"XDGEmail( const std :: string & email , const bool wait_for_exit)",3, 68, 0, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::ShowItemInFolder( const base :: FilePath & full_path)",7, 57, 0, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::OpenItem( const base :: FilePath & full_path)",3, 49, 0, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::OpenExternal( const GURL & url , const OpenExternalOptions & options)",8, 76, 2, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::OpenExternal( const GURL & url , const OpenExternalOptions & options , const OpenExternalCallback & callback)",6, 68, 2, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::MoveItemToTrash( const base :: FilePath & full_path)",40, 77, 2, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::Beep()",8, 46, 2, 0
repos/cpp/electron/atom/common/platform_util_linux.cc,"platform_util::GetDesktopName( std :: string * setme)",13, 71, 2, 0
repos/cpp/electron/atom/common/mouse_util.cc,"atom::CursorTypeToString( const content :: CursorInfo & info)",94, 66, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::DeleteFileProgressSink()",3, 51, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PreDeleteItem( DWORD dwFlags , IShellItem *)",12, 80, 2, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::QueryInterface( REFIID riid , LPVOID * ppvObj)",13, 78, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::AddRef()",4, 41, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::Release()",8, 52, 2, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::StartOperations()",3, 52, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::FinishOperations( HRESULT)",3, 60, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PreRenameItem( DWORD , IShellItem * , LPCWSTR)",3, 77, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PostRenameItem( DWORD , IShellItem * , __RPC__in_string LPCWSTR , HRESULT , IShellItem *)",7, 73, 47, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PreMoveItem( DWORD , IShellItem * , IShellItem * , LPCWSTR)",6, 57, 44, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PostMoveItem( DWORD , IShellItem * , IShellItem * , LPCWSTR , HRESULT , IShellItem *)",8, 60, 45, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PreCopyItem( DWORD , IShellItem * , IShellItem * , LPCWSTR)",6, 57, 44, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PostCopyItem( DWORD , IShellItem * , IShellItem * , LPCWSTR , HRESULT , IShellItem *)",8, 60, 45, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PostDeleteItem( DWORD , IShellItem * , HRESULT , IShellItem *)",6, 62, 47, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PreNewItem( DWORD dwFlags , IShellItem * , LPCWSTR)",5, 58, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PostNewItem( DWORD , IShellItem * , LPCWSTR , LPCWSTR , DWORD , HRESULT , IShellItem *)",9, 59, 44, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::UpdateProgress( UINT , UINT)",3, 61, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::ResetTimer()",3, 47, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::PauseTimer()",3, 47, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"DeleteFileProgressSink::ResumeTimer()",3, 48, 0, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"platform_util::ShowItemInFolder( const base :: FilePath & full_path)",56, 81, 17, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"platform_util::OpenItem( const base :: FilePath & full_path)",6, 51, 4, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"platform_util::OpenExternal( const base :: string16 & url , const OpenExternalOptions & options)",19, 77, 24, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"platform_util::OpenExternal( const base :: string16 & url , const OpenExternalOptions & options , const OpenExternalCallback & callback)",6, 68, 2, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"platform_util::MoveItemToTrash( const base :: FilePath & path)",45, 77, 2, 0
repos/cpp/electron/atom/common/platform_util_win.cc,"platform_util::Beep()",3, 22, 2, 0
repos/cpp/electron/atom/common/node_bindings_win.cc,"atom::NodeBindingsWin::NodeBindingsWin( BrowserEnvironment browser_env)",15, 79, 4, 0
repos/cpp/electron/atom/common/node_bindings_win.cc,"atom::NodeBindingsWin::~NodeBindingsWin()",1, 39, 0, 0
repos/cpp/electron/atom/common/node_bindings_win.cc,"atom::NodeBindingsWin::PollEvents()",15, 81, 2, 0
repos/cpp/electron/atom/common/node_bindings_win.cc,"atom::NodeBindings::Create( BrowserEnvironment browser_env)",3, 69, 0, 0
repos/cpp/electron/atom/common/draggable_region.cc,"atom::DraggableRegion::DraggableRegion()",1, 57, 0, 0
repos/cpp/electron/atom/common/promise_util.cc,"atom::util::Promise::Promise( v8 :: Isolate * isolate)",6, 72, 2, 0
repos/cpp/electron/atom/common/promise_util.cc,"atom::util::Promise::RejectWithErrorMessage( const std :: string & string)",6, 77, 0, 0
repos/cpp/electron/atom/common/promise_util.cc,"atom::util::Promise::GetHandle() const",3, 52, 0, 0
repos/cpp/electron/atom/common/promise_util.cc,"mate::mate::Converter<atom::util::Promise*>::ToV8( v8 :: Isolate * , atom :: util :: Promise * val)",5, 66, 0, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::GetApplicationName()",6, 64, 6, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::GetApplicationVersion()",6, 64, 6, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::SetAppUserModelID( const base :: string16 & name)",4, 72, 2, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::GetRawAppUserModelID()",16, 79, 4, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::GetAppUserModelID( ScopedHString * app_id)",4, 48, 0, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::IsRunningInDesktopBridgeImpl()",36, 78, 8, 0
repos/cpp/electron/atom/common/application_info_win.cc,"atom::IsRunningInDesktopBridge()",4, 55, 2, 0
repos/cpp/electron/atom/common/node_bindings_linux.cc,"atom::NodeBindingsLinux::NodeBindingsLinux( BrowserEnvironment browser_env)",8, 69, 0, 0
repos/cpp/electron/atom/common/node_bindings_linux.cc,"atom::NodeBindingsLinux::~NodeBindingsLinux()",1, 43, 0, 0
repos/cpp/electron/atom/common/node_bindings_linux.cc,"atom::NodeBindingsLinux::RunMessageLoop()",7, 62, 2, 0
repos/cpp/electron/atom/common/node_bindings_linux.cc,"atom::NodeBindingsLinux::OnWatcherQueueChanged( uv_loop_t * loop)",7, 77, 2, 0
repos/cpp/electron/atom/common/node_bindings_linux.cc,"atom::NodeBindingsLinux::PollEvents()",10, 46, 2, 0
repos/cpp/electron/atom/common/node_bindings_linux.cc,"atom::NodeBindings::Create( BrowserEnvironment browser_env)",3, 69, 0, 0
repos/cpp/electron/atom/common/application_info.cc,"atom::OverrideApplicationName( const std :: string & name)",3, 56, 0, 0
repos/cpp/electron/atom/common/application_info.cc,"atom::GetOverriddenApplicationName()",3, 45, 0, 0
repos/cpp/electron/atom/common/application_info.cc,"atom::OverrideApplicationVersion( const std :: string & version)",3, 62, 0, 0
repos/cpp/electron/atom/common/application_info.cc,"atom::GetOverriddenApplicationVersion()",3, 48, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/value_converter.cc,"mate::Converter<base::DictionaryValue>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , base :: DictionaryValue * out)",13, 76, 46, 0
repos/cpp/electron/atom/common/native_mate_converters/value_converter.cc,"mate::Converter<base::DictionaryValue>::ToV8( v8 :: Isolate * isolate , const base :: DictionaryValue & val)",6, 66, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/value_converter.cc,"mate::Converter<base::Value>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , base :: Value * out)",13, 65, 6, 0
repos/cpp/electron/atom/common/native_mate_converters/value_converter.cc,"mate::Converter<base::Value>::ToV8( v8 :: Isolate * isolate , const base :: Value & val)",5, 76, 50, 0
repos/cpp/electron/atom/common/native_mate_converters/value_converter.cc,"mate::Converter<base::ListValue>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , base :: ListValue * out)",13, 66, 40, 0
repos/cpp/electron/atom/common/native_mate_converters/value_converter.cc,"mate::Converter<base::ListValue>::ToV8( v8 :: Isolate * isolate , const base :: ListValue & val)",6, 66, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"VectorToBitArray( const std :: vector<T> & vec)",6, 50, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<base::char16>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , base :: char16 * out)",9, 76, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebInputEvent::Type>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , blink :: WebInputEvent :: Type * out)",34, 74, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebMouseEvent::Button>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , blink :: WebMouseEvent :: Button * out)",14, 76, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebInputEvent::Modifiers>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , blink :: WebInputEvent :: Modifiers * out)",32, 79, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::GetWebInputEventType( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val)",7, 76, 48, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebInputEvent>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebInputEvent * out)",16, 74, 45, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebKeyboardEvent>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebKeyboardEvent * out)",44, 80, 48, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<content::NativeWebKeyboardEvent>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , content :: NativeWebKeyboardEvent * out)",12, 80, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<content::NativeWebKeyboardEvent>::ToV8( v8 :: Isolate * isolate , const content :: NativeWebKeyboardEvent & in)",22, 81, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebMouseEvent>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebMouseEvent * out)",29, 77, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebMouseWheelEvent>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebMouseWheelEvent * out)",27, 81, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebFloatPoint>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebFloatPoint * out)",8, 74, 45, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<base::Optional<blink::WebPoint>>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , base :: Optional<blink::WebPoint> * out)",13, 71, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebSize>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebSize * out)",8, 77, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebDeviceEmulationParams>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebDeviceEmulationParams * out)",26, 72, 6, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebFindOptions>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebFindOptions * out)",12, 76, 46, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebContextMenuData::MediaType>::ToV8( v8 :: Isolate * isolate , const blink :: WebContextMenuData :: MediaType & in)",20, 76, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebContextMenuData::InputFieldType>::ToV8( v8 :: Isolate * isolate , const blink :: WebContextMenuData :: InputFieldType & in)",14, 81, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::EditFlagsToV8( v8 :: Isolate * isolate , int editFlags)",23, 80, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::MediaFlagsToV8( v8 :: Isolate * isolate , int mediaFlags)",19, 81, 11, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebCache::ResourceTypeStat>::ToV8( v8 :: Isolate * isolate , const blink :: WebCache :: ResourceTypeStat & stat)",9, 73, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebCache::ResourceTypeStats>::ToV8( v8 :: Isolate * isolate , const blink :: WebCache :: ResourceTypeStats & stats)",12, 74, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebReferrerPolicy>::ToV8( v8 :: Isolate * isolate , const blink :: WebReferrerPolicy & in)",24, 80, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/blink_converter.cc,"mate::Converter<blink::WebReferrerPolicy>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , blink :: WebReferrerPolicy * out)",26, 79, 8, 0
repos/cpp/electron/atom/common/native_mate_converters/network_converter.cc,"mate::Converter<scoped_refptr<network::ResourceRequestBody>>::ToV8( v8 :: Isolate * isolate , const scoped_refptr<network::ResourceRequestBody> & val)",30, 81, 10, 0
repos/cpp/electron/atom/common/native_mate_converters/network_converter.cc,"mate::Converter<scoped_refptr<network::ResourceRequestBody>>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , scoped_refptr<network::ResourceRequestBody> * out)",40, 75, 30, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"ExecuteCommand( content :: WebContents * web_contents , int action , const content :: CustomContextMenuContext & context)",5, 72, 20, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"MenuItemToV8( v8 :: Isolate * isolate , content :: WebContents * web_contents , const content :: CustomContextMenuContext & context , const content :: MenuItem & item)",27, 81, 16, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"MenuToV8( v8 :: Isolate * isolate , content :: WebContents * web_contents , const content :: CustomContextMenuContext & context , const std :: vector<content::MenuItem> & menu)",9, 80, 30, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::MenuItem::Type>::ToV8( v8 :: Isolate * isolate , const content :: MenuItem :: Type & val)",17, 63, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<ContextMenuParamsWithWebContents>::ToV8( v8 :: Isolate * isolate , const ContextMenuParamsWithWebContents & val)",32, 75, 6, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<blink::mojom::PermissionStatus>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: mojom :: PermissionStatus * out)",15, 56, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::PermissionType>::ToV8( v8 :: Isolate * isolate , const content :: PermissionType & val)",33, 81, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::StopFindAction>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , content :: StopFindAction * out)",18, 80, 48, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::WebContents*>::ToV8( v8 :: Isolate * isolate , content :: WebContents * val)",7, 68, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::WebContents*>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , content :: WebContents ** out)",10, 76, 46, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::Referrer>::ToV8( v8 :: Isolate * isolate , const content :: Referrer & val)",8, 66, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/content_converter.cc,"mate::Converter<content::Referrer>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , content :: Referrer * out)",15, 68, 42, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::CertFromData( const std :: string & data , scoped_refptr<net::X509Certificate> * out)",16, 73, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::Converter<constnet::AuthChallengeInfo*>::ToV8( v8 :: Isolate * isolate , const net :: AuthChallengeInfo * val)",11, 69, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::Converter<scoped_refptr<net::X509Certificate>>::ToV8( v8 :: Isolate * isolate , const scoped_refptr<net::X509Certificate> & val)",37, 76, 11, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::Converter<scoped_refptr<net::X509Certificate>>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , scoped_refptr<net::X509Certificate> * out)",30, 74, 8, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::Converter<net::CertPrincipal>::ToV8( v8 :: Isolate * isolate , const net :: CertPrincipal & val)",14, 62, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::Converter<net::HttpResponseHeaders*>::ToV8( v8 :: Isolate * isolate , net :: HttpResponseHeaders * headers)",23, 65, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"mate::Converter<net::HttpResponseHeaders*>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , net :: HttpResponseHeaders * out)",49, 72, 32, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"atom::FillRequestDetails( base :: DictionaryValue * details , const net :: URLRequest * request)",19, 79, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/net_converter.cc,"atom::GetUploadData( base :: ListValue * upload_data_list , const net :: URLRequest * request)",28, 80, 6, 0
repos/cpp/electron/atom/common/native_mate_converters/image_converter.cc,"mate::Converter<gfx::ImageSkia>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , gfx :: ImageSkia * out)",10, 65, 39, 0
repos/cpp/electron/atom/common/native_mate_converters/image_converter.cc,"mate::Converter<gfx::Image>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , gfx :: Image * out)",13, 61, 35, 0
repos/cpp/electron/atom/common/native_mate_converters/image_converter.cc,"mate::Converter<gfx::Image>::ToV8( v8 :: Isolate * isolate , const gfx :: Image & val)",4, 77, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::Level::Level( FromV8ValueState * state)",3, 62, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::Level::~Level()",1, 49, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::FromV8ValueState()",1, 67, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::AddToUniquenessCheck( v8 :: Local<v8::Object> handle)",9, 60, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::RemoveFromUniquenessCheck( v8 :: Local<v8::Object> handle)",8, 65, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::HasReachedMaxRecursionDepth()",1, 74, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueState::GetIteratorInMap( v8 :: Local<v8::Object> handle , int * hash)",14, 79, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ScopedUniquenessGuard::ScopedUniquenessGuard( V8ValueConverter :: FromV8ValueState * state , v8 :: Local<v8::Object> value)",5, 67, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ScopedUniquenessGuard::~ScopedUniquenessGuard()",6, 64, 6, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ScopedUniquenessGuard::is_valid() const",1, 46, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::V8ValueConverter()",1, 40, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::SetRegExpAllowed( bool val)",3, 52, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::SetFunctionAllowed( bool val)",3, 54, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::SetStripNullFromObjects( bool val)",3, 59, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ToV8Value( const base :: Value * value , v8 :: Local<v8::Context> context) const",7, 75, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8Value( v8 :: Local<v8::Value> val , v8 :: Local<v8::Context> context) const",8, 62, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ToV8ValueImpl( v8 :: Isolate * isolate , const base :: Value * value) const",43, 79, 37, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ToV8Array( v8 :: Isolate * isolate , const base :: ListValue * val) const",19, 72, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ToV8Object( v8 :: Isolate * isolate , const base :: DictionaryValue * val) const",21, 75, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::ToArrayBuffer( v8 :: Isolate * isolate , const base :: Value * value) const",46, 81, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8ValueImpl( FromV8ValueState * state , v8 :: Local<v8::Value> val , v8 :: Isolate * isolate) const",86, 80, 35, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8Array( v8 :: Local<v8::Array> val , FromV8ValueState * state , v8 :: Isolate * isolate) const",38, 79, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromNodeBuffer( v8 :: Local<v8::Value> value , FromV8ValueState * state , v8 :: Isolate * isolate) const",7, 76, 46, 0
repos/cpp/electron/atom/common/native_mate_converters/v8_value_converter.cc,"atom::V8ValueConverter::FromV8Object( v8 :: Local<v8::Object> val , FromV8ValueState * state , v8 :: Isolate * isolate) const",76, 81, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/accelerator_converter.cc,"mate::Converter<ui::Accelerator>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , ui :: Accelerator * out)",8, 66, 40, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::Point>::ToV8( v8 :: Isolate * isolate , const gfx :: Point & val)",8, 74, 49, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::Point>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , gfx :: Point * out)",13, 61, 35, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::PointF>::ToV8( v8 :: Isolate * isolate , const gfx :: PointF & val)",8, 76, 50, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::PointF>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , gfx :: PointF * out)",12, 62, 36, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::Size>::ToV8( v8 :: Isolate * isolate , const gfx :: Size & val)",8, 72, 48, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::Size>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , gfx :: Size * out)",12, 66, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::Rect>::ToV8( v8 :: Isolate * isolate , const gfx :: Rect & val)",10, 72, 48, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<gfx::Rect>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , gfx :: Rect * out)",13, 80, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<display::Display::TouchSupport>::ToV8( v8 :: Isolate * isolate , const display :: Display :: TouchSupport & val)",11, 80, 35, 0
repos/cpp/electron/atom/common/native_mate_converters/gfx_converter.cc,"mate::Converter<display::Display>::ToV8( v8 :: Isolate * isolate , const display :: Display & val)",15, 66, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::TranslaterHolder::TranslaterHolder( v8 :: Isolate * isolate)",4, 65, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::TranslaterHolder::~TranslaterHolder()",6, 29, 4, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::TranslaterHolder::GC( const v8 :: WeakCallbackInfo<TranslaterHolder> & data)",3, 71, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::CallTranslater( v8 :: Local<v8::External> external , v8 :: Local<v8::Object> state , mate :: Arguments * args)",25, 80, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::DeleteOnUIThread::Destruct( const T * x)",8, 66, 6, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::RefCountedGlobal::RefCountedGlobal( v8 :: Isolate * isolate , v8 :: Local<v8::Value> value)",2, 69, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::RefCountedGlobal::IsAlive() const",1, 54, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::RefCountedGlobal::NewHandle( v8 :: Isolate * isolate) const",3, 55, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::SafeV8Function::SafeV8Function( v8 :: Isolate * isolate , v8 :: Local<v8::Value> value)",2, 81, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::SafeV8Function::SafeV8Function( const SafeV8Function & other)",2, 60, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::SafeV8Function::~SafeV8Function()",1, 37, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::SafeV8Function::IsAlive() const",3, 56, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::SafeV8Function::NewHandle( v8 :: Isolate * isolate) const",3, 80, 0, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::CreateFunctionFromTranslater( v8 :: Isolate * isolate , const Translater & translater , bool one_time)",19, 81, 41, 0
repos/cpp/electron/atom/common/native_mate_converters/callback.cc,"mate::internal::BindFunctionWith( v8 :: Isolate * isolate , v8 :: Local<v8::Context> context , v8 :: Local<v8::Function> func , v8 :: Local<v8::Value> arg1 , v8 :: Local<v8::Value> arg2)",13, 81, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/file_dialog_converter.cc,"mate::Converter<file_dialog::Filter>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , file_dialog :: Filter * out)",12, 72, 44, 0
repos/cpp/electron/atom/common/native_mate_converters/file_dialog_converter.cc,"mate::Converter<file_dialog::Filter>::ToV8( v8 :: Isolate * isolate , const file_dialog :: Filter & in)",10, 66, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/file_dialog_converter.cc,"mate::Converter<file_dialog::DialogSettings>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , file_dialog :: DialogSettings * out)",19, 74, 2, 0
repos/cpp/electron/atom/common/native_mate_converters/file_dialog_converter.cc,"mate::Converter<file_dialog::DialogSettings>::ToV8( v8 :: Isolate * isolate , const file_dialog :: DialogSettings & in)",17, 81, 2, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::GetFilesNode( const base :: DictionaryValue * root , const base :: DictionaryValue * dir , const base :: DictionaryValue ** out)",14, 63, 2, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::GetChildNode( const base :: DictionaryValue * root , const std :: string & name , const base :: DictionaryValue * dir , const base :: DictionaryValue ** out)",13, 62, 9, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::GetNodeFromPath( std :: string path , const base :: DictionaryValue * root , const base :: DictionaryValue ** out)",22, 78, 4, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::FillFileInfoWithNode( Archive :: FileInfo * info , uint32_t header_size , const base :: DictionaryValue * node)",22, 71, 2, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::Archive( const base :: FilePath & path)",10, 81, 2, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::~Archive()",11, 62, 4, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::Init()",58, 72, 19, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::GetFileInfo( const base :: FilePath & path , FileInfo * info)",14, 72, 0, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::Stat( const base :: FilePath & path , Stats * stats)",22, 67, 2, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::Readdir( const base :: FilePath & path , std :: vector<base::FilePath> * list)",20, 67, 2, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::Realpath( const base :: FilePath & path , base :: FilePath * realpath)",17, 79, 0, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::CopyFileOut( const base :: FilePath & path , base :: FilePath * out)",32, 77, 0, 0
repos/cpp/electron/atom/common/asar/archive.cc,"asar::Archive::GetFD() const",3, 29, 0, 0
repos/cpp/electron/atom/common/asar/scoped_temporary_file.cc,"asar::ScopedTemporaryFile::ScopedTemporaryFile()",1, 46, 0, 0
repos/cpp/electron/atom/common/asar/scoped_temporary_file.cc,"asar::ScopedTemporaryFile::~ScopedTemporaryFile()",13, 78, 4, 0
repos/cpp/electron/atom/common/asar/scoped_temporary_file.cc,"asar::ScopedTemporaryFile::Init( const base :: FilePath :: StringType & ext)",20, 72, 0, 0
repos/cpp/electron/atom/common/asar/scoped_temporary_file.cc,"asar::ScopedTemporaryFile::InitFromFile( base :: File * src , const base :: FilePath :: StringType & ext , uint64_t offset , uint64_t size)",22, 78, 39, 0
repos/cpp/electron/atom/common/asar/asar_util.cc,"asar::GetOrCreateAsarArchive( const base :: FilePath & path)",12, 78, 0, 0
repos/cpp/electron/atom/common/asar/asar_util.cc,"asar::ClearArchives()",4, 47, 4, 0
repos/cpp/electron/atom/common/asar/asar_util.cc,"asar::GetAsarArchivePath( const base :: FilePath & full_path , base :: FilePath * asar_path , base :: FilePath * relative_path)",21, 57, 0, 0
repos/cpp/electron/atom/common/asar/asar_util.cc,"asar::ReadFileToString( const base :: FilePath & path , std :: string * contents)",29, 81, 4, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::CrashReporter()",4, 74, 2, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::~CrashReporter()",1, 35, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::Start( const std :: string & product_name , const std :: string & company_name , const std :: string & submit_url , const base :: FilePath & crashes_dir , bool upload_to_server , bool skip_system_crash_handler , const StringMap & extra_parameters)",12, 76, 2, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::SetUploadParameters( const StringMap & parameters)",7, 77, 2, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::SetUploadToServer( const bool upload_to_server)",1, 70, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::GetUploadToServer()",3, 42, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::GetUploadedReports( const base :: FilePath & crashes_dir)",22, 79, 8, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::InitBreakpad( const std :: string & product_name , const std :: string & version , const std :: string & company_name , const std :: string & submit_url , const base :: FilePath & crashes_dir , bool auto_submit , bool skip_system_crash_handler)",7, 68, 33, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::SetUploadParameters()",1, 45, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::AddExtraParameter( const std :: string & key , const std :: string & value)",2, 67, 38, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::RemoveExtraParameter( const std :: string & key)",1, 68, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::GetParameters() const",3, 74, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::GetInstance()",4, 46, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter.cc,"crash_reporter::CrashReporter::StartInstance( const mate :: Dictionary & options)",22, 77, 2, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::TerminateProcessWithoutDump()",13, 77, 4, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashForExceptionInNonABICompliantCodeRange( PEXCEPTION_RECORD ExceptionRecord , ULONG64 EstablisherFrame , PCONTEXT ContextRecord , PDISPATCHER_CONTEXT DispatcherContext)",11, 70, 2, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::RegisterNonABICompliantCodeRange( void * start , size_t size_in_bytes)",43, 77, 6, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::UnregisterNonABICompliantCodeRange( void * start)",6, 56, 6, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::CrashReporterWin()",1, 40, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::~CrashReporterWin()",1, 41, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::InitBreakpad( const std :: string & product_name , const std :: string & version , const std :: string & company_name , const std :: string & submit_url , const base :: FilePath & crashes_dir , bool upload_to_server , bool skip_system_crash_handler)",52, 80, 4, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::SetUploadParameters()",3, 47, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::CrashForException( EXCEPTION_POINTERS * info)",10, 77, 6, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::FilterCallback( void * context , EXCEPTION_POINTERS * exinfo , MDRawAssertionInfo * assertion)",5, 71, 38, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::MinidumpCallback( const wchar_t * dump_path , const wchar_t * minidump_id , void * context , EXCEPTION_POINTERS * exinfo , MDRawAssertionInfo * assertion , bool succeeded)",12, 71, 40, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::GetCustomInfo( const std :: string & product_name , const std :: string & version , const std :: string & company_name , bool upload_to_server)",37, 77, 4, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporterWin::GetInstance()",3, 52, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_win.cc,"crash_reporter::CrashReporter::GetInstance()",3, 46, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::CrashReporterLinux()",13, 60, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::~CrashReporterLinux()",1, 45, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::InitBreakpad( const std :: string & product_name , const std :: string & version , const std :: string & company_name , const std :: string & submit_url , const base :: FilePath & crashes_dir , bool upload_to_server , bool skip_system_crash_handler)",20, 73, 38, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::SetUploadParameters()",3, 49, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::SetUploadToServer( const bool upload_to_server)",3, 74, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::GetUploadToServer()",3, 47, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::EnableCrashDumping( const base :: FilePath & crashes_dir)",16, 81, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::CrashDone( const MinidumpDescriptor & minidump , void * context , const bool succeeded)",29, 76, 2, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporterLinux::GetInstance()",3, 56, 0, 0
repos/cpp/electron/atom/common/crash_reporter/crash_reporter_linux.cc,"crash_reporter::CrashReporter::GetInstance()",3, 46, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::write_uint64_hex( char * output , uint64_t v)",8, 53, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::my_uint64_len( uint64_t i)",12, 37, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::my_uint64tos( char * output , uint64_t i , unsigned i_len)",4, 62, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::kernel_timeval_to_ms( struct kernel_timeval * tv)",6, 80, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::my_isxdigit( char c)",3, 77, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::LengthWithoutTrailingSpaces( const char * str , size_t len)",6, 66, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddPairString( const char * msg_type , const char * msg_data)",3, 79, 4, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::Flush()",4, 51, 4, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddString( const char * str)",1, 68, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::MimeWriter( int fd , const char * const mime_boundary)",2, 64, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::~MimeWriter()",1, 29, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddBoundary()",4, 33, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddEnd()",5, 29, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddPairData( const char * msg_type , size_t msg_type_size , const char * msg_data , size_t msg_data_size)",12, 53, 29, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddPairDataInChunks( const char * msg_type , size_t msg_type_size , const char * msg_data , size_t msg_data_size , size_t chunk_size , bool strip_trailing_spaces)",38, 67, 37, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddFileContents( const char * filename_msg , uint8_t * file_data , size_t file_size)",12, 59, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddItem( const void * base , size_t size)",9, 72, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::MimeWriter::AddItemWithoutTrailingSpaces( const void * base , size_t size)",4, 79, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::LoadDataFromFD( google_breakpad :: PageAllocator * allocator , int fd , bool close_fd , uint8_t ** file_data , size_t * size)",37, 74, 4, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::LoadDataFromFile( google_breakpad :: PageAllocator * allocator , const char * filename , int * fd , uint8_t ** file_data , size_t * size)",18, 76, 2, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::ExecUploadProcessOrTerminate( const BreakpadInfo & info , const char * dumpfile , const char * mime_boundary , const char * exe_buf , google_breakpad :: PageAllocator * allocator)",41, 81, 6, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::WaitForCrashReportUploadProcess( int fd , size_t bytes_to_read , char * buf)",31, 71, 10, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::IsValidCrashReportId( const char * buf , size_t bytes_read , size_t expected_len)",11, 49, 26, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::HandleCrashReportId( const char * buf , size_t bytes_read , size_t expected_len)",40, 73, 4, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::HandleCrashDump( const BreakpadInfo & info)",282, 81, 8, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::WriteLog( const char * buf , size_t nbytes)",3, 50, 0, 0
repos/cpp/electron/atom/common/crash_reporter/linux/crash_dump_handler.cc,"crash_reporter::WriteNewline()",3, 28, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service_main.cc,"crash_service::InvalidParameterHandler( const wchar_t * , const wchar_t * , const wchar_t * , unsigned int , uintptr_t)",7, 45, 0, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service_main.cc,"crash_service::CreateCrashServiceDirectory( const base :: FilePath & temp_dir)",7, 67, 0, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service_main.cc,"crash_service::Main( const wchar_t * cmd)",61, 81, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CustomInfoToMap( const google_breakpad :: ClientInfo * client_info , const std :: wstring & reporter_tag , CrashMap * map)",13, 73, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::WriteCustomInfoToFile( const std :: wstring & dump_path , const CrashMap & map)",24, 81, 0, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::WriteReportIDToFile( const std :: wstring & dump_path , const std :: wstring & report_id)",24, 73, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashSvcWndProc( HWND hwnd , UINT message , WPARAM wparam , LPARAM lparam)",15, 59, 6, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CreateTopWindow( HINSTANCE instance , const base :: string16 & application_name , bool visible)",28, 81, 6, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::ProcessingLock::ProcessingLock()",1, 59, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::ProcessingLock::~ProcessingLock()",1, 60, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::ProcessingLock::IsWorking()",1, 55, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::DumpJobInfo::DumpJobInfo( DWORD process_id , CrashService * service , const CrashMap & crash_map , const std :: wstring & path)",5, 75, 6, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::CrashService()",1, 32, 0, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::~CrashService()",5, 33, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::Initialize( const base :: string16 & application_name , const base :: FilePath & operating_dir , const base :: FilePath & dumps_path)",105, 81, 6, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::OnClientConnected( void * context , const google_breakpad :: ClientInfo * client_info)",8, 60, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::OnClientExited( void * context , const google_breakpad :: ClientInfo * client_info)",30, 76, 4, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::OnClientDumpRequest( void * context , const google_breakpad :: ClientInfo * client_info , const std :: wstring * file_path)",55, 74, 2, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::AsyncSendDump( void * context)",62, 81, 47, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::ProcessingLoop()",19, 61, 10, 0
repos/cpp/electron/atom/common/crash_reporter/win/crash_service.cc,"breakpad::CrashService::GetSecurityDescriptorForLowIntegrity()",20, 76, 0, 0
repos/cpp/electron/atom/common/api/atom_api_shell.cc,"mate::Converter<base::win::ShortcutOperation>::FromV8( v8 :: Isolate * isolate , v8 :: Handle<v8::Value> val , base :: win :: ShortcutOperation * out)",16, 58, 21, 0
repos/cpp/electron/atom/common/api/atom_api_shell.cc,"OnOpenExternalFinished( v8 :: Isolate * isolate , const base :: Callback<void(v8::Local<v8::Value>)> & callback , const std :: string & error)",9, 67, 4, 0
repos/cpp/electron/atom/common/api/atom_api_shell.cc,"OpenExternal( const base :: string16 & url , const GURL & url , mate :: Arguments * args)",28, 75, 10, 0
repos/cpp/electron/atom/common/api/atom_api_shell.cc,"WriteShortcutLink( const base :: FilePath & shortcut_path , mate :: Arguments * args)",31, 78, 2, 0
repos/cpp/electron/atom/common/api/atom_api_shell.cc,"ReadShortcutLink( mate :: Arguments * args , const base :: FilePath & path)",20, 77, 2, 0
repos/cpp/electron/atom/common/api/atom_api_shell.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",15, 72, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"IsDesktopCapturerEnabled()",3, 45, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"IsOffscreenRenderingEnabled()",3, 37, 0, 0
repos/cpp/electron/atom/common/api/features.cc,"IsPDFViewerEnabled()",3, 39, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"IsFakeLocationProviderEnabled()",3, 48, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"IsViewApiEnabled()",3, 37, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"IsTtsEnabled()",3, 32, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"IsPrintingEnabled()",3, 37, 2, 0
repos/cpp/electron/atom/common/api/features.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",14, 79, 2, 0
repos/cpp/electron/atom/common/api/remote_object_freer.cc,"atom::GetCurrentRenderFrame()",7, 66, 2, 0
repos/cpp/electron/atom/common/api/remote_object_freer.cc,"atom::RemoteObjectFreer::BindTo( v8 :: Isolate * isolate , v8 :: Local<v8::Object> target , const std :: string & context_id , int object_id)",6, 65, 2, 0
repos/cpp/electron/atom/common/api/remote_object_freer.cc,"atom::RemoteObjectFreer::RemoteObjectFreer( v8 :: Isolate * isolate , v8 :: Local<v8::Object> target , const std :: string & context_id , int object_id)",13, 68, 37, 0
repos/cpp/electron/atom/common/api/remote_object_freer.cc,"atom::RemoteObjectFreer::~RemoteObjectFreer()",1, 43, 0, 0
repos/cpp/electron/atom/common/api/remote_object_freer.cc,"atom::RemoteObjectFreer::RunDestructor()",14, 80, 2, 0
repos/cpp/electron/atom/common/api/remote_callback_freer.cc,"atom::RemoteCallbackFreer::BindTo( v8 :: Isolate * isolate , v8 :: Local<v8::Object> target , const std :: string & context_id , int object_id , content :: WebContents * web_contents)",7, 81, 2, 0
repos/cpp/electron/atom/common/api/remote_callback_freer.cc,"atom::RemoteCallbackFreer::RemoteCallbackFreer( v8 :: Isolate * isolate , v8 :: Local<v8::Object> target , const std :: string & context_id , int object_id , content :: WebContents * web_contents)",9, 77, 41, 0
repos/cpp/electron/atom/common/api/remote_callback_freer.cc,"atom::RemoteCallbackFreer::~RemoteCallbackFreer()",1, 47, 0, 0
repos/cpp/electron/atom/common/api/remote_callback_freer.cc,"atom::RemoteCallbackFreer::RunDestructor()",14, 81, 46, 0
repos/cpp/electron/atom/common/api/remote_callback_freer.cc,"atom::RemoteCallbackFreer::RenderViewDeleted( content :: RenderViewHost *)",3, 72, 0, 0
repos/cpp/electron/atom/common/api/locker.cc,"mate::Locker::Locker( v8 :: Isolate * isolate)",4, 44, 4, 0
repos/cpp/electron/atom/common/api/locker.cc,"mate::Locker::~Locker()",1, 21, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::GetScaleFactorFromPath( const base :: FilePath & path)",13, 74, 2, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::GetScaleFactorFromOptions( mate :: Arguments * args)",7, 57, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::AddImageSkiaRep( gfx :: ImageSkia * image , const unsigned char * data , size_t size , int width , int height , double scale_factor)",39, 79, 6, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::AddImageSkiaRep( gfx :: ImageSkia * image , const base :: FilePath & path , double scale_factor)",15, 68, 6, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::PopulateImageSkiaRepsFromPath( gfx :: ImageSkia * image , const base :: FilePath & path)",15, 77, 4, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NormalizePath( const base :: FilePath & path)",13, 81, 2, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::IsTemplateFilename( const base :: FilePath & path)",4, 63, 10, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::ReadICOFromPath( int size , const base :: FilePath & path)",17, 81, 6, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::ReadImageSkiaFromICO( gfx :: ImageSkia * image , HICON icon)",9, 73, 2, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::Noop( char * , void *)",1, 27, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::NativeImage( v8 :: Isolate * isolate , const gfx :: Image & image)",8, 72, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::NativeImage( v8 :: Isolate * isolate , const base :: FilePath & hicon_path)",12, 81, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::~NativeImage()",6, 76, 4, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::GetHICON( int size)",17, 72, 2, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::ToPNG( mate :: Arguments * args)",21, 79, 6, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::ToBitmap( mate :: Arguments * args)",13, 74, 28, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::ToJPEG( v8 :: Isolate * isolate , int quality)",10, 78, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::ToDataURL( mate :: Arguments * args)",13, 73, 6, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::GetBitmap( mate :: Arguments * args)",13, 72, 6, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::GetNativeHandle( v8 :: Isolate * isolate , mate :: Arguments * args)",15, 75, 50, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::IsEmpty()",3, 30, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::GetSize()",3, 35, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::GetAspectRatio()",7, 81, 4, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::Resize( v8 :: Isolate * isolate , const base :: DictionaryValue & options)",34, 76, 28, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::Crop( v8 :: Isolate * isolate , const gfx :: Rect & rect)",7, 76, 28, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::AddRepresentation( const mate :: Dictionary & options)",37, 78, 24, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::SetTemplateImage( bool setAsTemplate)",1, 58, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::IsTemplateImage()",3, 38, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateEmpty( v8 :: Isolate * isolate)",3, 78, 2, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::Create( v8 :: Isolate * isolate , const gfx :: Image & image)",4, 73, 46, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateFromPNG( v8 :: Isolate * isolate , const char * buffer , size_t length)",7, 75, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateFromJPEG( v8 :: Isolate * isolate , const char * buffer , size_t length)",7, 76, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateFromPath( v8 :: Isolate * isolate , const base :: FilePath & path)",19, 78, 4, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateFromBuffer( mate :: Arguments * args , v8 :: Local<v8::Value> buffer)",20, 80, 18, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateFromDataURL( v8 :: Isolate * isolate , const GURL & url)",12, 79, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::CreateFromNamedImage( mate :: Arguments * args , const std :: string & name)",5, 61, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"atom::api::NativeImage::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",19, 78, 33, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"mate::Converter<mate::Handle<atom::api::NativeImage>>::ToV8( v8 :: Isolate * isolate , const mate :: Handle<atom::api::NativeImage> & val)",5, 76, 0, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"mate::Converter<mate::Handle<atom::api::NativeImage>>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , mate :: Handle<atom::api::NativeImage> * out)",20, 79, 2, 0
repos/cpp/electron/atom/common/api/atom_api_native_image.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",13, 81, 2, 0
repos/cpp/electron/atom/common/api/object_life_monitor.cc,"atom::ObjectLifeMonitor::ObjectLifeMonitor( v8 :: Isolate * isolate , v8 :: Local<v8::Object> target)",5, 71, 2, 0
repos/cpp/electron/atom/common/api/object_life_monitor.cc,"atom::ObjectLifeMonitor::~ObjectLifeMonitor()",6, 42, 0, 0
repos/cpp/electron/atom/common/api/object_life_monitor.cc,"atom::ObjectLifeMonitor::OnObjectGC( const v8 :: WeakCallbackInfo<ObjectLifeMonitor> & data)",7, 59, 4, 0
repos/cpp/electron/atom/common/api/object_life_monitor.cc,"atom::ObjectLifeMonitor::Free( const v8 :: WeakCallbackInfo<ObjectLifeMonitor> & data)",4, 59, 4, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"std::hash<std::pair<Type1,Type2>>::operator ( )( std :: pair<Type1,Type2> value) const",3, 66, 4, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"mate::Converter<std::pair<Type1,Type2>>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , std :: pair<Type1,Type2> * out)",12, 76, 4, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"GetHiddenValue( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object , v8 :: Local<v8::String> key)",13, 73, 2, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"SetHiddenValue( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object , v8 :: Local<v8::String> key , v8 :: Local<v8::Value> value)",10, 73, 2, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"DeleteHiddenValue( v8 :: Isolate * isolate , v8 :: Local<v8::Object> object , v8 :: Local<v8::String> key)",10, 73, 2, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"GetObjectHash( v8 :: Local<v8::Object> object)",3, 54, 0, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"TakeHeapSnapshot( v8 :: Isolate * isolate)",3, 50, 2, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"RequestGarbageCollectionForTesting( v8 :: Isolate * isolate)",4, 67, 6, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"IsSameOrigin( const GURL & l , const GURL & r)",3, 74, 2, 0
repos/cpp/electron/atom/common/api/atom_api_v8_util.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",20, 80, 2, 0
repos/cpp/electron/atom/common/api/event_emitter_caller.cc,"mate::internal::CallMethodWithArgs( v8 :: Isolate * isolate , v8 :: Local<v8::Object> obj , const char * method , ValueVector * args)",21, 81, 2, 0
repos/cpp/electron/atom/common/api/atom_api_crash_reporter.cc,"mate::Converter<CrashReporter::UploadReportResult>::ToV8( v8 :: Isolate * isolate , const CrashReporter :: UploadReportResult & reports)",8, 70, 4, 0
repos/cpp/electron/atom/common/api/atom_api_crash_reporter.cc,"AddExtraParameter( const std :: string & key , const std :: string & value)",3, 75, 0, 0
repos/cpp/electron/atom/common/api/atom_api_crash_reporter.cc,"RemoveExtraParameter( const std :: string & key)",3, 59, 2, 0
repos/cpp/electron/atom/common/api/atom_api_crash_reporter.cc,"GetParameters()",3, 56, 2, 0
repos/cpp/electron/atom/common/api/atom_api_crash_reporter.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",17, 76, 17, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::GetClipboardType( mate :: Arguments * args)",7, 71, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::AvailableFormats( mate :: Arguments * args)",7, 81, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::Has( const std :: string & format_string , mate :: Arguments * args)",5, 81, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::Read( const std :: string & format_string)",8, 81, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadBuffer( const std :: string & format_string , mate :: Arguments * args)",6, 77, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteBuffer( const std :: string & format , const v8 :: Local<v8::Value> buffer , mate :: Arguments * args)",13, 78, 6, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::Write( const mate :: Dictionary & data , mate :: Arguments * args)",23, 77, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadText( mate :: Arguments * args)",15, 77, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteText( const base :: string16 & text , mate :: Arguments * args)",4, 79, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadRTF( mate :: Arguments * args)",6, 67, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteRTF( const std :: string & text , mate :: Arguments * args)",4, 75, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadHTML( mate :: Arguments * args)",11, 74, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteHTML( const base :: string16 & html , mate :: Arguments * args)",4, 79, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadBookmark( mate :: Arguments * args)",10, 74, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteBookmark( const base :: string16 & title , const std :: string & url , mate :: Arguments * args)",6, 60, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadImage( mate :: Arguments * args)",5, 67, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteImage( const gfx :: Image & image , mate :: Arguments * args)",10, 77, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::WriteFindText( const base :: string16 & text)",1, 61, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::ReadFindText()",3, 43, 0, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"atom::api::Clipboard::Clear( mate :: Arguments * args)",3, 71, 2, 0
repos/cpp/electron/atom/common/api/atom_api_clipboard.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",25, 79, 2, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::Create( v8 :: Isolate * isolate , const base :: FilePath & path)",7, 69, 4, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",12, 74, 29, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::Archive( v8 :: Isolate * isolate , std :: unique_ptr<asar::Archive> archive)",4, 72, 2, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::GetPath()",1, 56, 2, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::GetFileInfo( v8 :: Isolate * isolate , const base :: FilePath & path)",11, 65, 35, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::Stat( v8 :: Isolate * isolate , const base :: FilePath & path)",12, 80, 2, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::Readdir( v8 :: Isolate * isolate , const base :: FilePath & path)",7, 61, 31, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::Realpath( v8 :: Isolate * isolate , const base :: FilePath & path)",7, 62, 32, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::CopyFileOut( v8 :: Isolate * isolate , const base :: FilePath & path)",7, 65, 35, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Archive::GetFD() const",5, 30, 4, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"InitAsarSupport( v8 :: Isolate * isolate , v8 :: Local<v8::Value> source , v8 :: Local<v8::Value> require)",22, 64, 2, 0
repos/cpp/electron/atom/common/api/atom_api_asar.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",8, 57, 2, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::FatalErrorCallback( const char * location , const char * message)",4, 69, 0, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::AtomBindings( uv_loop_t * loop)",5, 66, 2, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::~AtomBindings()",3, 77, 2, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::BindProcess( v8 :: Isolate * isolate , mate :: Dictionary * process , base :: ProcessMetrics * metrics)",24, 76, 47, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::BindTo( v8 :: Isolate * isolate , v8 :: Local<v8::Object> process)",19, 81, 0, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::EnvironmentDestroyed( node :: Environment * env)",6, 78, 6, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::ActivateUVLoop( v8 :: Isolate * isolate)",9, 80, 2, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::OnCallNextTick( uv_async_t * handle)",15, 65, 2, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::Log( const base :: string16 & message)",3, 56, 0, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::Crash()",3, 51, 2, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::Hang()",4, 66, 4, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::GetHeapStatistics( v8 :: Isolate * isolate)",28, 78, 6, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::GetCreationTime( v8 :: Isolate * isolate)",8, 75, 0, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::GetSystemMemoryInfo( v8 :: Isolate * isolate , mate :: Arguments * args)",29, 80, 55, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::GetProcessMemoryInfo( v8 :: Isolate * isolate)",18, 80, 32, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::DidReceiveMemoryDump( const v8 :: Global<v8::Context> & context , scoped_refptr<util::Promise> promise , bool success , std :: unique_ptr<memory_instrumentation::GlobalMemoryDump> global_dump)",39, 77, 4, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::GetCPUUsage( base :: ProcessMetrics * metrics , v8 :: Isolate * isolate)",18, 78, 0, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::GetIOCounters( v8 :: Isolate * isolate)",17, 73, 0, 0
repos/cpp/electron/atom/common/api/atom_bindings.cc,"atom::AtomBindings::TakeHeapSnapshot( v8 :: Isolate * isolate , const base :: FilePath & file_path)",9, 76, 18, 0
repos/cpp/electron/atom/renderer/content_settings_observer.cc,"atom::ContentSettingsObserver::ContentSettingsObserver( content :: RenderFrame * render_frame)",5, 63, 2, 0
repos/cpp/electron/atom/renderer/content_settings_observer.cc,"atom::ContentSettingsObserver::~ContentSettingsObserver()",1, 55, 0, 0
repos/cpp/electron/atom/renderer/content_settings_observer.cc,"atom::ContentSettingsObserver::AllowDatabase( const blink :: WebString & name , const blink :: WebString & display_name , unsigned estimated_size)",13, 79, 2, 0
repos/cpp/electron/atom/renderer/content_settings_observer.cc,"atom::ContentSettingsObserver::AllowStorage( bool local)",10, 79, 2, 0
repos/cpp/electron/atom/renderer/content_settings_observer.cc,"atom::ContentSettingsObserver::AllowIndexedDB( const blink :: WebString & name , const blink :: WebSecurityOrigin & security_origin)",12, 79, 2, 0
repos/cpp/electron/atom/renderer/content_settings_observer.cc,"atom::ContentSettingsObserver::OnDestruct()",3, 45, 0, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::IsDevToolsExtension( content :: RenderFrame * render_frame)",4, 77, 2, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::AtomRendererClient()",3, 68, 4, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::~AtomRendererClient()",3, 44, 0, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::RenderThreadStarted()",3, 49, 0, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::RenderFrameCreated( content :: RenderFrame * render_frame)",5, 56, 2, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::RenderViewCreated( content :: RenderView * render_view)",3, 79, 0, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::RunScriptsAtDocumentStart( content :: RenderFrame * render_frame)",8, 78, 4, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::RunScriptsAtDocumentEnd( content :: RenderFrame * render_frame)",8, 76, 4, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::DidCreateScriptContext( v8 :: Handle<v8::Context> context , content :: RenderFrame * render_frame)",53, 81, 2, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::WillReleaseScriptContext( v8 :: Handle<v8::Context> context , content :: RenderFrame * render_frame)",27, 80, 2, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::ShouldFork( blink :: WebLocalFrame * frame , const GURL & url , const std :: string & http_method , bool is_initial_navigation , bool is_server_redirect)",11, 79, 2, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::DidInitializeWorkerContextOnWorkerThread( v8 :: Local<v8::Context> context)",7, 67, 0, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::WillDestroyWorkerContextOnWorkerThread( v8 :: Local<v8::Context> context)",7, 66, 4, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::SetupMainWorldOverrides( v8 :: Handle<v8::Context> context , content :: RenderFrame * render_frame)",27, 81, 25, 0
repos/cpp/electron/atom/renderer/atom_renderer_client.cc,"atom::AtomRendererClient::GetEnvironment( content :: RenderFrame * render_frame) const",12, 74, 6, 0
repos/cpp/electron/atom/renderer/web_worker_observer.cc,"atom::WebWorkerObserver::GetCurrent()",4, 55, 2, 0
repos/cpp/electron/atom/renderer/web_worker_observer.cc,"atom::WebWorkerObserver::WebWorkerObserver()",5, 68, 6, 0
repos/cpp/electron/atom/renderer/web_worker_observer.cc,"atom::WebWorkerObserver::~WebWorkerObserver()",5, 51, 2, 0
repos/cpp/electron/atom/renderer/web_worker_observer.cc,"atom::WebWorkerObserver::ContextCreated( v8 :: Local<v8::Context> context)",21, 73, 0, 0
repos/cpp/electron/atom/renderer/web_worker_observer.cc,"atom::WebWorkerObserver::ContextWillDestroy( v8 :: Local<v8::Context> context)",7, 77, 0, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::GetRenderProcessPreferences( const PreferencesManager * preferences_manager , v8 :: Isolate * isolate)",8, 76, 4, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::ParseSchemesCLISwitch( base :: CommandLine * command_line , const char * switch_name)",6, 80, 0, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::SetHiddenValue( v8 :: Handle<v8::Context> context , const base :: StringPiece & key , v8 :: Local<v8::Value> value)",8, 68, 6, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::RendererClientBase()",17, 72, 6, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::~RendererClientBase()",1, 45, 0, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::DidCreateScriptContext( v8 :: Handle<v8::Context> context , content :: RenderFrame * render_frame)",15, 80, 2, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::AddRenderBindings( v8 :: Isolate * isolate , v8 :: Local<v8::Object> binding_object)",8, 76, 6, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::RenderThreadStarted()",44, 80, 2, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::RenderFrameCreated( content :: RenderFrame * render_frame)",36, 81, 8, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::RenderViewCreated( content :: RenderView * render_view)",3, 79, 0, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::DidClearWindowObject( content :: RenderFrame * render_frame)",5, 80, 2, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::OverrideSpeechSynthesizer( blink :: WebSpeechSynthesizerClient * client)",8, 50, 2, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::OverrideCreatePlugin( content :: RenderFrame * render_frame , const blink :: WebPluginParams & params , blink :: WebPlugin ** plugin)",15, 76, 2, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::AddSupportedKeySystems( std :: vector<std::unique_ptr<::media::KeySystemProperties>> * key_systems)",6, 79, 4, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::IsKeySystemsUpdateNeeded()",7, 59, 2, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::GetContext( blink :: WebLocalFrame * frame , v8 :: Isolate * isolate) const",8, 70, 4, 0
repos/cpp/electron/atom/renderer/renderer_client_base.cc,"atom::RendererClientBase::RunScript( v8 :: Local<v8::Context> context , v8 :: Local<v8::String> source)",9, 60, 2, 0
repos/cpp/electron/atom/renderer/atom_render_view_observer.cc,"atom::AtomRenderViewObserver::AtomRenderViewObserver( content :: RenderView * render_view)",2, 81, 0, 0
repos/cpp/electron/atom/renderer/atom_render_view_observer.cc,"atom::AtomRenderViewObserver::~AtomRenderViewObserver()",1, 53, 0, 0
repos/cpp/electron/atom/renderer/atom_render_view_observer.cc,"atom::AtomRenderViewObserver::OnMessageReceived( const IPC :: Message & message)",9, 78, 0, 0
repos/cpp/electron/atom/renderer/atom_render_view_observer.cc,"atom::AtomRenderViewObserver::OnDestruct()",3, 44, 0, 0
repos/cpp/electron/atom/renderer/atom_render_view_observer.cc,"atom::AtomRenderViewObserver::OnOffscreen()",3, 51, 2, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::GuestViewContainer( content :: RenderFrame * render_frame)",2, 75, 0, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::~GuestViewContainer()",4, 66, 4, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::FromID( int element_instance_id)",6, 74, 0, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::RegisterElementResizeCallback( const ResizeCallback & callback)",4, 56, 0, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::SetElementInstanceID( int element_instance_id)",5, 73, 0, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::DidResizeElement( const gfx :: Size & new_size)",7, 71, 0, 0
repos/cpp/electron/atom/renderer/guest_view_container.cc,"atom::GuestViewContainer::GetWeakPtr()",3, 81, 0, 0
repos/cpp/electron/atom/renderer/preferences_manager.cc,"atom::PreferencesManager::PreferencesManager()",3, 51, 2, 0
repos/cpp/electron/atom/renderer/preferences_manager.cc,"atom::PreferencesManager::~PreferencesManager()",1, 45, 0, 0
repos/cpp/electron/atom/renderer/preferences_manager.cc,"atom::PreferencesManager::OnControlMessageReceived( const IPC :: Message & message)",8, 81, 0, 0
repos/cpp/electron/atom/renderer/preferences_manager.cc,"atom::PreferencesManager::OnUpdatePreferences( const base :: ListValue & preferences)",6, 81, 6, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::IsDevTools( content :: RenderFrame * render_frame)",4, 70, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::IsDevToolsExtension( content :: RenderFrame * render_frame)",4, 70, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::GetModuleCache( v8 :: Isolate * isolate)",11, 76, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::GetBinding( v8 :: Isolate * isolate , v8 :: Local<v8::String> key , mate :: Arguments * margs)",28, 80, 4, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::CreatePreloadScript( v8 :: Isolate * isolate , v8 :: Local<v8::String> preloadSrc)",5, 77, 41, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRenderFrameObserver::AtomSandboxedRenderFrameObserver( content :: RenderFrame * render_frame , AtomSandboxedRendererClient * renderer_client)",4, 81, 35, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRenderFrameObserver::EmitIPCEvent( blink :: WebLocalFrame * frame , bool internal , const std :: string & channel , const base :: ListValue & args , int32_t sender_id)",19, 80, 8, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::AtomSandboxedRendererClient()",5, 66, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::~AtomSandboxedRendererClient()",1, 63, 0, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::InitializeBindings( v8 :: Local<v8::Object> binding , v8 :: Local<v8::Context> context)",24, 76, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::RenderFrameCreated( content :: RenderFrame * render_frame)",5, 60, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::RenderViewCreated( content :: RenderView * render_view)",4, 54, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::DidCreateScriptContext( v8 :: Handle<v8::Context> context , content :: RenderFrame * render_frame)",36, 81, 25, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::WillReleaseScriptContext( v8 :: Handle<v8::Context> context , content :: RenderFrame * render_frame)",12, 77, 2, 0
repos/cpp/electron/atom/renderer/atom_sandboxed_renderer_client.cc,"atom::AtomSandboxedRendererClient::InvokeIpcCallback( v8 :: Handle<v8::Context> context , const std :: string & callback_name , std :: vector<v8::Handle<v8::Value>> args)",21, 80, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::GetDataListSuggestions( const blink :: WebInputElement & element , std :: vector<base::string16> * values , std :: vector<base::string16> * labels)",11, 67, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::TrimStringVectorForIPC( std :: vector<base::string16> * strings)",11, 68, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::AutofillAgent( content :: RenderFrame * frame)",4, 69, 4, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::OnDestruct()",3, 35, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::DidChangeScrollOffset()",3, 46, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::FocusedNodeChanged( const blink :: WebNode &)",5, 64, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::TextFieldDidEndEditing( const blink :: WebInputElement &)",3, 76, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::TextFieldDidChange( const blink :: WebFormControlElement & element)",10, 75, 32, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::TextFieldDidChangeImpl( const blink :: WebFormControlElement & element)",6, 51, 4, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::TextFieldDidReceiveKeyDown( const blink :: WebInputElement & element , const blink :: WebKeyboardEvent & event)",11, 49, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::OpenTextDataListChooser( const blink :: WebInputElement & element)",6, 45, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::DataListOptionsChanged( const blink :: WebInputElement & element)",9, 45, 4, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::ShowSuggestionsOptions::ShowSuggestionsOptions()",2, 71, 4, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::ShowSuggestions( const blink :: WebFormControlElement & element , const ShowSuggestionsOptions & options)",31, 81, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::DidReceiveLeftMouseDownOrGestureTapInNode( const blink :: WebNode & node)",4, 69, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::DidCompleteFocusChangeInFrame()",3, 54, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::OnMessageReceived( const IPC :: Message & message)",10, 69, 0, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::IsUserGesture() const",3, 68, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::HidePopup()",3, 80, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::ShowPopup( const blink :: WebFormControlElement & element , const std :: vector<base::string16> & values , const std :: vector<base::string16> & labels)",8, 78, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::OnAcceptSuggestion( base :: string16 suggestion)",7, 80, 2, 0
repos/cpp/electron/atom/renderer/atom_autofill_agent.cc,"atom::AutofillAgent::DoFocusChangeComplete()",16, 80, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::GetIPCObject( v8 :: Isolate * isolate , v8 :: Local<v8::Context> context , bool internal , v8 :: Local<v8::Object> * ipc)",16, 73, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::ListValueToVector( v8 :: Isolate * isolate , const base :: ListValue & list)",8, 65, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::NetResourceProvider( int key)",9, 68, 8, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::AtomRenderFrameObserver( content :: RenderFrame * frame , RendererClientBase * renderer_client)",9, 60, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::DidClearWindowObject()",3, 57, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::DidCreateDocumentElement()",3, 59, 0, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::DidCreateScriptContext( v8 :: Handle<v8::Context> context , int world_id)",13, 81, 6, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::DraggableRegionsChanged()",14, 76, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::WillReleaseScriptContext( v8 :: Local<v8::Context> context , int world_id)",6, 72, 4, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::OnDestruct()",3, 45, 0, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::CreateIsolatedWorldContext()",17, 77, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::IsMainWorld( int world_id)",3, 58, 0, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::IsIsolatedWorld( int world_id)",3, 62, 0, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::ShouldNotifyClient( int world_id)",6, 74, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::OnMessageReceived( const IPC :: Message & message)",10, 79, 0, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::OnBrowserMessage( bool internal , bool send_to_all , const std :: string & channel , const base :: ListValue & args , int32_t sender_id)",29, 76, 47, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::OnTakeHeapSnapshot( IPC :: PlatformFileForTransit file_handle , const std :: string & channel)",15, 70, 2, 0
repos/cpp/electron/atom/renderer/atom_render_frame_observer.cc,"atom::AtomRenderFrameObserver::EmitIPCEvent( blink :: WebLocalFrame * frame , bool internal , const std :: string & channel , const base :: ListValue & args , int32_t sender_id)",31, 81, 2, 0
repos/cpp/electron/atom/renderer/printing/print_render_frame_helper_delegate.cc,"atom::PrintRenderFrameHelperDelegate::CancelPrerender( content :: RenderFrame * render_frame)",4, 54, 0, 0
repos/cpp/electron/atom/renderer/printing/print_render_frame_helper_delegate.cc,"atom::PrintRenderFrameHelperDelegate::GetPdfElement( blink :: WebLocalFrame * frame)",4, 65, 0, 0
repos/cpp/electron/atom/renderer/printing/print_render_frame_helper_delegate.cc,"atom::PrintRenderFrameHelperDelegate::IsPrintPreviewEnabled()",3, 63, 0, 0
repos/cpp/electron/atom/renderer/printing/print_render_frame_helper_delegate.cc,"atom::PrintRenderFrameHelperDelegate::OverridePrint( blink :: WebLocalFrame * frame)",4, 52, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::HasWordCharacters( const base :: string16 & text , int index)",12, 64, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellcheckRequest::SpellcheckRequest( const base :: string16 & text , blink :: WebTextCheckingCompletion * completion)",5, 66, 20, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellcheckRequest::~SpellcheckRequest()",1, 26, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellcheckRequest::text() const",1, 55, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellcheckRequest::completion()",1, 73, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellcheckRequest::wordmap()",1, 43, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellCheckClient( const std :: string & language , v8 :: Isolate * isolate , v8 :: Local<v8::Object> provider)",15, 67, 35, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::~SpellCheckClient()",3, 40, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::RequestCheckingOfText( const blink :: WebString & textToCheck , blink :: WebTextCheckingCompletion * completionCallback)",21, 81, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::IsSpellCheckingEnabled() const",3, 56, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::ShowSpellingUI( bool show)",1, 52, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::IsShowingSpellingUI()",3, 47, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::UpdateSpellingUIWithMisspelledWord( const blink :: WebString & word)",2, 59, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellCheckText()",58, 79, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::OnSpellCheckDone( const std :: vector<base::string16> & misspelled_words)",23, 75, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellCheckWords( const SpellCheckScope & scope , const std :: vector<base::string16> & words)",13, 79, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::IsContraction( const SpellCheckScope & scope , const base :: string16 & contraction , std :: vector<base::string16> * contraction_words)",23, 80, 11, 0
repos/cpp/electron/atom/renderer/api/atom_api_spell_check_client.cc,"atom::api::SpellCheckClient::SpellCheckScope::SpellCheckScope( const SpellCheckClient & client)",7, 74, 10, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"mate::Converter<blink::WebLocalFrame::ScriptExecutionType>::FromV8( v8 :: Isolate * isolate , v8 :: Local<v8::Value> val , blink :: WebLocalFrame :: ScriptExecutionType * out)",17, 71, 21, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::GetRenderFrame( v8 :: Local<v8::Value> value)",10, 80, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::RenderFrameStatus::RenderFrameStatus( content :: RenderFrame * render_frame)",2, 65, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::RenderFrameStatus::~RenderFrameStatus()",1, 32, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::RenderFrameStatus::is_ok()",1, 53, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::RenderFrameStatus::OnDestruct()",1, 29, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::ScriptExecutionCallback::ScriptExecutionCallback( const CompletionCallback & callback)",2, 71, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::ScriptExecutionCallback::~ScriptExecutionCallback()",1, 41, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::ScriptExecutionCallback::Completed( const blink :: WebVector<v8::Local<v8::Value>> & result)",7, 75, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::FrameSpellChecker::FrameSpellChecker( SpellCheckClient * spell_check_client , content :: RenderFrame * main_frame)",3, 76, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::FrameSpellChecker::~FrameSpellChecker()",4, 35, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::FrameSpellChecker::Visit( content :: RenderFrame * render_frame)",8, 76, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::WebFrame( v8 :: Isolate * isolate)",4, 67, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::WebFrame( v8 :: Isolate * isolate , blink :: WebLocalFrame * blink_frame)",4, 76, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::~WebFrame()",1, 25, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetName( const std :: string & name)",3, 57, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetZoomLevel( double level)",8, 65, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::GetZoomLevel() const",8, 81, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetZoomFactor( double factor)",4, 68, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::GetZoomFactor() const",3, 64, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetVisualZoomLevelLimits( double min_level , double max_level)",4, 78, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetLayoutZoomLevelLimits( double min_level , double max_level)",3, 78, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::RegisterEmbedderCustomElement( v8 :: Local<v8::Object> context , const base :: string16 & name , v8 :: Local<v8::Object> options)",8, 66, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::GetWebFrameId( v8 :: Local<v8::Value> content_window)",18, 79, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetSpellCheckProvider( mate :: Arguments * args , const std :: string & language , v8 :: Local<v8::Object> provider)",18, 79, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::RegisterURLSchemeAsBypassingCSP( const std :: string & scheme)",5, 76, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::RegisterURLSchemeAsPrivileged( const std :: string & scheme , mate :: Arguments * args)",41, 78, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::InsertText( const std :: string & text)",5, 78, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::InsertCSS( const std :: string & css)",3, 79, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::ExecuteJavaScript( const base :: string16 & code , mate :: Arguments * args)",12, 67, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::ExecuteJavaScriptInIsolatedWorld( int world_id , const std :: vector<mate::Dictionary> & scripts , mate :: Arguments * args)",39, 71, 31, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetIsolatedWorldSecurityOrigin( int world_id , const std :: string & origin_url)",6, 79, 46, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetIsolatedWorldContentSecurityPolicy( int world_id , const std :: string & security_policy)",6, 62, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::SetIsolatedWorldHumanReadableName( int world_id , const std :: string & name)",5, 76, 49, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::Create( v8 :: Isolate * isolate)",3, 64, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::GetResourceUsage( v8 :: Isolate * isolate)",6, 63, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::ClearCache( v8 :: Isolate * isolate)",6, 69, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::Opener() const",9, 81, 30, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::Parent() const",9, 81, 30, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::Top() const",9, 81, 30, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::FirstChild() const",9, 81, 30, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::NextSibling() const",9, 81, 30, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::GetFrameForSelector( const std :: string & selector) const",12, 81, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::FindFrameByName( const std :: string & name) const",10, 80, 0, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::FindFrameByRoutingId( int routing_id) const",12, 79, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::RoutingId() const",4, 78, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"atom::api::WebFrame::BuildPrototype( v8 :: Isolate * isolate , v8 :: Local<v8::FunctionTemplate> prototype)",44, 76, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_web_frame.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 74, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_renderer_ipc.cc,"atom::api::GetCurrentRenderFrame()",7, 66, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_renderer_ipc.cc,"atom::api::Send( mate :: Arguments * args , const std :: string & channel , const base :: ListValue & arguments)",13, 66, 2, 0
repos/cpp/electron/atom/renderer/api/atom_api_renderer_ipc.cc,"atom::api::SendSync( mate :: Arguments * args , const std :: string & channel , const base :: ListValue & arguments)",18, 70, 4, 0
repos/cpp/electron/atom/renderer/api/atom_api_renderer_ipc.cc,"atom::api::SendTo( mate :: Arguments * args , bool internal , bool send_to_all , int32_t web_contents_id , const std :: string & channel , const base :: ListValue & arguments)",17, 76, 6, 0
repos/cpp/electron/atom/renderer/api/atom_api_renderer_ipc.cc,"Initialize( v8 :: Local<v8::Object> exports , v8 :: Local<v8::Value> unused , v8 :: Local<v8::Context> context , void * priv)",9, 57, 2, 0
repos/cpp/electron/atom/utility/atom_content_utility_client.cc,"atom::AtomContentUtilityClient::AtomContentUtilityClient()",5, 74, 0, 0
repos/cpp/electron/atom/utility/atom_content_utility_client.cc,"atom::AtomContentUtilityClient::~AtomContentUtilityClient()",1, 57, 0, 0
repos/cpp/electron/atom/utility/atom_content_utility_client.cc,"atom::AtomContentUtilityClient::UtilityThreadStarted()",31, 79, 6, 0
repos/cpp/electron/atom/utility/atom_content_utility_client.cc,"atom::AtomContentUtilityClient::OnMessageReceived( const IPC :: Message & message)",11, 80, 0, 0
repos/cpp/electron/atom/utility/atom_content_utility_client.cc,"atom::AtomContentUtilityClient::RegisterServices( StaticServiceMap * services)",21, 81, 6, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::IsWidevineAvailable( base :: FilePath * cdm_path , std :: vector<media::VideoCodec> * codecs_supported , base :: flat_set<media::CdmSessionType> * session_types_supported , base :: flat_set<media::EncryptionMode> * modes_supported)",44, 81, 6, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::CreatePepperFlashInfo( const base :: FilePath & path , const std :: string & version)",38, 81, 43, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AddPepperFlashFromCommandLine( base :: CommandLine * command_line , std :: vector<content::PepperPluginInfo> * plugins)",13, 72, 2, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::ComputeBuiltInPlugins( std :: vector<content::PepperPluginInfo> * plugins)",20, 79, 2, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::ConvertStringWithSeparatorToVector( std :: vector<std::string> * vec , const char * separator , const char * cmd_switch)",9, 80, 29, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::AtomContentClient()",1, 42, 0, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::~AtomContentClient()",1, 43, 0, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::GetProduct() const",3, 52, 0, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::GetUserAgent() const",5, 76, 2, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::GetLocalizedString( int message_id) const",3, 77, 0, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::GetDataResource( int resource_id , ui :: ScaleFactor scale_factor) const",6, 77, 2, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::GetNativeImageNamed( int resource_id) const",4, 76, 0, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::GetDataResourceBytes( int resource_id) const",5, 72, 2, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::AddAdditionalSchemes( Schemes * schemes)",14, 79, 37, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::AddPepperPlugins( std :: vector<content::PepperPluginInfo> * plugins)",8, 76, 2, 0
repos/cpp/electron/atom/app/atom_content_client.cc,"atom::AtomContentClient::AddContentDecryptionModules( std :: vector<content::CdmInfo> * cdms , std :: vector<media::CdmHostFilePath> * cdm_host_file_paths)",32, 81, 10, 0
repos/cpp/electron/atom/app/command_line_args.cc,"IsUrlArg( const base :: CommandLine :: CharType * arg)",24, 68, 6, 0
repos/cpp/electron/atom/app/command_line_args.cc,"atom::CheckCommandLineArguments( int argc , base :: CommandLine :: CharType ** argv)",14, 79, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::IsBrowserProcess( base :: CommandLine * cmd)",4, 81, 2, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::SubprocessNeedsResourceBundle( const std :: string & process_type)",16, 73, 6, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::InvalidParameterHandler( const wchar_t * , const wchar_t * , const wchar_t * , unsigned int , uintptr_t)",7, 45, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::LoadResourceBundle( const std :: string & locale)",30, 81, 2, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::AtomMainDelegate()",1, 40, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::~AtomMainDelegate()",1, 41, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::BasicStartupComplete( int * exit_code)",61, 80, 2, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::PreSandboxStartup()",36, 80, 2, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::PreCreateMainMessageLoop()",5, 52, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::CreateContentBrowserClient()",4, 80, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::CreateContentRendererClient()",12, 61, 4, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::CreateContentUtilityClient()",4, 80, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::RunProcess( const std :: string & process_type , const content :: MainFunctionParams & main_function_params)",8, 63, 4, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::ShouldSendMachPort( const std :: string & process_type)",3, 77, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::DelaySandboxInitialization( const std :: string & process_type)",4, 51, 0, 0
repos/cpp/electron/atom/app/atom_main_delegate.cc,"atom::AtomMainDelegate::ShouldLockSchemeRegistry()",3, 52, 0, 0
repos/cpp/electron/atom/app/atom_main.cc,"IsEnvSet( const char * name)",10, 46, 2, 0
repos/cpp/electron/atom/app/atom_main.cc,"FixStdioStreams()",16, 79, 2, 0
repos/cpp/electron/atom/app/atom_main.cc,"wWinMain( HINSTANCE instance , HINSTANCE , wchar_t * cmd , int)",94, 80, 2, 0
repos/cpp/electron/atom/app/atom_main.cc,"main( int argc , char * argv [ ])",18, 48, 2, 0
repos/cpp/electron/atom/app/atom_main.cc,"main( int argc , char * argv [ ])",40, 78, 6, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::UvTaskRunner( uv_loop_t * loop)",1, 61, 0, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::~UvTaskRunner()",6, 58, 4, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::PostDelayedTask( const base :: Location & from_here , base :: OnceClosure task , base :: TimeDelta delay)",10, 77, 2, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::RunsTasksInCurrentSequence() const",3, 56, 0, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::PostNonNestableDelayedTask( const base :: Location & from_here , base :: OnceClosure task , base :: TimeDelta delay)",5, 79, 0, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::OnTimeout( uv_timer_t * timer)",10, 74, 2, 0
repos/cpp/electron/atom/app/uv_task_runner.cc,"atom::UvTaskRunner::OnClose( uv_handle_t * handle)",3, 50, 0, 0
repos/cpp/electron/atom/app/node_main.cc,"atom::NodeMain( int argc , char * argv [ ])",89, 80, 4, 0
