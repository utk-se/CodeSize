File, Function, Total Width, Leading Space(s), Leading Tab(s)
repos/java/interviews/uva/MultipleOfSeventeen.java,"MultipleOfSeventeen::main( String [ ] args)",71, 0, 3
repos/java/interviews/uva/SimplyEmirp.java,"SimplyEmirp::main( String [ ] args)",55, 0, 4
repos/java/interviews/uva/VirtualFriends.java,"VirtualFriends::main( String args [ ])",82, 8, 0
repos/java/interviews/uva/VirtualFriends.java,"VirtualFriends::startUnion( int numberOfPeople)",68, 12, 0
repos/java/interviews/uva/VirtualFriends.java,"VirtualFriends::union( int person , int friend)",92, 12, 0
repos/java/interviews/uva/VirtualFriends.java,"VirtualFriends::find( int person)",51, 12, 0
repos/java/interviews/uva/WhoSaidCrisis.java,"WhoSaidCrisis::main( String [ ] args)",47, 0, 3
repos/java/interviews/uva/Newspaper.java,"Newspaper::main( String [ ] args)",65, 0, 3
repos/java/interviews/uva/SolveEquation.java,"SolveEquation::main( String [ ] args)",60, 0, 7
repos/java/interviews/uva/AddingReversedNumbers.java,"AddingReversedNumbers::main( String [ ] args)",69, 0, 3
repos/java/interviews/uva/SimplifyingFractions.java,"SimplifyingFractions::main( String [ ] args)",56, 0, 3
repos/java/interviews/uva/ICanGuessTheDataStructure.java,"ICanGuessTheDataStructure::main( String args [ ])",242, 12, 0
repos/java/interviews/uva/SkewBinary.java,"SkewBinary::main( String [ ] args)",64, 0, 4
repos/java/interviews/uva/GoldbachConjecture.java,"GoldbachConjecture::main( String [ ] args)",59, 0, 4
repos/java/interviews/uva/GoldbachConjecture.java,"GoldbachConjecture::sieveOfEratosthenes( int number)",62, 0, 2
repos/java/interviews/uva/HighPrecisionNumber.java,"HighPrecisionNumber::main( String [ ] args)",56, 0, 3
repos/java/interviews/uva/SplittingNumbers.java,"SplittingNumbers::main( String args [ ])",82, 8, 0
repos/java/interviews/uva/BrickGame.java,"BrickGame::main( String [ ] args)",57, 0, 3
repos/java/interviews/uva/BasicRemains.java,"BasicRemains::main( String [ ] args)",60, 0, 3
repos/java/interviews/uva/PeskyPalindromes.java,"PeskyPalindromes::main( String args [ ])",128, 12, 0
repos/java/interviews/uva/PeskyPalindromes.java,"PeskyPalindromes::generateSubstrings( String s)",64, 16, 0
repos/java/interviews/uva/PeskyPalindromes.java,"PeskyPalindromes::findUniquePalindromes( List<String> allSubstrings)",74, 4, 0
repos/java/interviews/uva/TheSettlersOfCatan.java,"TheSettlersOfCatan::main( String args [ ])",82, 8, 0
repos/java/interviews/uva/TheSettlersOfCatan.java,"TheSettlersOfCatan::dfs( int nd , int l , int nodes)",86, 16, 0
repos/java/interviews/uva/GoogleIsFeelingLucky.java,"GoogleIsFeelingLucky::main( String args [ ])",83, 8, 0
repos/java/interviews/uva/AverageSpeed.java,"AverageSpeed::main( String [ ] args)",57, 0, 3
repos/java/interviews/uva/AverageSpeed.java,"AverageSpeed::calcHours( String s)",84, 0, 2
repos/java/interviews/uva/MischievousChildren.java,"MischievousChildren::main( String [ ] args)",78, 0, 3
repos/java/interviews/uva/MischievousChildren.java,"MischievousChildren::computeFactorial( int number)",52, 0, 1
repos/java/interviews/uva/Modex.java,"Modex::main( String [ ] args)",43, 0, 2
repos/java/interviews/uva/TheLastNonZeroDigit.java,"TheLastNonZeroDigit::main( String [ ] args)",52, 0, 3
repos/java/interviews/uva/NumberingRoads.java,"NumberingRoads::main( String [ ] args)",63, 0, 5
repos/java/interviews/uva/CoconutsRevisited.java,"CoconutsRevisited::main( String [ ] args)",56, 0, 4
repos/java/interviews/uva/BigMod.java,"BigMod::main( String [ ] args)",42, 0, 1
repos/java/interviews/uva/Friends.java,"Friends::main( String args [ ])",86, 16, 0
repos/java/interviews/uva/Friends.java,"Friends::startUnion( int numberOfPeople , int [ ] people , int [ ] relationships)",91, 4, 0
repos/java/interviews/uva/Friends.java,"Friends::union( int person , int friend)",55, 4, 0
repos/java/interviews/uva/Friends.java,"Friends::find( int person)",51, 12, 0
repos/java/interviews/uva/Friends.java,"Friends::join( int person , int friend)",88, 8, 0
repos/java/interviews/uva/Parity.java,"Parity::main( String [ ] args)",65, 0, 3
repos/java/interviews/uva/Parity.java,"Parity::convertToBinary( int number)",53, 0, 1
repos/java/interviews/uva/NumberTheoryForNewbies.java,"NumberTheoryForNewbies::main( String [ ] args)",69, 0, 3
repos/java/interviews/uva/OpenSource.java,"OpenSource::main( String args [ ])",104, 32, 0
repos/java/interviews/uva/OpenSource.java,"Pair::Pair( String name , int total)",35, 4, 0
repos/java/interviews/uva/TheHugeOne.java,"TheHugeOne::main( String [ ] args)",57, 0, 4
repos/java/interviews/uva/FactorialFrequenices.java,"FactorialFrequenices::main( String [ ] args)",66, 0, 4
repos/java/interviews/uva/FactorialFrequenices.java,"FactorialFrequenices::formatOutput( int number , int [ ] digits)",62, 0, 1
repos/java/interviews/uva/BasicallySpeaking.java,"BasicallySpeaking::main( String [ ] args)",65, 0, 3
repos/java/interviews/uva/DigitCounting.java,"DigitCounting::main( String [ ] args)",43, 0, 2
repos/java/interviews/uva/WhatBaseIsThis.java,"WhatBaseIsThis::main( String [ ] args)",56, 0, 6
repos/java/interviews/uva/ArchaeologistsDilemma.java,"ArchaeologistsDilemma::main( String [ ] args)",70, 0, 3
repos/java/interviews/uva/HashmatWarriors.java,"HashmatWarriors::main( String [ ] args)",55, 0, 3
repos/java/interviews/uva/Ants.java,"Ants::main( String args [ ])",98, 16, 0
repos/java/interviews/uva/FiveHundredFactorial.java,"FiveHundredFactorial::main( String [ ] args)",55, 0, 4
repos/java/interviews/uva/BackToIntermediateMath.java,"BackToIntermediateMath::main( String [ ] args)",71, 0, 3
repos/java/interviews/uva/PrimeFactors.java,"PrimeFactors::main( String [ ] args)",91, 0, 3
repos/java/interviews/uva/PrimeFactors.java,"PrimeFactors::sieveOfEratosthenes( boolean [ ] isPrime , int number)",82, 0, 1
repos/java/interviews/uva/PrimeFactors.java,"PrimeFactors::formatOutput( int number , List<Integer> primeFactors , boolean isNegative)",88, 0, 1
repos/java/interviews/uva/PrimeFactors.java,"PrimeFactors::generatePrimeNumbers()",65, 0, 2
repos/java/interviews/uva/LightMoreLight.java,"LightMoreLight::main( String [ ] args)",42, 0, 1
repos/java/interviews/uva/LightMoreLight.java,"LightMoreLight::isAPerfectSquare( long number)",56, 0, 1
repos/java/interviews/uva/JollyJumpers.java,"JollyJumpers::main( String [ ] args)",63, 0, 3
repos/java/interviews/uva/HighSchoolPhysics.java,"HighSchoolPhysics::main( String [ ] args)",44, 0, 3
repos/java/interviews/uva/PseudoPrimeNumbers.java,"PseudoPrimeNumbers::main( String [ ] args)",60, 0, 4
repos/java/interviews/uva/IntegerInquiry.java,"IntegerInquiry::main( String [ ] args)",47, 0, 3
repos/java/interviews/uva/LargestPrimeDivisor.java,"LargestPrimeDivisor::main( String [ ] args)",51, 0, 3
repos/java/interviews/uva/VeryEasy.java,"VeryEasy::main( String [ ] args)",68, 0, 4
repos/java/interviews/leetcode/linked-list/AddTwoNumbers.java,"AddTwoNumbers::addTwoNumbers( ListNode l1 , ListNode l2)",62, 4, 0
repos/java/interviews/leetcode/linked-list/DeleteNodeInALinkedList.java,"DeleteNodeInALinkedList::deleteNode( ListNode node)",44, 4, 0
repos/java/interviews/leetcode/linked-list/LinkedListCycle.java,"Solution::hasCycle( ListNode head)",67, 8, 0
repos/java/interviews/leetcode/linked-list/PalindromeLinkedList.java,"PalindromeLinkedList::isPalindrome( ListNode head)",53, 8, 0
repos/java/interviews/leetcode/linked-list/PlusOneLinkedList.java,"PlusOneLinkedList::plusOne( ListNode head)",48, 12, 0
repos/java/interviews/leetcode/linked-list/PlusOneLinkedList.java,"PlusOneLinkedList::plusOneRecursive( ListNode head)",50, 4, 0
repos/java/interviews/leetcode/linked-list/ReverseLinkedList.java,"ReverseLinkedList::reverseList( ListNode head)",49, 4, 0
repos/java/interviews/leetcode/linked-list/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/leetcode/brainteaser/BulbSwitcher.java,"BulbSwitcher::bulbSwitch( int n)",35, 4, 0
repos/java/interviews/leetcode/bit-manipulation/PowerOfTwo.java,"PowerOfTwo::isPowerOfTwo( int n)",41, 4, 0
repos/java/interviews/leetcode/bit-manipulation/SumOfTwoInteger.java,"SumOfTwoIntegers::getSum( int a , int b)",38, 4, 0
repos/java/interviews/leetcode/bit-manipulation/MaximumProductOfWordLengths.java,"MaximumProductOfWordLengths::maxProduct( String [ ] words)",98, 16, 0
repos/java/interviews/leetcode/bit-manipulation/CountingBits.java,"CountingBits::countBits( int num)",46, 12, 0
repos/java/interviews/leetcode/bit-manipulation/HammingDistance.java,"HammingDistance::hammingDistance( int x , int y)",47, 4, 0
repos/java/interviews/leetcode/bit-manipulation/NumberOfOneBits.java,"NumberOfOneBits::hammingWeight( int n)",38, 4, 0
repos/java/interviews/leetcode/bit-manipulation/BinaryWatch.java,"BinaryWatch::readBinaryWatch( int num)",96, 16, 0
repos/java/interviews/leetcode/bit-manipulation/Utf8Validation.java,"Utf8Validation::validUtf8( int [ ] data)",49, 16, 0
repos/java/interviews/leetcode/two-pointers/MinimumSizeSubarraySum.java,"MinimumSizeSubarraySum::minSubArrayLen( int s , int [ ] nums)",57, 8, 0
repos/java/interviews/leetcode/two-pointers/MergeSortedArray.java,"MergeSortedArray::merge( int [ ] A , int m , int [ ] B , int n)",56, 4, 0
repos/java/interviews/leetcode/two-pointers/MoveZeros.java,"MoveZeros::moveZeroes( int [ ] nums)",47, 8, 0
repos/java/interviews/leetcode/two-pointers/3Sum.java,"3Sum::threeSum( int [ ] nums)",72, 20, 0
repos/java/interviews/leetcode/two-pointers/ReverseString.java,"ReverseString::reverseString( String s)",62, 8, 0
repos/java/interviews/leetcode/two-pointers/LinkedListCycle.java,"Solution::hasCycle( ListNode head)",67, 8, 0
repos/java/interviews/leetcode/two-pointers/3SumSmaller.java,"3SumSmaller::threeSumSmaller( int [ ] nums , int target)",109, 20, 0
repos/java/interviews/leetcode/two-pointers/RemoveElement.java,"RemoveElement::removeElement( int [ ] nums , int val)",52, 4, 0
repos/java/interviews/leetcode/two-pointers/RemoveDuplicatesFromSortedArray.java,"RemoveDuplicatesFromSortedArray::removeDuplicates( int [ ] nums)",47, 8, 0
repos/java/interviews/leetcode/two-pointers/SortColors.java,"SortColors::sortColors( int [ ] nums)",47, 8, 0
repos/java/interviews/leetcode/hash-table/LoggerRateLimiter.java,"LoggerRateLimiter::Logger()",56, 7, 0
repos/java/interviews/leetcode/hash-table/LoggerRateLimiter.java,"LoggerRateLimiter::shouldPrintMessage( int timestamp , String message)",71, 4, 0
repos/java/interviews/leetcode/hash-table/GroupShiftedStrings.java,"GroupShiftedStrings::groupStrings( String [ ] strings)",81, 8, 0
repos/java/interviews/leetcode/hash-table/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/leetcode/hash-table/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/leetcode/hash-table/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/leetcode/hash-table/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/leetcode/hash-table/SingleNumberII.java,"SingleNumberII::singleNumber( int [ ] nums)",73, 8, 0
repos/java/interviews/leetcode/hash-table/FirstUniqueCharacterInAString.java,"FirstUniqueCharacterInAString::firstUniqChar( String s)",84, 8, 0
repos/java/interviews/leetcode/hash-table/SparseMatrixMultiplication.java,"SparseMatrixMultiplication::multiply( int [ ] [ ] A , int [ ] [ ] B)",58, 28, 0
repos/java/interviews/leetcode/hash-table/FindTheDifference.java,"FindTheDifference::findTheDifference( String s , String t)",56, 4, 0
repos/java/interviews/leetcode/hash-table/BullsAndCows.java,"BullsAndCows::getHint( String secret , String guess)",59, 16, 0
repos/java/interviews/leetcode/hash-table/JewelsAndStones.java,"JewelsAndStones::numJewelsInStones( String J , String S)",77, 8, 0
repos/java/interviews/leetcode/hash-table/FindAnagramMappings.java,"FindAnagramMappings::anagramMappings( int [ ] A , int [ ] B)",73, 8, 0
repos/java/interviews/leetcode/hash-table/DailyTemperatures.java,"DailyTemperatures::dailyTemperatures( int [ ] temperatures)",86, 12, 0
repos/java/interviews/leetcode/hash-table/IslandPerimeter.java,"IslandPerimeter::islandPerimeter( int [ ] [ ] grid)",59, 20, 0
repos/java/interviews/leetcode/hash-table/IslandPerimeter.java,"IslandPerimeter::numNeighbors( int [ ] [ ] grid , int x , int y)",91, 8, 0
repos/java/interviews/leetcode/hash-table/ValidSudoku.java,"ValidSudoku::isValidSudoku( char [ ] [ ] board)",132, 16, 0
repos/java/interviews/leetcode/hash-table/ValidAnagram.java,"ValidAnagram::isAnagram( String s , String t)",77, 8, 0
repos/java/interviews/leetcode/hash-table/MaximumSizeSubarraySumEqualsK.java,"MaximumSizeSubarraySumEqualsK::maxSubArrayLen( int [ ] nums , int k)",73, 8, 0
repos/java/interviews/leetcode/hash-table/BinaryTreeVerticalOrderTraversal.java,"BinaryTreeVerticalOrderTraversal::verticalOrder( TreeNode root)",64, 8, 0
repos/java/interviews/leetcode/hash-table/ContainsDuplicate.java,"ContainsDuplicate::containsDuplicate( int [ ] nums)",73, 8, 0
repos/java/interviews/leetcode/hash-table/StrobogrammaticNumber.java,"StrobogrammaticNumber::isStrobogrammatic( String num)",79, 12, 0
repos/java/interviews/leetcode/hash-table/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::getKey()",45, 12, 0
repos/java/interviews/leetcode/hash-table/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::encode( String longUrl)",44, 8, 0
repos/java/interviews/leetcode/hash-table/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::decode( String shortUrl)",69, 8, 0
repos/java/interviews/leetcode/hash-table/GroupAnagrams.java,"GroupAnagrams::groupAnagrams( String [ ] strs)",91, 8, 0
repos/java/interviews/leetcode/hash-table/UniqueWordAbbreviation.java,"UniqueWordAbbreviation::ValidWordAbbr( String [ ] dictionary)",50, 8, 0
repos/java/interviews/leetcode/hash-table/UniqueWordAbbreviation.java,"UniqueWordAbbreviation::isUnique( String word)",83, 8, 0
repos/java/interviews/leetcode/hash-table/UniqueWordAbbreviation.java,"UniqueWordAbbreviation::getKey( String word)",102, 8, 0
repos/java/interviews/leetcode/hash-table/MinimumWindowSubstring.java,"MinimumWindowSubstring::minWindow( String s , String t)",98, 8, 0
repos/java/interviews/leetcode/hash-table/TwoSum.java,"TwoSum::twoSum( int [ ] nums , int target)",57, 8, 0
repos/java/interviews/leetcode/hash-table/ContainsDuplicatesII.java,"ContainsDuplicatesII::containsNearbyDuplicate( int [ ] nums , int k)",73, 8, 0
repos/java/interviews/leetcode/queue/MovingAverageFromDataStream.java,"MovingAverageFromDataStream::MovingAverage( int size)",44, 8, 0
repos/java/interviews/leetcode/queue/MovingAverageFromDataStream.java,"MovingAverageFromDataStream::next( int val)",44, 12, 0
repos/java/interviews/leetcode/divide-and-conquer/KthLargestElementInAnArray.java,"KthLargestElementInAnArray::findKthLargest( int [ ] nums , int k)",51, 4, 0
repos/java/interviews/leetcode/divide-and-conquer/ExpressionAddOperators.java,"ExpressionAddOperators::addOperators( String num , int target)",63, 4, 0
repos/java/interviews/leetcode/divide-and-conquer/ExpressionAddOperators.java,"ExpressionAddOperators::helper( List<String> result , String path , String num , int target , int pos , long eval , long multed)",116, 4, 0
repos/java/interviews/leetcode/depth-first-search/PopulatingNextRightPointersInEachNode.java,"PopulatingNextRightPointersInEachNode::connect( TreeLinkNode root)",79, 12, 0
repos/java/interviews/leetcode/depth-first-search/SameTree.java,"SameTree::isSameTree( TreeNode p , TreeNode q)",75, 8, 0
repos/java/interviews/leetcode/depth-first-search/BattleshipsInABoard.java,"BattleshipsInABoard::countBattleships( char [ ] [ ] board)",55, 12, 0
repos/java/interviews/leetcode/depth-first-search/BattleshipsInABoard.java,"BattleshipsInABoard::sink( char [ ] [ ] board , int i , int j , int numberOfShips)",96, 8, 0
repos/java/interviews/leetcode/depth-first-search/BalancedBinaryTree.java,"BalancedBinaryTree::isBalanced( TreeNode root)",47, 4, 0
repos/java/interviews/leetcode/depth-first-search/BalancedBinaryTree.java,"BalancedBinaryTree::height( TreeNode root)",54, 8, 0
repos/java/interviews/leetcode/depth-first-search/MaximumDepthOfABinaryTree.java,"MaximumDepthOfABinaryTree::maxDepth( TreeNode root)",72, 8, 0
repos/java/interviews/leetcode/depth-first-search/ConvertSortedArrayToBinarySearchTree.java,"ConvertSortedArrayToBinarySearchTree::sortedArrayToBST( int [ ] nums)",58, 8, 0
repos/java/interviews/leetcode/depth-first-search/ConvertSortedArrayToBinarySearchTree.java,"ConvertSortedArrayToBinarySearchTree::helper( int [ ] nums , int start , int end)",62, 4, 0
repos/java/interviews/leetcode/depth-first-search/NumberOfIslands.java,"NumberOfIslands::numIslands( char [ ] [ ] grid)",66, 16, 0
repos/java/interviews/leetcode/depth-first-search/NumberOfIslands.java,"NumberOfIslands::sink( char [ ] [ ] grid , int i , int j)",93, 8, 0
repos/java/interviews/leetcode/tree/ValidateBinarySearchTree.java,"ValidateBinarySearchTree::isValidBST( TreeNode root)",72, 8, 0
repos/java/interviews/leetcode/tree/ValidateBinarySearchTree.java,"ValidateBinarySearchTree::validBSTRecursive( TreeNode root , long minValue , long maxValue)",122, 12, 0
repos/java/interviews/leetcode/tree/InorderSuccessorInBST.java,"InorderSuccessorInBST::inorderSuccessor( TreeNode root , TreeNode p)",66, 4, 0
repos/java/interviews/leetcode/tree/LowestCommonAncestorOfABinaryTree.java,"LowestCommonAncestorOfABinaryTree::lowestCommonAncestor( TreeNode root , TreeNode p , TreeNode q)",82, 4, 0
repos/java/interviews/leetcode/tree/BinaryTreeMaximumPathSum.java,"BinaryTreeMaximumPathSum::maxPathSum( TreeNode root)",43, 4, 0
repos/java/interviews/leetcode/tree/BinaryTreeMaximumPathSum.java,"BinaryTreeMaximumPathSum::maxPathSumRecursive( TreeNode root)",66, 8, 0
repos/java/interviews/leetcode/tree/BinaryTreePaths.java,"BinaryTreePaths::binaryTreePaths( TreeNode root)",57, 4, 0
repos/java/interviews/leetcode/tree/BinaryTreePaths.java,"BinaryTreePaths::helper( String current , TreeNode root , List<String> result)",77, 4, 0
repos/java/interviews/leetcode/tree/SumOfLeftLeaves.java,"SumOfLeftLeaves::sumOfLeftLeaves( TreeNode root)",68, 12, 0
repos/java/interviews/leetcode/tree/TrimABinarySearchTree.java,"TrimABinarySearchTree::trimBST( TreeNode root , int L , int R)",59, 4, 0
repos/java/interviews/leetcode/tree/InvertBinaryTree.java,"InvertBinaryTree::invertTree( TreeNode root)",48, 4, 0
repos/java/interviews/leetcode/stack/TrappingRainWater.java,"TrappingRainWater::trap( int [ ] height)",63, 12, 0
repos/java/interviews/leetcode/stack/DecodeString.java,"DecodeString::decodeString( String s)",80, 16, 0
repos/java/interviews/leetcode/stack/DailyTemperatures.java,"DailyTemperatures::dailyTemperatures( int [ ] temperatures)",86, 12, 0
repos/java/interviews/leetcode/stack/ExclusiveTimeOfFunctions.java,"ExclusiveTimeOfFunctions::exclusiveTime( int n , List<String> logs)",85, 20, 0
repos/java/interviews/leetcode/stack/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/leetcode/stack/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/leetcode/stack/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/leetcode/stack/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/leetcode/stack/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/leetcode/stack/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/leetcode/stack/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::BSTIterator( TreeNode root)",40, 4, 0
repos/java/interviews/leetcode/stack/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::hasNext()",47, 8, 0
repos/java/interviews/leetcode/stack/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::next()",50, 8, 0
repos/java/interviews/leetcode/stack/FlattenNestedListIterator.java,"FlattenNestedListIterator::NestedIterator( List<NestedInteger> nestedList)",60, 4, 0
repos/java/interviews/leetcode/stack/FlattenNestedListIterator.java,"FlattenNestedListIterator::next()",41, 8, 0
repos/java/interviews/leetcode/stack/FlattenNestedListIterator.java,"FlattenNestedListIterator::hasNext()",70, 12, 0
repos/java/interviews/leetcode/sort/MeetingRooms.java,"MeetingRooms::canAttendMeetings( Interval [ ] intervals)",85, 12, 0
repos/java/interviews/leetcode/sort/MeetingRoomsII.java,"MeetingRoomsII::minMeetingRooms( Interval [ ] intervals)",55, 4, 0
repos/java/interviews/leetcode/math/PowerOfTwo.java,"PowerOfTwo::isPowerOfTwo( int n)",41, 4, 0
repos/java/interviews/leetcode/math/AddDigits.java,"AddDigits::addDigits( int num)",36, 4, 0
repos/java/interviews/leetcode/math/PlusOne.java,"Solution::plusOne( int [ ] digits)",54, 8, 0
repos/java/interviews/leetcode/math/PalindromeNumber.java,"PalindromeNumber::isPalindrome( int x)",49, 12, 0
repos/java/interviews/leetcode/math/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::getKey()",45, 12, 0
repos/java/interviews/leetcode/math/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::encode( String longUrl)",44, 8, 0
repos/java/interviews/leetcode/math/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::decode( String shortUrl)",69, 8, 0
repos/java/interviews/leetcode/math/BulbSwitcher.java,"BulbSwitcher::bulbSwitch( int n)",35, 4, 0
repos/java/interviews/leetcode/math/PoorPigs.java,"PoorPigs::poorPigs( int buckets , int minutesToDie , int minutesToTest)",80, 4, 0
repos/java/interviews/leetcode/backtracking/Permutations.java,"Permutations::permute( int [ ] nums)",76, 8, 0
repos/java/interviews/leetcode/backtracking/AndroidUnlockPatterns.java,"AndroidUnlockPatterns::numberOfPatterns( int m , int n)",121, 12, 0
repos/java/interviews/leetcode/backtracking/AndroidUnlockPatterns.java,"AndroidUnlockPatterns::DFS( boolean visited [ ] , int [ ] [ ] skip , int current , int remaining)",126, 12, 0
repos/java/interviews/leetcode/backtracking/GeneralizedAbbreviation.java,"GeneralizedAbbreviation::generateAbbreviations( String word)",61, 4, 0
repos/java/interviews/leetcode/backtracking/GeneralizedAbbreviation.java,"GeneralizedAbbreviation::backtrack( List result , String word , int position , String current , int count)",114, 12, 0
repos/java/interviews/leetcode/backtracking/GenerateParentheses.java,"GenerateParentheses::generateParenthesis( int n)",59, 8, 0
repos/java/interviews/leetcode/backtracking/GenerateParentheses.java,"GenerateParentheses::generateParenthesisRecursive( List<String> result , String current , int open , int close , int n)",112, 4, 0
repos/java/interviews/leetcode/backtracking/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinations( String digits)",69, 8, 0
repos/java/interviews/leetcode/backtracking/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinationsRecursive( List<String> result , String digits , String current , int index , String [ ] mapping)",127, 4, 0
repos/java/interviews/leetcode/binary-search/ClosestBinarySearchTreeValue.java,"ClosestBinarySearchTreeValue::closestValue( TreeNode root , double target)",94, 8, 0
repos/java/interviews/leetcode/binary-search/GuessNumberHigherOrLower.java,"GuessNumberHigherOrLower::guessNumber( int n)",49, 12, 0
repos/java/interviews/leetcode/binary-search/PowerOfXToTheN.java,"PowerOfXToTheN::myPow( double x , int n)",75, 8, 0
repos/java/interviews/leetcode/binary-search/FirstBadVersion.java,"FirstBadVersion::firstBadVersion( int n)",49, 12, 0
repos/java/interviews/leetcode/binary-search/SquareRootX.java,"Solution::mySqrt( int x)",49, 12, 0
repos/java/interviews/leetcode/design/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/leetcode/design/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/leetcode/design/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/leetcode/design/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/leetcode/design/ZigZagIterator.java,"ZigZagIterator::ZigzagIterator( List<Integer> v1 , List<Integer> v2)",64, 4, 0
repos/java/interviews/leetcode/design/ZigZagIterator.java,"ZigZagIterator::next()",26, 8, 0
repos/java/interviews/leetcode/design/ZigZagIterator.java,"ZigZagIterator::hasNext()",43, 8, 0
repos/java/interviews/leetcode/design/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/leetcode/design/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/leetcode/design/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/leetcode/design/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/leetcode/design/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/leetcode/design/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/leetcode/breadth-first-search/ShortestDistanceFromAllBuildings.java,"Shortest::shortestDistance( int [ ] [ ] grid)",179, 32, 0
repos/java/interviews/leetcode/breadth-first-search/BinaryTreeLevelOrderTraversal.java,"BinarySearchTreeLevelOrderTraversal::levelOrder( TreeNode root)",71, 12, 0
repos/java/interviews/leetcode/breadth-first-search/RemoveInvalidParentheses.java,"RemoveInvalidParentheses::removeInvalidParentheses( String s)",61, 4, 0
repos/java/interviews/leetcode/breadth-first-search/RemoveInvalidParentheses.java,"RemoveInvalidParentheses::remove( String s , List<String> result , int last_i , int last_j , char [ ] par)",99, 20, 0
repos/java/interviews/leetcode/breadth-first-search/PacificAtlanticWaterFlow.java,"PacificAtlanticWaterFlow::pacificAtlantic( int [ ] [ ] matrix)",76, 8, 0
repos/java/interviews/leetcode/breadth-first-search/PacificAtlanticWaterFlow.java,"PacificAtlanticWaterFlow::dfs( int [ ] [ ] matrix , boolean [ ] [ ] visited , int height , int x , int y)",91, 8, 0
repos/java/interviews/leetcode/breadth-first-search/SymmetricTree.java,"SymmetricTree::isSymmetric( TreeNode root)",48, 4, 0
repos/java/interviews/leetcode/breadth-first-search/SymmetricTree.java,"SymmetricTree::helper( TreeNode left , TreeNode right)",81, 8, 0
repos/java/interviews/leetcode/breadth-first-search/CloneGraph.java,"CloneGraph::cloneGraph( UndirectedGraphNode node)",75, 8, 0
repos/java/interviews/leetcode/breadth-first-search/WallsAndGates.java,"Solution::wallsAndGates( int [ ] [ ] rooms)",84, 8, 0
repos/java/interviews/leetcode/breadth-first-search/WallsAndGates.java,"Solution::dfs( int [ ] [ ] rooms , int i , int j , int distance)",148, 8, 0
repos/java/interviews/leetcode/greedy/BestTimeToBuyAndSellStockII.java,"BestTimeToBuyAndSellStockII::maxProfit( int [ ] prices)",53, 8, 0
repos/java/interviews/leetcode/dynamic-programming/MinimumPathSum.java,"MinimumPathSum::minPathSum( int [ ] [ ] grid)",72, 16, 0
repos/java/interviews/leetcode/dynamic-programming/WordBreak.java,"WordBreak::wordBreak( String s , Set<String> wordDict)",68, 16, 0
repos/java/interviews/leetcode/dynamic-programming/RegularExpressionMatching.java,"RegularExpressionMatching::isMatch( String s , String p)",95, 24, 0
repos/java/interviews/leetcode/dynamic-programming/PaintHouse.java,"PaintHouse::minCost( int [ ] [ ] costs)",119, 8, 0
repos/java/interviews/leetcode/dynamic-programming/CountingBits.java,"CountingBits::countBits( int num)",46, 12, 0
repos/java/interviews/leetcode/dynamic-programming/PaintHouseII.java,"PaintHouseII::minCostII( int [ ] [ ] costs)",72, 20, 0
repos/java/interviews/leetcode/dynamic-programming/UniqueBinarySearchTrees.java,"UniqueBinarySearchTree::numTrees( int n)",48, 16, 0
repos/java/interviews/leetcode/dynamic-programming/SentenceScreenFitting.java,"SentenceScreenFitting::wordsTyping( String [ ] sentence , int rows , int cols)",71, 16, 0
repos/java/interviews/leetcode/dynamic-programming/PalindromicSubstrings.java,"PalindromicSubstrings::countSubstrings( String s)",46, 8, 0
repos/java/interviews/leetcode/dynamic-programming/PalindromicSubstrings.java,"PalindromicSubstrings::extendPalindrome( String s , int left , int right)",86, 8, 0
repos/java/interviews/leetcode/dynamic-programming/UniquePaths.java,"UniquePaths::uniquePaths( int m , int n)",71, 8, 0
repos/java/interviews/leetcode/dynamic-programming/BombEnemy.java,"BombEnemy::maxKilledEnemies( char [ ] [ ] grid)",71, 8, 0
repos/java/interviews/leetcode/dynamic-programming/BombEnemy.java,"BombEnemy::killedEnemiesRow( char [ ] [ ] grid , int i , int j)",64, 4, 0
repos/java/interviews/leetcode/dynamic-programming/BombEnemy.java,"BombEnemy::killedEnemiesCol( char [ ] [ ] grid , int i , int j)",64, 4, 0
repos/java/interviews/leetcode/dynamic-programming/CoinChange.java,"CoinChange::coinChange( int [ ] coins , int amount)",68, 8, 0
repos/java/interviews/leetcode/dynamic-programming/CoinChange.java,"CoinChange::coinChangeRecursive( int [ ] coins , int amount , int [ ] dp)",72, 4, 0
repos/java/interviews/leetcode/dynamic-programming/EditDistance.java,"EditDistance::minDistance( String word1 , String word2)",68, 20, 0
repos/java/interviews/leetcode/dynamic-programming/LongestIncreasingSubsequence.java,"LongestIncreasingSubsequence::lengthOfLIS( int [ ] nums)",62, 20, 0
repos/java/interviews/leetcode/dynamic-programming/HouseRobber.java,"Solution::rob( int [ ] nums)",62, 12, 0
repos/java/interviews/leetcode/dynamic-programming/MinCostClimbingStairs.java,"MinCostClimbingStairs::minCostClimbingStairs( int [ ] cost)",72, 12, 0
repos/java/interviews/leetcode/dynamic-programming/PaintFence.java,"PaintFence::numWays( int n , int k)",87, 12, 0
repos/java/interviews/leetcode/dynamic-programming/ClimbingStairs.java,"ClimbingStairs::climbStairs( int n)",45, 8, 0
repos/java/interviews/leetcode/dynamic-programming/HouseRobberII.java,"HouseRobberII::rob( int [ ] nums)",78, 12, 0
repos/java/interviews/leetcode/dynamic-programming/CombinationSumIV.java,"CombinationSumIV::combinationSum4( int [ ] nums , int target)",57, 4, 0
repos/java/interviews/leetcode/string/MultiplyStrings.java,"MultiplyStrings::multiply( String num1 , String num2)",75, 16, 0
repos/java/interviews/leetcode/string/FirstUniqueCharacterInAString.java,"FirstUniqueCharacterInAString::firstUniqChar( String s)",84, 8, 0
repos/java/interviews/leetcode/string/CountAndSay.java,"CountAndSay::countAndSay( int n)",39, 4, 0
repos/java/interviews/leetcode/string/CountAndSay.java,"CountAndSay::helper( String s)",48, 8, 0
repos/java/interviews/leetcode/string/ValidParentheses.java,"ValidParentheses::isValid( String s)",87, 12, 0
repos/java/interviews/leetcode/string/ReverseWordsInAString.java,"ReverseWordsInAString::reverseWords( String s)",52, 8, 0
repos/java/interviews/leetcode/string/IntegerToEnglishWords.java,"IntegerToEnglishWords::numberToWords( int num)",73, 16, 0
repos/java/interviews/leetcode/string/IntegerToEnglishWords.java,"IntegerToEnglishWords::helper( int num)",78, 12, 0
repos/java/interviews/leetcode/string/PalindromePermutation.java,"PalindromePermutation::canPermutePalindrome( String s)",53, 8, 0
repos/java/interviews/leetcode/string/PalindromicSubstrings.java,"PalindromicSubstrings::countSubstrings( String s)",46, 8, 0
repos/java/interviews/leetcode/string/PalindromicSubstrings.java,"PalindromicSubstrings::extendPalindrome( String s , int left , int right)",86, 8, 0
repos/java/interviews/leetcode/string/ReverseVowelsOfAString.java,"ReverseVowelsOfAString::reverseVowels( String s)",72, 12, 0
repos/java/interviews/leetcode/string/DecodeWays.java,"DecodeWays::numDecodings( String s)",109, 16, 0
repos/java/interviews/leetcode/string/EditDistance.java,"EditDistance::minDistance( String word1 , String word2)",68, 20, 0
repos/java/interviews/leetcode/string/LongestSubstringWithAtMostKDistinctCharacters.java,"LongestSubstringWithAtMostKDistinctCharacters::lengthOfLongestSubstringKDistinct( String s , int k)",113, 8, 0
repos/java/interviews/leetcode/string/GenerateParentheses.java,"GenerateParentheses::generateParenthesis( int n)",59, 8, 0
repos/java/interviews/leetcode/string/GenerateParentheses.java,"GenerateParentheses::generateParenthesisRecursive( List<String> result , String current , int open , int close , int n)",112, 4, 0
repos/java/interviews/leetcode/string/LongestCommonPrefix.java,"LongestCommonPrefix::longestCommonPrefix( String [ ] strs)",76, 16, 0
repos/java/interviews/leetcode/string/ValidPalindrome.java,"ValidPalindrome::isPalindrome( String s)",98, 12, 0
repos/java/interviews/leetcode/string/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::longestPalindrome( String s)",102, 16, 0
repos/java/interviews/leetcode/string/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::isPalindrome( String s)",49, 12, 0
repos/java/interviews/leetcode/string/LongestPalindrome.java,"LongestPalindrome::longestPalindrome( String s)",77, 8, 0
repos/java/interviews/leetcode/string/AddBinary.java,"AddBinary::addBinary( String a , String b)",52, 8, 0
repos/java/interviews/leetcode/string/OneEditDistance.java,"OneEditDistance::isOneEditDistance( String s , String t)",131, 8, 0
repos/java/interviews/leetcode/string/RomanToInteger.java,"RomanToInteger::romanToInt( String s)",77, 8, 0
repos/java/interviews/leetcode/string/JudgeRouteCircle.java,"JudgeRouteCircle::judgeCircle( String moves)",50, 8, 0
repos/java/interviews/leetcode/string/MinimumWindowSubstring.java,"MinimumWindowSubstring::minWindow( String s , String t)",98, 8, 0
repos/java/interviews/leetcode/array/LongestConsecutiveSequence.java,"LongestConsecutiveSequence::longestConsecutive( int [ ] nums)",61, 16, 0
repos/java/interviews/leetcode/array/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/leetcode/array/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/leetcode/array/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/leetcode/array/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/leetcode/array/MinimumPathSum.java,"MinimumPathSum::minPathSum( int [ ] [ ] grid)",72, 16, 0
repos/java/interviews/leetcode/array/SubsetsII.java,"SubsetsII::subsetsWithDup( int [ ] nums)",69, 8, 0
repos/java/interviews/leetcode/array/SubsetsII.java,"SubsetsII::helper( int [ ] nums , ArrayList<Integer> current , int index , List<List<Integer>> result)",104, 4, 0
repos/java/interviews/leetcode/array/RotateImage.java,"RotateImage::rotate( int [ ] [ ] matrix)",68, 16, 0
repos/java/interviews/leetcode/array/PlusOne.java,"Solution::plusOne( int [ ] digits)",54, 8, 0
repos/java/interviews/leetcode/array/MajorityElement.java,"MajorityElement::majorityElement( int [ ] nums)",85, 12, 0
repos/java/interviews/leetcode/array/SummaryRanges.java,"SummaryRanges::summaryRanges( int [ ] nums)",73, 12, 0
repos/java/interviews/leetcode/array/WordSearch.java,"WordSearch::exist( char [ ] [ ] board , String word)",56, 4, 0
repos/java/interviews/leetcode/array/WordSearch.java,"WordSearch::search( char [ ] [ ] board , int i , int j , char [ ] w , int index)",79, 4, 0
repos/java/interviews/leetcode/array/MissingRanges.java,"MissingRanges::findMissingRanges( int [ ] nums , int lower , int upper)",78, 4, 0
repos/java/interviews/leetcode/array/MissingRanges.java,"MissingRanges::addMissing( ArrayList<String> result , long start , long end)",70, 4, 0
repos/java/interviews/leetcode/array/BestTimeToBuyAndSellStock.java,"BestTimeToBuyAndSellStock::maxProfit( int [ ] prices)",54, 16, 0
repos/java/interviews/leetcode/array/FindTheCelebrity.java,"FindTheCelebrity::findCelebrity( int n)",148, 12, 0
repos/java/interviews/leetcode/array/MaximumSubarray.java,"Solution::maxSubArray( int [ ] nums)",63, 12, 0
repos/java/interviews/leetcode/array/FindAllNumbersDisappearedInAnArray.java,"FindAllNumbersDisappearedInAnArray::findDisappearedNumbers( int [ ] nums)",73, 8, 0
repos/java/interviews/leetcode/array/InsertInterval.java,"InsertInterval::insert( List<Interval> intervals , Interval newInterval)",142, 12, 0
repos/java/interviews/leetcode/array/WiggleSort.java,"WiggleSort::wiggleSort( int [ ] nums)",54, 12, 0
repos/java/interviews/leetcode/array/UniquePaths.java,"UniquePaths::uniquePaths( int m , int n)",71, 8, 0
repos/java/interviews/leetcode/array/ProductofArrayExceptSelf.java,"ProductOfArrayExceptSelf::productExceptSelf( int [ ] nums)",49, 4, 0
repos/java/interviews/leetcode/array/SpiralMatrixII.java,"SpiralMatrix::generateMatrix( int n)",58, 8, 0
repos/java/interviews/leetcode/array/GameOfLife.java,"GameOfLife::gameOfLife( int [ ] [ ] board)",68, 16, 0
repos/java/interviews/leetcode/array/GameOfLife.java,"GameOfLife::liveNeighbors( int [ ] [ ] board , int m , int n , int i , int j)",80, 12, 0
repos/java/interviews/leetcode/array/Subsets.java,"Subsets::subsets( int [ ] nums)",56, 8, 0
repos/java/interviews/leetcode/array/Subsets.java,"Subsets::recurse( List<List<Integer>> result , int [ ] nums , Stack path , int position)",93, 4, 0
repos/java/interviews/leetcode/array/MinCostClimbingStairs.java,"MinCostClimbingStairs::minCostClimbingStairs( int [ ] cost)",72, 12, 0
repos/java/interviews/leetcode/array/RemoveElement.java,"RemoveElement::removeElement( int [ ] nums , int val)",52, 4, 0
repos/java/interviews/leetcode/array/IncreasingTripletSubsequence.java,"IncreasingTripletSequence::increasingTriplet( int [ ] nums)",51, 4, 0
repos/java/interviews/leetcode/array/MergeIntervals.java,"MergeIntervals::merge( List<Interval> intervals)",104, 16, 0
repos/java/interviews/leetcode/array/MaximumProductSubarray.java,"MaximumProductSubarray::maxProduct( int [ ] nums)",78, 12, 0
repos/java/interviews/leetcode/array/SpiralMatrix.java,"SpiralMatrix::spiralOrder( int [ ] [ ] matrix)",58, 8, 0
repos/java/interviews/leetcode/array/SearchInRotatedSortedArray.java,"SearchInRotatedSortedArray::search( int [ ] nums , int target)",66, 16, 0
repos/java/interviews/leetcode/array/ContainsDuplicatesII.java,"ContainsDuplicatesII::containsNearbyDuplicate( int [ ] nums , int k)",73, 8, 0
repos/java/interviews/leetcode/trie/ImplementTrie.java,"TrieNode::TrieNode( char character)",55, 8, 0
repos/java/interviews/leetcode/trie/ImplementTrie.java,"ImplementTrie::Trie()",34, 8, 0
repos/java/interviews/leetcode/trie/ImplementTrie.java,"ImplementTrie::insert( String word)",53, 16, 0
repos/java/interviews/leetcode/trie/ImplementTrie.java,"ImplementTrie::search( String word)",46, 12, 0
repos/java/interviews/leetcode/trie/ImplementTrie.java,"ImplementTrie::startsWith( String prefix)",47, 4, 0
repos/java/interviews/leetcode/trie/WordSquares.java,"WordSquares::wordSquares( String [ ] words)",80, 20, 0
repos/java/interviews/leetcode/trie/WordSquares.java,"WordSquares::helper( List<List<String>> ret , List<String> cur , int matched , int total , Map<String,Set<String>> map)",120, 4, 0
repos/java/interviews/leetcode/trie/AddAndSearchWordDataStructureDesign.java,"AddAndSearchWordDataStructure::addWord( String word)",57, 16, 0
repos/java/interviews/leetcode/trie/AddAndSearchWordDataStructureDesign.java,"AddAndSearchWordDataStructure::search( String word)",51, 8, 0
repos/java/interviews/leetcode/trie/AddAndSearchWordDataStructureDesign.java,"AddAndSearchWordDataStructure::match( char [ ] chs , int k , TrieNode node)",106, 12, 0
repos/java/interviews/company/snapchat/ReverseWordsInAString.java,"ReverseWordsInAString::reverseWords( String s)",52, 8, 0
repos/java/interviews/company/snapchat/ValidSudoku.java,"ValidSudoku::isValidSudoku( char [ ] [ ] board)",132, 16, 0
repos/java/interviews/company/snapchat/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/company/snapchat/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/company/snapchat/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/company/snapchat/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/company/snapchat/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/company/snapchat/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/company/facebook/LongestConsecutiveSequence.java,"LongestConsecutiveSequence::longestConsecutive( int [ ] nums)",61, 16, 0
repos/java/interviews/company/facebook/ValidateBinarySearchTree.java,"ValidateBinarySearchTree::isValidBST( TreeNode root)",72, 8, 0
repos/java/interviews/company/facebook/ValidateBinarySearchTree.java,"ValidateBinarySearchTree::validBSTRecursive( TreeNode root , long minValue , long maxValue)",122, 12, 0
repos/java/interviews/company/facebook/MinimumSizeSubarraySum.java,"MinimumSizeSubarraySum::minSubArrayLen( int s , int [ ] nums)",57, 8, 0
repos/java/interviews/company/facebook/MultiplyStrings.java,"MultiplyStrings::multiply( String num1 , String num2)",75, 16, 0
repos/java/interviews/company/facebook/KthLargestElementInAnArray.java,"KthLargestElementInAnArray::findKthLargest( int [ ] nums , int k)",51, 4, 0
repos/java/interviews/company/facebook/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/company/facebook/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/company/facebook/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/company/facebook/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/company/facebook/WordBreak.java,"WordBreak::wordBreak( String s , Set<String> wordDict)",68, 16, 0
repos/java/interviews/company/facebook/BinaryTreeLevelOrderTraversal.java,"BinaryTreeLevelOrderTraversal::levelOrder( TreeNode root)",71, 12, 0
repos/java/interviews/company/facebook/SubsetsII.java,"SubsetsII::subsetsWithDup( int [ ] nums)",69, 8, 0
repos/java/interviews/company/facebook/SubsetsII.java,"SubsetsII::helper( int [ ] nums , ArrayList<Integer> current , int index , List<List<Integer>> result)",104, 4, 0
repos/java/interviews/company/facebook/ImplementTrie.java,"TrieNode::TrieNode( char character)",55, 8, 0
repos/java/interviews/company/facebook/ImplementTrie.java,"ImplementTrie::Trie()",34, 8, 0
repos/java/interviews/company/facebook/ImplementTrie.java,"ImplementTrie::insert( String word)",53, 16, 0
repos/java/interviews/company/facebook/ImplementTrie.java,"ImplementTrie::search( String word)",46, 12, 0
repos/java/interviews/company/facebook/ImplementTrie.java,"ImplementTrie::startsWith( String prefix)",47, 4, 0
repos/java/interviews/company/facebook/SparseMatrixMultiplication.java,"SparseMatrixMultiplication::multiply( int [ ] [ ] A , int [ ] [ ] B)",58, 28, 0
repos/java/interviews/company/facebook/InorderSuccessorInBST.java,"InorderSuccessorInBST::inorderSuccessor( TreeNode root , TreeNode p)",66, 4, 0
repos/java/interviews/company/facebook/CountAndSay.java,"Solution::countAndSay( int n)",39, 4, 0
repos/java/interviews/company/facebook/CountAndSay.java,"Solution::helper( String s)",48, 8, 0
repos/java/interviews/company/facebook/MergeSortedArray.java,"MergeSortedArray::merge( int [ ] A , int m , int [ ] B , int n)",56, 4, 0
repos/java/interviews/company/facebook/PowerOfXToTheN.java,"PowerOfXToTheN::myPow( double x , int n)",75, 8, 0
repos/java/interviews/company/facebook/RemoveInvalidParentheses.java,"RemoveInvalidParentheses::removeInvalidParentheses( String s)",61, 4, 0
repos/java/interviews/company/facebook/RemoveInvalidParentheses.java,"RemoveInvalidParentheses::remove( String s , List<String> result , int last_i , int last_j , char [ ] par)",99, 20, 0
repos/java/interviews/company/facebook/MoveZeros.java,"MoveZeros::moveZeroes( int [ ] nums)",47, 8, 0
repos/java/interviews/company/facebook/WordSearch.java,"WordSearch::exist( char [ ] [ ] board , String word)",56, 4, 0
repos/java/interviews/company/facebook/WordSearch.java,"WordSearch::search( char [ ] [ ] board , int i , int j , char [ ] w , int index)",79, 4, 0
repos/java/interviews/company/facebook/ValidParentheses.java,"ValidParentheses::isValid( String s)",87, 12, 0
repos/java/interviews/company/facebook/BestTimeToBuyAndSellStock.java,"BestTimeToBuyAndSellStock::maxProfit( int [ ] prices)",54, 16, 0
repos/java/interviews/company/facebook/RegularExpressionMatching.java,"RegularExpressionMatching::isMatch( String s , String p)",95, 24, 0
repos/java/interviews/company/facebook/FindTheCelebrity.java,"FindTheCelebrity::findCelebrity( int n)",148, 12, 0
repos/java/interviews/company/facebook/3Sum.java,"3Sum::threeSum( int [ ] nums)",72, 20, 0
repos/java/interviews/company/facebook/LowestCommonAncestorOfABinaryTree.java,"LowestCommonAncestorsOfABinaryTree::lowestCommonAncestor( TreeNode root , TreeNode p , TreeNode q)",82, 4, 0
repos/java/interviews/company/facebook/MeetingRooms.java,"MeetingRooms::canAttendMeetings( Interval [ ] intervals)",85, 12, 0
repos/java/interviews/company/facebook/IntegerToEnglishWords.java,"IntegerToEnglishWords::numberToWords( int num)",73, 16, 0
repos/java/interviews/company/facebook/IntegerToEnglishWords.java,"IntegerToEnglishWords::helper( int num)",78, 12, 0
repos/java/interviews/company/facebook/PaintHouseII.java,"PaintHouseII::minCostII( int [ ] [ ] costs)",72, 20, 0
repos/java/interviews/company/facebook/AddAndSearchWordDataStructureDesign.java,"AddAndSearchWordDataStructure::addWord( String word)",57, 16, 0
repos/java/interviews/company/facebook/AddAndSearchWordDataStructureDesign.java,"AddAndSearchWordDataStructure::search( String word)",51, 8, 0
repos/java/interviews/company/facebook/AddAndSearchWordDataStructureDesign.java,"AddAndSearchWordDataStructure::match( char [ ] chs , int k , TrieNode node)",106, 12, 0
repos/java/interviews/company/facebook/BinaryTreePaths.java,"BinaryTreePaths::binaryTreePaths( TreeNode root)",57, 4, 0
repos/java/interviews/company/facebook/BinaryTreePaths.java,"BinaryTreePaths::helper( String current , TreeNode root , List<String> result)",77, 4, 0
repos/java/interviews/company/facebook/InsertInterval.java,"InsertInterval::insert( List<Interval> intervals , Interval newInterval)",142, 12, 0
repos/java/interviews/company/facebook/PalindromicSubstrings.java,"PalindromicSubstrings::countSubstrings( String s)",46, 8, 0
repos/java/interviews/company/facebook/PalindromicSubstrings.java,"PalindromicSubstrings::extendPalindrome( String s , int left , int right)",86, 8, 0
repos/java/interviews/company/facebook/ExpressionAddOperators.java,"ExpressionAddOperators::addOperators( String num , int target)",63, 4, 0
repos/java/interviews/company/facebook/ExpressionAddOperators.java,"ExpressionAddOperators::helper( List<String> result , String path , String num , int target , int pos , long eval , long multed)",116, 4, 0
repos/java/interviews/company/facebook/ExclusiveTimeOfFunctions.java,"ExclusiveTimeOfFunctions::exclusiveTime( int n , List<String> logs)",85, 20, 0
repos/java/interviews/company/facebook/SumOfLeftLeaves.java,"SumOfLeftLeaves::sumOfLeftLeaves( TreeNode root)",68, 12, 0
repos/java/interviews/company/facebook/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/company/facebook/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/company/facebook/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/company/facebook/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/company/facebook/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/company/facebook/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/company/facebook/DecodeWays.java,"DecodeWays::numDecodings( String s)",109, 16, 0
repos/java/interviews/company/facebook/FirstBadVersion.java,"FirstBadVersion::firstBadVersion( int n)",49, 12, 0
repos/java/interviews/company/facebook/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::BSTIterator( TreeNode root)",40, 4, 0
repos/java/interviews/company/facebook/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::hasNext()",47, 8, 0
repos/java/interviews/company/facebook/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::next()",50, 8, 0
repos/java/interviews/company/facebook/ProductOfArrayExceptSelf.java,"ProductOfArrayExceptSelf::productExceptSelf( int [ ] nums)",49, 4, 0
repos/java/interviews/company/facebook/HammingDistance.java,"HammingDistance::hammingDistance( int x , int y)",47, 4, 0
repos/java/interviews/company/facebook/Subsets.java,"Subsets::subsets( int [ ] nums)",56, 8, 0
repos/java/interviews/company/facebook/Subsets.java,"Subsets::recurse( List<List<Integer>> result , int [ ] nums , Stack path , int position)",93, 4, 0
repos/java/interviews/company/facebook/MaximumSizeSubarraySumEqualsK.java,"MaximumSizeSubarraySumEqualsK::maxSubArrayLen( int [ ] nums , int k)",73, 8, 0
repos/java/interviews/company/facebook/PalindromeLinkedList.java,"PalindromeLinkedList::isPalindrome( ListNode head)",53, 8, 0
repos/java/interviews/company/facebook/FlattenNestedListIterator.java,"FlattenNestedListIterator::NestedIterator( List<NestedInteger> nestedList)",60, 4, 0
repos/java/interviews/company/facebook/FlattenNestedListIterator.java,"FlattenNestedListIterator::next()",41, 8, 0
repos/java/interviews/company/facebook/FlattenNestedListIterator.java,"FlattenNestedListIterator::hasNext()",70, 12, 0
repos/java/interviews/company/facebook/BinaryTreeVerticalOrderTraversal.java,"BinaryTreeVerticalOrderTraversal::verticalOrder( TreeNode root)",64, 8, 0
repos/java/interviews/company/facebook/ValidPalindrome.java,"ValidPalindrome::isPalindrome( String s)",98, 12, 0
repos/java/interviews/company/facebook/CloneGraph.java,"CloneGraph::cloneGraph( UndirectedGraphNode node)",75, 8, 0
repos/java/interviews/company/facebook/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::getKey()",45, 12, 0
repos/java/interviews/company/facebook/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::encode( String longUrl)",44, 8, 0
repos/java/interviews/company/facebook/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::decode( String shortUrl)",69, 8, 0
repos/java/interviews/company/facebook/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinations( String digits)",69, 8, 0
repos/java/interviews/company/facebook/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinationsRecursive( List<String> result , String digits , String current , int index , String [ ] mapping)",127, 4, 0
repos/java/interviews/company/facebook/GroupAnagrams.java,"GroupAnagrams::groupAnagrams( String [ ] strs)",91, 8, 0
repos/java/interviews/company/facebook/RemoveDuplicatesFromSortedArray.java,"RemoveDuplicatesFromSortedArray::removeDuplicates( int [ ] nums)",47, 8, 0
repos/java/interviews/company/facebook/AddBinary.java,"AddBinary::addBinary( String a , String b)",52, 8, 0
repos/java/interviews/company/facebook/NumberOfIslands.java,"NumberOfIslands::numIslands( char [ ] [ ] grid)",66, 16, 0
repos/java/interviews/company/facebook/NumberOfIslands.java,"NumberOfIslands::sink( char [ ] [ ] grid , int i , int j)",93, 8, 0
repos/java/interviews/company/facebook/OneEditDistance.java,"OneEditDistance::isOneEditDistance( String s , String t)",131, 8, 0
repos/java/interviews/company/facebook/ReverseLinkedList.java,"ReverseLinkedList::reverseList( ListNode head)",49, 4, 0
repos/java/interviews/company/facebook/RomanToInteger.java,"RomanToInteger::romanToInt( String s)",77, 8, 0
repos/java/interviews/company/facebook/WallsAndGates.java,"WallsAndGates::wallsAndGates( int [ ] [ ] rooms)",84, 8, 0
repos/java/interviews/company/facebook/WallsAndGates.java,"WallsAndGates::dfs( int [ ] [ ] rooms , int i , int j , int distance)",148, 8, 0
repos/java/interviews/company/facebook/MergeIntervals.java,"MergeIntervals::merge( List<Interval> intervals)",104, 16, 0
repos/java/interviews/company/facebook/MinimumWindowSubstring.java,"MinimumWindowSubstring::minWindow( String s , String t)",98, 8, 0
repos/java/interviews/company/facebook/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/company/facebook/TwoSum.java,"TwoSum::twoSum( int [ ] nums , int target)",57, 8, 0
repos/java/interviews/company/facebook/SquareRootX.java,"SquareRootX::mySqrt( int x)",49, 12, 0
repos/java/interviews/company/facebook/SearchInRotatedSortedArray.java,"SearchInRotatedSortedArray::search( int [ ] nums , int target)",66, 16, 0
repos/java/interviews/company/facebook/SortColors.java,"SortColors::sortColors( int [ ] nums)",47, 8, 0
repos/java/interviews/company/facebook/CombinationSumIV.java,"Solution::combinationSum4( int [ ] nums , int target)",57, 4, 0
repos/java/interviews/company/adobe/AddDigits.java,"AddDigits::addDigits( int num)",36, 4, 0
repos/java/interviews/company/adobe/MajorityElement.java,"MajorityElement::majorityElement( int [ ] nums)",85, 12, 0
repos/java/interviews/company/yahoo/LinkedListCycle.java,"Solution::hasCycle( ListNode head)",67, 8, 0
repos/java/interviews/company/yahoo/ContainsDuplicate.java,"ContainsDuplicate::containsDuplicate( int [ ] nums)",73, 8, 0
repos/java/interviews/company/airbnb/AddTwoNumbers.java,"AddTwoNumbers::addTwoNumbers( ListNode l1 , ListNode l2)",62, 4, 0
repos/java/interviews/company/airbnb/ValidParentheses.java,"ValidParentheses::isValid( String s)",87, 12, 0
repos/java/interviews/company/airbnb/RegularExpressionMatching.java,"RegularExpressionMatching::isMatch( String s , String p)",95, 24, 0
repos/java/interviews/company/airbnb/ConvertSortedArrayToBinarySearchTree.java,"Solution::sortedArrayToBST( int [ ] nums)",58, 8, 0
repos/java/interviews/company/airbnb/ConvertSortedArrayToBinarySearchTree.java,"Solution::helper( int [ ] nums , int start , int end)",62, 4, 0
repos/java/interviews/company/airbnb/HouseRobber.java,"HouseRobber::rob( int [ ] nums)",62, 12, 0
repos/java/interviews/company/airbnb/ContainsDuplicate.java,"ContainsDuplicate::containsDuplicate( int [ ] nums)",73, 8, 0
repos/java/interviews/company/airbnb/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/company/airbnb/TwoSum.java,"TwoSum::twoSum( int [ ] nums , int target)",57, 8, 0
repos/java/interviews/company/airbnb/ContainsDuplicatesII.java,"ContainsDuplicatesII::containsNearbyDuplicate( int [ ] nums , int k)",73, 8, 0
repos/java/interviews/company/microsoft/Permutations.java,"Permutations::permute( int [ ] nums)",76, 8, 0
repos/java/interviews/company/microsoft/FirstUniqueCharacterInAString.java,"FirstUniqueCharacterInAString::firstUniqChar( String s)",84, 8, 0
repos/java/interviews/company/microsoft/AddDigits.java,"AddDigits::addDigits( int num)",36, 4, 0
repos/java/interviews/company/microsoft/ReverseWordsInAString.java,"ReverseWordsInAString::reverseWords( String s)",52, 8, 0
repos/java/interviews/company/microsoft/LinkedListCycle.java,"Solution::hasCycle( ListNode head)",67, 8, 0
repos/java/interviews/company/microsoft/LongestIncreasingSubsequence.java,"LongestIncreasingSubsequence::lengthOfLIS( int [ ] nums)",62, 20, 0
repos/java/interviews/company/microsoft/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::longestPalindrome( String s)",102, 16, 0
repos/java/interviews/company/microsoft/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::isPalindrome( String s)",49, 12, 0
repos/java/interviews/company/microsoft/HouseRobberII.java,"HouseRobberII::rob( int [ ] nums)",78, 12, 0
repos/java/interviews/company/microsoft/SpiralMatrix.java,"SpiralMatrix::spiralOrder( int [ ] [ ] matrix)",58, 8, 0
repos/java/interviews/company/linkedin/Permutations.java,"Permutations::permute( int [ ] nums)",76, 8, 0
repos/java/interviews/company/linkedin/BinaryTreeLevelOrderTraversal.java,"BinaryTreeLevelOrderTraversal::levelOrder( TreeNode root)",71, 12, 0
repos/java/interviews/company/linkedin/SparseMatrixMultiplication.java,"SparseMatrixMultiplication::multiply( int [ ] [ ] A , int [ ] [ ] B)",58, 28, 0
repos/java/interviews/company/linkedin/PowerOfXToTheN.java,"PowerOfXToTheN::myPow( double x , int n)",75, 8, 0
repos/java/interviews/company/linkedin/FindTheCelebrity.java,"FindTheCelebrity::findCelebrity( int n)",148, 12, 0
repos/java/interviews/company/linkedin/PaintHouse.java,"PaintHouse::minCost( int [ ] [ ] costs)",119, 8, 0
repos/java/interviews/company/linkedin/LowestCommonAncestorOfABinaryTree.java,"LowestCommonAncestorOfABinaryTree::lowestCommonAncestor( TreeNode root , TreeNode p , TreeNode q)",82, 4, 0
repos/java/interviews/company/linkedin/MaximumSubarray.java,"MaximumSubarray::maxSubArray( int [ ] nums)",63, 12, 0
repos/java/interviews/company/linkedin/InsertInterval.java,"InsertInterval::insert( List<Interval> intervals , Interval newInterval)",142, 12, 0
repos/java/interviews/company/linkedin/PalindromicSubstrings.java,"PalindromicSubstrings::countSubstrings( String s)",46, 8, 0
repos/java/interviews/company/linkedin/PalindromicSubstrings.java,"PalindromicSubstrings::extendPalindrome( String s , int left , int right)",86, 8, 0
repos/java/interviews/company/linkedin/MaximumDepthOfABinaryTree.java,"MaximumDepthOfABinaryTree::maxDepth( TreeNode root)",72, 8, 0
repos/java/interviews/company/linkedin/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::BSTIterator( TreeNode root)",40, 4, 0
repos/java/interviews/company/linkedin/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::hasNext()",47, 8, 0
repos/java/interviews/company/linkedin/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::next()",50, 8, 0
repos/java/interviews/company/linkedin/ProductOfArrayExceptSelf.java,"ProductOfArrayExceptSelf::productExceptSelf( int [ ] nums)",49, 4, 0
repos/java/interviews/company/linkedin/SymmetricTree.java,"SymmetricTree::isSymmetric( TreeNode root)",48, 4, 0
repos/java/interviews/company/linkedin/SymmetricTree.java,"SymmetricTree::helper( TreeNode left , TreeNode right)",81, 8, 0
repos/java/interviews/company/linkedin/HouseRobber.java,"HouseRobber::rob( int [ ] nums)",62, 12, 0
repos/java/interviews/company/linkedin/MergeIntervals.java,"MergeIntervals::merge( List<Interval> intervals)",104, 16, 0
repos/java/interviews/company/linkedin/MaximumProductSubarray.java,"MaximumProductSubarray::maxProduct( int [ ] nums)",78, 12, 0
repos/java/interviews/company/linkedin/MinimumWindowSubstring.java,"MinimumWindowSubstring::minWindow( String s , String t)",98, 8, 0
repos/java/interviews/company/linkedin/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/company/linkedin/TwoSum.java,"TwoSum::twoSum( int [ ] nums , int target)",57, 8, 0
repos/java/interviews/company/linkedin/SearchInRotatedSortedArray.java,"SearchInRotatedSortedArray::search( int [ ] nums , int target)",66, 16, 0
repos/java/interviews/company/uber/GroupShiftedStrings.java,"GroupShiftedStrings::groupStrings( String [ ] strings)",81, 8, 0
repos/java/interviews/company/uber/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/company/uber/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/company/uber/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/company/uber/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/company/uber/WordBreak.java,"WordBreak::wordBreak( String s , Set<String> wordDict)",68, 16, 0
repos/java/interviews/company/uber/ImplementTrie.java,"TrieNode::TrieNode( char character)",55, 8, 0
repos/java/interviews/company/uber/ImplementTrie.java,"ImplementTrie::Trie()",34, 8, 0
repos/java/interviews/company/uber/ImplementTrie.java,"ImplementTrie::insert( String word)",53, 16, 0
repos/java/interviews/company/uber/ImplementTrie.java,"ImplementTrie::search( String word)",46, 12, 0
repos/java/interviews/company/uber/ImplementTrie.java,"ImplementTrie::startsWith( String prefix)",47, 4, 0
repos/java/interviews/company/uber/RegularExpressionMatching.java,"RegularExpressionMatching::isMatch( String s , String p)",95, 24, 0
repos/java/interviews/company/uber/PalindromePermutation.java,"PalindromePermutation::canPermutePalindrome( String s)",53, 8, 0
repos/java/interviews/company/uber/MaximumDepthOfABinaryTree.java,"MaximumDepthOfABinaryTree::maxDepth( TreeNode root)",72, 8, 0
repos/java/interviews/company/uber/ExclusiveTimeOfFunctions.java,"ExclusiveTimeOfFunctions::exclusiveTime( int n , List<String> logs)",85, 20, 0
repos/java/interviews/company/uber/ValidSudoku.java,"ValidSudoku::isValidSudoku( char [ ] [ ] board)",132, 16, 0
repos/java/interviews/company/uber/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/company/uber/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/company/uber/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/company/uber/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/company/uber/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/company/uber/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/company/uber/DecodeWays.java,"DecodeWays::numDecodings( String s)",109, 16, 0
repos/java/interviews/company/uber/Subsets.java,"Subsets::subsets( int [ ] nums)",56, 8, 0
repos/java/interviews/company/uber/Subsets.java,"Subsets::recurse( List<List<Integer>> result , int [ ] nums , Stack path , int position)",93, 4, 0
repos/java/interviews/company/uber/GenerateParentheses.java,"GenerateParentheses::generateParenthesis( int n)",59, 8, 0
repos/java/interviews/company/uber/GenerateParentheses.java,"GenerateParentheses::generateParenthesisRecursive( List<String> result , String current , int open , int close , int n)",112, 4, 0
repos/java/interviews/company/uber/ValidPalindrome.java,"ValidPalindrome::isPalindrome( String s)",98, 12, 0
repos/java/interviews/company/uber/CloneGraph.java,"CloneGraph::cloneGraph( UndirectedGraphNode node)",75, 8, 0
repos/java/interviews/company/uber/BestTimeToBuyOrSellStock.java,"BestTimeToBuyAndSellStock::maxProfit( int [ ] prices)",54, 16, 0
repos/java/interviews/company/uber/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::getKey()",45, 12, 0
repos/java/interviews/company/uber/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::encode( String longUrl)",44, 8, 0
repos/java/interviews/company/uber/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::decode( String shortUrl)",69, 8, 0
repos/java/interviews/company/uber/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinations( String digits)",69, 8, 0
repos/java/interviews/company/uber/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinationsRecursive( List<String> result , String digits , String current , int index , String [ ] mapping)",127, 4, 0
repos/java/interviews/company/uber/GroupAnagrams.java,"GroupAnagrams::groupAnagrams( String [ ] strs)",91, 8, 0
repos/java/interviews/company/uber/OneEditDistance.java,"OneEditDistance::isOneEditDistance( String s , String t)",131, 8, 0
repos/java/interviews/company/uber/ReverseLinkedList.java,"ReverseLinkedList::reverseList( ListNode head)",49, 4, 0
repos/java/interviews/company/uber/RomanToInteger.java,"RomanToInteger::romanToInt( String s)",77, 8, 0
repos/java/interviews/company/uber/MinimumWindowSubstring.java,"MinimumWindowSubstring::minWindow( String s , String t)",98, 8, 0
repos/java/interviews/company/uber/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/company/uber/TwoSum.java,"TwoSum::twoSum( int [ ] nums , int target)",57, 8, 0
repos/java/interviews/company/uber/SpiralMatrix.java,"SpiralMatrix::spiralOrder( int [ ] [ ] matrix)",58, 8, 0
repos/java/interviews/company/uber/SearchInRotatedSortedArray.java,"SearchInRotatedSortedArray::search( int [ ] nums , int target)",66, 16, 0
repos/java/interviews/company/amazon/ValidateBinarySearchTree.java,"ValidateBinarySearchTree::isValidBST( TreeNode root)",72, 8, 0
repos/java/interviews/company/amazon/ValidateBinarySearchTree.java,"ValidateBinarySearchTree::validBSTRecursive( TreeNode root , long minValue , long maxValue)",122, 12, 0
repos/java/interviews/company/amazon/KthLargestElementInAnArray.java,"KthLargestElementInAnArray::findKthLargest( int [ ] nums , int k)",51, 4, 0
repos/java/interviews/company/amazon/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/company/amazon/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/company/amazon/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/company/amazon/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/company/amazon/TrappingRainWater.java,"TrappingRainWater::trap( int [ ] height)",63, 12, 0
repos/java/interviews/company/amazon/WordBreak.java,"WordBreak::wordBreak( String s , Set<String> wordDict)",68, 16, 0
repos/java/interviews/company/amazon/BinaryTreeLevelOrderTraversal.java,"BinaryTreeLevelOrderTraversal::levelOrder( TreeNode root)",71, 12, 0
repos/java/interviews/company/amazon/FirstUniqueCharacterInAString.java,"FirstUniqueCharacterInAString::firstUniqChar( String s)",84, 8, 0
repos/java/interviews/company/amazon/RotateImage.java,"RotateImage::rotate( int [ ] [ ] matrix)",68, 16, 0
repos/java/interviews/company/amazon/AddTwoNumbers.java,"AddTwoNumbers::addTwoNumbers( ListNode l1 , ListNode l2)",62, 4, 0
repos/java/interviews/company/amazon/ValidParentheses.java,"ValidParentheses::isValid( String s)",87, 12, 0
repos/java/interviews/company/amazon/BestTimeToBuyAndSellStock.java,"BestTimeToBuyAndSellStock::maxProfit( int [ ] prices)",54, 16, 0
repos/java/interviews/company/amazon/3Sum.java,"3Sum::threeSum( int [ ] nums)",72, 20, 0
repos/java/interviews/company/amazon/LowestCommonAncestorOfABinaryTree.java,"LowestCommonAncestorOfABinaryTree::lowestCommonAncestor( TreeNode root , TreeNode p , TreeNode q)",82, 4, 0
repos/java/interviews/company/amazon/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/company/amazon/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/company/amazon/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/company/amazon/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/company/amazon/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/company/amazon/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/company/amazon/ProductOfArrayExceptSelf.java,"ProductOfArrayExceptSelf::productExceptSelf( int [ ] nums)",49, 4, 0
repos/java/interviews/company/amazon/LinkedListCycle.java,"Solution::hasCycle( ListNode head)",67, 8, 0
repos/java/interviews/company/amazon/Subsets.java,"Subsets::subsets( int [ ] nums)",56, 8, 0
repos/java/interviews/company/amazon/Subsets.java,"Subsets::recurse( List<List<Integer>> result , int [ ] nums , Stack path , int position)",93, 4, 0
repos/java/interviews/company/amazon/PalindromeLinkedList.java,"PalindromeLinkedList::isPalindrome( ListNode head)",53, 8, 0
repos/java/interviews/company/amazon/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::longestPalindrome( String s)",102, 16, 0
repos/java/interviews/company/amazon/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::isPalindrome( String s)",49, 12, 0
repos/java/interviews/company/amazon/MinCostClimbingStairs.java,"MinCostClimbingStairs::minCostClimbingStairs( int [ ] cost)",72, 12, 0
repos/java/interviews/company/amazon/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::getKey()",45, 12, 0
repos/java/interviews/company/amazon/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::encode( String longUrl)",44, 8, 0
repos/java/interviews/company/amazon/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::decode( String shortUrl)",69, 8, 0
repos/java/interviews/company/amazon/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinations( String digits)",69, 8, 0
repos/java/interviews/company/amazon/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinationsRecursive( List<String> result , String digits , String current , int index , String [ ] mapping)",127, 4, 0
repos/java/interviews/company/amazon/GroupAnagrams.java,"GroupAnagrams::groupAnagrams( String [ ] strs)",91, 8, 0
repos/java/interviews/company/amazon/NumberOfIslands.java,"NumberOfIslands::numIslands( char [ ] [ ] grid)",66, 16, 0
repos/java/interviews/company/amazon/NumberOfIslands.java,"NumberOfIslands::sink( char [ ] [ ] grid , int i , int j)",93, 8, 0
repos/java/interviews/company/amazon/ReverseLinkedList.java,"ReverseLinkedList::reverseList( ListNode head)",49, 4, 0
repos/java/interviews/company/amazon/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/company/amazon/TwoSum.java,"TwoSum::twoSum( int [ ] nums , int target)",57, 8, 0
repos/java/interviews/company/google/LongestConsecutiveSequence.java,"LongestConsecutiveSequence::longestConsecutive( int [ ] nums)",61, 16, 0
repos/java/interviews/company/google/LoggerRateLimiter.java,"LoggerRateLimiter::Logger()",56, 7, 0
repos/java/interviews/company/google/LoggerRateLimiter.java,"LoggerRateLimiter::shouldPrintMessage( int timestamp , String message)",71, 4, 0
repos/java/interviews/company/google/GroupShiftedStrings.java,"GroupShiftedStrings::groupStrings( String [ ] strings)",81, 8, 0
repos/java/interviews/company/google/PowerOfTwo.java,"PowerOfTwo::isPowerOfTwo( int n)",41, 4, 0
repos/java/interviews/company/google/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/company/google/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/company/google/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/company/google/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/company/google/TrappingRainWater.java,"TrappingRainWater::trap( int [ ] height)",63, 12, 0
repos/java/interviews/company/google/ShortestDistanceFromAllBuildings.java,"ShortestDistanceFromAllBuildings::shortestDistance( int [ ] [ ] grid)",179, 32, 0
repos/java/interviews/company/google/WordBreak.java,"WordBreak::wordBreak( String s , Set<String> wordDict)",68, 16, 0
repos/java/interviews/company/google/FirstUniqueCharacterInAString.java,"FirstUniqueCharacterInAString::firstUniqChar( String s)",84, 8, 0
repos/java/interviews/company/google/ClosestBinarySearchTreeValue.java,"ClosestBinarySearchTreeValue::closestValue( TreeNode root , double target)",94, 8, 0
repos/java/interviews/company/google/ImplementTrie.java,"TrieNode::TrieNode( char character)",55, 8, 0
repos/java/interviews/company/google/ImplementTrie.java,"Trie::Trie()",34, 8, 0
repos/java/interviews/company/google/ImplementTrie.java,"Trie::insert( String word)",53, 16, 0
repos/java/interviews/company/google/ImplementTrie.java,"Trie::search( String word)",46, 12, 0
repos/java/interviews/company/google/ImplementTrie.java,"Trie::startsWith( String prefix)",47, 4, 0
repos/java/interviews/company/google/MovingAverageFromDataStream.java,"MovingAverageFromDataStream::MovingAverage( int size)",44, 8, 0
repos/java/interviews/company/google/MovingAverageFromDataStream.java,"MovingAverageFromDataStream::next( int val)",44, 12, 0
repos/java/interviews/company/google/AndroidUnlockPatterns.java,"AndroidUnlockPatterns::numberOfPatterns( int m , int n)",121, 12, 0
repos/java/interviews/company/google/AndroidUnlockPatterns.java,"AndroidUnlockPatterns::DFS( boolean visited [ ] , int [ ] [ ] skip , int current , int remaining)",126, 12, 0
repos/java/interviews/company/google/GuessNumberHigherOrLower.java,"GuessNumberHigherOrLower::guessNumber( int n)",49, 12, 0
repos/java/interviews/company/google/FindTheDifference.java,"FindTheDifference::findTheDifference( String s , String t)",56, 4, 0
repos/java/interviews/company/google/BullsAndCows.java,"BullsAndCows::getHint( String secret , String guess)",59, 16, 0
repos/java/interviews/company/google/PlusOne.java,"Solution::plusOne( int [ ] digits)",54, 8, 0
repos/java/interviews/company/google/ZigZagIterator.java,"ZigZagIterator::ZigzagIterator( List<Integer> v1 , List<Integer> v2)",64, 4, 0
repos/java/interviews/company/google/ZigZagIterator.java,"ZigZagIterator::next()",26, 8, 0
repos/java/interviews/company/google/ZigZagIterator.java,"ZigZagIterator::hasNext()",43, 8, 0
repos/java/interviews/company/google/PowerOfXToTheN.java,"PowerOfXToTheN::myPow( double x , int n)",75, 8, 0
repos/java/interviews/company/google/SummaryRanges.java,"SummaryRanges::summaryRanges( int [ ] nums)",73, 12, 0
repos/java/interviews/company/google/WordSquares.java,"WordSquares::wordSquares( String [ ] words)",80, 20, 0
repos/java/interviews/company/google/WordSquares.java,"WordSquares::helper( List<List<String>> ret , List<String> cur , int matched , int total , Map<String,Set<String>> map)",120, 4, 0
repos/java/interviews/company/google/MissingRanges.java,"MissingRanges::findMissingRanges( int [ ] nums , int lower , int upper)",78, 4, 0
repos/java/interviews/company/google/MissingRanges.java,"MissingRanges::addMissing( ArrayList<String> result , long start , long end)",70, 4, 0
repos/java/interviews/company/google/ValidParentheses.java,"ValidParentheses::isValid( String s)",87, 12, 0
repos/java/interviews/company/google/MaximumProductOfWordLengths.java,"MaximumProductOfWordLengths::maxProduct( String [ ] words)",98, 16, 0
repos/java/interviews/company/google/DecodeString.java,"DecodeString::decodeString( String s)",80, 16, 0
repos/java/interviews/company/google/FindAllNumbersDisappearedInAnArray.java,"FindAllNumbersDisappearedInAnArray::findDisappearedNumbers( int [ ] nums)",73, 8, 0
repos/java/interviews/company/google/BinaryTreePaths.java,"BinaryTreePaths::binaryTreePaths( TreeNode root)",57, 4, 0
repos/java/interviews/company/google/BinaryTreePaths.java,"BinaryTreePaths::helper( String current , TreeNode root , List<String> result)",77, 4, 0
repos/java/interviews/company/google/InsertInterval.java,"InsertInterval::insert( List<Interval> intervals , Interval newInterval)",142, 12, 0
repos/java/interviews/company/google/WiggleSort.java,"WiggleSort::wiggleSort( int [ ] nums)",54, 12, 0
repos/java/interviews/company/google/SentenceScreenFitting.java,"SentenceScreenFitting::wordsTyping( String [ ] sentence , int rows , int cols)",71, 16, 0
repos/java/interviews/company/google/DailyTemperatures.java,"DailyTemperatures::dailyTemperatures( int [ ] temperatures)",86, 12, 0
repos/java/interviews/company/google/GeneralizedAbbreviation.java,"GeneralizedAbbreviation::generateAbbreviations( String word)",61, 4, 0
repos/java/interviews/company/google/GeneralizedAbbreviation.java,"GeneralizedAbbreviation::backtrack( List result , String word , int position , String current , int count)",114, 12, 0
repos/java/interviews/company/google/ExpressionAddOperators.java,"ExpressionAddOperator::addOperators( String num , int target)",63, 4, 0
repos/java/interviews/company/google/ExpressionAddOperators.java,"ExpressionAddOperator::helper( List<String> result , String path , String num , int target , int pos , long eval , long multed)",116, 4, 0
repos/java/interviews/company/google/IslandPerimeter.java,"IslandPerimeter::islandPerimeter( int [ ] [ ] grid)",59, 20, 0
repos/java/interviews/company/google/IslandPerimeter.java,"IslandPerimeter::numNeighbors( int [ ] [ ] grid , int x , int y)",91, 8, 0
repos/java/interviews/company/google/ReverseVowelsOfAString.java,"ReverseVowelsOfAString::reverseVowels( String s)",72, 12, 0
repos/java/interviews/company/google/BombEnemy.java,"BombEnemy::maxKilledEnemies( char [ ] [ ] grid)",71, 8, 0
repos/java/interviews/company/google/BombEnemy.java,"BombEnemy::killedEnemiesRow( char [ ] [ ] grid , int i , int j)",64, 4, 0
repos/java/interviews/company/google/BombEnemy.java,"BombEnemy::killedEnemiesCol( char [ ] [ ] grid , int i , int j)",64, 4, 0
repos/java/interviews/company/google/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/company/google/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/company/google/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/company/google/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/company/google/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/company/google/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/company/google/PacificAtlanticWaterFlow.java,"PacificAtlanticWaterFlow::pacificAtlantic( int [ ] [ ] matrix)",76, 8, 0
repos/java/interviews/company/google/PacificAtlanticWaterFlow.java,"PacificAtlanticWaterFlow::dfs( int [ ] [ ] matrix , boolean [ ] [ ] visited , int height , int x , int y)",91, 8, 0
repos/java/interviews/company/google/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::BSTIterator( TreeNode root)",40, 4, 0
repos/java/interviews/company/google/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::hasNext()",47, 8, 0
repos/java/interviews/company/google/BinarySearchTreeIterator.java,"BinarySearchTreeIterator::next()",50, 8, 0
repos/java/interviews/company/google/GameOfLife.java,"GameOfLife::gameOfLife( int [ ] [ ] board)",68, 16, 0
repos/java/interviews/company/google/GameOfLife.java,"GameOfLife::liveNeighbors( int [ ] [ ] board , int m , int n , int i , int j)",80, 12, 0
repos/java/interviews/company/google/LongestSubstringWithAtMostKDistinctCharacters.java,"LongestSubstringWithAtMostKDistinctCharacters::lengthOfLongestSubstringKDistinct( String s , int k)",117, 12, 0
repos/java/interviews/company/google/RegularExpressionMatching.javaa,"RegularExpressionMatching::isMatch( String s , String p)",95, 24, 0
repos/java/interviews/company/google/GenerateParentheses.java,"GenerateParentheses::generateParenthesis( int n)",59, 8, 0
repos/java/interviews/company/google/GenerateParentheses.java,"GenerateParentheses::generateParenthesisRecursive( List<String> result , String current , int open , int close , int n)",112, 4, 0
repos/java/interviews/company/google/FlattenNestedListIterator.java,"FlattenNestedListIterator::NestedIterator( List<NestedInteger> nestedList)",60, 4, 0
repos/java/interviews/company/google/FlattenNestedListIterator.java,"FlattenNestedListIterator::next()",41, 8, 0
repos/java/interviews/company/google/FlattenNestedListIterator.java,"FlattenNestedListIterator::hasNext()",70, 12, 0
repos/java/interviews/company/google/BinaryTreeVerticalOrderTraversal.java,"BinaryTreeVerticalOrderTraversal::verticalOrder( TreeNode root)",64, 8, 0
repos/java/interviews/company/google/CloneGraph.java,"CloneGraph::cloneGraph( UndirectedGraphNode node)",75, 8, 0
repos/java/interviews/company/google/3SumSmaller.java,"3SumSmaller::threeSumSmaller( int [ ] nums , int target)",109, 20, 0
repos/java/interviews/company/google/StrobogrammaticNumber.java,"StrobogrammaticNumber::isStrobogrammatic( String num)",79, 12, 0
repos/java/interviews/company/google/PlusOneLinkedList.java,"PlusOneLinkedList::plusOne( ListNode head)",48, 12, 0
repos/java/interviews/company/google/PlusOneLinkedList.java,"PlusOneLinkedList::plusOneRecursive( ListNode head)",50, 4, 0
repos/java/interviews/company/google/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::getKey()",45, 12, 0
repos/java/interviews/company/google/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::encode( String longUrl)",44, 8, 0
repos/java/interviews/company/google/EncodeAndDecodeTinyURL.java,"EncodeAndDecodeTinyURL::decode( String shortUrl)",69, 8, 0
repos/java/interviews/company/google/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinations( String digits)",69, 8, 0
repos/java/interviews/company/google/LetterCombinationsOfAPhoneNumber.java,"LetterCombinationsOfAPhoneNumber::letterCombinationsRecursive( List<String> result , String digits , String current , int index , String [ ] mapping)",127, 4, 0
repos/java/interviews/company/google/UniqueWordAbbreviation.java,"UniqueWordAbbreviation::ValidWordAbbr( String [ ] dictionary)",50, 8, 0
repos/java/interviews/company/google/UniqueWordAbbreviation.java,"UniqueWordAbbreviation::isUnique( String word)",83, 8, 0
repos/java/interviews/company/google/UniqueWordAbbreviation.java,"UniqueWordAbbreviation::getKey( String word)",102, 8, 0
repos/java/interviews/company/google/PaintFence.java,"PaintFence::numWays( int n , int k)",87, 12, 0
repos/java/interviews/company/google/BinaryWatch.java,"BinaryWatch::readBinaryWatch( int num)",96, 16, 0
repos/java/interviews/company/google/NumberOfIslands.java,"NumberOfIslands::numIslands( char [ ] [ ] grid)",66, 16, 0
repos/java/interviews/company/google/NumberOfIslands.java,"NumberOfIslands::sink( char [ ] [ ] grid , int i , int j)",93, 8, 0
repos/java/interviews/company/google/Utf8Validation.java,"Utf8Validation::validUtf8( int [ ] data)",49, 16, 0
repos/java/interviews/company/google/WallsAndGates.java,"WallsAndGates::wallsAndGates( int [ ] [ ] rooms)",84, 8, 0
repos/java/interviews/company/google/WallsAndGates.java,"WallsAndGates::dfs( int [ ] [ ] rooms , int i , int j , int distance)",148, 8, 0
repos/java/interviews/company/google/MergeIntervals.java,"MergeIntervals::merge( List<Interval> intervals)",104, 16, 0
repos/java/interviews/company/google/JudgeRouteCircle.java,"JudgeRouteCircle::judgeCircle( String moves)",50, 8, 0
repos/java/interviews/company/google/SpiralMatrix.java,"SpiralMatrix::spiralOrder( int [ ] [ ] matrix)",58, 8, 0
repos/java/interviews/company/google/CombinationSumIV.java,"CombinationSumIV::combinationSum4( int [ ] nums , int target)",57, 4, 0
repos/java/interviews/company/palantir/ContainsDuplicate.java,"ContainsDuplicate::containsDuplicate( int [ ] nums)",73, 8, 0
repos/java/interviews/company/palantir/ContainsDuplicatesII.java,"ContainsDuplicatesII::containsNearbyDuplicate( int [ ] nums , int k)",73, 8, 0
repos/java/interviews/company/twitter/MultiplyStrings.java,"MultiplyStrings::multiply( String num1 , String num2)",75, 16, 0
repos/java/interviews/company/twitter/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/company/twitter/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/company/twitter/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/company/twitter/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/company/twitter/TrappingRainWater.java,"TrappingRainWater::trap( int [ ] height)",63, 12, 0
repos/java/interviews/company/twitter/ImplementTrie.java,"TrieNode::TrieNode( char character)",55, 8, 0
repos/java/interviews/company/twitter/ImplementTrie.java,"Trie::Trie()",34, 8, 0
repos/java/interviews/company/twitter/ImplementTrie.java,"Trie::insert( String word)",53, 16, 0
repos/java/interviews/company/twitter/ImplementTrie.java,"Trie::search( String word)",46, 12, 0
repos/java/interviews/company/twitter/ImplementTrie.java,"Trie::startsWith( String prefix)",47, 4, 0
repos/java/interviews/company/twitter/ValidParentheses.java,"ValidParentheses::isValid( String s)",87, 12, 0
repos/java/interviews/company/twitter/RegularExpressionMatching.java,"RegularExpressionMatching::isMatch( String s , String p)",95, 24, 0
repos/java/interviews/company/twitter/LowestCommonAncestorOfABinaryTree.java,"LowestCommonAncestorOfABinaryTree::lowestCommonAncestor( TreeNode root , TreeNode p , TreeNode q)",82, 4, 0
repos/java/interviews/company/twitter/FlattenNestedListIterator.java,"FlattenNestedListIterator::NestedIterator( List<NestedInteger> nestedList)",60, 4, 0
repos/java/interviews/company/twitter/FlattenNestedListIterator.java,"FlattenNestedListIterator::next()",41, 8, 0
repos/java/interviews/company/twitter/FlattenNestedListIterator.java,"FlattenNestedListIterator::hasNext()",70, 12, 0
repos/java/interviews/company/twitter/OneEditDistance.java,"OneEditDistance::isOneEditDistance( String s , String t)",131, 8, 0
repos/java/interviews/company/twitter/ReverseLinkedList.java,"ReverseLinkedList::reverseList( ListNode head)",49, 4, 0
repos/java/interviews/company/twitter/MergeIntervals.java,"MergeIntervals::merge( List<Interval> intervals)",104, 16, 0
repos/java/interviews/company/twitter/MergeKSortedLists.java,"MergeKSortedLists::mergeKLists( ListNode [ ] lists)",108, 8, 0
repos/java/interviews/company/bloomberg/FirstUniqueCharacterInAString.java,"FirstUniqueCharacterInAString::firstUniqChar( String s)",84, 8, 0
repos/java/interviews/company/bloomberg/ReverseWordsInAString.java,"ReverseWordsInAString::reverseWords( String s)",52, 8, 0
repos/java/interviews/company/bloomberg/UniquePaths.java,"UniquePaths::uniquePaths( int m , int n)",71, 8, 0
repos/java/interviews/company/bloomberg/MinStack.java,"MinStack::Node::Node( int data , int min)",41, 8, 0
repos/java/interviews/company/bloomberg/MinStack.java,"MinStack::MinStack()",24, 4, 0
repos/java/interviews/company/bloomberg/MinStack.java,"MinStack::push( int x)",63, 12, 0
repos/java/interviews/company/bloomberg/MinStack.java,"MinStack::pop()",26, 8, 0
repos/java/interviews/company/bloomberg/MinStack.java,"MinStack::top()",26, 8, 0
repos/java/interviews/company/bloomberg/MinStack.java,"MinStack::getMin()",26, 4, 0
repos/java/interviews/company/bloomberg/LinkedListCycle.java,"Solution::hasCycle( ListNode head)",67, 8, 0
repos/java/interviews/company/bloomberg/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::longestPalindrome( String s)",102, 16, 0
repos/java/interviews/company/bloomberg/LongestPalindromicSubstring.java,"LongestPalindromicSubstring::isPalindrome( String s)",49, 12, 0
repos/java/interviews/company/yelp/InsertDeleteGetRandomO1.java,"RandomizedSet::RandomizedSet()",47, 8, 0
repos/java/interviews/company/yelp/InsertDeleteGetRandomO1.java,"RandomizedSet::insert( int val)",37, 4, 0
repos/java/interviews/company/yelp/InsertDeleteGetRandomO1.java,"RandomizedSet::remove( int val)",48, 12, 0
repos/java/interviews/company/yelp/InsertDeleteGetRandomO1.java,"RandomizedSet::getRandom()",59, 8, 0
repos/java/interviews/company/yelp/ReverseWordsInAString.java,"ReverseWordsInAString::reverseWords( String s)",52, 8, 0
repos/java/interviews/company/apple/ReverseWordsInAString.java,"ReverseWordsInAString::reverseWords( String s)",52, 8, 0
repos/java/interviews/company/apple/ValidSudoku.java,"ValidSudoku::isValidSudoku( char [ ] [ ] board)",132, 16, 0
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/Operations.java,"Operations::negate( int a)",35, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/Operations.java,"Operations::minus( int a , int b)",41, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/Operations.java,"Operations::multiply( int a , int b)",57, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/Operations.java,"Operations::abs( int a)",32, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/Operations.java,"Operations::divide( int a , int b)",62, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/WouldIntersect.java,"Line::Line( double s , double y)",35, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-seven-mathematics-and-probability/WouldIntersect.java,"Line::Intersect( Line line2)",113, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/CreateBinarySearchTree.java,"CreateBinarySearchTree::createMinimalBST( int arr [ ] , int start , int end)",60, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/CreateBinarySearchTree.java,"CreateBinarySearchTree::createMinimalBST( int array [ ])",55, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/CreateLinkedListForEachLevel.java,"CreateLinkedListForEachLevel::createLinkedList( TreeNode root)",82, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/IsSubtree.java,"IsSubtree::containsTree( TreeNode t1 , TreeNode t2)",56, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/IsSubtree.java,"IsSubtree::subTree( TreeNode r1 , TreeNode r2)",60, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/IsSubtree.java,"IsSubtree::matchTree( TreeNode r1 , TreeNode r2)",73, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/PrintPaths.java,"PrintPaths::findSum( TreeNode node , int sum , int [ ] path , int level)",66, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/PrintPaths.java,"PrintPaths::findSum( TreeNode node , int sum)",40, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/PrintPaths.java,"PrintPaths::print( int [ ] path , int start , int end)",46, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/PrintPaths.java,"PrintPaths::depth( TreeNode node)",61, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/BinaryTreeIsBalanced.java,"BinaryTreeIsBalanaced::getHeight( TreeNode root)",68, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/BinaryTreeIsBalanced.java,"BinaryTreeIsBalanaced::isBalanced( TreeNode root)",65, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/ValidBinarySearchTree.java,"ValidBinarySearchTree::checkBST( TreeNode n)",34, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/ValidBinarySearchTree.java,"ValidBinarySearchTree::checkBST( TreeNode n , Integer min , Integer max)",74, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-four-trees-and-graphs/FindPath.java,"FindPath::search( Graph g , Node start , Node end)",63, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-one-arrays-and-strings/IsRotation.java,"IsRotation::isRotation( String s1 , String s2)",59, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-one-arrays-and-strings/DeleteDups.java,"RemoveDups::deleteDups( LinkedListNode n)",49, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-one-arrays-and-strings/Permutation.java,"Permutation::permutation( String s , String t)",50, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-one-arrays-and-strings/NthToLast.java,"NthToLast::nthToLast( LinkedListNode head , int k)",66, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-one-arrays-and-strings/IsUniqueChars.java,"IsUniqueChars::isUniqueChars( String str)",48, 8, 0
repos/java/interviews/cracking-the-coding-interview/chapter-one-arrays-and-strings/ReplaceSpaces.java,"ReplaceSpaces::replaceSpaces( char [ ] str , int length)",53, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-two-linked-lists/IsPalindrome.java,"IsPalindrome::isPalindrome( LinkedListNode head)",65, 1, 2
repos/java/interviews/cracking-the-coding-interview/chapter-two-linked-lists/DeleteNode.java,"DeleteNode::deleteNode( LinkedListNode n)",54, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-two-linked-lists/Partition.java,"Partition::partition( LinkedListNode node , int x)",62, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-two-linked-lists/FindBeginning.java,"FindBeginning::findBeginning( LinkedListNode head)",65, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-two-linked-lists/DeleteDups.java,"RemoveDups::deleteDups( LinkedListNode n)",49, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQUeue.java,"MyQueue<T>::MyQueue()",32, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQUeue.java,"MyQueue<T>::size()",50, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQUeue.java,"MyQueue<T>::add( T value)",56, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQUeue.java,"MyQueue<T>::shiftStacks()",41, 0, 4
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQUeue.java,"MyQueue<T>::peek()",63, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQUeue.java,"MyQueue<T>::remove()",63, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/ThreeStacks.java,"ThreeStacks::push( int stackNum , int value)",63, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/ThreeStacks.java,"ThreeStacks::pop( int stackNum)",57, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/ThreeStacks.java,"ThreeStacks::peek( int stackNum)",39, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/ThreeStacks.java,"ThreeStacks::isEmpty( int stackNum)",39, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/ThreeStacks.java,"ThreeStacks::absTopOfStack( int stasckNum)",56, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/StackWithMin.java,"StackWithMin::push( int value)",46, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/StackWithMin.java,"StackWithMin::min()",43, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/StackWithMin.java,"NodeWithMin::NodeWithMin( int v , int min)",38, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/SortStack.java,"SortStack::sort( Stack<Integer> s)",55, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/BinaryTreeIsBalanced.java,"BinaryTreeIsBalanaced::getHeight( TreeNode root)",68, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/BinaryTreeIsBalanced.java,"BinaryTreeIsBalanaced::isBalanced( TreeNode root)",65, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQueue.java,"MyQueue<T>::MyQueue()",32, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQueue.java,"MyQueue<T>::size()",50, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQueue.java,"MyQueue<T>::add( T value)",56, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQueue.java,"MyQueue<T>::shiftStacks()",41, 0, 4
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQueue.java,"MyQueue<T>::peek()",63, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/MyQueue.java,"MyQueue<T>::remove()",63, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/TowersOfHanoi.java,"TowersOfHanoi::main( String args [ ])",48, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/TowersOfHanoi.java,"Tower::Tower( int i)",32, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/TowersOfHanoi.java,"Tower::index()",22, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/TowersOfHanoi.java,"Tower::add( int d)",50, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/TowersOfHanoi.java,"Tower::moveTopTo( Tower t)",84, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/TowersOfHanoi.java,"Tower::moveDisks( int n , Tower destination , Tower buffer)",65, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/SetOfStacks.java,"SetOfStacks::push( int v)",63, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/SetOfStacks.java,"SetOfStacks::pop()",37, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-three-stacks-and-queues/SetOfStacks.java,"SetOfStacks::getLastStack()",40, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/MagicIndex.java,"MagicIndex::magicFast( int [ ] array , int start , int end)",65, 1, 1
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/MagicIndex.java,"MagicIndex::magicFast( int [ ] array)",49, 1, 2
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/AllSubsets.java,"AllSubsets::getSubsets( ArrayList<Integer> set , int index)",84, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/Staircase.java,"Staircase::countWaysDP( int n , int [ ] map)",52, 1, 1
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/StackBoxes.java,"StackBoxes::createStackDP( Box [ ] boxes , Box bottom , HashMap<Box,ArrayList<Box>> stack_map)",104, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/RepresentingNCents.java,"RepresentingNCents::makeChange( int n)",67, 1, 2
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/RepresentingNCents.java,"RepresentingNCents::makeChange( int amount , int [ ] denoms , int index , int [ ] [ ] map)",69, 1, 1
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/EightQueens.java,"EightQueens::placeQueens( int row , Integer [ ] columns , ArrayList<Integer[]> results)",78, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/EightQueens.java,"EightQueens::checkValid( Integer [ ] columns , int row1 , int column1)",79, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/AllPermutations.java,"AllPermutations::getPerms( String str)",66, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-nine-recursion-and-dynamic-programming/AllPermutations.java,"AllPermutations::insertCharAt( String word , char c , int i)",65, 0, 1
repos/java/interviews/cracking-the-coding-interview/chapter-five-bit-manipulation/BinaryRepresentation.java,"BinaryRepresentation::printBinary( double num)",50, 0, 3
repos/java/interviews/cracking-the-coding-interview/chapter-five-bit-manipulation/InsertMIntoN.java,"InsertMIntoN::updateBits( int n , int m , int i , int j)",61, 2, 2
repos/java/interviews/cracking-the-coding-interview/chapter-five-bit-manipulation/FindMissingInteger.java,"FindMissingInteger::findMissing( ArrayList<BigInteger> array)",66, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-five-bit-manipulation/FindMissingInteger.java,"FindMissingInteger::findMissing( ArrayList<BigInteger> input , int column)",80, 0, 2
repos/java/interviews/cracking-the-coding-interview/chapter-five-bit-manipulation/SwapBits.java,"SwapBits::swapOddEvenBits( int x)",64, 0, 2
