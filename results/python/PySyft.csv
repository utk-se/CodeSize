File, Function, Length, Total Width, Leading Space(s), Leading Tab(s)
github/python/PySyft/setup.py,"read( fname )", 2, 71, 4, 0
github/python/PySyft/setup.py,"my_test_suite( )", 4, 67, 4, 0
github/python/PySyft/examples/other/experimental/kerasTensorflow/keras_distributed_classifier.py,"before_run( self , run_context )", 2, 56, 12, 0
github/python/PySyft/examples/other/experimental/kerasTensorflow/keras_distributed_classifier.py,"after_run( self , run_context , run_values )", 4, 58, 16, 0
github/python/PySyft/examples/other/experimental/kerasTensorflow/keras_federated_classifier.py,"before_run( self , run_context )", 2, 56, 12, 0
github/python/PySyft/examples/other/experimental/kerasTensorflow/keras_federated_classifier.py,"after_run( self , run_context , run_values )", 4, 58, 16, 0
github/python/PySyft/syft/core/profiling.py,"save_send_msg_stats( prof , * args , ** kwargs )", 24, 70, 4, 0
github/python/PySyft/syft/core/profiling.py,"profile.profile.decorator.wrapper( * args , ** kwargs )", 7, 58, 12, 0
github/python/PySyft/syft/core/profiling.py,"profile.decorator( mthd )", 11, 58, 12, 0
github/python/PySyft/syft/core/profiling.py,"profile( profile_processing_fun )", 25, 74, 6, 0
github/python/PySyft/syft/core/utils.py,"is_in_place_method( attr : str )", 12, 67, 8, 0
github/python/PySyft/syft/core/utils.py,"map_tuple( hook , args : Tuple [ Any , ... ] , func : Callable )", 5, 79, 0, 0
github/python/PySyft/syft/core/utils.py,"map_dict( hook , kwargs : Dict [ str , Any ] , func : Callable )", 5, 78, 0, 0
github/python/PySyft/syft/core/utils.py,"pass_method_args.pass_args( * args : Tuple [ Any , ... ] , ** kwargs : Dict [ str , Any ] )", 2, 69, 4, 0
github/python/PySyft/syft/core/utils.py,"pass_method_args( method : Callable )", 8, 69, 4, 0
github/python/PySyft/syft/core/utils.py,"pass_func_args.pass_args( * args : Tuple [ Any , ... ] , ** kwargs : Dict [ str , Any ] )", 11, 85, 8, 0
github/python/PySyft/syft/core/utils.py,"pass_func_args( func : Callable )", 17, 85, 8, 0
github/python/PySyft/syft/core/frameworks/encode.py,"get_serialized_key( obj )", 7, 61, 8, 0
github/python/PySyft/syft/core/frameworks/encode.py,"get_deserialized_key( ser_type_name )", 11, 82, 12, 0
github/python/PySyft/syft/core/frameworks/encode.py,"encode( message , retrieve_pointers = False , private_local = True )", 15, 87, 4, 0
github/python/PySyft/syft/core/frameworks/encode.py,"__init__( self )", 5, 56, 8, 0
github/python/PySyft/syft/core/frameworks/encode.py,"encode( self , obj , retrieve_pointers = False , private_local = True )", 23, 80, 8, 0
github/python/PySyft/syft/core/frameworks/encode.py,"python_encode( self , obj , private_local )", 53, 86, 12, 0
github/python/PySyft/syft/core/frameworks/encode.py,"decode( message , worker , acquire = None , message_is_dict = False )", 52, 85, 4, 0
github/python/PySyft/syft/core/frameworks/encode.py,"__init__( self , worker , acquire = False )", 4, 53, 8, 0
github/python/PySyft/syft/core/frameworks/encode.py,"python_decode( self , dct )", 89, 89, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"__new__( cls , input_array , id = None , owner = None )", 9, 60, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"init( self , input_array , id , owner )", 22, 66, 12, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"__array_finalize__( self , obj )", 5, 56, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"handle_call( cls , command , owner )", 17, 64, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"is_overloaded_method( cls , attr )", 12, 85, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"is_overloaded_function( cls , attr )", 5, 79, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"ser( self , private = True , to_json = False )", 15, 72, 12, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"send( self , worker , ptr_id = None )", 14, 85, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"create_pointer( self , id , location , id_at_location )", 9, 60, 4, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"torch( self )", 2, 39, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"__new__( cls , _ , id = None , owner = None , location = None , id_at_location = None )", 12, 82, 4, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"__str__( self )", 2, 36, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"__repr__( self )", 2, 36, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"get( self , deregister_ptr = True )", 17, 78, 8, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"ser( self , private = True , to_json = False )", 17, 56, 12, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"torch( self )", 8, 71, 12, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"__array_ufunc__( self , ufunc , method , * args , ** kwargs )", 10, 80, 12, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"get_array_ptr_override_method.method( self , * args , ** kwargs )", 8, 79, 12, 0
github/python/PySyft/syft/core/frameworks/numpy/ndarray.py,"get_array_ptr_override_method( attr )", 11, 79, 12, 0
github/python/PySyft/syft/core/frameworks/pandas/utils.py,"__init__( self )", 2, 24, 4, 0
github/python/PySyft/syft/core/frameworks/pandas/utils.py,"serialise( self , pandas_obj )", 45, 87, 8, 0
github/python/PySyft/syft/core/frameworks/pandas/utils.py,"deserialise( self , obj_json )", 11, 86, 8, 0
github/python/PySyft/syft/core/frameworks/torch/__init__.py,"get_allowed_command( allowed )", 8, 65, 16, 0
github/python/PySyft/syft/core/frameworks/torch/__init__.py,"get_native_torch_name( attr )", 5, 39, 4, 0
github/python/PySyft/syft/core/frameworks/torch/__init__.py,"eval_torch_modules( )", 9, 83, 16, 0
github/python/PySyft/syft/core/frameworks/torch/__init__.py,"_command_guard( command , torch_domain , get_native = False )", 6, 87, 8, 0
github/python/PySyft/syft/core/frameworks/torch/__init__.py,"_is_command_valid_guard( command , allowed )", 6, 47, 0, 0
github/python/PySyft/syft/core/frameworks/torch/functions.py,"add( self , x , y )", 2, 42, 8, 0
github/python/PySyft/syft/core/frameworks/torch/functions.py,"add_spdz( self , x , y )", 2, 30, 4, 0
github/python/PySyft/syft/core/frameworks/torch/functions.py,"add_normal( self , x , y )", 2, 32, 4, 0
github/python/PySyft/syft/core/frameworks/torch/functions.py,"add_fixed_prec( self , x , y )", 2, 36, 4, 0
github/python/PySyft/syft/core/frameworks/torch/functions.py,"add( x , y )", 7, 54, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"__init__( self , local_worker = None , is_client = True , verbose = True , queue_size = 0 )", 67, 101, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_native_tensors_and_variables( self , tensor_type )", 25, 96, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_syft_tensor_types( self , tensor_type )", 13, 62, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_add_registration_to___init__( hook_self , tensorvar_type , register_child_instead = False", 2, 64, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"new___init__( cls , * args , owner = None , id = None , skip_register = False , ** kwargs", 2, 75, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.child( self )", 23, 88, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.child( self , value )", 2, 32, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.id( self )", 2, 33, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.id( self , new_id )", 3, 35, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.location( self )", 2, 39, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.id_at_location( self )", 2, 45, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties.owner( self )", 2, 36, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_properties( hook_self , tensor_type )", 70, 100, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_which_methods_should_we_auto_overload( self , tensor_type = torch . FloatTensor )", 32, 100, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_rename_native_functions( self , tensor_type )", 15, 83, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_assign_methods_to_use_child.forward_method_to_child( self , * args , ** kwargs )", 9, 76, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_assign_methods_to_use_child( self , tensor_type )", 24, 83, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_add_methods_from__TorchObject( self , tensor_type )", 42, 87, 24, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_LocalTensor.forward_method_to_child( self , * args , ** kwargs )", 23, 76, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_LocalTensor( self , tensor_type )", 39, 85, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_SyftTensor.forward_method_to_child( self , * args , ** kwargs )", 14, 76, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_SyftTensor( hook_self , tensor_type )", 31, 83, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_PointerTensor( self , tensor_type )", 11, 91, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_GeneralizedPointerTensor( self , tensor_type )", 12, 88, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_get_overloaded_method._execute_method_call( self , * args , ** kwargs )", 15, 75, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_get_overloaded_method( hook_self , attr )", 26, 79, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_torch_module( self )", 30, 99, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_get_overloaded_function._execute_function_call( * args , ** kwargs )", 3, 69, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_get_overloaded_function( hook_self , attr )", 15, 73, 8, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_backward.new_backward( self , * args , ** kwargs )", 35, 92, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_backward( hook_self )", 49, 92, 16, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_is_missing_grad( model )", 7, 90, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.create_grad_objects( model )", 6, 71, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_send_( self , dest )", 9, 64, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_end_get_( self )", 9, 64, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_move_( self , dest )", 2, 45, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_get_( self )", 6, 40, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_fix_precision_( self )", 9, 63, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module.module_copy_( self )", 2, 39, 12, 0
github/python/PySyft/syft/core/frameworks/torch/hook.py,"_hook_module( self )", 76, 90, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , child = None , parent = None , torch_type = None , owner = None , id = None , skip_register = False ,", 8, 29, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__str__( self )", 10, 34, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__repr__( self )", 2, 30, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get_shape( self )", 5, 85, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"share( self , * workers )", 15, 54, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"set_id( self , new_id )", 18, 82, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"parent( self )", 5, 66, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"parent( self , value )", 2, 29, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , command , owner )", 47, 90, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"create_pointer( self , parent = None , ptr_id = None , owner = None , location = None , id_at_location = None , register = False , original_pointer = False ,", 9, 32, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 15, 86, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser_routing( cls , obj_type , obj , worker , acquire )", 20, 79, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( cls , msg_obj , worker , acquire )", 40, 87, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"on( self , wrapper )", 34, 87, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"wrap( self , skip_fix_chain_end = False )", 9, 53, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"syft_wrap( cls , result , owner )", 17, 69, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"is_overloaded_method( cls , attr )", 22, 85, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"is_overloaded_function( cls , attr )", 11, 79, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"replaced_functions( cls , attr = None )", 10, 79, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"custom_handle( cls , * args , ** kwargs )", 2, 45, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , child = None , parent = None , torch_type = None , owner = None , id = None , skip_register = False ,", 8, 29, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , syft_command , owner )", 119, 95, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 8, 86, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( msg_obj , worker , acquire )", 35, 86, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , parent , deregister_ptr = None )", 2, 76, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"relu( self )", 2, 75, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , child = None , owner = None , torch_type = None )", 5, 65, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"on( self , shares )", 2, 31, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , command , owner )", 19, 78, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__add__( self , other )", 5, 77, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , * args , ** kwargs )", 2, 42, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"add( x , y )", 2, 28, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( attr )", 3, 75, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"add( self , arg )", 6, 79, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"abs( self )", 3, 70, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , * args , ** kwargs )", 9, 75, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"custom_handle( cls , command )", 4, 84, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( attr )", 3, 67, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , pointer_tensor_dict , parent = None , torch_type = None , id = None , owner = None , skip_register = False ,", 8, 29, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"pointers( self )", 3, 74, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get_shape( self )", 2, 70, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 18, 77, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( cls , msg_obj , worker , acquire )", 14, 87, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , syft_command , owner )", 44, 89, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"public_add_( self , value )", 8, 65, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , deregister_ptr = False )", 8, 65, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"sum_get( self )", 10, 42, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"workers( self )", 2, 53, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"on( self , wrapper )", 39, 88, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , child , parent , torch_type , location = None , id_at_location = None , id = None , owner = None , skip_register = False , original_pointer = False ,", 11, 32, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"share( self , * workers )", 19, 53, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"register_pointer( self )", 6, 61, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , syft_command , owner )", 35, 100, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"end_get( self )", 18, 81, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__str__( self )", 14, 39, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 13, 82, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( cls , msg_obj , worker , acquire )", 45, 93, 20, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , deregister_ptr = True )", 36, 101, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get_shape( self )", 25, 56, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"decode( self )", 4, 79, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , child = None , owner = None , torch_type = None , field = ( 2 ** 31 )", 11, 32, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get_shape( self )", 2, 38, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 15, 89, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( cls , msg_obj , worker , acquire )", 20, 72, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"on( self , shares )", 2, 31, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"encode( self , rational )", 14, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"decode( self )", 15, 66, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , command , owner )", 131, 101, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"truncate( self , torch_tensorvar , other , base = None , fractional = None )", 79, 87, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , * args , ** kwargs )", 19, 62, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"check_and_scale_precision_if_needed( self , other )", 30, 79, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__add__( self , other )", 4, 63, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__sub__( self , other )", 3, 63, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__rsub__( self , other )", 3, 63, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__mul__( self , other )", 4, 67, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__gt__( self , other )", 13, 73, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__lt__( self , other )", 13, 73, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__ge__( self , other )", 13, 74, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__le__( self , other )", 13, 74, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__eq__( self , other )", 13, 74, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__div__( self , other )", 23, 89, 20, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"prod( self , * args , ** kwargs )", 7, 96, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"sum( self , * args , ** kwargs )", 2, 80, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"cumsum( self , * args , ** kwargs )", 2, 83, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"mm( self , other )", 3, 46, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"relu( self )", 11, 60, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"max( self , shape = None )", 44, 62, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"argmax( self )", 11, 86, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"very_slow_argmax( self )", 23, 71, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__repr__( self )", 5, 75, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__str__( self )", 5, 75, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__init__( self , shares = None , child = None , torch_type = None , * args , ** kwargs )", 28, 88, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get_shape( self )", 3, 44, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 13, 70, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( cls , msg_obj , worker , acquire )", 33, 89, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( attr )", 3, 68, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"second_constructor( self )", 2, 34, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"on( self , wrapper )", 16, 87, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"share_scalar( self , scalar )", 13, 87, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__add__( self , other )", 8, 63, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__sub__( self , other )", 7, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__rsub__( self , other )", 7, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__neg__( self )", 3, 49, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"sum( self , * args , ** kwargs )", 3, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"cumsum( self , * args , ** kwargs )", 3, 70, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__mul__( self , other )", 16, 80, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"mm( self , other )", 12, 79, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__matmul__( self , other )", 2, 33, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"set_( self , * args , ** kwargs )", 3, 39, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , command , owner )", 58, 81, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"send( self , * workers )", 8, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , deregister_ptr = False )", 25, 64, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( attr )", 3, 67, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"second_constructor( self )", 2, 34, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"on( self , wrapper )", 16, 87, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"relu( self )", 2, 33, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"positive( self )", 3, 39, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__gt__( self , other )", 2, 59, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__ge__( self , other )", 2, 55, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__lt__( self , other )", 2, 59, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__le__( self , other )", 2, 55, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__eq__( self , other )", 6, 42, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"pointers( self )", 2, 37, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"end_get( self )", 2, 36, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__gt__( self , * args , ** kwargs )", 5, 55, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__lt__( self , * args , ** kwargs )", 5, 55, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__le__( self , * args , ** kwargs )", 5, 55, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__ge__( self , * args , ** kwargs )", 5, 55, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__eq__( self , * args , ** kwargs )", 8, 59, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"argmax( self )", 5, 48, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get_shape( self )", 2, 38, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"relu( self , * args , ** kwargs )", 2, 48, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"positive( self , * args , ** kwargs )", 2, 52, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"native_get_shape( self )", 2, 32, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"share( self , * workers )", 50, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"native_share( self , * workers )", 3, 38, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"_share( self , n_workers )", 16, 77, 20, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"_encode( self )", 2, 33, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"fix_precision( self , field = ( 2 ** 31 )", 6, 32, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"_fix_precison( tensorvar , is_encoded )", 9, 59, 16, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"native_fix_precision( self , * args , ** kwargs )", 2, 53, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"fix_precision_( self , * args , ** kwargs )", 6, 73, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"native_fix_precision_( self , * args , ** kwargs )", 2, 54, 4, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"sum_get( self , * args , ** kwargs )", 2, 51, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"set_id( self , new_id )", 3, 34, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__str__( self )", 2, 37, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__repr__( self )", 25, 81, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"create_pointer( self , register = False , location = None , ptr_id = None )", 5, 77, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"move( self , worker , new_id = None )", 24, 95, 20, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"__str__( self )", 14, 89, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"handle_call( cls , command , owner )", 8, 52, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True )", 17, 71, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser_wrap( torch_type , child )", 4, 76, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( obj_type , msg_obj , worker , acquire )", 20, 88, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"broadcast( self , workers )", 11, 78, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"send( self , * workers , ptr_id = None , as_list = False )", 58, 86, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , deregister_ptr = True , update_ptr_wrapper = True )", 53, 94, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"decode( self )", 2, 35, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"decode_( self )", 2, 47, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"send( self , * workers , new_id = None , new_data_id = None , new_grad_id = None , new_grad_data_id = None , as_list = False ,", 8, 31, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"get( self , deregister_ptr = True , update_ptr_wrapper = True )", 48, 94, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser( self , private , as_dict = True , is_head = False )", 32, 99, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"ser_wrap( torch_type , child , data = None , grad = None )", 11, 77, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"deser( obj_type , msg_obj , worker , acquire , is_head = False )", 49, 83, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"init_grad_( self )", 10, 72, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"assign_grad_( self , var_grad )", 15, 79, 8, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"decode( self )", 11, 64, 12, 0
github/python/PySyft/syft/core/frameworks/torch/tensor.py,"decode_( self )", 10, 64, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"extract_type_and_obj( dct )", 5, 78, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"get_child_command( obj , child_types = [ ] )", 42, 95, 8, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"prepare_child_command( command , replace_tensorvar_with_child = False )", 39, 89, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"assert_tensors_on_same_machine.fail_msg( a , b )", 7, 100, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"assert_tensors_on_same_machine( tensors )", 51, 100, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"pt_loc_error( ptr , local )", 14, 91, 8, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"pt_gpt_error( ptr , gptr )", 12, 86, 8, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"enforce_owner( obj , owner )", 41, 79, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"bind_var_nodes( obj , child_obj , grad = False )", 17, 86, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"bind_tensor_nodes( wrapper , child_obj )", 6, 74, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"wrap_command( obj )", 36, 85, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"wrap_command_pre_ser( obj )", 29, 84, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"get_connected_variables( variable )", 5, 80, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"get_variables_in_backward_graph( var , nodes = [ ] , seen = set ( )", 18, 85, 20, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"compile_command( attr , args , kwargs , has_self = False , self = None )", 34, 86, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"split_to_pointer_commands( syft_command )", 73, 95, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"assert_has_only_torch_tensorvars( obj )", 11, 77, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"assert_has_only_syft_tensors( obj )", 11, 80, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"chain_print( obj , display = True , verbose = False )", 114, 87, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"get_syft_chain( obj )", 11, 59, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"link_var_chain_to_data_chain( var_node , data_node )", 8, 87, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"link_var_chain_to_data_and_grad_chains( var_node , data_node , grad_node )", 18, 84, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"fix_chain_structure( var_node , data_node = None , grad_node = None , head_node = None )", 60, 88, 20, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"assert_is_chain_well_formed( obj , downward = True , start_id = None , start_type = None , end_chain = None", 2, 71, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"find_tail_of_chain( obj , start_id = None , start_type = None )", 13, 80, 8, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"find_torch_object_in_family_tree( obj )", 10, 88, 12, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"fix_chain_ends( obj )", 21, 81, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_tensor_empty( obj )", 3, 42, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"define_enums( )", 32, 80, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"type_code( type_name )", 5, 64, 8, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_syft_tensor( obj )", 4, 79, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_syft_tensor_name( obj )", 8, 79, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_tensor( obj )", 3, 70, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_tensor_name( name )", 8, 71, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_variable( obj )", 4, 80, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"is_variable_name( obj )", 8, 71, 4, 0
github/python/PySyft/syft/core/frameworks/torch/utils.py,"convert_to_js_command( command )", 11, 69, 4, 0
github/python/PySyft/syft/core/workers/base.py,"__init__( self , hook = None , id = 0 , is_client_worker = False , objects = { } , tmp_objects = { } , known_workers = { } , verbose = True , queue_size = 0 ,", 10, 32, 8, 0
github/python/PySyft/syft/core/workers/base.py,"whoami( self )", 9, 72, 8, 0
github/python/PySyft/syft/core/workers/base.py,"_search( self , query )", 27, 79, 8, 0
github/python/PySyft/syft/core/workers/base.py,"search( self , query = "#boston" )", 11, 79, 8, 0
github/python/PySyft/syft/core/workers/base.py,"send_msg( self , message , message_type , recipient , profile_mode = PROFILE_MODE )", 64, 91, 8, 0
github/python/PySyft/syft/core/workers/base.py,"_profiled_send_msg( self , * args , ** kwargs )", 2, 51, 4, 0
github/python/PySyft/syft/core/workers/base.py,"compile_composite_message( self )", 19, 79, 8, 0
github/python/PySyft/syft/core/workers/base.py,"_send_msg( self , message_wrapper_json_binary , recipient )", 20, 92, 8, 0
github/python/PySyft/syft/core/workers/base.py,"receive_msg( self , message_wrapper_json )", 30, 94, 8, 0
github/python/PySyft/syft/core/workers/base.py,"encode_msg( self , msg )", 3, 93, 8, 0
github/python/PySyft/syft/core/workers/base.py,"decode_msg( self , msg )", 2, 47, 8, 0
github/python/PySyft/syft/core/workers/base.py,"process_message_type( self , message_wrapper )", 138, 88, 8, 0
github/python/PySyft/syft/core/workers/base.py,"__str__( self )", 15, 77, 8, 0
github/python/PySyft/syft/core/workers/base.py,"__repr__( self )", 2, 30, 8, 0
github/python/PySyft/syft/core/workers/base.py,"add_worker( self , worker )", 58, 96, 16, 0
github/python/PySyft/syft/core/workers/base.py,"add_workers( self , workers )", 4, 36, 4, 0
github/python/PySyft/syft/core/workers/base.py,"get_worker( self , id_or_worker )", 45, 83, 10, 0
github/python/PySyft/syft/core/workers/base.py,"get_obj( self , remote_key )", 43, 86, 16, 0
github/python/PySyft/syft/core/workers/base.py,"set_obj( self , remote_key , value , force = False , tmp = False )", 51, 80, 8, 0
github/python/PySyft/syft/core/workers/base.py,"rm_obj( self , remote_key )", 23, 80, 8, 0
github/python/PySyft/syft/core/workers/base.py,"_clear_tmp_objects( self )", 3, 76, 8, 0
github/python/PySyft/syft/core/workers/base.py,"de_register( self , obj )", 23, 85, 12, 0
github/python/PySyft/syft/core/workers/base.py,"de_register_object( self , obj , _recurse_torch_objs = True )", 28, 86, 24, 0
github/python/PySyft/syft/core/workers/base.py,"register( self , result )", 27, 88, 12, 0
github/python/PySyft/syft/core/workers/base.py,"register_object( self , obj , id = None )", 44, 79, 8, 0
github/python/PySyft/syft/core/workers/base.py,"process_numpy_command( self , command_msg )", 25, 76, 8, 0
github/python/PySyft/syft/core/workers/base.py,"_execute_numpy_call( self , attr , self_ , * args , ** kwargs )", 59, 96, 8, 0
github/python/PySyft/syft/core/workers/base.py,"process_torch_command( self , command_msg )", 25, 76, 8, 0
github/python/PySyft/syft/core/workers/base.py,"_execute_call( self , attr , self_ , * args , ** kwargs )", 72, 96, 8, 0
github/python/PySyft/syft/core/workers/base.py,"send_obj( self , object , new_id , recipient , new_data_id = None , new_grad_id = None , new_grad_data_id = None ,", 8, 31, 8, 0
github/python/PySyft/syft/core/workers/base.py,"send_torch_command( self , recipient , message )", 13, 96, 8, 0
github/python/PySyft/syft/core/workers/base.py,"send_command( self , recipient , message , framework = "torch" )", 13, 82, 12, 0
github/python/PySyft/syft/core/workers/base.py,"request_obj( self , obj_id , recipient )", 33, 88, 8, 0
github/python/PySyft/syft/core/workers/base.py,"get_pointer_to( self , location , id_at_location )", 15, 88, 16, 0
github/python/PySyft/syft/core/workers/socket.py,"__init__( self , hook = None , hostname = "localhost" , port = 8110 , max_connections = 5 , id = 0 , is_client_worker = True , objects = { } , tmp_objects = { } , known_workers = { } , verbose = True , is_pointer = False , queue_size = 0 ,", 14, 31, 8, 0
github/python/PySyft/syft/core/workers/socket.py,"whoami( self )", 2, 89, 8, 0
github/python/PySyft/syft/core/workers/socket.py,"listen( self , num_messages = - 1 )", 26, 78, 8, 0
github/python/PySyft/syft/core/workers/socket.py,"search( self , query )", 30, 82, 8, 0
github/python/PySyft/syft/core/workers/socket.py,"_send_msg( self , message_wrapper_json_binary , recipient )", 20, 92, 8, 0
github/python/PySyft/syft/core/workers/socket.py,"_process_buffer( cls , socket , buffer_size = 108_192 , delimiter = "\n" )", 27, 75, 4, 0
github/python/PySyft/syft/core/workers/virtual.py,"__init__( self , hook = None , id = 0 , is_client_worker = False , objects = { } , tmp_objects = { } , known_workers = { } , verbose = False , queue_size = 0 ,", 10, 32, 8, 0
github/python/PySyft/syft/core/workers/virtual.py,"_send_msg( self , message_wrapper_json_binary , recipient )", 16, 92, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"__init__( self , hook = None , hostname = "localhost" , port = 8110 , max_connections = 5 , id = 0 , is_client_worker = True , objects = { } , tmp_objects = { } , known_workers = { } , verbose = True , is_pointer = False , queue_size = 0 ,", 14, 31, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"_client_socket_connect( self , json_request )", 15, 87, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"_server_socket_listener( self , websocket , path )", 19, 91, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"whoami( self )", 7, 71, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"_send_msg( self , message_wrapper_json_binary , recipient )", 4, 88, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"send_msg( self , message , message_type , recipient )", 36, 91, 8, 0
github/python/PySyft/syft/core/workers/websocket.py,"_process_buffer( cls , response , delimiter = "\n" )", 7, 56, 4, 0
github/python/PySyft/syft/core/workers/websocket.py,"_client_socket_listener( cls , message_wrapper_json_binary )", 5, 68, 12, 0
github/python/PySyft/syft/dp/pate.py,"partition_dataset( data , labels , nb_teachers , teacher_id )", 28, 81, 4, 0
github/python/PySyft/syft/dp/pate.py,"__init__( self , X , y )", 3, 30, 4, 0
github/python/PySyft/syft/dp/pate.py,"__len__( self )", 2, 27, 8, 0
github/python/PySyft/syft/dp/pate.py,"__getitem__( self , idx )", 2, 40, 8, 0
github/python/PySyft/syft/dp/pate.py,"train( model , train_loader , test_loader , ckpt_path , filename )", 72, 89, 8, 0
github/python/PySyft/syft/dp/pate.py,"train_teachers( model , train_data , train_labels , test_data , test_labels , nb_teachers , teacher_id , filename ,", 9, 20, 0, 0
github/python/PySyft/syft/dp/pate.py,"softmax_preds( model , nb_labels , images_loader , ckpt_path , return_logits = False )", 29, 84, 0, 0
github/python/PySyft/syft/dp/pate.py,"ensemble_preds( model , dataset , nb_labels , nb_teachers , stdnt_data_loader )", 40, 82, 8, 0
github/python/PySyft/syft/dp/pate.py,"prepare_student_data( model , dataset , test_data , test_labels , nb_labels , nb_teachers , stdnt_share , lap_scale ,", 9, 26, 0, 0
github/python/PySyft/syft/dp/pate.py,"train_student( model , dataset , test_data , test_labels , nb_labels , nb_teachers , stdnt_share , lap_scale ,", 9, 19, 0, 0
github/python/PySyft/syft/dp/pate.py,"labels_from_probs( probs )", 16, 82, 4, 0
github/python/PySyft/syft/dp/pate.py,"noisy_max( logits , nb_labels , lap_scale , return_clean_votes = False )", 60, 85, 12, 0
github/python/PySyft/syft/dp/pate.py,"aggregation_most_frequent( logits )", 28, 78, 4, 0
github/python/PySyft/syft/dp/pate.py,"accuracy( logits , labels )", 26, 79, 4, 0
github/python/PySyft/syft/mpc/securenn.py,"decompose( tensor )", 11, 80, 4, 0
github/python/PySyft/syft/mpc/securenn.py,"flip( x , dim )", 7, 74, 8, 0
github/python/PySyft/syft/mpc/securenn.py,"private_compare( x , r , BETA , j , alice , bob )", 42, 66, 4, 0
github/python/PySyft/syft/mpc/securenn.py,"msb( a_sh , alice , bob )", 64, 82, 8, 0
github/python/PySyft/syft/mpc/securenn.py,"relu_deriv( a_sh )", 2, 80, 4, 0
github/python/PySyft/syft/mpc/securenn.py,"relu( a )", 2, 29, 4, 0
github/python/PySyft/syft/mpc/utils.py,"egcd( a , b )", 13, 40, 8, 0
github/python/PySyft/syft/mpc/utils.py,"modinv( a , m )", 26, 70, 4, 0
github/python/PySyft/syft/spdz/shared_variable.py,"forward( ctx , a , b )", 2, 35, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( ctx , grad_out )", 3, 34, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"forward( ctx , a )", 2, 32, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( ctx , grad_out )", 2, 39, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"forward( ctx , a , b )", 2, 50, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( ctx , grad_out )", 2, 49, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"forward( ctx , a , b , interface )", 4, 46, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( ctx , grad_out )", 9, 66, 12, 0
github/python/PySyft/syft/spdz/shared_variable.py,"forward( ctx , a , b , interface )", 4, 49, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( ctx , grad_out )", 7, 73, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"forward( ctx , a , interface )", 4, 47, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( ctx , grad_out )", 5, 81, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__init__( self , var , interface )", 6, 55, 12, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__neg__( self )", 2, 26, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__add__( self , other )", 2, 31, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__sub__( self , other )", 2, 31, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__mul__( self , other )", 2, 31, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__matmul__( self , other )", 2, 34, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"sigmoid( self )", 4, 74, 12, 0
github/python/PySyft/syft/spdz/shared_variable.py,"neg( self )", 2, 73, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"add( self , other )", 4, 85, 12, 0
github/python/PySyft/syft/spdz/shared_variable.py,"sub( self , other )", 2, 84, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"mul( self , other )", 4, 82, 12, 0
github/python/PySyft/syft/spdz/shared_variable.py,"matmul( self , other )", 4, 84, 12, 0
github/python/PySyft/syft/spdz/shared_variable.py,"grad( self )", 2, 29, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"data( self )", 2, 29, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"backward( self , grad )", 2, 39, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"t_( self )", 2, 33, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"__repr__( self )", 2, 35, 8, 0
github/python/PySyft/syft/spdz/shared_variable.py,"type( self )", 2, 32, 8, 0
github/python/PySyft/syft/spdz/spdz.py,"encode( rational , precision_fractional = PRECISION_FRACTIONAL , mod = field )", 4, 76, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"decode( field_element , precision_fractional = PRECISION_FRACTIONAL , mod = field )", 7, 81, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"share( secret , n_workers , mod = field , random_type = torch . LongTensor )", 18, 84, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"reconstruct( shares , mod = field )", 2, 36, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"swap_shares( shares )", 11, 78, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"truncate( x , interface , amount = PRECISION_FRACTIONAL , mod = field )", 5, 68, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"public_add( x , y , interface )", 5, 37, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"spdz_add( a , b , mod = field )", 3, 31, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"spdz_neg( a , mod = field )", 2, 28, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"spdz_mul( x , y , workers , mod = field )", 23, 79, 8, 0
github/python/PySyft/syft/spdz/spdz.py,"spdz_matmul( x , y , workers , mod = field )", 30, 83, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"spdz_sigmoid( x , interface )", 11, 73, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"get_ptrdict( mpct )", 10, 85, 8, 0
github/python/PySyft/syft/spdz/spdz.py,"get_workers( mpct )", 10, 85, 8, 0
github/python/PySyft/syft/spdz/spdz.py,"get_shape( mpct )", 10, 85, 8, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_mul_triple( shape , mod = field )", 5, 45, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_mul_triple_communication( shape , workers )", 25, 99, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_zero_shares_communication( alice , bob , * sizes )", 2, 65, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_one_shares_communication( alice , bob , sizes )", 2, 58, 0, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_matmul_triple( shapes , mod = field )", 10, 54, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_matmul_triple_communication( shapes , workers )", 25, 99, 4, 0
github/python/PySyft/syft/spdz/spdz.py,"generate_sigmoid_shares_communication( x , interface )", 26, 75, 8, 0
github/python/PySyft/syft/spdz/interface/base_interface.py,"__init__( self , party )", 6, 31, 4, 0
github/python/PySyft/syft/spdz/interface/base_interface.py,"send( self , var )", 2, 25, 4, 0
github/python/PySyft/syft/spdz/interface/base_interface.py,"recv( self , var )", 2, 25, 4, 0
github/python/PySyft/syft/spdz/interface/base_interface.py,"get_party( self )", 2, 26, 8, 0
github/python/PySyft/syft/spdz/interface/distributed_interface.py,"__init__( self , party , master_addr = "127.0.0.1" , master_port = "29500" )", 10, 77, 4, 0
github/python/PySyft/syft/spdz/interface/distributed_interface.py,"send( self , var )", 2, 46, 8, 0
github/python/PySyft/syft/spdz/interface/distributed_interface.py,"recv( self , var )", 3, 46, 8, 0
github/python/PySyft/syft/spdz/interface/distributed_interface.py,"get_party( self )", 2, 26, 8, 0
github/python/PySyft/syft/spdz/interface/grid_client_interface.py,"__init__( self , party , grid_client )", 3, 44, 4, 0
github/python/PySyft/syft/spdz/interface/grid_client_interface.py,"send( self , var )", 2, 36, 8, 0
github/python/PySyft/syft/spdz/interface/grid_client_interface.py,"recv( self , var )", 2, 36, 8, 0
github/python/PySyft/syft/spdz/interface/grid_worker_interface.py,"__init__( self , party , grid_worker )", 3, 44, 4, 0
github/python/PySyft/syft/spdz/interface/grid_worker_interface.py,"send( self , var )", 2, 36, 8, 0
github/python/PySyft/syft/spdz/interface/grid_worker_interface.py,"recv( self , var )", 2, 36, 8, 0
github/python/PySyft/test/tensor_serde_test.py,"test_send_and_get_tensor( self )", 22, 64, 8, 0
github/python/PySyft/test/torch_test.py,"setUpModule.__init__( self , leaf = False )", 4, 42, 16, 0
github/python/PySyft/test/torch_test.py,"setUpModule( )", 76, 79, 8, 0
github/python/PySyft/test/torch_test.py,"test_plus_is_minus_tensor_local( self )", 27, 65, 12, 0
github/python/PySyft/test/torch_test.py,"test_plus_is_minus_tensor_remote( self )", 32, 88, 12, 0
github/python/PySyft/test/torch_test.py,"test_plus_is_minus_variable_local( self )", 33, 68, 8, 0
github/python/PySyft/test/torch_test.py,"test_plus_is_minus_variable_remote( self )", 65, 101, 8, 0
github/python/PySyft/test/torch_test.py,"test_plus_is_minus_backward_local( self )", 11, 71, 8, 0
github/python/PySyft/test/torch_test.py,"test_set_id( self )", 19, 81, 8, 0
github/python/PySyft/test/torch_test.py,"test___repr__( self )", 7, 89, 8, 0
github/python/PySyft/test/torch_test.py,"test_send_get_tensor( self )", 28, 96, 8, 0
github/python/PySyft/test/torch_test.py,"test_multiple_pointers_to_same_target( self )", 32, 90, 8, 0
github/python/PySyft/test/torch_test.py,"test_chain_send_get_tensor( self )", 21, 66, 8, 0
github/python/PySyft/test/torch_test.py,"test_add_remote_tensor( self )", 10, 63, 8, 0
github/python/PySyft/test/torch_test.py,"test_local_tensor_unary_methods( self )", 18, 70, 8, 0
github/python/PySyft/test/torch_test.py,"test_local_tensor_binary_methods( self )", 41, 84, 8, 0
github/python/PySyft/test/torch_test.py,"test_remote_tensor_unary_methods( self )", 15, 80, 8, 0
github/python/PySyft/test/torch_test.py,"test_remote_tensor_binary_methods( self )", 35, 84, 8, 0
github/python/PySyft/test/torch_test.py,"test_local_tensor_tertiary_methods( self )", 21, 76, 12, 0
github/python/PySyft/test/torch_test.py,"test_remote_tensor_tertiary_methods( self )", 22, 82, 12, 0
github/python/PySyft/test/torch_test.py,"test_local_tensor_iterable_methods( self )", 15, 89, 12, 0
github/python/PySyft/test/torch_test.py,"test_remote_tensor_iterable_methods( self )", 21, 89, 12, 0
github/python/PySyft/test/torch_test.py,"test_remote_tensor_unwrapped_addition( self )", 5, 56, 8, 0
github/python/PySyft/test/torch_test.py,"test_end_get_tensor( self )", 17, 86, 8, 0
github/python/PySyft/test/torch_test.py,"test_remote_backprop( self )", 28, 89, 12, 0
github/python/PySyft/test/torch_test.py,"test_variable_data_attribute_bug.relu( x )", 3, 47, 12, 0
github/python/PySyft/test/torch_test.py,"test_variable_data_attribute_bug.linear( x , w )", 3, 51, 12, 0
github/python/PySyft/test/torch_test.py,"test_variable_data_attribute_bug( self )", 30, 87, 8, 0
github/python/PySyft/test/torch_test.py,"test_encode_decode_json_python( self )", 18, 82, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_gradient_keeps_id_during_send_( self )", 26, 72, 8, 0
github/python/PySyft/test/torch_test.py,"test_operation_with_variable_and_parameter( self )", 5, 64, 8, 0
github/python/PySyft/test/torch_test.py,"test_send_var_with_gradient( self )", 48, 85, 8, 0
github/python/PySyft/test/torch_test.py,"test_remote_optim_step( self )", 44, 82, 8, 0
github/python/PySyft/test/torch_test.py,"test_federated_learning( self )", 47, 72, 8, 0
github/python/PySyft/test/torch_test.py,"test_torch_function_on_remote_var( self )", 8, 81, 8, 0
github/python/PySyft/test/torch_test.py,"test_torch_function_with_multiple_input_on_remote_var( self )", 8, 80, 8, 0
github/python/PySyft/test/torch_test.py,"test_torch_function_with_multiple_output_on_remote_var( self )", 6, 73, 8, 0
github/python/PySyft/test/torch_test.py,"test_torch_F_relu_on_remote_var( self )", 6, 80, 8, 0
github/python/PySyft/test/torch_test.py,"test_torch_F_conv2d_on_remote_var( self )", 11, 85, 8, 0
github/python/PySyft/test/torch_test.py,"test_torch_nn_conv2d_on_remote_var( self )", 12, 89, 8, 0
github/python/PySyft/test/torch_test.py,"test_local_var_unary_methods( self )", 17, 89, 8, 0
github/python/PySyft/test/torch_test.py,"test_local_var_binary_methods( self )", 30, 88, 8, 0
github/python/PySyft/test/torch_test.py,"test_remote_var_unary_methods( self )", 29, 80, 12, 0
github/python/PySyft/test/torch_test.py,"test_remote_var_binary_methods( self )", 33, 88, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_relu( self )", 4, 65, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_argmax( self )", 10, 82, 12, 0
github/python/PySyft/test/torch_test.py,"test_mpc_train( self )", 20, 64, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_scalar_mult( self )", 8, 89, 8, 0
github/python/PySyft/test/torch_test.py,"mpc_sum( self , n1 , n2 )", 8, 62, 8, 0
github/python/PySyft/test/torch_test.py,"mpc_var_sum( self , n1 , n2 )", 9, 54, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_sum( self )", 6, 39, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_var_sum( self )", 6, 43, 8, 0
github/python/PySyft/test/torch_test.py,"mpc_mul( self , n1 , n2 )", 12, 65, 8, 0
github/python/PySyft/test/torch_test.py,"mpc_var_mul( self , n1 , n2 )", 9, 54, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_mul( self )", 6, 39, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_var_mul( self )", 6, 43, 8, 0
github/python/PySyft/test/torch_test.py,"test_mpc_scalar_mult( self )", 14, 70, 8, 0
github/python/PySyft/test/torch_test.py,"test_spdz_matmul( self )", 19, 88, 8, 0
github/python/PySyft/test/torch_test.py,"test_spdz_negation_and_subtraction( self )", 18, 75, 8, 0
github/python/PySyft/test/torch_test.py,"test_spdz_mul_3_workers( self )", 13, 59, 8, 0
github/python/PySyft/test/torch_test.py,"test_share( self )", 9, 78, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_decode( self )", 30, 89, 12, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_mul( self )", 26, 65, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_add( self )", 26, 77, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_sub( self )", 26, 76, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_div( self )", 26, 77, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_sum( self )", 6, 61, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_cumsum( self )", 6, 71, 8, 0
github/python/PySyft/test/torch_test.py,"test_fix_precision_prod( self )", 6, 61, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_fix_precision_decode( self )", 26, 89, 8, 0
github/python/PySyft/test/torch_test.py,"test_remote_fix_precision( self )", 24, 89, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_remote_fix_precision( self )", 21, 89, 8, 0
github/python/PySyft/test/torch_test.py,"fix_precision_operation( self , l1 , l2 , var = False , op = "plus" )", 25, 76, 12, 0
github/python/PySyft/test/torch_test.py,"test_addition_fix_precision( self )", 6, 67, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_addition_fix_precision( self )", 6, 77, 8, 0
github/python/PySyft/test/torch_test.py,"test_mult_fix_precision( self )", 6, 77, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_mult_fix_precision( self )", 6, 87, 8, 0
github/python/PySyft/test/torch_test.py,"test_matmul_fix_precision( self )", 15, 84, 12, 0
github/python/PySyft/test/torch_test.py,"test_var_matmul_fix_precision( self )", 19, 83, 12, 0
github/python/PySyft/test/torch_test.py,"remote_fix_precision_operation( self , l1 , l2 , var = False , op = "plus" )", 25, 76, 4, 0
github/python/PySyft/test/torch_test.py,"test_addition_remote_fix_precision( self )", 6, 74, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_addition_remote_fix_precision( self )", 6, 84, 8, 0
github/python/PySyft/test/torch_test.py,"test_mult_remote_fix_precision( self )", 6, 84, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_mult_remote_fix_precision( self )", 8, 89, 8, 0
github/python/PySyft/test/torch_test.py,"test_matmul_remote_fix_precision( self )", 15, 84, 12, 0
github/python/PySyft/test/torch_test.py,"test_var_matmul_remote_fix_precision( self )", 19, 83, 12, 0
github/python/PySyft/test/torch_test.py,"remote_fix_precision_share_operation( self , l1 , l2 , var = False , op = "plus" )", 25, 82, 4, 0
github/python/PySyft/test/torch_test.py,"test_addition_remote_fix_precision_share( self )", 6, 76, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_addition_remote_fix_precision_share( self )", 6, 86, 8, 0
github/python/PySyft/test/torch_test.py,"test_mult_remote_fix_precision_share( self )", 5, 85, 8, 0
github/python/PySyft/test/torch_test.py,"test_var_mult_remote_fix_precision_share( self )", 11, 84, 8, 0
github/python/PySyft/test/torch_test.py,"test_matmul_remote_fix_precision_share( self )", 12, 73, 12, 0
github/python/PySyft/test/torch_test.py,"test_var_matmul_remote_fix_precision_share( self )", 4, 78, 12, 0
github/python/PySyft/test/torch_test.py,"test_gpc_add( self )", 17, 64, 12, 0
github/python/PySyft/test/torch_test.py,"test_gpc_unwrapped_add( self )", 17, 64, 12, 0
github/python/PySyft/test/torch_test.py,"test_gpc_workers( self )", 13, 71, 8, 0
github/python/PySyft/test/core/workers_test.py,"test_search_obj( self )", 17, 82, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"setUp( self )", 2, 35, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_int( self )", 10, 53, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_float( self )", 10, 53, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_str( self )", 10, 59, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_dictionary( self )", 10, 53, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_list( self )", 10, 53, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_tuple( self )", 10, 71, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_set( self )", 10, 69, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_bytearray( self )", 13, 76, 12, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_range( self )", 10, 77, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_SyftTensor( self )", 20, 83, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_slice( self )", 10, 84, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_ellipsis( self )", 10, 55, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_generator._firstn( n )", 5, 27, 12, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_generator( self )", 16, 52, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_variable( self )", 70, 97, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_tensor( self )", 29, 62, 12, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_nparray( self )", 13, 82, 12, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_socketWorker( self )", 10, 67, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_virtualWorker( self )", 10, 67, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_unhandled_type( self )", 10, 68, 8, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_non_private_local( self )", 13, 86, 12, 0
github/python/PySyft/test/core/frameworks/encode_test.py,"test_encode_retrieve_pointers( self )", 16, 86, 16, 0
github/python/PySyft/test/mpc/mpc_test.py,"setUp( self )", 14, 86, 8, 0
github/python/PySyft/test/mpc/mpc_test.py,"generate_mpc_number_pair( self , n1 , n2 )", 2, 55, 8, 0
github/python/PySyft/test/mpc/mpc_test.py,"mpc_sum( self , n1 , n2 )", 5, 68, 8, 0
github/python/PySyft/test/mpc/mpc_test.py,"test_mpc_sum( self )", 6, 39, 8, 0
github/python/PySyft/test/mpc/mpc_test.py,"mpc_mul( self , n1 , n2 )", 9, 71, 8, 0
github/python/PySyft/test/mpc/mpc_test.py,"test_mpc_mul( self )", 6, 39, 8, 0
github/python/PySyft/test/mpc/secnn_test.py,"setUp( self )", 15, 86, 8, 0
github/python/PySyft/test/mpc/secnn_test.py,"generate_mpc_number_pair( self , n1 , n2 , workers )", 5, 63, 12, 0
github/python/PySyft/test/mpc/secnn_test.py,"prep_decompose( self )", 13, 71, 16, 0
github/python/PySyft/test/mpc/secnn_test.py,"test_decompose( self )", 4, 49, 8, 0
github/python/PySyft/test/mpc/secnn_test.py,"prepPC( self )", 17, 85, 12, 0
github/python/PySyft/test/mpc/secnn_test.py,"test_private_compare( self )", 8, 84, 12, 0
github/python/PySyft/test/mpc/test_utils.py,"_generate_mpc_number_pair( self , n1 , n2 )", 6, 71, 8, 0
